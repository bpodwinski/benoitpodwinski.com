{"version":3,"sources":["ViveController.js"],"names":["THREE","ViveController","id","Object3D","call","this","gamepad","scope","axes","thumbpadIsPressed","triggerIsPressed","gripsArePressed","menuIsPressed","matrixAutoUpdate","standingMatrix","Matrix4","getGamepad","getButtonState","button","update","undefined","gamepads","navigator","getGamepads","i","j","findGamepad","pose","position","fromArray","orientation","quaternion","matrix","compose","scale","multiplyMatrices","matrixWorldNeedsUpdate","visible","dispatchEvent","type","buttons","pressed","prototype","Object","create","constructor"],"mappings":"AAKAA,MAAMC,eAAiB,SAAWC,GAEjCF,MAAMG,SAASC,KAAMC,MAErB,IACIC,EADAC,EAAQF,KAGRG,EAAO,CAAE,EAAG,GACZC,GAAoB,EACpBC,GAAmB,EACnBC,GAAkB,EAClBC,GAAgB,EAyBpBP,KAAKQ,kBAAmB,EACxBR,KAAKS,eAAiB,IAAId,MAAMe,QAEhCV,KAAKW,WAAa,WAEjB,OAAOV,GAIRD,KAAKY,eAAiB,SAAWC,GAEhC,MAAgB,aAAXA,EAA+BT,EACpB,YAAXS,EAA8BR,EACnB,UAAXQ,EAA4BP,EACjB,SAAXO,EAA2BN,OAAhC,GAIDP,KAAKc,OAAS,WAIb,QAAiBC,KAFjBd,EA3CD,SAAsBJ,GAOrB,IAFA,IAAImB,EAAWC,UAAUC,cAEfC,EAAI,EAAGC,EAAI,EAAGD,EAAI,EAAGA,IAAO,CAErC,IAAIlB,EAAUe,EAAUG,GAExB,GAAKlB,GAA0B,mBAAfA,EAAQJ,GAA0B,CAEjD,GAAKuB,IAAMvB,EAAK,OAAOI,EAEvBmB,MA4BQC,CAAaxB,UAEwBkB,IAAjBd,EAAQqB,KAAqB,CAE1D,GAAsB,OAAjBrB,EAAQqB,KAAgB,OAI7B,IAAIA,EAAOrB,EAAQqB,KAEI,OAAlBA,EAAKC,UAAoBrB,EAAMqB,SAASC,UAAWF,EAAKC,UACnC,OAArBD,EAAKG,aAAuBvB,EAAMwB,WAAWF,UAAWF,EAAKG,aAClEvB,EAAMyB,OAAOC,QAAS1B,EAAMqB,SAAUrB,EAAMwB,WAAYxB,EAAM2B,OAC9D3B,EAAMyB,OAAOG,iBAAkB5B,EAAMO,eAAgBP,EAAMyB,QAC3DzB,EAAM6B,wBAAyB,EAC/B7B,EAAM8B,SAAU,EAIX7B,EAAM,KAAQF,EAAQE,KAAM,IAAOA,EAAM,KAAQF,EAAQE,KAAM,KAEnEA,EAAM,GAAMF,EAAQE,KAAM,GAC1BA,EAAM,GAAMF,EAAQE,KAAM,GAC1BD,EAAM+B,cAAe,CAAEC,KAAM,cAAe/B,KAAMA,KAI9CC,IAAsBH,EAAQkC,QAAS,GAAIC,UAE/ChC,EAAoBH,EAAQkC,QAAS,GAAIC,QACzClC,EAAM+B,cAAe,CAAEC,KAAM9B,EAAoB,eAAiB,gBAI9DC,IAAqBJ,EAAQkC,QAAS,GAAIC,UAE9C/B,EAAmBJ,EAAQkC,QAAS,GAAIC,QACxClC,EAAM+B,cAAe,CAAEC,KAAM7B,EAAmB,cAAgB,eAI5DC,IAAoBL,EAAQkC,QAAS,GAAIC,UAE7C9B,EAAkBL,EAAQkC,QAAS,GAAIC,QACvClC,EAAM+B,cAAe,CAAEC,KAAM5B,EAAkB,YAAc,aAIzDC,IAAkBN,EAAQkC,QAAS,GAAIC,UAE3C7B,EAAgBN,EAAQkC,QAAS,GAAIC,QACrClC,EAAM+B,cAAe,CAAEC,KAAM3B,EAAgB,WAAa,iBAM3DL,EAAM8B,SAAU,IAQnBrC,MAAMC,eAAeyC,UAAYC,OAAOC,OAAQ5C,MAAMG,SAASuC,WAC/D1C,MAAMC,eAAeyC,UAAUG,YAAc7C,MAAMC","file":"ViveController.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com\n * @author stewdio / http://stewd.io\n */\n\nTHREE.ViveController = function ( id ) {\n\n\tTHREE.Object3D.call( this );\n\n\tvar scope = this;\n\tvar gamepad;\n\n\tvar axes = [ 0, 0 ];\n\tvar thumbpadIsPressed = false;\n\tvar triggerIsPressed = false;\n\tvar gripsArePressed = false;\n\tvar menuIsPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\t// Iterate across gamepads as Vive Controllers may not be\n\t\t// in position 0 and 1.\n\n\t\tvar gamepads = navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0; i < 4; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && gamepad.id === 'OpenVR Gamepad' ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.matrixAutoUpdate = false;\n\tthis.standingMatrix = new THREE.Matrix4();\n\n\tthis.getGamepad = function () {\n\n\t\treturn gamepad;\n\n\t};\n\n\tthis.getButtonState = function ( button ) {\n\n\t\tif ( button === 'thumbpad' ) return thumbpadIsPressed;\n\t\tif ( button === 'trigger' ) return triggerIsPressed;\n\t\tif ( button === 'grips' ) return gripsArePressed;\n\t\tif ( button === 'menu' ) return menuIsPressed;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tgamepad = findGamepad( id );\n\n\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\tif ( gamepad.pose === null ) return; // No user action yet\n\n\t\t\t//  Position and orientation.\n\n\t\t\tvar pose = gamepad.pose;\n\n\t\t\tif ( pose.position !== null ) scope.position.fromArray( pose.position );\n\t\t\tif ( pose.orientation !== null ) scope.quaternion.fromArray( pose.orientation );\n\t\t\tscope.matrix.compose( scope.position, scope.quaternion, scope.scale );\n\t\t\tscope.matrix.multiplyMatrices( scope.standingMatrix, scope.matrix );\n\t\t\tscope.matrixWorldNeedsUpdate = true;\n\t\t\tscope.visible = true;\n\n\t\t\t//  Thumbpad and Buttons.\n\n\t\t\tif ( axes[ 0 ] !== gamepad.axes[ 0 ] || axes[ 1 ] !== gamepad.axes[ 1 ] ) {\n\n\t\t\t\taxes[ 0 ] = gamepad.axes[ 0 ]; //  X axis: -1 = Left, +1 = Right.\n\t\t\t\taxes[ 1 ] = gamepad.axes[ 1 ]; //  Y axis: -1 = Bottom, +1 = Top.\n\t\t\t\tscope.dispatchEvent( { type: 'axischanged', axes: axes } );\n\n\t\t\t}\n\n\t\t\tif ( thumbpadIsPressed !== gamepad.buttons[ 0 ].pressed ) {\n\n\t\t\t\tthumbpadIsPressed = gamepad.buttons[ 0 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: thumbpadIsPressed ? 'thumbpaddown' : 'thumbpadup' } );\n\n\t\t\t}\n\n\t\t\tif ( triggerIsPressed !== gamepad.buttons[ 1 ].pressed ) {\n\n\t\t\t\ttriggerIsPressed = gamepad.buttons[ 1 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: triggerIsPressed ? 'triggerdown' : 'triggerup' } );\n\n\t\t\t}\n\n\t\t\tif ( gripsArePressed !== gamepad.buttons[ 2 ].pressed ) {\n\n\t\t\t\tgripsArePressed = gamepad.buttons[ 2 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: gripsArePressed ? 'gripsdown' : 'gripsup' } );\n\n\t\t\t}\n\n\t\t\tif ( menuIsPressed !== gamepad.buttons[ 3 ].pressed ) {\n\n\t\t\t\tmenuIsPressed = gamepad.buttons[ 3 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: menuIsPressed ? 'menudown' : 'menuup' } );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tscope.visible = false;\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.ViveController.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ViveController.prototype.constructor = THREE.ViveController;\n"]}