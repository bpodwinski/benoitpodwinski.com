{"version":3,"sources":["OrbitControls.js"],"names":["THREE","OrbitControls","object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","this","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","copy","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","element","body","PerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","OrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","event","preventDefault","button","clientX","clientY","addEventListener","subVectors","x","y","handleMouseMoveRotate","stopPropagation","keyCode","handleKeyDown","touches","pageX","pageY","dx","dy","sqrt","handleTouchMoveRotate","prototype","Object","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor"],"mappings":"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","file":"OrbitControls.js","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update () {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function() {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t//console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t//console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseDownRotate( event );\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseDownDolly( event );\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseDownPan( event );\n\n\t\t\tstate = STATE.PAN;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseMoveRotate( event );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseMoveDolly( event );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseMovePan( event );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n"]}