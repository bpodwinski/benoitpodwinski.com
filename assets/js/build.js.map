{"version":3,"sources":["minivents.js","jquery-2.2.4.js","Detector.js","three.js","SimplexNoise.js","atutil.js","TweenMax.min.js","OrbitControls.js","DeviceOrientationControls.js","VRControls.js","ViveController.js","BG.js","Mecha.js","Shards.js","Assets.js","Main.js","ControlsHandler.js","FXHandler.js","VizHandler.js"],"names":["Events","target","events","empty","this","on","type","func","ctx","push","off","list","i","length","splice","emit","j","e","slice","apply","call","arguments","global","factory","module","exports","document","w","Error","window","noGlobal","arr","concat","indexOf","class2type","toString","hasOwn","hasOwnProperty","support","version","jQuery","selector","context","fn","init","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","toUpperCase","isArrayLike","obj","isWindow","prototype","jquery","constructor","toArray","get","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","first","eq","last","len","end","sort","extend","options","name","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","Array","isNumeric","realStringObj","parseFloat","key","nodeType","isEmptyObject","globalEval","code","script","indirect","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","camelCase","string","nodeName","toLowerCase","makeArray","results","Object","inArray","second","grep","invert","matches","callbackExpect","arg","value","guid","proxy","tmp","args","now","Date","Symbol","iterator","split","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","rescape","runescape","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","childNodes","els","seed","m","nid","nidselect","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","assert","div","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","documentElement","node","hasCompare","parent","doc","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","find","filter","attrId","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">","dir"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","disabled","checked","selected","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","addCombinator","combinator","base","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","token","compiled","div1","defaultValue","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","rsingleTag","risSimple","winnow","qualifier","self","rootjQuery","ready","parseHTML","rparentsprev","guaranteedUnique","children","contents","next","prev","sibling","targets","l","closest","pos","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","readyList","rnotwhite","completed","removeEventListener","Callbacks","object","flag","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","tuples","state","promise","always","deferred","fail","then","fns","newDefer","tuple","returned","progress","notify","resolve","reject","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","remaining","updateFunc","values","notifyWith","resolveWith","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","setTimeout","access","chainable","emptyGet","raw","bulk","acceptData","owner","Data","uid","register","initial","defineProperty","writable","configurable","set","data","prop","stored","camel","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","parseJSON","removeData","_data","_removeData","camelKey","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isHidden","el","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","style","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","types","one","origFn","event","handleObjIn","eventHandle","t","handleObj","special","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","props","fixHooks","keyHooks","original","which","charCode","keyCode","mouseHooks","eventDoc","body","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","relatedTarget","rxhtmlTag","rnoInnerhtml","rchecked","rscriptTypeMasked","rcleanScript","manipulationTarget","content","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","domManip","collection","hasScripts","iNoClone","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","insert","iframe","elemdisplay","HTML","BODY","actualDisplay","display","defaultDisplay","write","close","rmargin","rnumnonpx","getStyles","view","opener","getComputedStyle","swap","old","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelMarginRight","addGetHookIf","conditionFn","hookFn","pixelPositionVal","boxSizingReliableVal","pixelMarginRightVal","reliableMarginLeftVal","container","computeStyleTests","cssText","divStyle","marginLeft","marginRight","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","vendorPropName","capName","setPositiveNumber","subtract","max","augmentWidthOrHeight","extra","isBorderBox","styles","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","showHide","show","hidden","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","hide","toggle","propHooks","run","percent","eased","duration","step","fx","linear","p","swing","cos","PI","fxNow","timerId","opt","rfxtypes","rrun","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","tick","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","rejectWith","propFilter","timer","anim","complete","*","tweener","oldfire","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","getClass","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","s","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","mimeType","status","abort","statusText","finalText","success","method","crossDomain","host","param","traditional","hasContent","ifModified","headers","beforeSend","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","getClientRects","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","v","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","getWindow","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","Detector","canvas","CanvasRenderingContext2D","webgl","WebGLRenderingContext","getContext","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","fontFamily","fontSize","textAlign","background","color","addGetWebGLMessage","parameters","THREE","EventDispatcher","Number","EPSILON","pow","sign","x","Function","assign","TypeError","output","nextKey","listener","_listeners","listeners","hasEventListener","listenerArray","dispatchEvent","array","r","chars","uuid","rnd","min","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","BlendingMode","AddEquation","SrcAlphaFactor","OneMinusSrcAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TextureMapping","UVMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TextureWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapLinearFilter","TextureFilter","LinearMipMapNearestFilter","UnsignedByteType","FloatType","HalfFloatType","RGBFormat","RGBAFormat","RGBEFormat","DepthFormat","DepthStencilFormat","InterpolateDiscrete","InterpolateLinear","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","RAD2DEG","generateUUID","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","random16","console","warn","randInt","low","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Vector2","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","sqrt","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","fromAttribute","attribute","itemSize","rotateAround","center","c","sin","isTexture","needsUpdate","toJSON","meta","textures","metadata","generator","images","toDataURL","createElementNS","drawImage","dispose","transformUv","uv","matrix","quaternion","vector","z","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","Float32Array","CubeTexture","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","isWebGLRenderTarget","setSize","create","isWebGLRenderTargetCube","onChangeCallback","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","crossVectors","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","f","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","copyPosition","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","applyToVector3Array","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","transpose","flattenToArrayOffset","getPosition","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","right","bottom","near","far","makePerspective","fov","aspect","ymax","tan","ymin","xmin","xmax","makeOrthographic","h","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","u","RePathPart","addUniform","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","UniformsUtils","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isColor","isMatrix3","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","components","charAt","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","UniformsLib","diffuse","offsetRepeat","specularMap","alphaMap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","points","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","Box2","Infinity","LensFlarePlugin","flares","vertexBuffer","elementBuffer","shader","tempTexture","occlusionTexture","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","getPrecision","shaderSource","compileShader","attachShader","linkProgram","vertex","getAttribLocation","renderType","occlusionMap","rotation","screenPosition","render","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","CULL_FACE","setDepthWrite","flare","matrixWorldInverse","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","alphaTest","fillStyle","fillRect","painterSortStable","renderOrder","oldFogType","sceneFogType","isFog","isFogExp2","density","material","setDepthTest","depthTest","depthWrite","Material","MaterialIdCount","side","shading","vertexColors","transparent","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","physical","clearCoat","clearCoatRoughness","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","intersect","union","translate","isMaterial","setValues","newValue","isRoot","extractFromCache","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","srcPlanes","dstPlanes","closestPoint","m1","p1","p2","sphere","edge1","edge2","segCenter","segDir","q1","count$1","ShaderMaterial","defines","linewidth","clipping","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","MeshDepthMaterial","depthPacking","Box3","Sphere","Matrix3","Plane","constant","Frustum","p0","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","_gl","_state","_frustum","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","USE_SHADOWMAP","scope","getDepthMaterial","isPointLight","lightPositionWorld","geometry","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","projectObject","shadowCamera","layers","mask","isMesh","isLine","isPoints","castShadow","frustumCulled","intersectsObject","autoUpdate","faceCount","clearColor","setScissorTest","light","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","face","vpDimensions","updateMatrixWorld","setFromMatrix","isMultiMaterial","materials","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","getClearColor","clearAlpha","getClearAlpha","setClearColor","Ray","origin","Euler","_order","DefaultOrder","Layers","Object3D","Object3DIdCount","DefaultUp","setFromQuaternion","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","onBeforeRender","onAfterRender","isShaderMaterial","isMeshDepthMaterial","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","traverse","stride","isInterleavedBufferAttribute","intersectsSphere","intersectsPlane","plane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","line","denominator","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","isRootObject","geometries","stringify","recursive","child","startP","startEnd","edgeList","projectedPoint","count$2","Line3","Triangle","Face3","vertexNormals","MeshBasicMaterial","combine","BufferAttribute","normalized","dynamic","updateRange","Uint16Attribute","Uint32Attribute","Uint32Array","Float32Attribute","Geometry","GeometryIdCount","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","minDistance","isMeshBasicMaterial","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","computeBoundingBox","fromBufferGeometry","positions","normals","uvs","uvs2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","changes","faceIndicesToRemove","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","uvsCopy","count$3","DirectGeometry","BufferGeometry","drawRange","Mesh","drawMode","updateMorphTargets","BoxBufferGeometry","widthSegments","heightSegments","depthSegments","vertexCount","indexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","Camera","PerspectiveCamera","filmGauge","filmOffset","OrthographicCamera","WebGLIndexedBufferRenderer","infoRender","mode","setMode","UNSIGNED_INT","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLLights","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","lines","addLineNumbers","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","getIndex","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","MaxIndex","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","uvs_f","isCamera","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isOrthographicCamera","cx","cy","zoomW","zoomH","scaleW","scaleH","matrixPosition","offsetMatrix","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","__webglShader","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","rendererExtensions","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","envMapCubeUV","flatShading","logarithmicDepthBuffer","customDefines","chunks","generateDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","useFog","fogExp","numClipIntersection","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getUniforms","getAttributes","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","floatVertexTextures","skeleton","nVertexUniforms","maxVertexUniforms","bones","allocateBones","getMaxPrecision","currentRenderTarget","getCurrentRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","directional","spot","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLGeometries","onGeometryDispose","buffergeometry","deleteAttribute","deleteAttributes","property","delete","bufferproperty","__webglBuffer","deleteBuffer","_bufferGeometry","WebGLObjects","updateAttribute","bufferType","attributeProperties","usage","DYNAMIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","updateBuffer","getAttributeBuffer","getWireframeAttribute","WebGLTextures","paramThreeToGL","_infoMemory","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","filterFallback","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","__version","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","HTMLImageElement","HTMLCanvasElement","makePowerOfTwo","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","isDataTexture","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","uploadTexture","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","colorBuffer","currentColorMask","currentColorClear","setMask","colorMask","setLocked","setClear","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","Uint8Array","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","maxTextures","MAX_TEXTURE_IMAGE_UNITS","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setDepthFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","webglSlot","buffers","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setColorWrite","setStencilTest","setStencilWrite","stencilWrite","setStencilFunc","setStencilOp","setLineWidth","lineWidth","setPolygonOffset","factor","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglType","boundTexture","WebGLCapabilities","maxAnisotropy","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_clipping","_clippingEnabled","_localClippingEnabled","_sphere","_vector3","ambient","_infoRender","rangeMin","rangeMax","onContextLost","objects","programCache","lightCache","bufferRenderer","indexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","backgroundBoxShader","backgroundBoxMesh","getTargetPixelRatio","glClearColor","setDefaultGLState","warned","spritePlugin","lensFlarePlugin","onMaterialDispose","releaseMaterialProgramReference","absNumericalSort","reversePainterSortStable","pushRenderItem","renderItem","isObjectViewable","isSphereViewable","isSpriteViewable","negRad","renderObjects","renderList","overrideMaterial","isImmediateRenderObject","setMaterial","setProgram","renderBufferImmediate","materialProperties","lightsHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","initMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","emissiveIntensity","uvScaleMap","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsStandard","isMeshNormalMaterial","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","getContextAttributes","forceContextLoss","loseContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","setScissor","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","updateBuffers","geometryProgram","activeInfluences","rangeFactor","startIndex","isInstancedBufferGeometry","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","Float64Array","Int16Array","Int8Array","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","LINE_STRIP","POINTS","forceClear","isLight","isSprite","isLensFlare","lightShadowsLength","setupShadows","ll","intensity","directionalLength","pointLength","spotLength","hemiLength","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isHemisphereLight","setupLights","setFaceCulling","frontFaceDirection","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","DataTexture","Skeleton","boneInverses","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","Bone","skin","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bone","gbone","rotq","scl","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","Points","Group","VideoTexture","video","requestAnimationFrame","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge","sortFunction","numEdges","edges","coords","o","ol","numTris","ParametricBufferGeometry","slices","stacks","sliceCount","ParametricGeometry","PolyhedronBufferGeometry","detail","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronBufferGeometry","TetrahedronGeometry","OctahedronBufferGeometry","OctahedronGeometry","IcosahedronBufferGeometry","IcosahedronGeometry","DodecahedronBufferGeometry","DodecahedronGeometry","PolyhedronGeometry","TubeBufferGeometry","tubularSegments","radialSegments","closed","frames","computeFrenetFrames","tangents","binormals","generateSegment","P","getPointAt","N","B","generateIndices","generateBufferData","TubeGeometry","taper","bufferGeometry","TorusKnotBufferGeometry","tube","indexOffset","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","TorusBufferGeometry","arc","TorusGeometry","vecX","vecY","wantedRotation","level","addLevel","getObjectForDistance","pose","isBone","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","cCROSSap","bCROSScp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg1Pt","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","forEach","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","shape","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","minShapeIndex","counter","h2","removeHoles","triangles","isClockWise","pts","b3","ExtrudeGeometry","shapes","addShapeList","TextGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","verticesRow","pz","v3","v4","SphereGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","RingGeometry","PlaneGeometry","LatheBufferGeometry","segments","inverseSegments","n1","n2","LatheGeometry","ShapeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","vert1","vert2","face1","face2","CylinderBufferGeometry","radiusTop","radiusBottom","openEnded","nbCap","calculateVertexCount","calculateIndexCount","indexArray","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","i3","generateTorso","CylinderGeometry","ConeGeometry","ConeBufferGeometry","CircleBufferGeometry","ii","CircleGeometry","BoxGeometry","sl","addShape","extrudePts","splineTube","binormal","position2","ahole","bevelSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","getSpacedPoints","shapesOffset","shapePoints","extractPoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","f4","f3","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","indexD","Geometries","freeze","ShadowMaterial","RawShaderMaterial","MultiMaterial","STANDARD","PHYSICAL","isShadowMaterial","Materials","Cache","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","DefaultLoadingManager","XHRLoader","manager","CompressedTextureLoader","_parser","dataUriRegexResult","isBase64","decodeURIComponent","atob","ArrayBuffer","charCodeAt","parser","request","withCredentials","setPath","setResponseType","setWithCredentials","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","BinaryTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","texData","URL","revokeObjectURL","blob","createObjectURL","setCrossOrigin","crossOrigin","urls","isJPEG","search","KeyframeTrackPrototype","textureLoader","materialLoader","AnimationUtils","arraySlice","from","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","ObjectLoader","texturePath","Curve","LineCurve","CurvePath","curves","autoClose","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","message","ValueTypeName","getInterpolation","timeOffset","timeScale","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","trackType","_getTrackTypeForValueTypeName","track","typeName","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","TYPED_ARRAYS","Uint8ClampedArray","typedArray","drawcalls","offsets","extractUrlBase","initMaterials","createMaterial","fullPath","Handlers","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","regex","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","getGeometry","getMaterial","isInteger","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","t2","pt1","getTangentAt","mat","MAX_VALUE","tz","getPointFunc","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","SplineCurve","CubicBezierCurve","QuadraticBezierCurve","intPoint","weight","point0","point1","point2","point3","instance","eyeRight","eyeLeft","orientation","vector2","PathPrototype","fromPoints","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","Path","ShapePath","subPaths","currentPath","Font","FontLoader","getAudioContext","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","cameraL","cameraR","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","createBufferSource","onended","onEnded","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","PropertyBinding","rootNode","parsedPath","parseTrackName","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindings","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","PointLightHelper","sphereSize","HemisphereLightHelper","lightSphere","GridHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","pointMap","hexFrustum","hexCone","hexCross","addLine","addPoint","BoundingBoxHelper","BoxHelper","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","createPath","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","ha","paths","createPaths","decodeAudioData","audioBuffer","eyeSepOnProjection","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setOrientation","setNodeSource","audioNode","setBuffer","play","pause","getFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetArray","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","_getValue_unbound","_setValue_unbound","Composite","targetGroup","optionalParsedPath","_targetGroup","subscribe_","firstValidIndex","bindings","isAnimationObjectGroup","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","_scheduleFading","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","_nActiveBindings","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingByName","_bindingsByRootAndName","_removeInactiveBinding","uncacheAction","bindingsByRoot","bindingsByName","_addInactiveBinding","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","isInterleavedBuffer","setFromCamera","intersectObjects","performance","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","lastFrame","currentFrame","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","coneLength","coneWidth","boneList","matrixWorldInv","boneMatrix","setColors","lightPlane","targetLine","setPoint","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","AxisHelper","setColor","CatmullRomCurve3","CubicPoly","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","t3","ClosedSplineCurve3","SplineCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","SceneUtils","createMultiMaterialObject","attach","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","DynamicBufferAttribute","Float64Attribute","Int32Attribute","Int16Attribute","Uint8ClampedAttribute","Uint8Attribute","Int8Attribute","Spline","w2","w3","pa","pb","pc","pd","initFromArray","getControlPointsArray","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FaceColors","VertexColors","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateSmooth","TriangleStripDrawMode","TriangleFanDrawMode","LogLuvEncoding","CubeGeometry","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","EdgesHelper","WireframeHelper","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SimplexNoise","grad3","grad4","perm","simplex","dot3","dot4","noise","xin","yin","j1","G2","jj","gi0","gi1","gi2","noise3d","zin","k1","j2","k2","y3","z3","kk","gi3","noise4d","l1","l2","j3","k3","l3","F4","G4","x4","y4","z4","w4","gi4","t4","ATUtil","randomRange","randomInt","min1","max1","min2","max2","norm","amt","shuffle","_gsScope","_gsQueue","_gsDefine","cycle","_cycle","_yoyo","vars","yoyo","_repeat","_repeatDelay","repeatDelay","_dirty","_internals","isSelector","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","ratio","immediateRender","_timeline","_time","_enabled","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","_totalTime","_init","_next","totalDuration","_totalDuration","_rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","_easeType","_easePower","lazyTweens","_lazy","_paused","_startAt","_callback","_onUpdate","onRepeat","runBackwards","fromTo","staggerTo","allTo","onComplete","onCompleteScope","callbackScope","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","onCompleteParams","onReverseComplete","onReverseCompleteParams","useFrames","overwrite","isTweening","_first","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","totalTime","killChildTweensOf","tweenLookup","pauseAll","resumeAll","globalTimeScale","_timeScale","frame","totalProgress","_labels","smoothChildTiming","_sortChildren","_swapSelfInParams","align","stagger","lazyRender","globals","pauseCallback","_forcingPlayhead","_hasPause","TweenMax","_parseTimeOrLabel","exportRoot","_remove","addLabel","rawTime","_pauseTime","removeLabel","_last","insertMultiple","appendMultiple","addPause","getLabelTime","timeline","substr","gotoAndPlay","gotoAndStop","_hasPausedChild","_prev","getChildren","_contains","recent","_recent","shiftChildren","_kill","usesFrames","addCallback","removeCallback","removePause","tweenTo","ease","tweenFromTo","_locked","A","C","getActive","isActive","getLabelAfter","getLabelsArray","getLabelBefore","currentLabel","da","ca","ba","plugin","priority","API","_target","_func","_round","_props","_timeRes","timeResolution","autoRotate","orientToBezier","_autoRotate","_overwriteProps","_beziers","curviness","correlate","_segCount","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","bezierThrough","cubicToQuadratic","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","setRatio","_transform","_enableTransforms","_gsTransform","_onInitTween","_tween","_roundProps","bezier","_super","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","perspective","D","E","F","G","H","I","J","K","L","M","O","_specialProps","navigator","userAgent","Q","$1","R","currentStyle","S","U","V","W","X","Y","convertToPixels","clientWidth","clientHeight","_gsCache","cacheWidths","Z","calculateOffset","za","ya","La","skewX","Ba","rotationX","rotationY","oa","difs","firstMPT","aa","oxp","oyp","oxr","oyr","ox","oy","ea","fa","ga","ia","ja","parseColor","ka","la","colorStringFilter","defaultStringFilter","ma","na","xs0","xs1","rxp","pr","ra","parseComplex","appendXtra","xfirst","sa","ta","formatter","collapsible","multi","clrs","keyword","dflt","ua","va","com","greensock","plugins","registerSpecialProp","useSVGTransformAttr","wa","xa","Aa","Ca","Transform","force3D","defaultForce3D","Da","SVGElement","Ea","setAttributeNS","Fa","Ga","chrome","Ha","Ka","xOrigin","yOrigin","getBBox","Ja","xOffset","yOffset","Ia","getCTM","svg","getTransform","zOrigin","Pa","Ma","xPercent","yPercent","ieOffsetX","ieOffsetY","Na","set3DTransformRatio","setTransformRatio","skewType","skewY","_lastParsedTransform","parseTransform","transform","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","transformOrigin","svgOrigin","smoothOrigin","_transformType","backgroundPositionX","backgroundPositionY","clipTop","clipRight","clipBottom","clipLeft","Oa","xn1","removeProperty","Qa","_gsClassPT","_classNamePT","Ra","_vars","autoRound","_addLazySet","WebkitBackfaceVisibility","_linkCSSP","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","Sa","autoAlpha","Ta","cascadeTo","reservedProps","_targets","activate","_onInitAllProps","roundProps","_propLookup","pg","_add","_addTween","finals","useRadians","GreenSockGlobals","_class","easeOut","easeIn","easeInOut","gap","_p1","_p2","config","_p","_p3","randomize","template","strength","SlowMo","TweenLite","sc","gsClass","GreenSockAMDPath","_type","_power","_params","Linear","Quad","_eventTarget","wake","cancelAnimationFrame","getTime","sleep","useRAF","visibilityState","Ticker","reversed","resume","restart","eventCallback","_overwrite","defaultOverwrite","_siblings","_overwrittenProps","defaultEase","autoSleep","fp","blobDif","_plugins","onUpdateParams","onUpdateScope","onStartParams","onStartScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","stringFilter","none","auto","concurrent","allOnStart","true","false","_updateRoot","_gsTweenID","_initProps","_priority","_onDisable","_onEnable","_tempKill","_propName","overwriteProps","initAll","OrbitControls","quat","quatInverse","lastPosition","lastQuaternion","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","dollyIn","dollyScale","dollyOut","handleMouseMoveRotate","handleKeyDown","touches","handleTouchMoveRotate","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","DeviceOrientationControls","deviceOrientation","screenOrientation","alphaOffsetAngle","zee","q0","onDeviceOrientationChangeEvent","onScreenOrientationChangeEvent","setObjectQuaternion","beta","gamma","orient","updateAlphaOffsetAngle","VRControls","vrDisplay","vrDisplays","standingMatrix","frameData","VRFrameData","getVRDisplays","displays","standing","userHeight","getVRDisplay","getStandingMatrix","getFrameData","getPose","stageParameters","sittingToStandingTransform","resetPose","resetSensor","zeroSensor","ViveController","gamepad","axes","thumbpadIsPressed","triggerIsPressed","gripsArePressed","menuIsPressed","getGamepad","getButtonState","gamepads","getGamepads","findGamepad","buttons","pressed","BG","groupHolder","cubeMesh","cubeShader","onBeat","VizHandler","getScene","cubeMap","Assets","getCubeMap","skyBoxMaterial","cubeMaterial","setEnvMap","Mecha","dae","flotilla","bonesCount","bonesPositions","bonesPositionsTween","centerTween","mouseControl","onDocumentTouchStart","mouse","innerWidth","innerHeight","boom","onDocumentMouseDown","getCamera","easeNone","sizing","segmentCount","skinIndex","createBones","prevBone","createMesh","skeletonHelper","skeletonHelpers","des","spd","meshes","oldCenter","reflectionCube","initBones","reload","prerender","postrender","getRandomOne","Shards","full","geo","tpos","ran","scr0","scr1","scr2","geom","getRenderer","generate","cubeMaps","destroyMesh","textureToo","tex","textureCube","envMaps","glow","getSide","simplexNoise","Main","onResize","FXHandler","ControlsHandler","vizParams","showControls","mainParams","fullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","toggleControls","generate_one","Asteroid","generate_grid","fxParams","song","nuts","tilt","tv","kaleidoscope","kaleidoscopeJump","rgb","dots","person","ssao","ssaoOnly","heart","items","animSpeed","colorProgress","spreadProgress","waterProgress","bgProgress","percStart","percFinish","changedValue","changed","audioParams","useMic","useSample","showDebug","volSens","beatHoldTime","beatDecayRate","bpmMode","bpmRate","fullSize","fakeKinect","depthRenderTarget","vr","composer","onBeatEnd","pixelRatio","newWidth","newHeight","getControls","controls","mobile","directionalLight","updateShadow","roz","hemiLight","activeViz","activeVizCount","getLight","getCubeCameras","cubeCameraRead","cubeCameraWrite","renderW","renderH","FIXED_SIZE_H","isFullscreen","isMobile"],"mappings":"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","file":"build.js","sourcesContent":["function Events(target){\n  var events = {}, empty = [];\n  target = target || this\n  /**\n   *  On: listen to events\n   */\n  target.on = function(type, func, ctx){\n    (events[type] = events[type] || []).push([func, ctx])\n    return target\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function(type, func){\n    type || (events = {})\n    var list = events[type] || empty,\n        i = list.length = func ? list.length : 0;\n    while(i--) func == list[i][0] && list.splice(i,1)\n    return target\n  }\n  /** \n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function(type){\n    var e = events[type] || empty, list = e.length > 0 ? e.slice(0, e.length) : e, i=0, j;\n    while(j=list[i++]) j[0].apply(j[1], empty.slice.call(arguments, 1))\n    return target\n  };\n};","/*!\r\n * jQuery JavaScript Library v2.2.4\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2016-05-20T17:23Z\r\n */\r\n\r\n(function( global, factory ) {\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Support: Firefox 18+\r\n// Can't be in strict mode, several libs including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n//\"use strict\";\r\nvar arr = [];\r\n\r\nvar document = window.document;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar support = {};\r\n\r\n\r\n\r\nvar\r\n\tversion = \"2.2.4\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n\t// Matches dashed string for camelizing\r\n\trmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([\\da-z])/gi,\r\n\r\n\t// Used by jQuery.camelCase as callback to replace()\r\n\tfcamelCase = function( all, letter ) {\r\n\t\treturn letter.toUpperCase();\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// Start with an empty selector\r\n\tselector: \"\",\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\t\treturn num != null ?\r\n\r\n\t\t\t// Return just the one element from the set\r\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\r\n\r\n\t\t\t// Return all the elements in a clean array\r\n\t\t\tslice.call( this );\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\t\tret.context = this.context;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\r\n\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisFunction: function( obj ) {\r\n\t\treturn jQuery.type( obj ) === \"function\";\r\n\t},\r\n\r\n\tisArray: Array.isArray,\r\n\r\n\tisWindow: function( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t},\r\n\r\n\tisNumeric: function( obj ) {\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\r\n\t\tvar realStringObj = obj && obj.toString();\r\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\r\n\t},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\t\tvar key;\r\n\r\n\t\t// Not plain objects:\r\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n\t\t// - DOM nodes\r\n\t\t// - window\r\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Not own constructor property must be Object\r\n\t\tif ( obj.constructor &&\r\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\r\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Own properties are enumerated firstly, so to speed up,\r\n\t\t// if last one is own, then all properties are own\r\n\t\tfor ( key in obj ) {}\r\n\r\n\t\treturn key === undefined || hasOwn.call( obj, key );\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\ttype: function( obj ) {\r\n\t\tif ( obj == null ) {\r\n\t\t\treturn obj + \"\";\r\n\t\t}\r\n\r\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\r\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\t\ttypeof obj;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tvar script,\r\n\t\t\tindirect = eval;\r\n\r\n\t\tcode = jQuery.trim( code );\r\n\r\n\t\tif ( code ) {\r\n\r\n\t\t\t// If the code includes a valid, prologue position\r\n\t\t\t// strict mode pragma, execute code by injecting a\r\n\t\t\t// script tag into the document.\r\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\r\n\t\t\t\tscript = document.createElement( \"script\" );\r\n\t\t\t\tscript.text = code;\r\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\r\n\t\t\t\t// and removal by using an indirect global eval\r\n\r\n\t\t\t\tindirect( code );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Convert dashed to camelCase; used by the css and data modules\r\n\t// Support: IE9-11+\r\n\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n\tcamelCase: function( string ) {\r\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n\t},\r\n\r\n\tnodeName: function( elem, name ) {\r\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// Bind a function to a context, optionally partially applying any\r\n\t// arguments.\r\n\tproxy: function( fn, context ) {\r\n\t\tvar tmp, args, proxy;\r\n\r\n\t\tif ( typeof context === \"string\" ) {\r\n\t\t\ttmp = fn[ context ];\r\n\t\t\tcontext = fn;\r\n\t\t\tfn = tmp;\r\n\t\t}\r\n\r\n\t\t// Quick check to determine if target is callable, in the spec\r\n\t\t// this throws a TypeError, but we will just return undefined.\r\n\t\tif ( !jQuery.isFunction( fn ) ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Simulated bind\r\n\t\targs = slice.call( arguments, 2 );\r\n\t\tproxy = function() {\r\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t\t};\r\n\r\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\t\treturn proxy;\r\n\t},\r\n\r\n\tnow: Date.now,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\n// JSHint would error on this code due to the Symbol not being defined in ES5.\r\n// Defining this global in .jshintrc would create a danger of using the global\r\n// unguarded in another place, it seems safer to just disable JSHint for these\r\n// three lines.\r\n/* jshint ignore: start */\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n/* jshint ignore: end */\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\nfunction( i, name ) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: iOS 8.2 (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = jQuery.type( obj );\r\n\r\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\nvar Sizzle =\r\n/*!\r\n * Sizzle CSS Selector Engine v2.2.1\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2015-10-17\r\n */\r\n(function( window ) {\r\n\r\nvar i,\r\n\tsupport,\r\n\tExpr,\r\n\tgetText,\r\n\tisXML,\r\n\ttokenize,\r\n\tcompile,\r\n\tselect,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\r\n\t// Local document vars\r\n\tsetDocument,\r\n\tdocument,\r\n\tdocElem,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\trbuggyMatches,\r\n\tmatches,\r\n\tcontains,\r\n\r\n\t// Instance-specific data\r\n\texpando = \"sizzle\" + 1 * new Date(),\r\n\tpreferredDoc = window.document,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t// General-purpose constants\r\n\tMAX_NEGATIVE = 1 << 31,\r\n\r\n\t// Instance methods\r\n\thasOwn = ({}).hasOwnProperty,\r\n\tarr = [],\r\n\tpop = arr.pop,\r\n\tpush_native = arr.push,\r\n\tpush = arr.push,\r\n\tslice = arr.slice,\r\n\t// Use a stripped-down indexOf as it's faster than native\r\n\t// http://jsperf.com/thor-indexof-vs-for/5\r\n\tindexOf = function( list, elem ) {\r\n\t\tvar i = 0,\r\n\t\t\tlen = list.length;\r\n\t\tfor ( ; i < len; i++ ) {\r\n\t\t\tif ( list[i] === elem ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\r\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\r\n\t\t\"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\r\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\trescape = /'|\\\\/g,\r\n\r\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n\tfunescape = function( _, escaped, escapedWhitespace ) {\r\n\t\tvar high = \"0x\" + escaped - 0x10000;\r\n\t\t// NaN means non-codepoint\r\n\t\t// Support: Firefox<24\r\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\r\n\t\treturn high !== high || escapedWhitespace ?\r\n\t\t\tescaped :\r\n\t\t\thigh < 0 ?\r\n\t\t\t\t// BMP codepoint\r\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\r\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// Used for iframes\r\n\t// See setDocument()\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t};\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t(arr = slice.call( preferredDoc.childNodes )),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\t// Support: Android<4.0\r\n\t// Detect silently failing push.apply\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = { apply: arr.length ?\r\n\r\n\t\t// Leverage slice if possible\r\n\t\tfunction( target, els ) {\r\n\t\t\tpush_native.apply( target, slice.call(els) );\r\n\t\t} :\r\n\r\n\t\t// Support: IE<9\r\n\t\t// Otherwise append directly\r\n\t\tfunction( target, els ) {\r\n\t\t\tvar j = target.length,\r\n\t\t\t\ti = 0;\r\n\t\t\t// Can't trust NodeList.length\r\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\r\n\t\t\ttarget.length = j - 1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\r\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n\t\t\tsetDocument( context );\r\n\t\t}\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( (m = match[1]) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\r\n\t\t\t\t\t\t\tcontains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[2] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\r\n\t\t\t\t\tcontext.getElementsByClassName ) {\r\n\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( support.qsa &&\r\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\r\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n\r\n\t\t\t\tif ( nodeType !== 1 ) {\r\n\t\t\t\t\tnewContext = context;\r\n\t\t\t\t\tnewSelector = selector;\r\n\r\n\t\t\t\t// qSA looks outside Element context, which is not what we want\r\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\r\n\t\t\t\t// Support: IE <=8\r\n\t\t\t\t// Exclude object elements\r\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\r\n\r\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\r\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( newSelector ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn (cache[ key + \" \" ] = value);\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by Sizzle\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created div and expects a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar div = document.createElement(\"div\");\r\n\r\n\ttry {\r\n\t\treturn !!fn( div );\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t} finally {\r\n\t\t// Remove from its parent by default\r\n\t\tif ( div.parentNode ) {\r\n\t\t\tdiv.parentNode.removeChild( div );\r\n\t\t}\r\n\t\t// release memory in IE\r\n\t\tdiv = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds the same handler for all of the specified attrs\r\n * @param {String} attrs Pipe-separated list of attributes\r\n * @param {Function} handler The method that will be applied\r\n */\r\nfunction addHandle( attrs, handler ) {\r\n\tvar arr = attrs.split(\"|\"),\r\n\t\ti = arr.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tExpr.attrHandle[ arr[i] ] = handler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks document order of two siblings\r\n * @param {Element} a\r\n * @param {Element} b\r\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n */\r\nfunction siblingCheck( a, b ) {\r\n\tvar cur = b && a,\r\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\r\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\r\n\r\n\t// Use IE sourceIndex if available on both nodes\r\n\tif ( diff ) {\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t// Check if b follows a\r\n\tif ( cur ) {\r\n\t\twhile ( (cur = cur.nextSibling) ) {\r\n\t\t\tif ( cur === b ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a ? 1 : -1;\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn name === \"input\" && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction(function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction(function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\r\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a Sizzle context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n// Expose support vars for convenience\r\nsupport = Sizzle.support = {};\r\n\r\n/**\r\n * Detects XML nodes\r\n * @param {Element|Object} elem An element or a document\r\n * @returns {Boolean} True iff elem is a non-HTML XML node\r\n */\r\nisXML = Sizzle.isXML = function( elem ) {\r\n\t// documentElement is verified for cases where it doesn't yet exist\r\n\t// (such as loading iframes in IE - #4833)\r\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [doc] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nsetDocument = Sizzle.setDocument = function( node ) {\r\n\tvar hasCompare, parent,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocElem = document.documentElement;\r\n\tdocumentIsHTML = !isXML( document );\r\n\r\n\t// Support: IE 9-11, Edge\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\r\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\r\n\t\t// Support: IE 11\r\n\t\tif ( parent.addEventListener ) {\r\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\r\n\r\n\t\t// Support: IE 9 - 10 only\r\n\t\t} else if ( parent.attachEvent ) {\r\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Attributes\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Support: IE<8\r\n\t// Verify that getAttribute really returns attributes and not properties\r\n\t// (excepting IE8 booleans)\r\n\tsupport.attributes = assert(function( div ) {\r\n\t\tdiv.className = \"i\";\r\n\t\treturn !div.getAttribute(\"className\");\r\n\t});\r\n\r\n\t/* getElement(s)By*\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Check if getElementsByTagName(\"*\") returns only elements\r\n\tsupport.getElementsByTagName = assert(function( div ) {\r\n\t\tdiv.appendChild( document.createComment(\"\") );\r\n\t\treturn !div.getElementsByTagName(\"*\").length;\r\n\t});\r\n\r\n\t// Support: IE<9\r\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\r\n\r\n\t// Support: IE<10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert(function( div ) {\r\n\t\tdocElem.appendChild( div ).id = expando;\r\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\r\n\t});\r\n\r\n\t// ID find and filter\r\n\tif ( support.getById ) {\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar m = context.getElementById( id );\r\n\t\t\t\treturn m ? [ m ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t\tExpr.filter[\"ID\"] = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t} else {\r\n\t\t// Support: IE6/7\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tdelete Expr.find[\"ID\"];\r\n\r\n\t\tExpr.filter[\"ID\"] =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode(\"id\");\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\r\n\t\tfunction( tag, context ) {\r\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t\t} else if ( support.qsa ) {\r\n\t\t\t\treturn context.querySelectorAll( tag );\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\tfunction( tag, context ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ttmp = [],\r\n\t\t\t\ti = 0,\r\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\r\n\t\t\t\tresults = context.getElementsByTagName( tag );\r\n\r\n\t\t\t// Filter out possible comments\r\n\t\t\tif ( tag === \"*\" ) {\r\n\t\t\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\ttmp.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t// Class\r\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n\trbuggyMatches = [];\r\n\r\n\t// qSa(:focus) reports false when true (Chrome 21)\r\n\t// We allow this because of a bug in IE8/9 that throws an error\r\n\t// whenever `document.activeElement` is accessed on an iframe\r\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n\t// See http://bugs.jquery.com/ticket/13378\r\n\trbuggyQSA = [];\r\n\r\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\r\n\t\t// Build QSA regex\r\n\t\t// Regex strategy adopted from Diego Perini\r\n\t\tassert(function( div ) {\r\n\t\t\t// Select is set to empty string on purpose\r\n\t\t\t// This is to test IE's treatment of not explicitly\r\n\t\t\t// setting a boolean content attribute,\r\n\t\t\t// since its presence should be enough\r\n\t\t\t// http://bugs.jquery.com/ticket/12359\r\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\r\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\r\n\t\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t\t// Support: IE8, Opera 11-12.16\r\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\r\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\r\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\r\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\r\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\r\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\"~=\");\r\n\t\t\t}\r\n\r\n\t\t\t// Webkit/Opera - :checked should return selected option elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\r\n\t\t\t\trbuggyQSA.push(\":checked\");\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Safari 8+, iOS 8+\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\r\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Support: Windows 8 Native Apps\r\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Enforce case-sensitivity of name attribute\r\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\r\n\t\t\t}\r\n\r\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\r\n\t\t\tdiv.querySelectorAll(\"*,:x\");\r\n\t\t\trbuggyQSA.push(\",.*:\");\r\n\t\t});\r\n\t}\r\n\r\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\r\n\t\tdocElem.webkitMatchesSelector ||\r\n\t\tdocElem.mozMatchesSelector ||\r\n\t\tdocElem.oMatchesSelector ||\r\n\t\tdocElem.msMatchesSelector) )) ) {\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Check to see if it's possible to do matchesSelector\r\n\t\t\t// on a disconnected node (IE 9)\r\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n\t\t\t// This should fail with an exception\r\n\t\t\t// Gecko does not error, returns false instead\r\n\t\t\tmatches.call( div, \"[s!='']:x\" );\r\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\r\n\t\t});\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n\t/* Contains\r\n\t---------------------------------------------------------------------- */\r\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\r\n\r\n\t// Element contains another\r\n\t// Purposefully self-exclusive\r\n\t// As in, an element does not contain itself\r\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\r\n\t\tfunction( a, b ) {\r\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\r\n\t\t\t\tbup = b && b.parentNode;\r\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\t\t\t\tadown.contains ?\r\n\t\t\t\t\tadown.contains( bup ) :\r\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t\t\t));\r\n\t\t} :\r\n\t\tfunction( a, b ) {\r\n\t\t\tif ( b ) {\r\n\t\t\t\twhile ( (b = b.parentNode) ) {\r\n\t\t\t\t\tif ( b === a ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = hasCompare ?\r\n\tfunction( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t} :\r\n\tfunction( a, b ) {\r\n\t\t// Exit early if the nodes are identical\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\taup = a.parentNode,\r\n\t\t\tbup = b.parentNode,\r\n\t\t\tap = [ a ],\r\n\t\t\tbp = [ b ];\r\n\r\n\t\t// Parentless nodes are either documents or disconnected\r\n\t\tif ( !aup || !bup ) {\r\n\t\t\treturn a === document ? -1 :\r\n\t\t\t\tb === document ? 1 :\r\n\t\t\t\taup ? -1 :\r\n\t\t\t\tbup ? 1 :\r\n\t\t\t\tsortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\r\n\t\t// If the nodes are siblings, we can do a quick check\r\n\t\t} else if ( aup === bup ) {\r\n\t\t\treturn siblingCheck( a, b );\r\n\t\t}\r\n\r\n\t\t// Otherwise we need full lists of their ancestors for comparison\r\n\t\tcur = a;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tap.unshift( cur );\r\n\t\t}\r\n\t\tcur = b;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tbp.unshift( cur );\r\n\t\t}\r\n\r\n\t\t// Walk down the tree looking for a discrepancy\r\n\t\twhile ( ap[i] === bp[i] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i ?\r\n\t\t\t// Do a sibling check if the nodes have a common ancestor\r\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\r\n\r\n\t\t\t// Otherwise nodes in our document sort first\r\n\t\t\tap[i] === preferredDoc ? -1 :\r\n\t\t\tbp[i] === preferredDoc ? 1 :\r\n\t\t\t0;\r\n\t};\r\n\r\n\treturn document;\r\n};\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n\treturn Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\t// Make sure that attribute selectors are quoted\r\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n\tif ( support.matchesSelector && documentIsHTML &&\r\n\t\t!compilerCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nSizzle.contains = function( context, elem ) {\r\n\t// Set document vars if needed\r\n\tif ( ( context.ownerDocument || context ) !== document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn contains( context, elem );\r\n};\r\n\r\nSizzle.attr = function( elem, name ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\treturn val !== undefined ?\r\n\t\tval :\r\n\t\tsupport.attributes || !documentIsHTML ?\r\n\t\t\telem.getAttribute( name ) :\r\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\r\n\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\nSizzle.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\thasDuplicate = !support.detectDuplicates;\r\n\tsortInput = !support.sortStable && results.slice( 0 );\r\n\tresults.sort( sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tresults.splice( duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n\tvar node,\r\n\t\tret = \"\",\r\n\t\ti = 0,\r\n\t\tnodeType = elem.nodeType;\r\n\r\n\tif ( !nodeType ) {\r\n\t\t// If no nodeType, this is expected to be an array\r\n\t\twhile ( (node = elem[i++]) ) {\r\n\t\t\t// Do not traverse comment nodes\r\n\t\t\tret += getText( node );\r\n\t\t}\r\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n\t\t// Use textContent for elements\r\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\r\n\t\tif ( typeof elem.textContent === \"string\" ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t} else {\r\n\t\t\t// Traverse its children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tret += getText( elem );\r\n\t\t\t}\r\n\t\t}\r\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n\t\treturn elem.nodeValue;\r\n\t}\r\n\t// Do not include comment or processing instruction nodes\r\n\r\n\treturn ret;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\t\"ATTR\": function( match ) {\r\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[2] === \"~=\" ) {\r\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( match ) {\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[1] = match[1].toLowerCase();\r\n\r\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[3] ) {\r\n\t\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[3] ) {\r\n\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[6] && match[2];\r\n\r\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[3] ) {\r\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\r\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\t\"TAG\": function( nodeNameSelector ) {\r\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() { return true; } :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CLASS\": function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t\"ATTR\": function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = Sizzle.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\treturn operator === \"=\" ? result === check :\r\n\t\t\t\t\toperator === \"!=\" ? result !== check :\r\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n\t\t\t\t\tfalse;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\r\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\tnode = parent;\r\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( pseudo, argument ) {\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as Sizzle does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\t\t// Potentially complex pseudos\r\n\t\t\"not\": markFunction(function( selector ) {\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}) :\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tinput[0] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\t\t\t\t\t// Don't keep the element (issue #299)\r\n\t\t\t\t\tinput[0] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"has\": markFunction(function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"contains\": markFunction(function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\t\"lang\": markFunction( function( lang ) {\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\r\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// Miscellaneous\r\n\t\t\"target\": function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\t\"root\": function( elem ) {\r\n\t\t\treturn elem === docElem;\r\n\t\t},\r\n\r\n\t\t\"focus\": function( elem ) {\r\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\t\"enabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === false;\r\n\t\t},\r\n\r\n\t\t\"disabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === true;\r\n\t\t},\r\n\r\n\t\t\"checked\": function( elem ) {\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\r\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n\t\t},\r\n\r\n\t\t\"selected\": function( elem ) {\r\n\t\t\t// Accessing this property makes selected-by-default\r\n\t\t\t// options in Safari work properly\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\t\"empty\": function( elem ) {\r\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t\"parent\": function( elem ) {\r\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\t\"header\": function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"input\": function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"button\": function( elem ) {\r\n\t\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n\t\t},\r\n\r\n\t\t\"text\": function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\r\n\t\t\t\telem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE<8\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\r\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\t\"first\": createPositionalPseudo(function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t}),\r\n\r\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t}),\r\n\r\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t}),\r\n\r\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t})\r\n\t}\r\n};\r\n\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( (tokens = []) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push({\r\n\t\t\t\tvalue: matched,\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\r\n\t\t\t});\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push({\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t});\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\treturn parseOnly ?\r\n\t\tsoFar.length :\r\n\t\tsoFar ?\r\n\t\t\tSizzle.error( selector ) :\r\n\t\t\t// Cache the tokens\r\n\t\t\ttokenCache( selector, groups ).slice( 0 );\r\n};\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[i].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tcheckNonElements = base && dir === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, uniqueCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\r\n\r\n\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[0];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tSizzle( selector, contexts[i], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction(function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems,\r\n\r\n\t\t\tmatcherOut = matcher ?\r\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t\t[] :\r\n\r\n\t\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\t\tresults :\r\n\t\t\t\tmatcherIn;\r\n\r\n\t\t// Find primary matches\r\n\t\tif ( matcher ) {\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( (elem = temp[i]) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\r\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n\t\t\t\t(checkContext = context).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\t\t\t// Avoid hanging onto element (issue #299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\toutermostContext = context === document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: IE<9, Safari\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\r\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tSizzle.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[i] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n};\r\n\r\n/**\r\n * A low-level selection function that works with Sizzle's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with Sizzle.compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nselect = Sizzle.select = function( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[0] = match[0].slice( 0 );\r\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\r\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[i];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( (find = Expr.find[ type ]) ) {\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( (seed = find(\r\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\r\n\t\t\t\t)) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n};\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome 14-35+\r\n// Always assume duplicates if they aren't passed to the comparison function\r\nsupport.detectDuplicates = !!hasDuplicate;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert(function( div1 ) {\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\r\n});\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\nif ( !assert(function( div ) {\r\n\tdiv.innerHTML = \"<a href='#'></a>\";\r\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\r\n}) ) {\r\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\nif ( !support.attributes || !assert(function( div ) {\r\n\tdiv.innerHTML = \"<input/>\";\r\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\r\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\r\n}) ) {\r\n\taddHandle( \"value\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n\t\t\treturn elem.defaultValue;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\nif ( !assert(function( div ) {\r\n\treturn div.getAttribute(\"disabled\") == null;\r\n}) ) {\r\n\taddHandle( booleans, function( elem, name, isXML ) {\r\n\t\tvar val;\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\r\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\r\n\t\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nreturn Sizzle;\r\n\r\n})( window );\r\n\r\n\r\n\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\n\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\r\n\r\n\r\n\r\nvar risSimple = /^.[^:#\\[\\.,]*$/;\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( jQuery.isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\t/* jshint -W018 */\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( typeof qualifier === \"string\" ) {\r\n\t\tif ( risSimple.test( qualifier ) ) {\r\n\t\t\treturn jQuery.filter( qualifier, elements, not );\r\n\t\t}\r\n\r\n\t\tqualifier = jQuery.filter( qualifier, elements );\r\n\t}\r\n\r\n\treturn jQuery.grep( elements, function( elem ) {\r\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t} );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\treturn elems.length === 1 && elem.nodeType === 1 ?\r\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\r\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\t\treturn elem.nodeType === 1;\r\n\t\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i,\r\n\t\t\tlen = this.length,\r\n\t\t\tret = [],\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\r\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\r\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\r\n\t\treturn ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\t// Support: Blackberry 4.6\r\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\r\n\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.context = document;\r\n\t\t\t\t\tthis.selector = selector;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis.context = this[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( jQuery.isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\tif ( selector.selector !== undefined ) {\r\n\t\t\tthis.selector = selector.selector;\r\n\t\t\tthis.context = selector.context;\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n\t\t\t\tjQuery( selectors, context || this.context ) :\r\n\t\t\t\t0;\r\n\r\n\t\tfor ( ; i < l; i++ ) {\r\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t// Always skip document fragments\r\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\r\n\t\t\t\t\tpos.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t// Don't pass non-elements to Sizzle\r\n\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnotwhite = ( /\\S+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, listener list, final state\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n\r\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Keep pipe for back-compat\r\n\t\tpromise.pipe = promise.then;\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 3 ];\r\n\r\n\t\t\t// promise[ done | fail | progress ] = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add( function() {\r\n\r\n\t\t\t\t\t// state = [ resolved | rejected ]\r\n\t\t\t\t\tstate = stateString;\r\n\r\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\r\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n\t\t\t}\r\n\r\n\t\t\t// deferred[ resolve | reject | notify ]\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\r\n\t\tvar i = 0,\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\t\t\tlength = resolveValues.length,\r\n\r\n\t\t\t// the count of uncompleted subordinates\r\n\t\t\tremaining = length !== 1 ||\r\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n\t\t\t// the master Deferred.\r\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\r\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n\t\t\t// Update function for both resolve and progress values\r\n\t\t\tupdateFunc = function( i, contexts, values ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tcontexts[ i ] = this;\r\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( values === progressValues ) {\r\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\r\n\t\t\t\t\t} else if ( !( --remaining ) ) {\r\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tprogressValues, progressContexts, resolveContexts;\r\n\r\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\r\n\t\tif ( length > 1 ) {\r\n\t\t\tprogressValues = new Array( length );\r\n\t\t\tprogressContexts = new Array( length );\r\n\t\t\tresolveContexts = new Array( length );\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n\t\t\t\t\tresolveValues[ i ].promise()\r\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\r\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\r\n\t\t\t\t\t\t.fail( deferred.reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t--remaining;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we're not waiting on anything, resolve the master\r\n\t\tif ( !remaining ) {\r\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\r\n\t\t}\r\n\r\n\t\treturn deferred.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called\r\n\t\t// after the browser event has already occurred.\r\n\t\t// Support: IE9-10 only\r\n\t\t// Older IE sometimes signals \"interactive\" too soon\r\n\t\tif ( document.readyState === \"complete\" ||\r\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\twindow.setTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\t/* jshint -W018 */\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tregister: function( owner, initial ) {\r\n\t\tvar value = initial || {};\r\n\r\n\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t// use plain assignment\r\n\t\tif ( owner.nodeType ) {\r\n\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\r\n\t\t// configurability must be true to allow the property to be\r\n\t\t// deleted with the delete operator\r\n\t\t} else {\r\n\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\tvalue: value,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn owner[ this.expando ];\r\n\t},\r\n\tcache: function( owner ) {\r\n\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return an empty object.\r\n\t\tif ( !acceptData( owner ) ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.register( owner );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = data === \"true\" ? true :\r\n\t\t\t\t\tdata === \"false\" ? false :\r\n\t\t\t\t\tdata === \"null\" ? null :\r\n\r\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\r\n\t\t\t\t\t+data + \"\" === data ? +data :\r\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n\t\t\t\t\tdata;\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE11+\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data, camelKey;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key as-is\r\n\t\t\t\tdata = dataUser.get( elem, key ) ||\r\n\r\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\r\n\t\t\t\t\t// This is for 2.2.x only\r\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\r\n\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamelKey = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key camelized\r\n\t\t\t\tdata = dataUser.get( elem, camelKey );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tcamelKey = jQuery.camelCase( key );\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// First, attempt to store a copy or reference of any\r\n\t\t\t\t// data that might've been store with a camelCased key.\r\n\t\t\t\tvar data = dataUser.get( this, camelKey );\r\n\r\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\r\n\t\t\t\t// store property names with dashes in a camelCase form.\r\n\t\t\t\t// This might not apply to all properties...*\r\n\t\t\t\tdataUser.set( this, camelKey, value );\r\n\r\n\t\t\t\t// *... In the case of properties that might _actually_\r\n\t\t\t\t// have dashes, we need to also store a copy of that\r\n\t\t\t\t// unchanged property.\r\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\r\n\t\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar isHidden = function( elem, el ) {\r\n\r\n\t\t// isHidden might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\r\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\r\n\t};\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted,\r\n\t\tscale = 1,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() { return tween.cur(); } :\r\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\r\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\r\n\t\t\tscale = scale || \".5\";\r\n\r\n\t\t\t// Adjust and apply\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\r\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\r\n\t\t} while (\r\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\r\n\t\t);\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([\\w:-]+)/ );\r\n\r\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n// We have to close these tags to support XHTML (#13200)\r\nvar wrapMap = {\r\n\r\n\t// Support: IE9\r\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\n// Support: IE9\r\nwrapMap.optgroup = wrapMap.option;\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE9-11+\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\r\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\r\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\r\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\r\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\r\n\t\t\t[];\r\n\r\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\r\n\t\tjQuery.merge( [ context ], ret ) :\r\n\t\tret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, contains, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( contains ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0-4.3, Safari<=5.1\r\n\t// Check state lost if the name is set (#11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Safari<=5.1, Android<4.2\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE<=11+\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n} )();\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\n// Support: IE9\r\n// See #13393 for more info\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( event ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tevent = jQuery.event.fix( event );\r\n\r\n\t\tvar i, j, ret, matched, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\targs = slice.call( arguments ),\r\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\r\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, matches, sel, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Support (at least): Chrome, IE9\r\n\t\t// Find delegate handlers\r\n\t\t// Black-hole SVG <use> instance trees (#13180)\r\n\t\t//\r\n\t\t// Support: Firefox<=42+\r\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\r\n\t\tif ( delegateCount && cur.nodeType &&\r\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (#13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matches[ sel ] ) {\r\n\t\t\t\t\t\t\tmatches.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matches.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\t// Includes some event props shared by KeyEvent and MouseEvent\r\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\r\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\r\n\r\n\tfixHooks: {},\r\n\r\n\tkeyHooks: {\r\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\r\n\t\t\t// Add which for key events\r\n\t\t\tif ( event.which == null ) {\r\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tmouseHooks: {\r\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\r\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\t\t\tvar eventDoc, doc, body,\r\n\t\t\t\tbutton = original.button;\r\n\r\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n\t\t\t\tdoc = eventDoc.documentElement;\r\n\t\t\t\tbody = eventDoc.body;\r\n\r\n\t\t\t\tevent.pageX = original.clientX +\r\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n\t\t\t\tevent.pageY = original.clientY +\r\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n\t\t\t}\r\n\r\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\t\t// Note: button is not normalized, so don't use it\r\n\t\t\tif ( !event.which && button !== undefined ) {\r\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tfix: function( event ) {\r\n\t\tif ( event[ jQuery.expando ] ) {\r\n\t\t\treturn event;\r\n\t\t}\r\n\r\n\t\t// Create a writable copy of the event object and normalize some properties\r\n\t\tvar i, prop, copy,\r\n\t\t\ttype = event.type,\r\n\t\t\toriginalEvent = event,\r\n\t\t\tfixHook = this.fixHooks[ type ];\r\n\r\n\t\tif ( !fixHook ) {\r\n\t\t\tthis.fixHooks[ type ] = fixHook =\r\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\r\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\r\n\t\t\t\t{};\r\n\t\t}\r\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n\t\tevent = new jQuery.Event( originalEvent );\r\n\r\n\t\ti = copy.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tprop = copy[ i ];\r\n\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n\t\t}\r\n\r\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\r\n\t\t// All events should have a target; Cordova deviceready doesn't\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = document;\r\n\t\t}\r\n\r\n\t\t// Support: Safari 6.0+, Chrome<28\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tif ( event.target.nodeType === 3 ) {\r\n\t\t\tevent.target = event.target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android<4.0\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\tisSimulated: false,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://code.google.com/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\r\n\r\n\t// Support: IE 10-11, Edge 10240+\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\trscriptTypeMasked = /^true\\/(.*)/,\r\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\r\n\r\n// Manipulating tables requires a tbody\r\nfunction manipulationTarget( elem, content ) {\r\n\treturn jQuery.nodeName( elem, \"table\" ) &&\r\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\r\n\r\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\r\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\r\n\t\telem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tvar match = rscriptTypeMasked.exec( elem.type );\r\n\r\n\tif ( match ) {\r\n\t\telem.type = match[ 1 ];\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.access( src );\r\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdelete pdataCur.handle;\r\n\t\t\tpdataCur.events = {};\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = concat.apply( [], args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( isFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (#8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Reenable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// Keep domManip exposed until 3.0 (gh-2225)\r\n\tdomManip: domManip,\r\n\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: QtWebKit\r\n\t\t\t// .get() because push.apply(_, arraylike) throws\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\n\r\n\r\nvar iframe,\r\n\telemdisplay = {\r\n\r\n\t\t// Support: Firefox\r\n\t\t// We have to pre-define these values for FF (#10227)\r\n\t\tHTML: \"block\",\r\n\t\tBODY: \"block\"\r\n\t};\r\n\r\n/**\r\n * Retrieve the actual display of a element\r\n * @param {String} name nodeName of the element\r\n * @param {Object} doc Document object\r\n */\r\n\r\n// Called only from within defaultDisplay\r\nfunction actualDisplay( name, doc ) {\r\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\r\n\r\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\r\n\r\n\t// We don't have any data stored on the element,\r\n\t// so use \"detach\" method as fast way to get rid of the element\r\n\telem.detach();\r\n\r\n\treturn display;\r\n}\r\n\r\n/**\r\n * Try to determine the default display value of an element\r\n * @param {String} nodeName\r\n */\r\nfunction defaultDisplay( nodeName ) {\r\n\tvar doc = document,\r\n\t\tdisplay = elemdisplay[ nodeName ];\r\n\r\n\tif ( !display ) {\r\n\t\tdisplay = actualDisplay( nodeName, doc );\r\n\r\n\t\t// If the simple way fails, read from inside an iframe\r\n\t\tif ( display === \"none\" || !display ) {\r\n\r\n\t\t\t// Use the already-created iframe if possible\r\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\r\n\t\t\t\t.appendTo( doc.documentElement );\r\n\r\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\r\n\t\t\tdoc = iframe[ 0 ].contentDocument;\r\n\r\n\t\t\t// Support: IE\r\n\t\t\tdoc.write();\r\n\t\t\tdoc.close();\r\n\r\n\t\t\tdisplay = actualDisplay( nodeName, doc );\r\n\t\t\tiframe.detach();\r\n\t\t}\r\n\r\n\t\t// Store the correct default display\r\n\t\telemdisplay[ nodeName ] = display;\r\n\t}\r\n\r\n\treturn display;\r\n}\r\nvar rmargin = ( /^margin/ );\r\n\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view || !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar swap = function( elem, options, callback, args ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.apply( elem, args || [] );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\n( function() {\r\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE9-11+\r\n\t// Style of cloned element affects source element cloned (#8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\r\n\t\t\"padding:0;margin-top:1px;position:absolute\";\r\n\tcontainer.appendChild( div );\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\t\tdiv.style.cssText =\r\n\r\n\t\t\t// Support: Firefox<29, Android 2.3\r\n\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\r\n\t\t\t\"position:relative;display:block;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"top:1%;width:50%\";\r\n\t\tdiv.innerHTML = \"\";\r\n\t\tdocumentElement.appendChild( container );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\r\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.marginRight = \"50%\";\r\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\t}\r\n\r\n\tjQuery.extend( support, {\r\n\t\tpixelPosition: function() {\r\n\r\n\t\t\t// This test is executed only once but we still do memoizing\r\n\t\t\t// since we can use the boxSizingReliable pre-computing.\r\n\t\t\t// No need to check if the test was already performed, though.\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 4.0-4.3\r\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\r\n\t\t\t// since that compresses better and they're computed together anyway.\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn pixelMarginRightVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\r\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\treliableMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 2.3\r\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\r\n\t\t\t// gets computed margin-right based on width of container. (#3333)\r\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n\t\t\t// This support function is only executed once so no memoizing is needed.\r\n\t\t\tvar ret,\r\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\r\n\r\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\r\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\r\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\r\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n\t\t\tdiv.style.width = \"1px\";\r\n\t\t\tdocumentElement.appendChild( container );\r\n\r\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\r\n\r\n\t\t\tdocumentElement.removeChild( container );\r\n\t\t\tdiv.removeChild( marginDiv );\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\r\n\r\n\t// Support: Opera 12.1x only\r\n\t// Fall back to style even without computed\r\n\t// computed is undefined for elems on document fragments\r\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\tret = jQuery.style( elem, name );\r\n\t}\r\n\r\n\t// Support: IE9\r\n\t// getPropertyValue is only needed for .css('filter') (#12537)\r\n\tif ( computed ) {\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\r\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE9-11+\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t},\r\n\r\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style;\r\n\r\n// Return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Shortcut for names that are not vendor prefixed\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\r\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n\r\n\t\t// If we already have the right measurement, avoid augmentation\r\n\t\t4 :\r\n\r\n\t\t// Otherwise initialize for horizontal or vertical properties\r\n\t\tname === \"width\" ? 1 : 0,\r\n\r\n\t\tval = 0;\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin, so add it if we want it\r\n\t\tif ( extra === \"margin\" ) {\r\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\tif ( isBorderBox ) {\r\n\r\n\t\t\t// border-box includes padding, so remove it if we want content\r\n\t\t\tif ( extra === \"content\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, extra isn't border nor margin, so remove border\r\n\t\t\tif ( extra !== \"margin\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// At this point, extra isn't content, so add padding\r\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// At this point, extra isn't content nor padding, so add border\r\n\t\t\tif ( extra !== \"padding\" ) {\r\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn val;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, name, extra ) {\r\n\r\n\t// Start with offset property, which is equivalent to the border-box value\r\n\tvar valueIsBorderBox = true,\r\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n\t\tstyles = getStyles( elem ),\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n\tif ( val <= 0 || val == null ) {\r\n\r\n\t\t// Fall back to computed then uncomputed css if necessary\r\n\t\tval = curCSS( elem, name, styles );\r\n\t\tif ( val < 0 || val == null ) {\r\n\t\t\tval = elem.style[ name ];\r\n\t\t}\r\n\r\n\t\t// Computed unit is not pixels. Stop here and return.\r\n\t\tif ( rnumnonpx.test( val ) ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\t// Check for style in case a browser which returns unreliable values\r\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\r\n\t\tvalueIsBorderBox = isBorderBox &&\r\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\r\n\r\n\t\t// Normalize \"\", auto, and prepare for extra\r\n\t\tval = parseFloat( val ) || 0;\r\n\t}\r\n\r\n\t// Use the active box-sizing model to add/subtract irrelevant styles\r\n\treturn ( val +\r\n\t\taugmentWidthOrHeight(\r\n\t\t\telem,\r\n\t\t\tname,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem, hidden,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Reset the inline display of this element to learn if it is\r\n\t\t\t// being hidden by cascaded rules or not\r\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\r\n\t\t\t\telem.style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set elements which have been overridden with display: none\r\n\t\t\t// in a stylesheet to whatever the default browser style is\r\n\t\t\t// for such an element\r\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.access(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thidden = isHidden( elem );\r\n\r\n\t\t\tif ( display !== \"none\" || !hidden ) {\r\n\t\t\t\tdataPriv.set(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of most of the elements in a second loop\r\n\t// to avoid the constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\t\"animationIterationCount\": true,\r\n\t\t\"columnCount\": true,\r\n\t\t\"fillOpacity\": true,\r\n\t\t\"flexGrow\": true,\r\n\t\t\"flexShrink\": true,\r\n\t\t\"fontWeight\": true,\r\n\t\t\"lineHeight\": true,\r\n\t\t\"opacity\": true,\r\n\t\t\"order\": true,\r\n\t\t\"orphans\": true,\r\n\t\t\"widows\": true,\r\n\t\t\"zIndex\": true,\r\n\t\t\"zoom\": true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {\r\n\t\t\"float\": \"cssFloat\"\r\n\t},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = jQuery.camelCase( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug #9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\tif ( type === \"number\" ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE9-11+\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tstyle[ name ] = value;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = jQuery.camelCase( name );\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\r\n\tjQuery.cssHooks[ name ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\t\t\t\t\telem.offsetWidth === 0 ?\r\n\t\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\r\n\t\t\t\t\t\t} ) :\r\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = extra && getStyles( elem ),\r\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\textra,\r\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\t\tstyles\r\n\t\t\t\t);\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ name ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, name );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Support: Android 2.3\r\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\r\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( !rmargin.test( prefix ) ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( jQuery.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t},\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHidden( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\r\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\r\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE9\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back Compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, timerId,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = jQuery.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\t/* jshint validthis: true */\r\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHidden( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Handle queue: false promises\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Height/width overflow pass\r\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n\r\n\t\t// Make sure that nothing sneaks out\r\n\t\t// Record all 3 overflow attributes because IE9-10 do not\r\n\t\t// change the overflow attribute when overflowX and\r\n\t\t// overflowY are set to the same value\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Set display property to inline-block for height/width\r\n\t\t// animations on inline elements that are having width/height animated\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\r\n\t\t// Test default display if display is currently \"none\"\r\n\t\tcheckDisplay = display === \"none\" ?\r\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\r\n\r\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\t\t\tstyle.display = \"inline-block\";\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// show/hide pass\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.exec( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\r\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\r\n\t\t// Any non-fx value stops us from restoring the original display value\r\n\t\t} else {\r\n\t\t\tdisplay = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !jQuery.isEmptyObject( orig ) ) {\r\n\t\tif ( dataShow ) {\r\n\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\r\n\t\t}\r\n\r\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n\t\tif ( toggle ) {\r\n\t\t\tdataShow.hidden = !hidden;\r\n\t\t}\r\n\t\tif ( hidden ) {\r\n\t\t\tjQuery( elem ).show();\r\n\t\t} else {\r\n\t\t\tanim.done( function() {\r\n\t\t\t\tjQuery( elem ).hide();\r\n\t\t\t} );\r\n\t\t}\r\n\t\tanim.done( function() {\r\n\t\t\tvar prop;\r\n\r\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\tfor ( prop in orig ) {\r\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tfor ( prop in orig ) {\r\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\r\n\t\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\t\tdataShow[ prop ] = tween.start;\r\n\t\t\t\tif ( hidden ) {\r\n\t\t\t\t\ttween.end = tween.start;\r\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\r\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\r\n\t\tstyle.display = display;\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = jQuery.camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length ; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tjQuery.proxy( result.stop, result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\t// attach callbacks from options\r\n\treturn animation.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( jQuery.isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnotwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tjQuery.isFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n\t};\r\n\r\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\r\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\r\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( jQuery.isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue && type !== false ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = jQuery.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Checks the timer has not already been removed\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tif ( timer() ) {\r\n\t\tjQuery.fx.start();\r\n\t} else {\r\n\t\tjQuery.timers.pop();\r\n\t}\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( !timerId ) {\r\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n\t}\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\twindow.clearInterval( timerId );\r\n\r\n\ttimerId = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: iOS<=5.1, Android<=4.2+\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE<=11+\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: Android<=2.3\r\n\t// Options inside disabled selects are incorrectly marked as disabled\r\n\tselect.disabled = true;\r\n\tsupport.optDisabled = !opt.disabled;\r\n\r\n\t// Support: IE<=11+\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// All attributes are lowercase\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\thooks = jQuery.attrHooks[ name ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name, propName,\r\n\t\t\ti = 0,\r\n\t\t\tattrNames = value && value.match( rnotwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n\r\n\t\t\t\t// Boolean attributes get special treatment (#10870)\r\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\r\n\r\n\t\t\t\t\t// Set corresponding property to false\r\n\t\t\t\t\telem[ propName ] = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle;\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ name ];\r\n\t\t\tattrHandle[ name ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tname.toLowerCase() :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ name ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\treturn tabindex ?\r\n\t\t\t\t\tparseInt( tabindex, 10 ) :\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\r\n\t\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\t\t-1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\n// Support: IE <=11 only\r\n// Accessing the selectedIndex property\r\n// forces the browser to respect setting selected\r\n// on the option\r\n// The getter ensures a default option is selected\r\n// when in an optgroup\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tset: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent ) {\r\n\t\t\t\tparent.selectedIndex;\r\n\r\n\t\t\t\tif ( parent.parentNode ) {\r\n\t\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\nvar rclass = /[\\t\\r\\n\\f]/g;\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value;\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( type === \"string\" ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\r\n\t\t\t\t\t.indexOf( className ) > -1\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g,\r\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, isFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\treturn typeof ret === \"string\" ?\r\n\r\n\t\t\t\t\t// Handle most common string cases\r\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\r\n\r\n\t\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\t\tret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( jQuery.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\r\n\t\t\t\treturn val != null ?\r\n\t\t\t\t\tval :\r\n\r\n\t\t\t\t\t// Support: IE10-11+\r\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\r\n\t\t\t\t\t// Strip and collapse whitespace\r\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\r\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length,\r\n\t\t\t\t\ti = index < 0 ?\r\n\t\t\t\t\t\tmax :\r\n\t\t\t\t\t\tone ? index : 0;\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t( support.optDisabled ?\r\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\t\t\t\t\telem[ type ]();\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\t// Used only for `focus(in | out)` events\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\r\n\tfunction( i, name ) {\r\n\r\n\t// Handle event binding\r\n\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\treturn arguments.length > 0 ?\r\n\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\tthis.trigger( name );\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nsupport.focusin = \"onfocusin\" in window;\r\n\r\n\r\n// Support: Firefox\r\n// Firefox doesn't have focus(in | out) events\r\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n//\r\n// Support: Chrome, Safari\r\n// focus(in | out) events fire after focus & blur events,\r\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\r\nif ( !support.focusin ) {\r\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\r\n\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdataPriv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n}\r\nvar location = window.location;\r\n\r\nvar nonce = jQuery.now();\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Support: Android 2.3\r\n// Workaround failure to string-cast null input\r\njQuery.parseJSON = function( data ) {\r\n\treturn JSON.parse( data + \"\" );\r\n};\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE9\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\trhash = /#.*$/,\r\n\trts = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\toriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\r\n\r\n\t\tif ( jQuery.isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": jQuery.parseJSON,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// The jqXHR state\r\n\t\t\tstate = 0,\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( state === 2 ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tvar lname = name.toLowerCase();\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\r\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\r\n\t\tjqXHR.success = jqXHR.done;\r\n\t\tjqXHR.error = jqXHR.fail;\r\n\r\n\t\t// Remove hash character (#7531: and string promotion)\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE8-11+\r\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE8-11+\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( state === 2 ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\tcacheURL = s.url;\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// If data is available, append data to url\r\n\t\t\tif ( s.data ) {\r\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add anti-cache in url if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\ts.url = rts.test( cacheURL ) ?\r\n\r\n\t\t\t\t\t// If there is already a '_' parameter, set its value\r\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\r\n\r\n\t\t\t\t\t// Otherwise add one to the end\r\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n\t\t\tjqXHR[ i ]( s[ i ] );\r\n\t\t}\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tstate = 1;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Propagate exception as error if not done\r\n\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\tdone( -1, e );\r\n\r\n\t\t\t\t// Simply rethrow otherwise\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Called once\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// State is \"done\" now\r\n\t\t\tstate = 2;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( jQuery.isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\t\t\"throws\": true\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar isFunction = jQuery.isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function() {\r\n\t\treturn this.parent().each( function() {\r\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\r\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t\t}\r\n\t\t} ).end();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.filters.hidden = function( elem ) {\r\n\treturn !jQuery.expr.filters.visible( elem );\r\n};\r\njQuery.expr.filters.visible = function( elem ) {\r\n\r\n\t// Support: Opera <= 12.12\r\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\r\n\t// Use OR instead of AND as the element is not visible if either is true\r\n\t// See tickets #10406 and #13132\r\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\r\n};\r\n\r\n\r\n\r\n\r\nvar r20 = /%20/g,\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( jQuery.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, value ) {\r\n\r\n\t\t\t// If value is a function, invoke it and return its value\r\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n\t\t};\r\n\r\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n\tif ( traditional === undefined ) {\r\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} )\r\n\t\t.filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} )\r\n\t\t.map( function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\treturn val == null ?\r\n\t\t\t\tnull :\r\n\t\t\t\tjQuery.isArray( val ) ?\r\n\t\t\t\t\tjQuery.map( val, function( val ) {\r\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE9\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t} ).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\tcontext = context || document;\r\n\r\n\tvar parsed = rsingleTag.exec( data ),\r\n\t\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n// Keep a copy of the old load method\r\nvar _load = jQuery.fn.load;\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tif ( typeof url !== \"string\" && _load ) {\r\n\t\treturn _load.apply( this, arguments );\r\n\t}\r\n\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = jQuery.trim( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( jQuery.isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.expr.filters.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Gets a window from an element\r\n */\r\nfunction getWindow( elem ) {\r\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\r\n}\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\toffset: function( options ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar docElem, win,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tbox = { top: 0, left: 0 },\r\n\t\t\tdoc = elem && elem.ownerDocument;\r\n\r\n\t\tif ( !doc ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdocElem = doc.documentElement;\r\n\r\n\t\t// Make sure it's not a disconnected DOM node\r\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t\tbox = elem.getBoundingClientRect();\r\n\t\twin = getWindow( doc );\r\n\t\treturn {\r\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\r\n\t\t};\r\n\t},\r\n\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\r\n\t\t// because it is its only offset parent\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Get *real* offsetParent\r\n\t\t\toffsetParent = this.offsetParent();\r\n\r\n\t\t\t// Get correct offsets\r\n\t\t\toffset = this.offset();\r\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\r\n\t\t\t\tparentOffset = offsetParent.offset();\r\n\t\t\t}\r\n\r\n\t\t\t// Add offsetParent borders\r\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\r\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\t\t\tvar win = getWindow( elem );\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari<7-8+, Chrome<37-44+\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\r\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\r\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t},\r\n\tsize: function() {\r\n\t\treturn this.length;\r\n\t}\r\n} );\r\n\r\njQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( typeof define === \"function\" && define.amd ) {\r\n\tdefine( \"jquery\", [], function() {\r\n\t\treturn jQuery;\r\n\t} );\r\n}\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (#13566)\r\nif ( !noGlobal ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\nreturn jQuery;\r\n}));\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nvar Detector = {\n\n\tcanvas: !! window.CanvasRenderingContext2D,\n\twebgl: ( function () { try { return !! window.WebGLRenderingContext && !! document.createElement( 'canvas' ).getContext( 'experimental-webgl' ); } catch( e ) { return false; } } )(),\n\tworkers: !! window.Worker,\n\tfileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n\tgetWebGLErrorMessage: function () {\n\n\t\tvar element = document.createElement( 'div' );\n\t\telement.id = 'webgl-error-message';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( ! this.webgl ) {\n\n\t\t\telement.innerHTML = window.WebGLRenderingContext ? [\n\t\t\t\t'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' ) : [\n\t\t\t\t'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' );\n\n\t\t}\n\n\t\treturn element;\n\n\t},\n\n\taddGetWebGLMessage: function ( parameters ) {\n\n\t\tvar parent, id, element;\n\n\t\tparameters = parameters || {};\n\n\t\tparent = parameters.parent !== undefined ? parameters.parent : document.body;\n\t\tid = parameters.id !== undefined ? parameters.id : 'oldie';\n\n\t\telement = Detector.getWebGLErrorMessage();\n\t\telement.id = id;\n\n\t\tparent.appendChild( element );\n\n\t}\n\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE9-11.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = [], i = 0;\n\t\t\t\tvar length = listenerArray.length;\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '82';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar BlendingMode = {\n\t\tNoBlending: NoBlending,\n\t\tNormalBlending: NormalBlending,\n\t\tAdditiveBlending: AdditiveBlending,\n\t\tSubtractiveBlending: SubtractiveBlending,\n\t\tMultiplyBlending: MultiplyBlending,\n\t\tCustomBlending: CustomBlending\n\t};\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar TextureMapping = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar TextureWrapping = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar TextureFilter = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tVector2.prototype = {\n\n\t\tconstructor: Vector2,\n\n\t\tisVector2: true,\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t},\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t},\n\n\t\t//\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector2();\n\t\t\t\t\tmax = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.sourceFile = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping )  return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype );\n\n\tvar count = 0;\n\tfunction TextureIdCount() { return count++; }\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tVector4.prototype = {\n\n\t\tconstructor: Vector4,\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t\tthis.w = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\t\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tQuaternion.prototype = {\n\n\t\tconstructor: Quaternion,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget w () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset w ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\t\tvar order = euler.order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1, r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function(\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tVector3.prototype = {\n\n\t\tconstructor: Vector3,\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyProjection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 projection matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector3();\n\t\t\t\t\tmax = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1;\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\tif ( typeof m === 'number' ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\t\tvar temp = m;\n\t\t\t\tm = index;\n\t\t\t\tindex = temp;\n\n\t\t\t}\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix4.prototype = {\n\n\t\tconstructor: Matrix4,\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tthis.elements.set( m.elements );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x, y, z;\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tif ( x === undefined ) {\n\n\t\t\t\t\tx = new Vector3();\n\t\t\t\t\ty = new Vector3();\n\t\t\t\t\tz = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z += 0.0001;\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\ty.crossVectors( z, x );\n\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyToArray: function ( a, b, r ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tthis.multiplyMatrices( a, b );\n\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector, matrix;\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t\tmatrix = new Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) {\n\n\t\t\t\t\tsx = - sx;\n\n\t\t\t\t}\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\t\tvar ymax = near * Math.tan( _Math.DEG2RAD * fov * 0.5 );\n\t\t\tvar ymin = - ymax;\n\t\t\tvar xmin = ymin * aspect;\n\t\t\tvar xmax = ymax * aspect;\n\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor (; ;) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined ||\n\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map,\n\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n\tvar normal_vert = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_flip: normal_flip,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tColor.prototype = {\n\n\t\tconstructor: Color,\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( (value && value.isColor) ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t};\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\tspecularMap: { value: null },\n\t\t\talphaMap: { value: null },\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular : { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0 },\n\t\t\t\t\tenvMapIntensity : { value: 1 }, // temporary\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\n\t\t\t\t{\n\t\t\t\t\tscale    : { value: 1 },\n\t\t\t\t\tdashSize : { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: {\n\n\t\t\t\topacity : { value: 1.0 }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t\ttFlip: { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: {\n\n\t\t\t\tlightPos: { value: new Vector3() }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\tShaderLib.standard.uniforms,\n\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tBox2.prototype = {\n\n\t\tconstructor: Box2,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlarePlugin( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.setDepthWrite( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.setDepthWrite( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpritePlugin( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( (fog && fog.isFog) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( (fog && fog.isFogExp2) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis._needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tget needsUpdate() {\n\n\t\t\treturn this._needsUpdate;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.update();\n\t\t\tthis._needsUpdate = value;\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( (currentValue && currentValue.isColor) ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\n\t\t\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\t\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( (this.normalMap && this.normalMap.isTexture) ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.envMap && this.envMap.isTexture) ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tdata.skinning = this.skinning;\n\t\t\tdata.morphTargets = this.morphTargets;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t};\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype );\n\n\tvar count$1 = 0;\n\tfunction MaterialIdCount() { return count$1++; }\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tBox3.prototype = {\n\n\t\tconstructor: Box3,\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tthis.makeEmpty();\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar array, offset, stride;\n\n\t\t\t\t\t\t\t\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.data.array;\n\t\t\t\t\t\t\t\t\toffset = attribute.offset;\n\t\t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.array;\n\t\t\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t\t\tstride = 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromArray( array, i );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint;\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new Vector3();\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tSphere.prototype = {\n\n\t\tconstructor: Sphere,\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix3.prototype = {\n\n\t\tconstructor: Matrix3,\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( (matrix && matrix.isMatrix4) ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tPlane.prototype = {\n\n\t\tconstructor: Plane,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tFrustum.prototype = {\n\n\t\tconstructor: Frustum,\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_renderList = [],\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.setDepthTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount, isPointLight;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( (light && light.isPointLight) ) {\n\n\t\t\t\t\tfaceCount = 6;\n\t\t\t\t\tisPointLight = true;\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\t\t\t\t\tisPointLight = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( (shadow && shadow.isSpotLightShadow) ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\t_renderList.length = 0;\n\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t\t// render shadow map\n\t\t\t\t\t// render regular objects\n\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( (material && material.isMultiMaterial) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor(),\n\t\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tRay.prototype = {\n\n\t\tconstructor: Ray,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.sub( this.origin );\n\t\t\tthis.direction.normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tEuler.prototype = {\n\n\t\tconstructor: Euler,\n\n\t\tisEuler: true,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget order () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset order ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1;\n\n\t}\n\n\tLayers.prototype = {\n\n\t\tconstructor: Layers,\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t\tthis.onBeforeRender = function(){}; \n\t\tthis.onAfterRender = function(){};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( (object && object.isObject3D) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = this.material.uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar count$2 = 0;\n\tfunction Object3DIdCount() { return count$2++; }\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tLine3.prototype = {\n\n\t\tconstructor: Line3,\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tTriangle.normal = function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}();\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tTriangle.barycoordFromPoint = function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}();\n\n\tTriangle.containsPoint = function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}();\n\n\tTriangle.prototype = {\n\n\t\tconstructor: Triangle,\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tif ( plane === undefined ) {\n\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tedgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\t\t\tprojectedPoint = new Vector3();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = (color && color.isColor) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tFace3.prototype = {\n\n\t\tconstructor: Face3,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tBufferAttribute.prototype = {\n\n\t\tconstructor: BufferAttribute,\n\n\t\tisBufferAttribute: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int16Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint16Array( array ), itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int32Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float64Array( array ), itemSize );\n\n\t}\n\n\t// Deprecated\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( (geometry && geometry.isGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( (mesh && mesh.isMesh) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\tvar dupIndex = - 1;\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tdupIndex = n;\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [ [] ];\n\t\t\tthis.colors = [];\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar count$3 = 0;\n\tfunction GeometryIdCount() { return count$3++; }\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'DirectGeometry';\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\n\t\tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tthis.index = index;\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isPoints) || (object && object.isLine) ) {\n\n\t\t\t\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( (object && object.isMesh) ) {\n\n\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isMesh) ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar positions = this.attributes.position;\n\n\t\t\t\tif ( positions ) {\n\n\t\t\t\t\tvar array = positions.array;\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromArray( array );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvector.fromArray( array, i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC,\n\n\t\t\t\tpA = new Vector3(),\n\t\t\t\tpB = new Vector3(),\n\t\t\t\tpC = new Vector3(),\n\n\t\t\t\tcb = new Vector3(),\n\t\t\t\tab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( (geometry && geometry.isBufferGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\t\tx = normals[ i ];\n\t\t\t\ty = normals[ i + 1 ];\n\t\t\t\tz = normals[ i + 2 ];\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals[ i ] *= n;\n\t\t\t\tnormals[ i + 1 ] *= n;\n\t\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar morphTargets = this.geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar uvs, intersection;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isFaceMaterial = (material && material.isMultiMaterial);\n\t\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\t\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\t\tvar numberOfVertices = 0;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount( w, h, d ) {\n\n\t\t\tvar vertices = 0;\n\n\t\t\t// calculate the amount of vertices for each side (plane)\n\t\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\t\treturn vertices;\n\n\t\t}\n\n\t\tfunction calculateIndexCount( w, h, d ) {\n\n\t\t\tvar index = 0;\n\n\t\t\t// calculate the amount of squares for each side\n\t\t\tindex += w * h * 2; // xy\n\t\t\tindex += w * d * 2; // xz\n\t\t\tindex += d * h * 2; // zy\n\n\t\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t\t}\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth\t= width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// uvs\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\t\tuvBufferOffset += 2;\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tindexBufferOffset += 6;\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\t\tvar offset = 0;\n\t\tvar offset2 = 0;\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices[ offset ] = x;\n\t\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\toffset += 3;\n\t\t\t\toffset2 += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices[ offset ] = a;\n\t\t\t\tindices[ offset + 1 ] = b;\n\t\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\t\tindices[ offset + 3 ] = b;\n\t\t\t\tindices[ offset + 4 ] = c;\n\t\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\t\toffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.create( Object3D.prototype );\n\tCamera.prototype.constructor = Camera;\n\n\tCamera.prototype.isCamera = true;\n\n\tCamera.prototype.getWorldDirection = function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.lookAt = function () {\n\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\tCamera.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, size;\n\n\t\tfunction setIndex( index ) {\n\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t\tsize = 4;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\tsize = 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * size );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetMode: setMode,\n\t\t\tsetIndex: setIndex,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tvar count = 0;\n\n\t\t\tif ( (position && position.isInterleavedBufferAttribute) ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\tcount = position.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetMode: setMode,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLLights() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, code, material, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\t\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\n\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( (map && map.isTexture) ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( (map && map.isWebGLRenderTarget) ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = allocateBones( object );\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: (fog && fog.isFogExp2),\n\n\t\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, code, material, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, properties, info ) {\n\n\t\tvar geometries = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe ) {\n\n\t\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( geometry );\n\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( buffergeometry );\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction deleteAttribute( attribute ) {\n\n\t\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\t\tif ( buffer !== undefined ) {\n\n\t\t\t\tgl.deleteBuffer( buffer );\n\t\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction deleteAttributes( attributes ) {\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tproperties.delete( attribute.data );\n\n\t\t\t} else {\n\n\t\t\t\tproperties.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\t\t\treturn geometries[ geometry.id ];\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\t\tvar buffergeometry;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t\t}\n\n\t\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\t\tinfo.memory.geometries ++;\n\n\t\t\t\treturn buffergeometry;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, properties, info ) {\n\n\t\tvar geometries = new WebGLGeometries( gl, properties, info );\n\n\t\t//\n\n\t\tfunction update( object ) {\n\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\t\tvar geometry = geometries.get( object );\n\n\t\t\tif ( object.geometry.isGeometry ) {\n\n\t\t\t\tgeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\t\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\t\tvar attributeProperties = properties.get( data );\n\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tif ( data.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, data.array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( data.updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t\t}\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\t\treturn property.wireframe;\n\n\t\t\t}\n\n\t\t\tvar indices = [];\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar position = attributes.position;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar edges = {};\n\t\t\t\tvar array = index.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\tproperty.wireframe = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetAttributeBuffer: getAttributeBuffer,\n\t\t\tgetWireframeAttribute: getWireframeAttribute,\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n\t\tvar _infoMemory = info.memory;\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\t_infoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\t_infoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.delete( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.delete( renderTarget.texture );\n\t\t\tproperties.delete( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = (texture && texture.isCompressedTexture);\n\t\t\t\t\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( (texture && texture.isDepthTexture) ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( (texture && texture.isDataTexture) ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( (texture && texture.isCompressedTexture) ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== LinearFilter ) {\n\n\t\t\t\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar uuid = object.uuid;\n\t\t\t\tvar map = properties[ uuid ];\n\n\t\t\t\tif ( map === undefined ) {\n\n\t\t\t\t\tmap = {};\n\t\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\n\t\t\t},\n\n\t\t\tdelete: function ( object ) {\n\n\t\t\t\tdelete properties[ object.uuid ];\n\n\t\t\t},\n\n\t\t\tclear: function () {\n\n\t\t\t\tproperties = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4();\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a ) {\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail  = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tfunction init() {\n\n\t\t\tclearColor( 0, 0, 0, 1 );\n\t\t\tclearDepth( 1 );\n\t\t\tclearStencil( 0 );\n\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tsetDepthFunc( LessEqualDepth );\n\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction setColorWrite( colorWrite ) {\n\n\t\t\tcolorBuffer.setMask( colorWrite );\n\n\t\t}\n\n\t\tfunction setDepthTest( depthTest ) {\n\n\t\t\tdepthBuffer.setTest( depthTest );\n\n\t\t}\n\n\t\tfunction setDepthWrite( depthWrite ) {\n\n\t\t\tdepthBuffer.setMask( depthWrite );\n\n\t\t}\n\n\t\tfunction setDepthFunc( depthFunc ) {\n\n\t\t\tdepthBuffer.setFunc( depthFunc );\n\n\t\t}\n\n\t\tfunction setStencilTest( stencilTest ) {\n\n\t\t\tstencilBuffer.setTest( stencilTest );\n\n\t\t}\n\n\t\tfunction setStencilWrite( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( stencilWrite );\n\n\t\t}\n\n\t\tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t}\n\n\t\tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tgl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getScissorTest() {\n\n\t\t\treturn currentScissorTest;\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction clearColor( r, g, b, a ) {\n\n\t\t\tcolorBuffer.setClear( r, g, b, a );\n\n\t\t}\n\n\t\tfunction clearDepth( depth ) {\n\n\t\t\tdepthBuffer.setClear( depth );\n\n\t\t}\n\n\t\tfunction clearStencil( stencil ) {\n\n\t\t\tstencilBuffer.setClear( stencil );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinit: init,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tsetBlending: setBlending,\n\n\t\t\tsetColorWrite: setColorWrite,\n\t\t\tsetDepthTest: setDepthTest,\n\t\t\tsetDepthWrite: setDepthWrite,\n\t\t\tsetDepthFunc: setDepthFunc,\n\t\t\tsetStencilTest: setStencilTest,\n\t\t\tsetStencilWrite: setStencilWrite,\n\t\t\tsetStencilFunc: setStencilFunc,\n\t\t\tsetStencilOp: setStencilOp,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tgetScissorTest: getScissorTest,\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tclearColor: clearColor,\n\t\t\tclearDepth: clearDepth,\n\t\t\tclearStencil: clearStencil,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar opaqueObjects = [];\n\t\tvar opaqueObjectsLastIndex = - 1;\n\t\tvar transparentObjects = [];\n\t\tvar transparentObjectsLastIndex = - 1;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\t\t_currentCamera = null,\n\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_clearColor = new Color( 0x000000 ),\n\t\t_clearAlpha = 0,\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t_sphere = new Sphere(),\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoRender = {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: {\n\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\n\t\t\t},\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar attributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\t\tvar properties = new WebGLProperties();\n\t\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n\t\tvar objects = new WebGLObjects( _gl, properties, this.info );\n\t\tvar programCache = new WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new WebGLLights();\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tvar backgroundCamera2 = new PerspectiveCamera();\n\t\tvar backgroundPlaneMesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t);\n\t\tvar backgroundBoxShader = ShaderLib[ 'cube' ];\n\t\tvar backgroundBoxMesh = new Mesh(\n\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\tnew ShaderMaterial( {\n\t\t\t\tuniforms: backgroundBoxShader.uniforms,\n\t\t\t\tvertexShader: backgroundBoxShader.vertexShader,\n\t\t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tfog: false\n\t\t\t} )\n\t\t);\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction glClearColor( r, g, b, a ) {\n\n\t\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t}\n\n\t\t\tstate.clearColor( r, g, b, a );\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.state = state;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t\t_clearAlpha = alpha;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function() {\n\n\t\t\ttransparentObjects = [];\n\t\t\ttransparentObjectsLastIndex = -1;\n\t\t\topaqueObjects = [];\n\t\t\topaqueObjectsLastIndex = -1;\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.delete( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t     ! material.isMeshStandardMaterial &&\n\t\t\t\t       material.shading === FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tsetMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar renderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( index );\n\n\t\t\t} else {\n\n\t\t\t\trenderer = bufferRenderer;\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"Unsupported data buffer format: Float64Array\" );\n\n\t\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Sorting\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n\t\t\t\treturn a.material.program.id - b.material.program.id;\n\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\t\treturn a.material.id - b.material.id;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn a.z - b.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reversePainterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\n\t\t\topaqueObjectsLastIndex = - 1;\n\t\t\ttransparentObjectsLastIndex = - 1;\n\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tprojectObject( scene, camera );\n\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tglClearColor( background.r, background.g, background.b, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n\t\t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( backgroundBoxMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tbackgroundPlaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( backgroundPlaneMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\trenderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\trenderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tstate.setBlending( NoBlending );\n\t\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\trenderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.setDepthTest( true );\n\t\t\tstate.setDepthWrite( true );\n\t\t\tstate.setColorWrite( true );\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparentObjects;\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaqueObjects;\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem !== undefined ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.z = _vector3.z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tz: _vector3.z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\t\tif ( material.isMultiMaterial ) {\n\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tsetMaterial( material );\n\n\t\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t     ! material.isRawShaderMaterial ||\n\t\t\t       material.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? state.disable( _gl.CULL_FACE )\n\t\t\t\t: state.enable( _gl.CULL_FACE );\n\n\t\t\tstate.setFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: state.setBlending( NoBlending );\n\n\t\t\tstate.setDepthFunc( material.depthFunc );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\t\t\tstate.setColorWrite( material.colorWrite );\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes || \n\t \t\t\t\t  materialProperties.numIntersection  !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isShaderMaterial ||\n\t\t\t\t     material.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights( lights, camera ) {\n\n\t\t\tvar l, ll, light,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getCurrentRenderTarget = function() {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return _gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\t p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.create( Object3D.prototype );\n\n\tScene.prototype.constructor = Scene;\n\n\tScene.prototype.copy = function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t};\n\n\tScene.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\t\tpoint: this.position,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps  = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses, useVertexTexture ) {\n\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\t\tthis.identityMatrix = new Matrix4();\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\n\t\t// create a bone texture or an array of floats\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tthis.boneTextureWidth = size;\n\t\t\tthis.boneTextureHeight = size;\n\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\t\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t\t}\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone( skin ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t\tthis.skin = skin;\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.skin = source.skin;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material, useVertexTexture ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = \"attached\";\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\t// init bones\n\n\t\t// TODO: remove bone creation as there is no reason (other than\n\t\t// convenience) for THREE.SkinnedMesh to do this.\n\n\t\tvar bones = [];\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\tvar bone, gbone;\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tbone = new Bone( this );\n\t\t\t\tbones.push( bone );\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.normalizeSkinWeights();\n\n\t\tthis.updateMatrixWorld( true );\n\t\tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n\t}\n\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tbind: function( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tif ( (this.geometry && this.geometry.isGeometry) ) {\n\n\t\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function() {\n\n\t\t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t\t}\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.type = type !== undefined ? type : UnsignedShortType;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar numEdges = 0;\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// Indexed BufferGeometry\n\n\t\t\t\tvar indices = geometry.index.array;\n\t\t\t\tvar vertices = geometry.attributes.position;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar numEdges = 0;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\t// allocate maximal size\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\t\tvar numEdges = vertices.length / 3;\n\t\t\t\tvar numTris = numEdges / 3;\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// generate vertices and uvs\n\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\tvar i, j, p;\n\t\tvar u, v;\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tv = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tu = j / slices;\n\n\t\t\t\tp = func( u, v );\n\t\t\t\tvertices.push( p.x, p.y, p.z );\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tvar indices = [];\n\t\tvar a, b, c, d;\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\ta = i * sliceCount + j;\n\t\t\t\tb = i * sliceCount + j + 1;\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', Float32Attribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvBuffer, 2 ) );\n\t\tthis.normalizeNormals();\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0 ; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols ; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth  ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] =  uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction OctahedronBufferGeometry( radius,detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t */\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t *\n\t */\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t */\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * see: http://www.blackpawn.com/texts/pqtorus/\n\t */\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar i, j, index = 0, indexOffset = 0;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t */\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\n\t\t// helper variables\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t\t// this vector is used to calculate the normal\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t\t// uv\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t\t// update offsets\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offset\n\t\t\t\tindexBufferOffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n\t */\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\t// Bezier Curves formulas obtained from\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t\t// Quad Bezier Functions\n\n\t\tb2: ( function () {\n\n\t\t\tfunction b2p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p1( t, p ) {\n\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p2( t, p ) {\n\n\t\t\t\treturn t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b2( t, p0, p1, p2 ) {\n\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\t// Cubic Bezier Functions\n\n\t\tb3: ( function () {\n\n\t\t\tfunction b3p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p1( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * k * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p2( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * t * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p3( t, p ) {\n\n\t\t\t\treturn t * t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\t\tshapes = [];\n\t\t\treturn;\n\n\t\t}\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapesOffset = this.vertices.length;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn\tnew Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tscope.vertices.push( new Vector3( x, y, z ) );\n\n\t\t}\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\n\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\t\t\td += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\n\t\t\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\n\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a.x, a.y ),\n\t\t\t\tnew Vector2( b.x, b.y ),\n\t\t\t\tnew Vector2( c.x, c.y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\t\t\tvar d = vertices[ indexD ];\n\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.x, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.x, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.x, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.x, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.y, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.y, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.y, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.y, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( (font && font.isFont) === false ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n\tTextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry\n\t */\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\t\tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\tvar index = 0, vertices = [], normal = new Vector3();\n\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\t\tvar u = x / widthSegments;\n\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\tverticesRow.push( index );\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvertices.push( verticesRow );\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', positions );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// some helper variables\n\t\tvar index = 0, indexOffset = 0, segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\t// values are generate from the inside of the ring to the outside\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t */\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t // points - to create a closed torus, one must use a set of points\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\n\t // segments - the number of circumference segments to create\n\t // phiStart - the starting radian\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\n\t //    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\n\t\tvar indexCount = segments * points.length * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar index = 0, indexOffset = 0, base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t} // next row\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t */\n\n\t// points - to create a closed torus, one must use a set of points\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\n\t// segments - the number of circumference segments to create\n\t// phiStart - the starting radian\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\n\t//    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ShapeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t/**\n\t * Add an array of shapes to THREE.ShapeGeometry.\n\t */\n\tShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tthis.addShape( shapes[ i ], options );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n\t */\n\tShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tif ( options === undefined ) options = {};\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar material = options.material;\n\t\tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t\t//\n\n\t\tvar i, l, hole;\n\n\t\tvar shapesOffset = this.vertices.length;\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\t\thole = holes[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false;\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t// Vertices\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\t\t\tvertices = vertices.concat( hole );\n\n\t\t}\n\n\t\t//\n\n\t\tvar vert, vlen = vertices.length;\n\t\tvar face, flen = faces.length;\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = vertices[ i ];\n\n\t\t\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\n\n\t\t}\n\n\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + shapesOffset;\n\t\t\tvar b = face[ 1 ] + shapesOffset;\n\t\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\t\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tvar geometry2;\n\n\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar vertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = [];\n\n\t\tfor ( var key in hash ) {\n\n\t\t\tvar h = hash[ key ];\n\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// used to calculate buffer length\n\n\t\tvar nbCap = 0;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t\t}\n\n\t\tvar vertexCount = calculateVertexCount();\n\t\tvar indexCount = calculateIndexCount();\n\n\t\t// buffers\n\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\n\t\tvar index = 0,\n\t\t    indexOffset = 0,\n\t\t    indexArray = [],\n\t\t    halfHeight = height / 2;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount() {\n\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction calculateIndexCount() {\n\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\t\t\t\t\tindexRow.push( index );\n\n\t\t\t\t\t// increase index\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// update counters\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = 0.5;\n\t\t\t\tuv.y = 0.5;\n\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t/**\n\t * @author: abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tvar vertices = segments + 2;\n\n\t\tvar positions = new Float32Array( vertices * 3 );\n\t\tvar normals = new Float32Array( vertices * 3 );\n\t\tvar uvs = new Float32Array( vertices * 2 );\n\n\t\t// center data is already zero, but need to set a few extras\n\t\tnormals[ 2 ] = 1.0;\n\t\tuvs[ 0 ] = 0.5;\n\t\tuvs[ 1 ] = 0.5;\n\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\t/**\n\t * @author hughes\n\t */\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n\t */\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry,\n\t\tBoxGeometry: BoxGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ShadowMaterial() {\n\n\t\tShaderMaterial.call( this, {\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib[ \"lights\" ],\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'MultiMaterial';\n\n\t\tthis.materials = materials instanceof Array ? materials : [];\n\n\t\tthis.visible = true;\n\n\t}\n\n\tMultiMaterial.prototype = {\n\n\t\tconstructor: MultiMaterial,\n\n\t\tisMultiMaterial: true,\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.2,\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\ttype: this.type,\n\t\t\t\tmaterials: []\n\t\t\t};\n\n\t\t\tvar materials = this.materials;\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\t\tdelete material.metadata;\n\n\t\t\t\toutput.materials.push( material );\n\n\t\t\t}\n\n\t\t\toutput.visible = this.visible;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar material = new this.constructor();\n\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tmaterial.visible = this.visible;\n\n\t\t\treturn material;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this, parameters );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( Material.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMultiMaterial: MultiMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction XHRLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( XHRLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[1];\n\t\t\t\tvar isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tvar data = dataUriRegexResult[3];\n\n\t\t\t\tdata = window.decodeURIComponent(data);\n\n\t\t\t\tif( isBase64 ) {\n\t\t\t\t\tdata = window.atob(data);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { \"type\" : mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tvar DataTextureLoader = BinaryTextureLoader;\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( BinaryTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\t\timage.onload = function () {\n\n\t\t\t\timage.onload = null;\n\n\t\t\t\tURL.revokeObjectURL( image.src );\n\n\t\t\t\tif ( onLoad ) onLoad( image );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\t\t\timage.onerror = onError;\n\n\t\t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\timage.src = url;\n\n\t\t\t} else {\n\n\t\t\t\tvar loader = new XHRLoader();\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'blob' );\n\t\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\t\tloader.load( url, function ( blob ) {\n\n\t\t\t\t\timage.src = URL.createObjectURL( blob );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || 500;\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( light ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true,\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tInterpolant.prototype = {\n\n\t\tconstructor: Interpolant,\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t//- See http://jsperf.com/comparison-to-undefined/3\n\t//- slower code:\n\t//-\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t//- slower code:\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t};\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_,\n\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function( timeOffset ) {\n\n\t\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function( timeScale ) {\n\n\t\t\tif( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function() {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( \"track is empty\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function() {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number',\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tAnimationClip.prototype = {\n\n\t\tconstructor: AnimationClip,\n\n\t\tresetDuration: function() {\n\n\t\t\tvar tracks = this.tracks,\n\t\t\t\tduration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max(\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\n\t\ttoJSON: function( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, -1, tracks );\n\n\t\t},\n\n\t\tfindByName: function( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function(\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON(\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets in a way exactly compatible\n\t\t\t\t// with AnimationHandler.init( animation )\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\t// MultiMaterial\n\n\t\t\tif ( json.materials !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tvar TYPED_ARRAYS = {\n\t\t\t\t'Int8Array': Int8Array,\n\t\t\t\t'Uint8Array': Uint8Array,\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t\t'Int16Array': Int16Array,\n\t\t\t\t'Uint16Array': Uint16Array,\n\t\t\t\t'Int32Array': Int32Array,\n\t\t\t\t'Uint32Array': Uint32Array,\n\t\t\t\t'Float32Array': Float32Array,\n\t\t\t\t'Float64Array': Float64Array\n\t\t\t};\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.prototype = {\n\n\t\tconstructor: Loader,\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar color, textureLoader, materialLoader;\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\tif ( color === undefined ) color = new Color();\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {}\n\n\tCurve.prototype = {\n\n\t\tconstructor: Curve,\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\t\tif ( this.cacheArcLengths\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t//var time = Date.now();\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\tvar t = i / ( il - 1 );\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t// TODO: Transformation for Curves?\n\n\t/**************************************************************\n\t *\t3D Curves\n\t **************************************************************/\n\n\t// A Factory method for creating new curve subclasses\n\n\tCurve.create = function ( constructor, getPointFunc ) {\n\n\t\tconstructor.prototype = Object.create( Curve.prototype );\n\t\tconstructor.prototype.constructor = constructor;\n\t\tconstructor.prototype.getPoint = getPointFunc;\n\n\t\treturn constructor;\n\n\t};\n\n\t/**************************************************************\n\t *\tLine\n\t **************************************************************/\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**************************************************************\n\t *\tEllipse curve\n\t **************************************************************/\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar CurveUtils = {\n\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t\t},\n\n\t\t// Puay Bing, thanks for helping with this derivative!\n\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t\t3 * t * t * p3;\n\n\t\t},\n\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\t// To check if my formulas are correct\n\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\t\treturn h00 + h10 + h01 + h11;\n\n\t\t},\n\n\t\t// Catmull-Rom\n\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t/**************************************************************\n\t *\tSpline curve\n\t **************************************************************/\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\treturn new Vector2(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t\t);\n\n\t};\n\n\t/**************************************************************\n\t *\tCubic Bezier curve\n\t **************************************************************/\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b3 = ShapeUtils.b3;\n\n\t\treturn new Vector2(\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t);\n\n\t};\n\n\tCubicBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentCubicBezier = CurveUtils.tangentCubicBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t).normalize();\n\n\t};\n\n\t/**************************************************************\n\t *\tQuadratic Bezier curve\n\t **************************************************************/\n\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b2 = ShapeUtils.b2;\n\n\t\treturn new Vector2(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t);\n\n\t};\n\n\n\tQuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentQuadraticBezier = CurveUtils.tangentQuadraticBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t).normalize();\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\n\t// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\tfunction ShapePath() {\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tShapePath.prototype = {\n\t\tmoveTo: function ( x, y ) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo( x, y );\n\t\t},\n\t\tlineTo: function ( x, y ) {\n\t\t\tthis.currentPath.lineTo( x, y );\n\t\t},\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\t},\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\t},\n\t\tsplineThru: function ( pts ) {\n\t\t\tthis.currentPath.splineThru( pts );\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar offset = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\t\toffset += ret.offset;\n\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [], b2 = ShapeUtils.b2, b3 = ShapeUtils.b3;\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tfunction getAudioContext() {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t}\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = getAudioContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\tvar eyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = getAudioContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\t\tthis.source = this.context.createBufferSource();\n\t\tthis.source.onended = this.onEnded.bind( this );\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.source.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.source.buffer;\n\t\t\tsource.loop = this.source.loop;\n\t\t\tsource.onended = this.source.onended;\n\t\t\tsource.start( 0, this.startTime );\n\t\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.source.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.loop = value;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tPropertyMixer.prototype = {\n\n\t\tconstructor: PropertyMixer,\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function() {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function() {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode(\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tPropertyBinding.prototype = {\n\n\t\tconstructor: PropertyBinding,\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function() {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t \t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t};\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function() {},\n\t\t_setValue_unavailable: function() {},\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t]\n\n\t} );\n\n\tPropertyBinding.Composite =\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t};\n\n\tPropertyBinding.Composite.prototype = {\n\n\t\tconstructor: PropertyBinding.Composite,\n\n\t\tgetValue: function( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.create = function( root, path, parsedPath ) {\n\n\t\tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.parseTrackName = function( trackName ) {\n\n\t\t// matches strings in the form of:\n\t\t//    nodeName.property\n\t\t//    nodeName.property[accessor]\n\t\t//    nodeName.material.property[accessor]\n\t\t//    uuid.property[accessor]\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t\t//    parentName/nodeName.property\n\t\t//    parentName/parentName/nodeName.property[index]\n\t\t//    .bone[Armature.DEF_cog].position\n\t\t//    scene:helium_balloon_model:helium_balloon_model.position\n\t\t// created and tested via https://regex101.com/#javascript\n\n\t\tvar re = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\n\t\tvar matches = re.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ], \t// allowed to be null, specified root node.\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ],\n\t\t\tpropertyIndex: matches[ 6 ]\t// allowed to be null, specifies that the whole property is set.\n\t\t};\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t};\n\n\tPropertyBinding.findNode = function( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tAnimationObjectGroup.prototype = {\n\n\t\tconstructor: AnimationObjectGroup,\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function( path, parsedPath ) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects,\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\t\tnew PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function( path ) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tAnimationAction.prototype = {\n\n\t\tconstructor: AnimationAction,\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the weight stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t\t// called by the mixer\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis.loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function() {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\tif ( action.enabled ) {\n\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function() {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// Implementation details:\n\n\tObject.assign( AnimationMixer.prototype, {\n\n\t\t_bindAction: function( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function() {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tInstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tInstancedBufferGeometry.prototype.addGroup = function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t};\n\n\tInstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\n\tInterleavedBufferAttribute.prototype = {\n\n\t\tconstructor: InterleavedBufferAttribute,\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t},\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tInterleavedBuffer.prototype = {\n\n\t\tconstructor: InterleavedBuffer,\n\n\t\tisInterleavedBuffer: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\n\tInstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tInstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tInstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tRaycaster.prototype = {\n\n\t\tconstructor: Raycaster,\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( (camera && camera.isPerspectiveCamera) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( (camera && camera.isOrthographicCamera) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tClock.prototype = {\n\n\t\tconstructor: Clock,\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( performance || Date ).now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Spline( points ) {\n\n\t\tthis.points = points;\n\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tthis.initFromArray = function ( a ) {\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPoint = function ( k ) {\n\n\t\t\tpoint = ( this.points.length - 1 ) * k;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\t\tpa = this.points[ c[ 0 ] ];\n\t\t\tpb = this.points[ c[ 1 ] ];\n\t\t\tpc = this.points[ c[ 2 ] ];\n\t\t\tpd = this.points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tthis.getControlPointsArray = function () {\n\n\t\t\tvar i, p, l = this.points.length,\n\t\t\t\tcoords = [];\n\n\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\tp = this.points[ i ];\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t\t}\n\n\t\t\treturn coords;\n\n\t\t};\n\n\t\t// approximate length by summing linear segments\n\n\t\tthis.getLength = function ( nSubDivisions ) {\n\n\t\t\tvar i, index, nSamples, position,\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\t\toldPosition = new Vector3(),\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tchunkLengths = [],\n\t\t\t\ttotalLength = 0;\n\n\t\t\t// first point has 0 length\n\n\t\t\tchunkLengths[ 0 ] = 0;\n\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\t\tindex = i / nSamples;\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\ttmpVec.copy( position );\n\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\t\toldPosition.copy( position );\n\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\t\tintPoint = Math.floor( point );\n\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// last point ends with total length\n\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t\t};\n\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\t\tvar i, j,\n\t\t\t\tindex, indexCurrent, indexNext,\n\t\t\t\trealDistance,\n\t\t\t\tsampling, position,\n\t\t\t\tnewpoints = [],\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tsl = this.getLength();\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\t\tposition = this.getPoint( index );\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tthis.points = newpoints;\n\n\t\t};\n\n\t\t// Catmull-Rom\n\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tSpherical.prototype = {\n\n\t\tconstructor: Spherical,\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction MorphBlendMesh( geometry, material ) {\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\t\tvar name = \"__default\";\r\n\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\r\n\t\tvar fps = numFrames / 1;\r\n\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\r\n\t}\r\n\r\n\tMorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\n\tMorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\n\tMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\t\tvar animation = {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\r\n\t\t\tlength: end - start + 1,\r\n\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\r\n\t\t\tactive: false,\r\n\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\r\n\t\t};\r\n\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in frameRanges ) {\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t\t}\r\n\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.weight = weight;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = time;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\t\tvar time = 0;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\ttime = animation.time;\r\n\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\t\tvar duration = - 1;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tduration = animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\treturn duration;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.active = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\t\tif ( ! animation.active ) continue;\r\n\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction SpotLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tthis.bones = this.getBoneList( object );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.colors.push( new Color( 0, 0, 1 ) );\n\t\t\t\tgeometry.colors.push( new Color( 0, 1, 0 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.dynamic = true;\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.getBoneList = function( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( (object && object.isBone) ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\n\n\t\tvar boneMatrix = new Matrix4();\n\n\t\tvar j = 0;\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tgeometry.computeBoundingSphere();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction HemisphereLightHelper( light, sphereSize ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.colors = [ new Color(), new Color() ];\n\n\t\tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tgeometry.rotateX( - Math.PI / 2 );\n\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t\t}\n\n\t\tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\n\n\t\tthis.lightSphere = new Mesh( geometry, material );\n\t\tthis.add( this.lightSphere );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightSphere.geometry.dispose();\n\t\tthis.lightSphere.material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tdivisions = divisions || 1;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = ( size * 2 ) / divisions;\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - size, 0, k, size, 0, k );\n\t\t\tvertices.push( k, 0, - size, k, 0, size );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new Line( geometry, material ));\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new Geometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar hexFrustum = 0xffaa00;\n\t\tvar hexCone = 0xff0000;\n\t\tvar hexUp = 0x00aaff;\n\t\tvar hexTarget = 0xffffff;\n\t\tvar hexCross = 0x333333;\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", hexCone );\n\t\taddLine( \"p\", \"n2\", hexCone );\n\t\taddLine( \"p\", \"n3\", hexCone );\n\t\taddLine( \"p\", \"n4\", hexCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", hexUp );\n\t\taddLine( \"u2\", \"u3\", hexUp );\n\t\taddLine( \"u3\", \"u1\", hexUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", hexTarget );\n\t\taddLine( \"p\", \"c\", hexCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\t\tfunction addLine( a, b, hex ) {\n\n\t\t\taddPoint( a, hex );\n\t\t\taddPoint( b, hex );\n\n\t\t}\n\n\t\tfunction addPoint( id, hex ) {\n\n\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\tgeometry.colors.push( new Color( hex ) );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t\t}\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\t// a helper to show the world-axis-aligned bounding box for an object\n\n\tfunction BoundingBoxHelper( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\t\tthis.object = object;\n\n\t\tthis.box = new Box3();\n\n\t\tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n\t}\n\n\tBoundingBoxHelper.prototype = Object.create( Mesh.prototype );\n\tBoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\n\n\tBoundingBoxHelper.prototype.update = function () {\n\n\t\tthis.box.setFromObject( this.object );\n\n\t\tthis.box.getSize( this.scale );\n\n\t\tthis.box.getCenter( this.position );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tthis.update( object );\n\n\t\t}\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( (object && object.isBox3) ) {\n\n\t\t\t\tbox.copy( object );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromObject( object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry = new BufferGeometry();\n\tlineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\tvar coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t] );\n\n\t\tvar colors = new Float32Array( [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t] );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\tvar CatmullRomCurve3 = ( function() {\n\n\t\tvar\n\t\t\ttmp = new Vector3(),\n\t\t\tpx = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\n\t\tfunction CubicPoly() {}\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\t\tthis.c0 = x0;\n\t\t\tthis.c1 = t0;\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t};\n\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\t// initCubicPoly\n\t\t\tthis.init( x1, x2, t1, t2 );\n\n\t\t};\n\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t};\n\n\t\tCubicPoly.prototype.calc = function( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t\t};\n\n\t\t// Subclass Three.js curve\n\t\treturn Curve.create(\n\n\t\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\t\tthis.points = p || [];\n\t\t\t\tthis.closed = false;\n\n\t\t\t},\n\n\t\t\tfunction ( t ) {\n\n\t\t\t\tvar points = this.points,\n\t\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\t\tl = points.length;\n\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\t\tintPoint = Math.floor( point );\n\t\t\t\tweight = point - intPoint;\n\n\t\t\t\tif ( this.closed ) {\n\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\t\tintPoint = l - 2;\n\t\t\t\t\tweight = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate first point\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\t\tp0 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tp1 = points[ intPoint % l ];\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate last point\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\t\tp3 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t\t// safety check for repeated points\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t\t}\n\n\t\t\t\tvar v = new Vector3(\n\t\t\t\t\tpx.calc( weight ),\n\t\t\t\t\tpy.calc( weight ),\n\t\t\t\t\tpz.calc( weight )\n\t\t\t\t);\n\n\t\t\t\treturn v;\n\n\t\t\t}\n\n\t\t);\n\n\t} )();\n\n\t/**************************************************************\n\t *\tClosed Spline 3D curve\n\t **************************************************************/\n\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t/**************************************************************\n\t *\tSpline 3D curve\n\t **************************************************************/\n\n\n\tvar SplineCurve3 = Curve.create(\n\n\t\tfunction ( points /* array of Vector3 */ ) {\n\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\t\treturn new Vector3(\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tCubic Bezier 3D curve\n\t **************************************************************/\n\n\tvar CubicBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2, v3 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b3 = ShapeUtils.b3;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t **************************************************************/\n\n\tvar QuadraticBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b2 = ShapeUtils.b2;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tLine3D\n\t **************************************************************/\n\n\tvar LineCurve3 = Curve.create(\n\n\t\tfunction ( v1, v2 ) {\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\treturn this.v2.clone();\n\n\t\t\t}\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\n\t\t\treturn vector;\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tArc curve\n\t **************************************************************/\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tvar matrixWorldInverse = new Matrix4();\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4 ( a, b, c, d, normal, color, materialIndex ) {\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction PointCloud ( geometry, material ) {\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction ParticleSystem ( geometry, material ) {\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction PointCloudMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleBasicMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleSystemMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction Vertex ( x, y, z ) {\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\t}\n\n\t//\n\n\tfunction EdgesHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\tfunction WireframeHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Line3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\t\textractPosition: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\t\treturn vector.applyProjection( this );\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t},\n\t\trotateAxis: function ( v ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\ttranslate: function ( v ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\t},\n\t\trotateX: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\t},\n\t\trotateY: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\t},\n\t\trotateZ: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\t},\n\t\trotateByAxis: function ( axis, angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.assign( Plane.prototype, {\n\t\tisIntersectionLine: function ( line ) {\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\t}\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\t}\n\t} );\n\n\tObject.assign( Ray.prototype, {\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\t\textrude: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\t\t}\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Object3D.prototype, {\n\t\tgetChildByName: function ( name ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\t\t},\n\t\trenderDepth: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\t\t}\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\t\taddIndex: function ( index ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\t\tif ( indexOffset !== undefined ) {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\t\t},\n\t\tclearDrawCalls: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeTangents: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\t},\n\t\tcomputeOffsets: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tEventDispatcher.prototype = Object.assign( Object.create( {\n\n\t\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\t\tconstructor: EventDispatcher,\n\n\t\tapply: function ( target ) {\n\n\t\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\t\tObject.assign( target, this );\n\n\t\t}\n\n\t} ), EventDispatcher.prototype );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\t\tdynamic: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\t\tsupportsFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\t\t},\n\t\tinitMaterial: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\t},\n\t\taddPrePlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\t},\n\t\taddPostPlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\t},\n\t\tupdateShadowMap: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.cullFace;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Audio.prototype, {\n\t\tload: function ( file ) {\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\t\tscope.setBuffer( buffer );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\tObject.assign( AudioAnalyser.prototype, {\n\t\tgetData: function ( file ) {\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\t}\n\t} );\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector () {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer () {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.TextureIdCount = TextureIdCount;\n\texports.Texture = Texture;\n\texports.MaterialIdCount = MaterialIdCount;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.XHRLoader = XHRLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.getAudioContext = getAudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3DIdCount = Object3DIdCount;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Spline = Spline;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.ColorKeywords = ColorKeywords;\n\texports.Color = Color;\n\texports.MorphBlendMesh = MorphBlendMesh;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.ShapePath = ShapePath;\n\texports.Path = Path;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.CurveUtils = CurveUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.BlendingMode = BlendingMode;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.TextureMapping = TextureMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.TextureWrapping = TextureWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.TextureFilter = TextureFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Sprite;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n\tObject.defineProperty( exports, 'AudioContext', {\n\t\tget: function () {\n\t\t\treturn exports.getAudioContext();\n\t\t}\n\t});\n\n})));\n","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Read Stefan's excellent paper for details on how this code works.\n//\n// Sean McCullough banksean@gmail.com\n//\n// Added 4D noise\n// Joshua Koo zz85nus@gmail.com \n\n/**\n * You can pass in a random number generator object if you like.\n * It is assumed to have a random() method.\n */\nvar SimplexNoise = function(r) {\n\tif (r == undefined) r = Math;\n  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], \n                                 [1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1], \n                                 [0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]; \n\n  this.grad4 = [[0,1,1,1], [0,1,1,-1], [0,1,-1,1], [0,1,-1,-1],\n\t     [0,-1,1,1], [0,-1,1,-1], [0,-1,-1,1], [0,-1,-1,-1],\n\t     [1,0,1,1], [1,0,1,-1], [1,0,-1,1], [1,0,-1,-1],\n\t     [-1,0,1,1], [-1,0,1,-1], [-1,0,-1,1], [-1,0,-1,-1],\n\t     [1,1,0,1], [1,1,0,-1], [1,-1,0,1], [1,-1,0,-1],\n\t     [-1,1,0,1], [-1,1,0,-1], [-1,-1,0,1], [-1,-1,0,-1],\n\t     [1,1,1,0], [1,1,-1,0], [1,-1,1,0], [1,-1,-1,0],\n\t     [-1,1,1,0], [-1,1,-1,0], [-1,-1,1,0], [-1,-1,-1,0]];\n\n  this.p = [];\n  for (var i=0; i<256; i++) {\n\t  this.p[i] = Math.floor(r.random()*256);\n  }\n  // To remove the need for index wrapping, double the permutation table length \n  this.perm = []; \n  for(var i=0; i<512; i++) {\n\t\tthis.perm[i]=this.p[i & 255];\n\t} \n\n  // A lookup table to traverse the simplex around a given point in 4D. \n  // Details can be found where this table is used, in the 4D noise method. \n  this.simplex = [ \n    [0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0], \n    [0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0], \n    [1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0], \n    [2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]; \n};\n\nSimplexNoise.prototype.dot = function(g, x, y) { \n\treturn g[0]*x + g[1]*y;\n};\n\nSimplexNoise.prototype.dot3 = function(g, x, y, z) {\n  return g[0]*x + g[1]*y + g[2]*z; \n}\n\nSimplexNoise.prototype.dot4 = function(g, x, y, z, w) {\n  return g[0]*x + g[1]*y + g[2]*z + g[3]*w;\n};\n\nSimplexNoise.prototype.noise = function(xin, yin) { \n  var n0, n1, n2; // Noise contributions from the three corners \n  // Skew the input space to determine which simplex cell we're in \n  var F2 = 0.5*(Math.sqrt(3.0)-1.0); \n  var s = (xin+yin)*F2; // Hairy factor for 2D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var G2 = (3.0-Math.sqrt(3.0))/6.0; \n  var t = (i+j)*G2; \n  var X0 = i-t; // Unskew the cell origin back to (x,y) space \n  var Y0 = j-t; \n  var x0 = xin-X0; // The x,y distances from the cell origin \n  var y0 = yin-Y0; \n  // For the 2D case, the simplex shape is an equilateral triangle. \n  // Determine which simplex we are in. \n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords \n  if(x0>y0) {i1=1; j1=0;} // lower triangle, XY order: (0,0)->(1,0)->(1,1) \n  else {i1=0; j1=1;}      // upper triangle, YX order: (0,0)->(0,1)->(1,1) \n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and \n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where \n  // c = (3-sqrt(3))/6 \n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords \n  var y1 = y0 - j1 + G2; \n  var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords \n  var y2 = y0 - 1.0 + 2.0 * G2; \n  // Work out the hashed gradient indices of the three simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var gi0 = this.perm[ii+this.perm[jj]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1]] % 12; \n  var gi2 = this.perm[ii+1+this.perm[jj+1]] % 12; \n  // Calculate the contribution from the three corners \n  var t0 = 0.5 - x0*x0-y0*y0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);  // (x,y) of grad3 used for 2D gradient \n  } \n  var t1 = 0.5 - x1*x1-y1*y1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1); \n  }\n  var t2 = 0.5 - x2*x2-y2*y2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to return values in the interval [-1,1]. \n  return 70.0 * (n0 + n1 + n2); \n};\n\n// 3D simplex noise \nSimplexNoise.prototype.noise3d = function(xin, yin, zin) { \n  var n0, n1, n2, n3; // Noise contributions from the four corners \n  // Skew the input space to determine which simplex cell we're in \n  var F3 = 1.0/3.0; \n  var s = (xin+yin+zin)*F3; // Very nice and simple skew factor for 3D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var k = Math.floor(zin+s); \n  var G3 = 1.0/6.0; // Very nice and simple unskew factor, too \n  var t = (i+j+k)*G3; \n  var X0 = i-t; // Unskew the cell origin back to (x,y,z) space \n  var Y0 = j-t; \n  var Z0 = k-t; \n  var x0 = xin-X0; // The x,y,z distances from the cell origin \n  var y0 = yin-Y0; \n  var z0 = zin-Z0; \n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron. \n  // Determine which simplex we are in. \n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords \n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords \n  if(x0>=y0) { \n    if(y0>=z0) \n      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } // X Y Z order \n      else if(x0>=z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } // X Z Y order \n      else { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; } // Z X Y order \n    } \n  else { // x0<y0 \n    if(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } // Z Y X order \n    else if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } // Y Z X order \n    else { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } // Y X Z order \n  } \n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z), \n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and \n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where \n  // c = 1/6.\n  var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords \n  var y1 = y0 - j1 + G3; \n  var z1 = z0 - k1 + G3; \n  var x2 = x0 - i2 + 2.0*G3; // Offsets for third corner in (x,y,z) coords \n  var y2 = y0 - j2 + 2.0*G3; \n  var z2 = z0 - k2 + 2.0*G3; \n  var x3 = x0 - 1.0 + 3.0*G3; // Offsets for last corner in (x,y,z) coords \n  var y3 = y0 - 1.0 + 3.0*G3; \n  var z3 = z0 - 1.0 + 3.0*G3; \n  // Work out the hashed gradient indices of the four simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var kk = k & 255; \n  var gi0 = this.perm[ii+this.perm[jj+this.perm[kk]]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1+this.perm[kk+k1]]] % 12; \n  var gi2 = this.perm[ii+i2+this.perm[jj+j2+this.perm[kk+k2]]] % 12; \n  var gi3 = this.perm[ii+1+this.perm[jj+1+this.perm[kk+1]]] % 12; \n  // Calculate the contribution from the four corners \n  var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0); \n  }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1); \n  } \n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2); \n  } \n  var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3; \n  if(t3<0) n3 = 0.0; \n  else { \n    t3 *= t3; \n    n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to stay just inside [-1,1] \n  return 32.0*(n0 + n1 + n2 + n3); \n};\n\n// 4D simplex noise\nSimplexNoise.prototype.noise4d = function( x, y, z, w ) {\n\t// For faster and easier lookups\n\tvar grad4 = this.grad4;\n\tvar simplex = this.simplex;\n\tvar perm = this.perm;\n\t\n   // The skewing and unskewing factors are hairy again for the 4D case\n   var F4 = (Math.sqrt(5.0)-1.0)/4.0;\n   var G4 = (5.0-Math.sqrt(5.0))/20.0;\n   var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n   // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n   var s = (x + y + z + w) * F4; // Factor for 4D skewing\n   var i = Math.floor(x + s);\n   var j = Math.floor(y + s);\n   var k = Math.floor(z + s);\n   var l = Math.floor(w + s);\n   var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n   var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n   var Y0 = j - t;\n   var Z0 = k - t;\n   var W0 = l - t;\n   var x0 = x - X0;  // The x,y,z,w distances from the cell origin\n   var y0 = y - Y0;\n   var z0 = z - Z0;\n   var w0 = w - W0;\n\n   // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n   // To find out which of the 24 possible simplices we're in, we need to\n   // determine the magnitude ordering of x0, y0, z0 and w0.\n   // The method below is a good way of finding the ordering of x,y,z,w and\n   // then find the correct traversal order for the simplex we’re in.\n   // First, six pair-wise comparisons are performed between each possible pair\n   // of the four coordinates, and the results are used to add up binary bits\n   // for an integer index.\n   var c1 = (x0 > y0) ? 32 : 0;\n   var c2 = (x0 > z0) ? 16 : 0;\n   var c3 = (y0 > z0) ? 8 : 0;\n   var c4 = (x0 > w0) ? 4 : 0;\n   var c5 = (y0 > w0) ? 2 : 0;\n   var c6 = (z0 > w0) ? 1 : 0;\n   var c = c1 + c2 + c3 + c4 + c5 + c6;\n   var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n   var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n   var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n   // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n   // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n   // impossible. Only the 24 indices which have non-zero entries make any sense.\n   // We use a thresholding to set the coordinates in turn from the largest magnitude.\n   // The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n   i1 = simplex[c][0]>=3 ? 1 : 0;\n   j1 = simplex[c][1]>=3 ? 1 : 0;\n   k1 = simplex[c][2]>=3 ? 1 : 0;\n   l1 = simplex[c][3]>=3 ? 1 : 0;\n   // The number 2 in the \"simplex\" array is at the second largest coordinate.\n   i2 = simplex[c][0]>=2 ? 1 : 0;\n   j2 = simplex[c][1]>=2 ? 1 : 0;    k2 = simplex[c][2]>=2 ? 1 : 0;\n   l2 = simplex[c][3]>=2 ? 1 : 0;\n   // The number 1 in the \"simplex\" array is at the second smallest coordinate.\n   i3 = simplex[c][0]>=1 ? 1 : 0;\n   j3 = simplex[c][1]>=1 ? 1 : 0;\n   k3 = simplex[c][2]>=1 ? 1 : 0;\n   l3 = simplex[c][3]>=1 ? 1 : 0;\n   // The fifth corner has all coordinate offsets = 1, so no need to look that up.\n   var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n   var y1 = y0 - j1 + G4;\n   var z1 = z0 - k1 + G4;\n   var w1 = w0 - l1 + G4;\n   var x2 = x0 - i2 + 2.0*G4; // Offsets for third corner in (x,y,z,w) coords\n   var y2 = y0 - j2 + 2.0*G4;\n   var z2 = z0 - k2 + 2.0*G4;\n   var w2 = w0 - l2 + 2.0*G4;\n   var x3 = x0 - i3 + 3.0*G4; // Offsets for fourth corner in (x,y,z,w) coords\n   var y3 = y0 - j3 + 3.0*G4;\n   var z3 = z0 - k3 + 3.0*G4;\n   var w3 = w0 - l3 + 3.0*G4;\n   var x4 = x0 - 1.0 + 4.0*G4; // Offsets for last corner in (x,y,z,w) coords\n   var y4 = y0 - 1.0 + 4.0*G4;\n   var z4 = z0 - 1.0 + 4.0*G4;\n   var w4 = w0 - 1.0 + 4.0*G4;\n   // Work out the hashed gradient indices of the five simplex corners\n   var ii = i & 255;\n   var jj = j & 255;\n   var kk = k & 255;\n   var ll = l & 255;\n   var gi0 = perm[ii+perm[jj+perm[kk+perm[ll]]]] % 32;\n   var gi1 = perm[ii+i1+perm[jj+j1+perm[kk+k1+perm[ll+l1]]]] % 32;\n   var gi2 = perm[ii+i2+perm[jj+j2+perm[kk+k2+perm[ll+l2]]]] % 32;\n   var gi3 = perm[ii+i3+perm[jj+j3+perm[kk+k3+perm[ll+l3]]]] % 32;\n   var gi4 = perm[ii+1+perm[jj+1+perm[kk+1+perm[ll+1]]]] % 32;\n   // Calculate the contribution from the five corners\n   var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n   if(t0<0) n0 = 0.0;\n   else {\n     t0 *= t0;\n     n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n   }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n   if(t1<0) n1 = 0.0;\n   else {\n     t1 *= t1;\n     n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n   }\n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n   if(t2<0) n2 = 0.0;\n   else {\n     t2 *= t2;\n     n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n   }   var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n   if(t3<0) n3 = 0.0;\n   else {\n     t3 *= t3;\n     n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n   }\n  var t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n   if(t4<0) n4 = 0.0;\n   else {\n     t4 *= t4;\n     n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n   }\n   // Sum up and scale the result to cover the range [-1,1]\n   return 27.0 * (n0 + n1 + n2 + n3 + n4);\n};\n","ATUtil = {\n\trandomRange : function(min, max) {\n\t\treturn min + Math.random() * (max - min);\n\t},\n\trandomInt : function(min,max){\n\t\treturn Math.floor(min + Math.random() * (max - min + 1));\n\t},\n\tmap : function(value, min1, max1, min2, max2) {\n\t\treturn ATUtil.lerp(min2, max2, ATUtil.norm(value, min1, max1));\n\t},\n\tlerp : function(amt, min, max){\n\t\treturn min + (max -min) * amt;\n\t},\n\tnorm : function(value , min, max){\n\t\treturn (value - min) / (max - min);\n\t},\n\tshuffle : function(o) {\n\t\tfor(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\t\treturn o;\n\t}\n};","/*!\n * VERSION: 1.18.2\n * DATE: 2015-12-22\n * UPDATES AND DOCS AT: http://greensock.com\n * \n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n *\n * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\nvar _gsScope=\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){\"use strict\";_gsScope._gsDefine(\"TweenMax\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},e=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},f=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=f.prototype.render},g=1e-10,h=c._internals,i=h.isSelector,j=h.isArray,k=f.prototype=c.to({},.1,{}),l=[];f.version=\"1.18.2\",k.constructor=f,k.kill()._gc=!1,f.killTweensOf=f.killDelayedCallsTo=c.killTweensOf,f.getTweensOf=c.getTweensOf,f.lagSmoothing=c.lagSmoothing,f.ticker=c.ticker,f.render=c.render,k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),c.prototype.invalidate.call(this)},k.updateTo=function(a,b){var d,e=this.ratio,f=this.vars.immediateRender||a.immediateRender;b&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted||f)if(b)this._initted=!1,f&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent(\"_onDisable\",this),this._time/this._duration>.998){var g=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(g,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||f)for(var h,i=1/(1-e),j=this._firstPT;j;)h=j.s+j.c,j.c*=i,j.s=h-j.c,j=j._next;return this},k.render=function(a,b,c){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var d,e,f,i,j,k,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._totalTime,q=this._cycle,r=this._duration,s=this._rawPrevTime;if(a>=n-1e-7?(this._totalTime=n,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=r,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===r&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>s||0>=a&&a>=-1e-7||s===g&&\"isPause\"!==this.data)&&s!==a&&(c=!0,s>g&&(e=\"onReverseComplete\")),this._rawPrevTime=m=!b||a||s===a?a:g)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==p||0===r&&s>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===r&&(this._initted||!this.vars.lazy||c)&&(s>=0&&(c=!0),this._rawPrevTime=m=!b||a||s===a?a:g)),this._initted||(c=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(i=r+this._repeatDelay,this._cycle=this._totalTime/i>>0,0!==this._cycle&&this._cycle===this._totalTime/i&&this._cycle--,this._time=this._totalTime-this._cycle*i,this._yoyo&&0!==(1&this._cycle)&&(this._time=r-this._time),this._time>r?this._time=r:this._time<0&&(this._time=0)),this._easeType?(j=this._time/r,k=this._easeType,l=this._easePower,(1===k||3===k&&j>=.5)&&(j=1-j),3===k&&(j*=2),1===l?j*=j:2===l?j*=j*j:3===l?j*=j*j*j:4===l&&(j*=j*j*j*j),1===k?this.ratio=1-j:2===k?this.ratio=j:this._time/r<.5?this.ratio=j/2:this.ratio=1-j/2):this.ratio=this._ease.getRatio(this._time/r)),o===this._time&&!c&&q===this._cycle)return void(p!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=o,this._totalTime=p,this._rawPrevTime=s,this._cycle=q,h.lazyTweens.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/r):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&a>=0&&(this._active=!0),0===p&&(2===this._initted&&a>0&&this._init(),this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._totalTime||0===r)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||(this._totalTime!==p||d)&&this._callback(\"onUpdate\")),this._cycle!==q&&(b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===r&&this._rawPrevTime===g&&m!==g&&(this._rawPrevTime=0))},f.to=function(a,b,c){return new f(a,b,c)},f.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new f(a,b,c)},f.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new f(a,b,d)},f.staggerTo=f.allTo=function(a,b,g,h,k,m,n){h=h||0;var o,p,q,r,s=0,t=[],u=function(){g.onComplete&&g.onComplete.apply(g.onCompleteScope||this,arguments),k.apply(n||g.callbackScope||this,m||l)},v=g.cycle,w=g.startAt&&g.startAt.cycle;for(j(a)||(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a))),a=a||[],0>h&&(a=d(a),a.reverse(),h*=-1),o=a.length-1,q=0;o>=q;q++){p={};for(r in g)p[r]=g[r];if(v&&e(p,a,q),w){w=p.startAt={};for(r in g.startAt)w[r]=g.startAt[r];e(p.startAt,a,q)}p.delay=s+(p.delay||0),q===o&&k&&(p.onComplete=u),t[q]=new f(a[q],b,p),s+=h}return t},f.staggerFrom=f.allFrom=function(a,b,c,d,e,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,f.staggerTo(a,b,c,d,e,g,h)},f.staggerFromTo=f.allFromTo=function(a,b,c,d,e,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,f.staggerTo(a,b,d,e,g,h,i)},f.delayedCall=function(a,b,c,d,e){return new f(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,useFrames:e,overwrite:0})},f.set=function(a,b){return new f(a,0,b)},f.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var m=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(m(f,b)),e=d.length),f=f._next;return d},n=f.getAllTweens=function(b){return m(a._rootTimeline,b).concat(m(a._rootFramesTimeline,b))};f.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=n(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g._reversed?0:g.totalDuration()):g._enabled(!1,!1))},f.killChildTweensOf=function(a,b){if(null!=a){var e,g,k,l,m,n=h.tweenLookup;if(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a)),j(a))for(l=a.length;--l>-1;)f.killChildTweensOf(a[l],b);else{e=[];for(k in n)for(g=n[k].target.parentNode;g;)g===a&&(e=e.concat(n[k].tweens)),g=g.parentNode;for(m=e.length,l=0;m>l;l++)b&&e[l].totalTime(e[l].totalDuration()),e[l]._enabled(!1,!1)}}};var o=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=n(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return f.pauseAll=function(a,b,c){o(!0,a,b,c)},f.resumeAll=function(a,b,c){o(!1,a,b,c)},f.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||g,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},k.progress=function(a){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},k.totalProgress=function(a){return arguments.length?this.totalTime(this.totalDuration()*a,!1):this._totalTime/this.totalDuration()},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},k.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},f},!0),_gsScope._gsDefine(\"TimelineLite\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],i(c)&&-1!==c.join(\"\").indexOf(\"{self}\")&&(e[d]=this._swapSelfInParams(c));i(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals,g=d._internals={},h=f.isSelector,i=f.isArray,j=f.lazyTweens,k=f.lazyRender,l=_gsScope._gsDefine.globals,m=function(a){var b,c={};for(b in a)c[b]=a[b];return c},n=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},o=g.pauseCallback=function(){},p=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},q=d.prototype=new b;return d.version=\"1.18.2\",q.constructor=d,q.kill()._gc=q._forcingPlayhead=q._hasPause=!1,q.to=function(a,b,d,e){var f=d.repeat&&l.TweenMax||c;return b?this.add(new f(a,b,d),e):this.set(a,d,e)},q.from=function(a,b,d,e){return this.add((d.repeat&&l.TweenMax||c).from(a,b,d),e)},q.fromTo=function(a,b,d,e,f){var g=e.repeat&&l.TweenMax||c;return b?this.add(g.fromTo(a,b,d,e),f):this.set(a,e,f)},q.staggerTo=function(a,b,e,f,g,i,j,k){var l,o,q=new d({onComplete:i,onCompleteParams:j,callbackScope:k,smoothChildTiming:this.smoothChildTiming}),r=e.cycle;for(\"string\"==typeof a&&(a=c.selector(a)||a),a=a||[],h(a)&&(a=p(a)),f=f||0,0>f&&(a=p(a),a.reverse(),f*=-1),o=0;o<a.length;o++)l=m(e),l.startAt&&(l.startAt=m(l.startAt),l.startAt.cycle&&n(l.startAt,a,o)),r&&n(l,a,o),q.to(a[o],b,l,o*f);return this.add(q,g)},q.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},q.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},q.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},q.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g=new d(a),h=g._timeline;for(null==b&&(b=!0),h._remove(g,!0),g._startTime=0,g._rawPrevTime=g._time=g._totalTime=h._time,e=h._first;e;)f=e._next,b&&e instanceof c&&e.target===e.vars.onComplete||g.add(e,e._startTime-e._delay),e=f;return h.add(g,0),g},q.add=function(e,f,g,h){var j,k,l,m,n,o;if(\"number\"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&i(e)){for(g=g||\"normal\",h=h||0,j=f,k=e.length,l=0;k>l;l++)i(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),\"string\"!=typeof m&&\"function\"!=typeof m&&(\"sequence\"===g?j=m._startTime+m.totalDuration()/m._timeScale:\"start\"===g&&(m._startTime-=m.delay())),j+=h;return this._uncache(!0)}if(\"string\"==typeof e)return this.addLabel(e,f);if(\"function\"!=typeof e)throw\"Cannot add \"+e+\" into the timeline; it is not a tween, timeline, function, or string.\";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._timeline;)o&&n._timeline.smoothChildTiming?n.totalTime(n._totalTime,!0):n._gc&&n._enabled(!0,!1),n=n._timeline;return this},q.remove=function(b){if(b instanceof a){this._remove(b,!1);var c=b._timeline=b.vars.useFrames?a._rootFramesTimeline:a._rootTimeline;return b._startTime=(b._paused?b._pauseTime:c._time)-(b._reversed?b.totalDuration()-b._totalTime:b._totalTime)/b._timeScale,this}if(b instanceof Array||b&&b.push&&i(b)){for(var d=b.length;--d>-1;)this.remove(b[d]);return this}return\"string\"==typeof b?this.removeLabel(b):this.kill(null,b)},q._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>d._startTime+d._totalDuration/d._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},q.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},q.insert=q.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},q.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},q.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},q.addPause=function(a,b,d,e){var f=c.delayedCall(0,o,d,e||this);return f.vars.onComplete=f.vars.onReverseComplete=b,f.data=\"isPause\",this._hasPause=!0,this.add(f,a)},q.removeLabel=function(a){return delete this._labels[a],this},q.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},q._parseTimeOrLabel=function(b,c,d,e){var f;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&i(e)))for(f=e.length;--f>-1;)e[f]instanceof a&&e[f].timeline===this&&this.remove(e[f]);if(\"string\"==typeof c)return this._parseTimeOrLabel(c,d&&\"number\"==typeof b&&null==this._labels[c]?b-this.duration():0,d);if(c=c||0,\"string\"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=this.duration());else{if(f=b.indexOf(\"=\"),-1===f)return null==this._labels[b]?d?this._labels[b]=this.duration()+c:c:this._labels[b]+c;c=parseInt(b.charAt(f-1)+\"1\",10)*Number(b.substr(f+1)),b=f>1?this._parseTimeOrLabel(b.substr(0,f-1),0,d):this.duration()}return Number(b)+c},q.seek=function(a,b){return this.totalTime(\"number\"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)},q.stop=function(){return this.paused(!0)},q.gotoAndPlay=function(a,b){return this.play(a,b)},q.gotoAndStop=function(a,b){return this.pause(a,b)},q.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,h,i,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._startTime,q=this._timeScale,r=this._paused;if(a>=n-1e-7)this._totalTime=this._time=n,this._reversed||this._hasPausedChild()||(f=!0,h=\"onComplete\",i=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(i=!0,this._rawPrevTime>e&&(h=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,a=n+1e-4;else if(1e-7>a)if(this._totalTime=this._time=0,(0!==o||0===this._duration&&this._rawPrevTime!==e&&(this._rawPrevTime>0||0>a&&this._rawPrevTime>=0))&&(h=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(i=f=!0,h=\"onReverseComplete\"):this._rawPrevTime>=0&&this._first&&(i=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(i=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!b){if(a>=o)for(d=this._first;d&&d._startTime<=a&&!l;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(l=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!l;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(l=d),d=d._prev;l&&(this._time=a=l._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=a}if(this._time!==o&&this._first||c||i||l){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==o&&a>0&&(this._active=!0),0===o&&this.vars.onStart&&0!==this._time&&(b||this._callback(\"onStart\")),m=this._time,m>=o)for(d=this._first;d&&(g=d._next,m===this._time&&(!this._paused||r));)(d._active||d._startTime<=m&&!d._paused&&!d._gc)&&(l===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,m===this._time&&(!this._paused||r));){if(d._active||d._startTime<=o&&!d._paused&&!d._gc){if(l===d){for(l=d._prev;l&&l.endTime()>this._time;)l.render(l._reversed?l.totalDuration()-(a-l._startTime)*l._timeScale:(a-l._startTime)*l._timeScale,b,c),l=l._prev;l=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=g}this._onUpdate&&(b||(j.length&&k(),this._callback(\"onUpdate\"))),h&&(this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||n>=this.totalDuration())&&(f&&(j.length&&k(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[h]&&this._callback(h)))}},q._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},q.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},q.getTweensOf=function(a,b){var d,e,f=this._gc,g=[],h=0;for(f&&this._enabled(!0,!0),d=c.getTweensOf(a),e=d.length;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(g[h++]=d[e]);return f&&this._enabled(!1,!0),g},q.recent=function(){return this._recent},q._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},q.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},q._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},q.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},q.invalidate=function(){for(var b=this._first;b;)b.invalidate(),b=b._next;return a.prototype.invalidate.call(this)},q._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},q.totalTime=function(b,c,d){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},q.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},q.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused?this.add(e,e._startTime-e._delay):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return a&&this.totalDuration()?this.timeScale(this._totalDuration/a):this},q.paused=function(b){if(!b)for(var c=this._first,d=this._time;c;)c._startTime===d&&\"isPause\"===c.data&&(c._rawPrevTime=0),c=c._next;return a.prototype.paused.apply(this,arguments)},q.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},q.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},d},!0),_gsScope._gsDefine(\"TimelineMax\",[\"TimelineLite\",\"TweenLite\",\"easing.Ease\"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=b._internals,g=f.lazyTweens,h=f.lazyRender,i=new c(null,null,1,0),j=d.prototype=new a;return j.constructor=d,j.kill()._gc=!1,d.version=\"1.18.2\",j.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},j.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},j.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},j.removePause=function(b){return this.removeCallback(a._internals.pauseCallback,b)},j.tweenTo=function(a,c){c=c||{};var d,e,f,g={ease:i,useFrames:this.usesFrames(),immediateRender:!1};for(e in c)g[e]=c[e];return g.time=this._parseTimeOrLabel(a),d=Math.abs(Number(g.time)-this._time)/this._timeScale||.001,f=new b(this,d,g),g.onStart=function(){f.target.paused(!0),f.vars.time!==f.target.time()&&d===f.duration()&&f.duration(Math.abs(f.vars.time-f.target.time())/f.target._timeScale),c.onStart&&f._callback(\"onStart\")},f},j.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],callbackScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},j.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,i,j,k,l,m,n,o=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,q=this._time,r=this._totalTime,s=this._startTime,t=this._timeScale,u=this._rawPrevTime,v=this._paused,w=this._cycle;if(a>=o-1e-7)this._locked||(this._totalTime=o,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(f=!0,j=\"onComplete\",k=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||0>u||u===e)&&u!==a&&this._first&&(k=!0,u>e&&(j=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=p,a=p+1e-4);else if(1e-7>a)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==q||0===p&&u!==e&&(u>0||0>a&&u>=0)&&!this._locked)&&(j=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(k=f=!0,j=\"onReverseComplete\"):u>=0&&this._first&&(k=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=p||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(k=!0)}else if(0===p&&0>u&&(k=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(l=p+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,a=p+1e-4):this._time<0?this._time=a=0:a=this._time)),this._hasPause&&!this._forcingPlayhead&&!b){if(a=this._time,a>=q)for(d=this._first;d&&d._startTime<=a&&!m;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(m=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!m;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(m=d),d=d._prev;m&&(this._time=a=m._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var x=this._yoyo&&0!==(1&w),y=x===(this._yoyo&&0!==(1&this._cycle)),z=this._totalTime,A=this._cycle,B=this._rawPrevTime,C=this._time;if(this._totalTime=w*p,this._cycle<w?x=!x:this._totalTime+=p,this._time=q,this._rawPrevTime=0===p?u-1e-4:u,this._cycle=w,this._locked=!0,q=x?0:p,this.render(q,b,0===p),b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\"),q!==this._time)return;if(y&&(q=x?p+1e-4:-1e-4,this.render(q,!0,!1)),this._locked=!1,this._paused&&!v)return;this._time=C,this._totalTime=z,this._cycle=A,this._rawPrevTime=B}if(!(this._time!==q&&this._first||c||k||m))return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==r&&a>0&&(this._active=!0),0===r&&this.vars.onStart&&0!==this._totalTime&&(b||this._callback(\"onStart\")),n=this._time,n>=q)for(d=this._first;d&&(i=d._next,n===this._time&&(!this._paused||v));)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(m===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=i;else for(d=this._last;d&&(i=d._prev,n===this._time&&(!this._paused||v));){if(d._active||d._startTime<=q&&!d._paused&&!d._gc){if(m===d){for(m=d._prev;m&&m.endTime()>this._time;)m.render(m._reversed?m.totalDuration()-(a-m._startTime)*m._timeScale:(a-m._startTime)*m._timeScale,b,c),m=m._prev;m=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=i}this._onUpdate&&(b||(g.length&&h(),this._callback(\"onUpdate\"))),j&&(this._locked||this._gc||(s===this._startTime||t!==this._timeScale)&&(0===this._time||o>=this.totalDuration())&&(f&&(g.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[j]&&this._callback(j)))},j.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},j.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},j.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},j.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},j.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},j.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},j.totalDuration=function(b){return arguments.length?-1!==this._repeat&&b?this.timeScale(this.totalDuration()/b):this:(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},j.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},j.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},j.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},j.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},j.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=_gsScope._gsDefine.globals,g=function(a,b,c,d){this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},h=\",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",i=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},j=function(a,e,f,g,h){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,h?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,0!==j?n.b=y:n.b=y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=i(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=i(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},k=function(a,d,e,f){var h,i,j,k,l,m,n=[];if(f)for(a=[f].concat(a),i=a.length;--i>-1;)\"string\"==typeof(m=a[i][d])&&\"=\"===m.charAt(1)&&(a[i][d]=f[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new g(a[0][d],0,0,a[-1>h?0:1][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new g(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new g(a[i][d],0,0,a[i+1][d]),n},l=function(a,f,g,i,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l=\"string\"==typeof l?\",\"+l+\",\":h,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(\",\"+o+\",\"),v[o]=k(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),c[n]=Math.sqrt(c[n]);if(!i){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q],d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=g?4:1;--n>-1;)o=w[n],p=v[o],j(p,f,g,i,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},m=function(a,b,c){b=b||\"soft\";var d,e,f,h,i,j,k,l,m,n,o,p={},q=\"cubic\"===b?3:2,r=\"soft\"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw\"invalid Bezier data\";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:\"string\"==typeof(o=a[k][m])&&\"=\"===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],f=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new g(d,e,f,h):new g(d,(2*e+d)/3,(2*e+f)/3,f);i.length=n}return p},n=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},o=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],m=[];for(c in a)n(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,m[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=m,h[f]=j,i=0,m=[]);return{length:j,lengths:h,segments:l}},p=_gsScope._gsDefine.plugin({propName:\"bezier\",priority:-1,version:\"1.3.4\",API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._round={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);\nvar d,e,f,g,h,i=b.values||[],j={},k=i[0],n=b.autoRotate||c.vars.orientToBezier;this._autoRotate=n?n instanceof Array?n:[[\"x\",\"y\",\"rotation\",n===!0?0:Number(n)||0]]:null;for(d in k)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]=\"function\"==typeof a[d],j[d]=e?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers=\"cubic\"!==b.type&&\"quadratic\"!==b.type&&\"soft\"!==b.type?l(i,isNaN(b.curviness)?1:b.curviness,!1,\"thruBasic\"===b.type,b.correlate,h):m(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=o(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(n=this._autoRotate)for(this._initialRotations=[],n[0]instanceof Array||(this._autoRotate=n=[n]),f=n.length;--f>-1;){for(g=0;3>g;g++)d=n[f][g],this._func[d]=\"function\"==typeof a[d]?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]:!1;d=n[f][2],this._initialRotations[f]=this._func[d]?this._func[d].call(this._target):this._target[d]}return this._startRatio=c.vars.runBackwards?1:0,!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target,p=b!==this._startRatio;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._round[f]&&(i=Math.round(i)),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var q,r,s,t,u,v,w,x=this._autoRotate;for(e=x.length;--e>-1;)f=x[e][2],v=x[e][3]||0,w=x[e][4]===!0?1:a,g=this._beziers[x[e][0]],q=this._beziers[x[e][1]],g&&q&&(g=g[c],q=q[c],r=g.a+(g.b-g.a)*h,t=g.b+(g.c-g.b)*h,r+=(t-r)*h,t+=(g.c+(g.d-g.c)*h-t)*h,s=q.a+(q.b-q.a)*h,u=q.b+(q.c-q.b)*h,s+=(u-s)*h,u+=(q.c+(q.d-q.c)*h-u)*h,i=p?Math.atan2(u-s,t-r)*w+v:this._initialRotations[e],n[f]?o[f](i):o[f]=i)}}}),q=p.prototype;p.bezierThrough=l,p.cubicToQuadratic=i,p._autoCSS=!0,p.quadraticToCubic=function(a,b,c){return new g(a,(2*b+a)/3,(2*b+c)/3,c)},p._cssRegister=function(){var a=f.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp(\"bezier\",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new p;var j,k,l,m=b.values,n=m.length-1,o=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),o[j]=l.end;for(k in b)q[k]=b[k];return q.values=o,h=new e(a,\"bezier\",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[[\"left\",\"top\",\"rotation\",j,!1]]:null!=l.end.x?[[\"x\",\"y\",\"rotation\",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform),i._onInitTween(l.proxy,q,g._tween),h}})}},q._roundProps=function(a,b){for(var c=this._overwriteProps,d=c.length;--d>-1;)(a[c[d]]||a.bezier||a.bezierThrough)&&(this._round[c[d]]=b)},q._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);return this._super._kill.call(this,a)}}(),_gsScope._gsDefine(\"plugins.CSSPlugin\",[\"plugins.TweenPlugin\",\"TweenLite\"],function(a,b){var c,d,e,f,g=function(){a.call(this,\"css\"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h=_gsScope._gsDefine.globals,i={},j=g.prototype=new a(\"css\");j.constructor=g,g.version=\"1.18.2\",g.API=2,g.defaultTransformPerspective=0,g.defaultSkewType=\"compensated\",g.defaultSmoothOrigin=!0,j=\"px\",g.suffixMap={top:j,right:j,bottom:j,left:j,width:j,height:j,fontSize:j,padding:j,margin:j,perspective:j,lineHeight:\"\"};var k,l,m,n,o,p,q=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d)+/g,r=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,s=/(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi,t=/(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g,u=/(?:\\d|\\-|\\+|=|#|\\.)*/g,v=/opacity *= *([^)]*)/i,w=/opacity:([^;]*)/i,x=/alpha\\(opacity *=.+?\\)/i,y=/^(rgb|hsl)/,z=/([A-Z])/g,A=/-([a-z])/gi,B=/(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi,C=function(a,b){return b.toUpperCase()},D=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,F=/progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,G=/,(?=[^\\)]*(?:\\(|$))/gi,H=Math.PI/180,I=180/Math.PI,J={},K=document,L=function(a){return K.createElementNS?K.createElementNS(\"http://www.w3.org/1999/xhtml\",a):K.createElement(a)},M=L(\"div\"),N=L(\"img\"),O=g._internals={_specialProps:i},P=navigator.userAgent,Q=function(){var a=P.indexOf(\"Android\"),b=L(\"a\");return m=-1!==P.indexOf(\"Safari\")&&-1===P.indexOf(\"Chrome\")&&(-1===a||Number(P.substr(a+8,1))>3),o=m&&Number(P.substr(P.indexOf(\"Version/\")+8,1))<6,n=-1!==P.indexOf(\"Firefox\"),(/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(P)||/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(P))&&(p=parseFloat(RegExp.$1)),b?(b.style.cssText=\"top:1px;opacity:.55;\",/^0.55/.test(b.style.opacity)):!1}(),R=function(a){return v.test(\"string\"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?parseFloat(RegExp.$1)/100:1},S=function(a){window.console&&console.log(a)},T=\"\",U=\"\",V=function(a,b){b=b||M;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=[\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(U=3===d?\"ms\":c[d],T=\"-\"+U.toLowerCase()+\"-\",U+a):null},W=K.defaultView?K.defaultView.getComputedStyle:function(){},X=g.getStyle=function(a,b,c,d,e){var f;return Q||\"opacity\"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||W(a))?f=c[b]||c.getPropertyValue(b)||c.getPropertyValue(b.replace(z,\"-$1\").toLowerCase()):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&\"none\"!==f&&\"auto\"!==f&&\"auto auto\"!==f?f:e):R(a)},Y=O.convertToPixels=function(a,c,d,e,f){if(\"px\"===e||!e)return d;if(\"auto\"===e||!d)return 0;var h,i,j,k=D.test(c),l=a,m=M.style,n=0>d;if(n&&(d=-d),\"%\"===e&&-1!==c.indexOf(\"border\"))h=d/100*(k?a.clientWidth:a.clientHeight);else{if(m.cssText=\"border:0 solid red;position:\"+X(a,\"position\")+\";line-height:0;\",\"%\"!==e&&l.appendChild&&\"v\"!==e.charAt(0)&&\"rem\"!==e)m[k?\"borderLeftWidth\":\"borderTopWidth\"]=d+e;else{if(l=a.parentNode||K.body,i=l._gsCache,j=b.ticker.frame,i&&k&&i.time===j)return i.width*d/100;m[k?\"width\":\"height\"]=d+e}l.appendChild(M),h=parseFloat(M[k?\"offsetWidth\":\"offsetHeight\"]),l.removeChild(M),k&&\"%\"===e&&g.cacheWidths!==!1&&(i=l._gsCache=l._gsCache||{},i.time=j,i.width=h/d*100),0!==h||f||(h=Y(a,c,d,e,!0))}return n?-h:h},Z=O.calculateOffset=function(a,b,c){if(\"absolute\"!==X(a,\"position\",c))return 0;var d=\"left\"===b?\"Left\":\"Top\",e=X(a,\"margin\"+d,c);return a[\"offset\"+d]-(Y(a,b,parseFloat(e),e.replace(u,\"\"))||0)},$=function(a,b){var c,d,e,f={};if(b=b||W(a,null))if(c=b.length)for(;--c>-1;)e=b[c],(-1===e.indexOf(\"-transform\")||za===e)&&(f[e.replace(A,C)]=b.getPropertyValue(e));else for(c in b)(-1===c.indexOf(\"Transform\")||ya===c)&&(f[c]=b[c]);else if(b=a.currentStyle||a.style)for(c in b)\"string\"==typeof c&&void 0===f[c]&&(f[c.replace(A,C)]=b[c]);return Q||(f.opacity=R(a)),d=La(a,b,!1),f.rotation=d.rotation,f.skewX=d.skewX,f.scaleX=d.scaleX,f.scaleY=d.scaleY,f.x=d.x,f.y=d.y,Ba&&(f.z=d.z,f.rotationX=d.rotationX,f.rotationY=d.rotationY,f.scaleZ=d.scaleZ),f.filters&&delete f.filters,f},_=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)\"cssText\"!==g&&\"length\"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf(\"Origin\")&&(\"number\"==typeof f||\"string\"==typeof f)&&(i[g]=\"auto\"!==f||\"left\"!==g&&\"top\"!==g?\"\"!==f&&\"auto\"!==f&&\"none\"!==f||\"string\"!=typeof b[g]||\"\"===b[g].replace(t,\"\")?f:0:Z(a,g),void 0!==j[g]&&(h=new oa(j,g,j[g],h)));if(d)for(g in d)\"className\"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},aa={width:[\"Left\",\"Right\"],height:[\"Top\",\"Bottom\"]},ba=[\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],ca=function(a,b,c){var d=parseFloat(\"width\"===b?a.offsetWidth:a.offsetHeight),e=aa[b],f=e.length;for(c=c||W(a,null);--f>-1;)d-=parseFloat(X(a,\"padding\"+e[f],c,!0))||0,d-=parseFloat(X(a,\"border\"+e[f]+\"Width\",c,!0))||0;return d},da=function(a,b){if(\"contain\"===a||\"auto\"===a||\"auto auto\"===a)return a+\" \";(null==a||\"\"===a)&&(a=\"0 0\");var c=a.split(\" \"),d=-1!==a.indexOf(\"left\")?\"0%\":-1!==a.indexOf(\"right\")?\"100%\":c[0],e=-1!==a.indexOf(\"top\")?\"0%\":-1!==a.indexOf(\"bottom\")?\"100%\":c[1];return null==e?e=\"center\"===d?\"50%\":\"0\":\"center\"===e&&(e=\"50%\"),(\"center\"===d||isNaN(parseFloat(d))&&-1===(d+\"\").indexOf(\"=\"))&&(d=\"50%\"),a=d+\" \"+e+(c.length>2?\" \"+c[2]:\"\"),b&&(b.oxp=-1!==d.indexOf(\"%\"),b.oyp=-1!==e.indexOf(\"%\"),b.oxr=\"=\"===d.charAt(1),b.oyr=\"=\"===e.charAt(1),b.ox=parseFloat(d.replace(t,\"\")),b.oy=parseFloat(e.replace(t,\"\")),b.v=a),b||a},ea=function(a,b){return\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)},fa=function(a,b){return null==a?b:\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2))+b:parseFloat(a)},ga=function(a,b,c,d){var e,f,g,h,i,j=1e-6;return null==a?h=b:\"number\"==typeof a?h=a:(e=360,f=a.split(\"_\"),i=\"=\"===a.charAt(1),g=(i?parseInt(a.charAt(0)+\"1\",10)*parseFloat(f[0].substr(2)):parseFloat(f[0]))*(-1===a.indexOf(\"rad\")?1:I)-(i?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf(\"short\")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf(\"_cw\")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf(\"ccw\")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),j>h&&h>-j&&(h=0),h},ha={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ia=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},ja=g.parseColor=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a)if(\"number\"==typeof a)c=[a>>16,a>>8&255,255&a];else{if(\",\"===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),ha[a])c=ha[a];else if(\"#\"===a.charAt(0))4===a.length&&(d=a.charAt(1),e=a.charAt(2),f=a.charAt(3),a=\"#\"+d+d+e+e+f+f),a=parseInt(a.substr(1),16),c=[a>>16,a>>8&255,255&a];else if(\"hsl\"===a.substr(0,3))if(c=m=a.match(q),b){if(-1!==a.indexOf(\"=\"))return a.match(r)}else g=Number(c[0])%360/360,h=Number(c[1])/100,i=Number(c[2])/100,e=.5>=i?i*(h+1):i+h-i*h,d=2*i-e,c.length>3&&(c[3]=Number(a[3])),c[0]=ia(g+1/3,d,e),c[1]=ia(g,d,e),c[2]=ia(g-1/3,d,e);else c=a.match(q)||ha.transparent;c[0]=Number(c[0]),c[1]=Number(c[1]),c[2]=Number(c[2]),c.length>3&&(c[3]=Number(c[3]))}else c=ha.black;return b&&!m&&(d=c[0]/255,e=c[1]/255,f=c[2]/255,j=Math.max(d,e,f),k=Math.min(d,e,f),i=(j+k)/2,j===k?g=h=0:(l=j-k,h=i>.5?l/(2-j-k):l/(j+k),g=j===d?(e-f)/l+(f>e?6:0):j===e?(f-d)/l+2:(d-e)/l+4,g*=60),c[0]=g+.5|0,c[1]=100*h+.5|0,c[2]=100*i+.5|0),c},ka=function(a,b){var c,d,e,f=a.match(la)||[],g=0,h=f.length?\"\":a;for(c=0;c<f.length;c++)d=f[c],e=a.substr(g,a.indexOf(d,g)-g),g+=e.length+d.length,d=ja(d,b),3===d.length&&d.push(1),h+=e+(b?\"hsla(\"+d[0]+\",\"+d[1]+\"%,\"+d[2]+\"%,\"+d[3]:\"rgba(\"+d.join(\",\"))+\")\";return h},la=\"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";for(j in ha)la+=\"|\"+j+\"\\\\b\";la=new RegExp(la+\")\",\"gi\"),g.colorStringFilter=function(a){var b,c=a[0]+a[1];la.lastIndex=0,la.test(c)&&(b=-1!==c.indexOf(\"hsl(\")||-1!==c.indexOf(\"hsla(\"),a[0]=ka(a[0],b),a[1]=ka(a[1],b))},b.defaultStringFilter||(b.defaultStringFilter=g.colorStringFilter);var ma=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(la)||[\"\"])[0]:\"\",g=a.split(f).join(\"\").match(s)||[],h=a.substr(0,a.indexOf(g[0])),i=\")\"===a.charAt(a.length-1)?\")\":\"\",j=-1!==a.indexOf(\" \")?\" \":\",\",k=g.length,l=k>0?g[0].replace(q,\"\"):\"\";return k?e=b?function(a){var b,m,n,o;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(o=a.replace(G,\"|\").split(\"|\"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(\",\")}if(b=(a.match(la)||[f])[0],m=a.split(b).join(\"\").match(s)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf(\"inset\")?\" inset\":\"\")}:function(a){var b,f,m;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(f=a.replace(G,\"|\").split(\"|\"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(\",\")}if(b=a.match(s)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},na=function(a){return a=a.split(\",\"),function(b,c,d,e,f,g,h){var i,j=(c+\"\").split(\" \");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},oa=(O._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f,g=this.data,h=g.proxy,i=g.firstMPT,j=1e-6;i;)b=h[i.v],i.r?b=Math.round(b):j>b&&b>-j&&(b=0),i.t[i.p]=b,i=i._next;if(g.autoRotate&&(g.autoRotate.rotation=h.rotation),1===a||0===a)for(i=g.firstMPT,f=1===a?\"e\":\"b\";i;){if(c=i.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c[\"xn\"+d]+c[\"xs\"+(d+1)];c[f]=e}}else c[f]=c.s+c.xs0;i=i._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),pa=(O._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=J;for(c._transform=null,J=b,d=k=c.parse(a,b,d,e),J=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new oa(d,\"s\",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i=\"xn\"+g,h=d.p+\"_\"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new oa(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},O.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof pa||f.push(this.n),this.r=j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),qa=function(a,b,c,d,e,f){var g=new pa(a,b,c,d-c,e,-1,f);return g.b=c,g.e=g.xs0=d,g},ra=g.parseComplex=function(a,b,c,d,e,f,g,h,i,j){c=c||f||\"\",g=new pa(a,b,0,0,g,j?2:1,null,!1,h,c,d),d+=\"\";var l,m,n,o,p,s,t,u,v,w,x,y,z,A=c.split(\", \").join(\",\").split(\" \"),B=d.split(\", \").join(\",\").split(\" \"),C=A.length,D=k!==!1;for((-1!==d.indexOf(\",\")||-1!==c.indexOf(\",\"))&&(A=A.join(\" \").replace(G,\", \").split(\" \"),B=B.join(\" \").replace(G,\", \").split(\" \"),C=A.length),C!==B.length&&(A=(f||\"\").split(\" \"),C=A.length),g.plugin=i,g.setRatio=j,la.lastIndex=0,l=0;C>l;l++)if(o=A[l],p=B[l],u=parseFloat(o),u||0===u)g.appendXtra(\"\",u,ea(p,u),p.replace(r,\"\"),D&&-1!==p.indexOf(\"px\"),!0);else if(e&&la.test(o))y=\",\"===p.charAt(p.length-1)?\"),\":\")\",z=-1!==p.indexOf(\"hsl\")&&Q,o=ja(o,z),p=ja(p,z),v=o.length+p.length>6,v&&!Q&&0===p[3]?(g[\"xs\"+g.l]+=g.l?\" transparent\":\"transparent\",g.e=g.e.split(B[l]).join(\"transparent\")):(Q||(v=!1),z?g.appendXtra(v?\"hsla(\":\"hsl(\",o[0],ea(p[0],o[0]),\",\",!1,!0).appendXtra(\"\",o[1],ea(p[1],o[1]),\"%,\",!1).appendXtra(\"\",o[2],ea(p[2],o[2]),v?\"%,\":\"%\"+y,!1):g.appendXtra(v?\"rgba(\":\"rgb(\",o[0],p[0]-o[0],\",\",!0,!0).appendXtra(\"\",o[1],p[1]-o[1],\",\",!0).appendXtra(\"\",o[2],p[2]-o[2],v?\",\":y,!0),v&&(o=o.length<4?1:o[3],g.appendXtra(\"\",o,(p.length<4?1:p[3])-o,y,!1))),la.lastIndex=0;else if(s=o.match(q)){if(t=p.match(r),!t||t.length!==s.length)return g;for(n=0,m=0;m<s.length;m++)x=s[m],w=o.indexOf(x,n),g.appendXtra(o.substr(n,w-n),Number(x),ea(t[m],x),\"\",D&&\"px\"===o.substr(w+x.length,2),0===m),n=w+x.length;g[\"xs\"+g.l]+=o.substr(n)}else g[\"xs\"+g.l]+=g.l?\" \"+p:p;if(-1!==d.indexOf(\"=\")&&g.data){for(y=g.xs0+g.data.s,l=1;l<g.l;l++)y+=g[\"xs\"+l]+g.data[\"xn\"+l];g.e=y+g[\"xs\"+l]}return g.l||(g.type=-1,g.xs0=g.e),g.xfirst||g},sa=9;for(j=pa.prototype,j.l=j.pr=0;--sa>0;)j[\"xn\"+sa]=0,j[\"xs\"+sa]=\"\";j.xs0=\"\",j._next=j._prev=j.xfirst=j.data=j.plugin=j.setRatio=j.rxp=null,j.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g[\"xs\"+h]+=f&&h?\" \"+a:a||\"\",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g[\"xs\"+g.l]=d||\"\",h>0?(g.data[\"xn\"+h]=b+c,g.rxp[\"xn\"+h]=e,g[\"xn\"+h]=b,g.plugin||(g.xfirst=new pa(g,\"xn\"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g[\"xs\"+h]+=b+(d||\"\"),g)};var ta=function(a,b){b=b||{},this.p=b.prefix?V(a)||a:a,i[a]=i[this.p]=this,this.format=b.formatter||ma(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},ua=O._registerComplexSpecialProp=function(a,b,c){\"object\"!=typeof b&&(b={parser:c});var d,e,f=a.split(\",\"),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new ta(f[d],b)},va=function(a){if(!i[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+\"Plugin\";ua(a,{parser:function(a,c,d,e,f,g,j){var k=h.com.greensock.plugins[b];return k?(k._cssRegister(),i[d].parse(a,c,d,e,f,g,j)):(S(\"Error: \"+b+\" js file not loaded.\"),f)}})}};j=ta.prototype,j.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(G.test(c)||G.test(b)?(h=b.replace(G,\"|\").split(\"|\"),i=c.replace(G,\"|\").split(\"|\")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(-1===l?h[g]=h[g].split(m).join(\"\"):-1===k&&(h[g]+=\" \"+m)));b=h.join(\", \"),c=i.join(\", \")}return ra(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},j.parse=function(a,b,c,d,f,g,h){return this.parseComplex(a.style,this.format(X(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){ua(a,{parser:function(a,d,e,f,g,h,i){var j=new pa(a,e,0,0,g,2,e,!1,c);return j.plugin=h,j.setRatio=b(a,d,f._tween,e),j},priority:c})},g.useSVGTransformAttr=m||n;var wa,xa=\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"),ya=V(\"transform\"),za=T+\"transform\",Aa=V(\"transformOrigin\"),Ba=null!==V(\"perspective\"),Ca=O.Transform=function(){this.perspective=parseFloat(g.defaultTransformPerspective)||0,this.force3D=g.defaultForce3D!==!1&&Ba?g.defaultForce3D||\"auto\":!1},Da=window.SVGElement,Ea=function(a,b,c){var d,e=K.createElementNS(\"http://www.w3.org/2000/svg\",a),f=/([a-z])([A-Z])/g;for(d in c)e.setAttributeNS(null,d.replace(f,\"$1-$2\").toLowerCase(),c[d]);return b.appendChild(e),e},Fa=K.documentElement,Ga=function(){var a,b,c,d=p||/Android/i.test(P)&&!window.chrome;return K.createElementNS&&!d&&(a=Ea(\"svg\",Fa),b=Ea(\"rect\",a,{width:100,height:50,x:100}),c=b.getBoundingClientRect().width,b.style[Aa]=\"50% 50%\",b.style[ya]=\"scaleX(0.5)\",d=c===b.getBoundingClientRect().width&&!(n&&Ba),Fa.removeChild(a)),d}(),Ha=function(a,b,c,d,e){var f,h,i,j,k,l,m,n,o,p,q,r,s,t,u=a._gsTransform,v=Ka(a,!0);u&&(s=u.xOrigin,t=u.yOrigin),(!d||(f=d.split(\" \")).length<2)&&(m=a.getBBox(),b=da(b).split(\" \"),f=[(-1!==b[0].indexOf(\"%\")?parseFloat(b[0])/100*m.width:parseFloat(b[0]))+m.x,(-1!==b[1].indexOf(\"%\")?parseFloat(b[1])/100*m.height:parseFloat(b[1]))+m.y]),c.xOrigin=j=parseFloat(f[0]),c.yOrigin=k=parseFloat(f[1]),d&&v!==Ja&&(l=v[0],m=v[1],n=v[2],o=v[3],p=v[4],q=v[5],r=l*o-m*n,h=j*(o/r)+k*(-n/r)+(n*q-o*p)/r,i=j*(-m/r)+k*(l/r)-(l*q-m*p)/r,j=c.xOrigin=f[0]=h,k=c.yOrigin=f[1]=i),u&&(e||e!==!1&&g.defaultSmoothOrigin!==!1?(h=j-s,i=k-t,u.xOffset+=h*v[0]+i*v[2]-h,u.yOffset+=h*v[1]+i*v[3]-i):u.xOffset=u.yOffset=0),a.setAttribute(\"data-svg-origin\",f.join(\" \"))},Ia=function(a){return!!(Da&&\"function\"==typeof a.getBBox&&a.getCTM&&(!a.parentNode||a.parentNode.getBBox&&a.parentNode.getCTM))},Ja=[1,0,0,1,0,0],Ka=function(a,b){var c,d,e,f,g,h=a._gsTransform||new Ca,i=1e5;if(ya?d=X(a,za,null,!0):a.currentStyle&&(d=a.currentStyle.filter.match(E),d=d&&4===d.length?[d[0].substr(4),Number(d[2].substr(4)),Number(d[1].substr(4)),d[3].substr(4),h.x||0,h.y||0].join(\",\"):\"\"),c=!d||\"none\"===d||\"matrix(1, 0, 0, 1, 0, 0)\"===d,(h.svg||a.getBBox&&Ia(a))&&(c&&-1!==(a.style[ya]+\"\").indexOf(\"matrix\")&&(d=a.style[ya],c=0),e=a.getAttribute(\"transform\"),c&&e&&(-1!==e.indexOf(\"matrix\")?(d=e,c=0):-1!==e.indexOf(\"translate\")&&(d=\"matrix(1,0,0,1,\"+e.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\")+\")\",c=0))),c)return Ja;for(e=(d||\"\").match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi)||[],sa=e.length;--sa>-1;)f=Number(e[sa]),e[sa]=(g=f-(f|=0))?(g*i+(0>g?-.5:.5)|0)/i+f:f;return b&&e.length>6?[e[0],e[1],e[4],e[5],e[12],e[13]]:e},La=O.getTransform=function(a,c,d,f){if(a._gsTransform&&d&&!f)return a._gsTransform;var h,i,j,k,l,m,n=d?a._gsTransform||new Ca:new Ca,o=n.scaleX<0,p=2e-5,q=1e5,r=Ba?parseFloat(X(a,Aa,c,!1,\"0 0 0\").split(\" \")[2])||n.zOrigin||0:0,s=parseFloat(g.defaultTransformPerspective)||0;if(n.svg=!(!a.getBBox||!Ia(a)),n.svg&&(Ha(a,X(a,Aa,e,!1,\"50% 50%\")+\"\",n,a.getAttribute(\"data-svg-origin\")),wa=g.useSVGTransformAttr||Ga),h=Ka(a),h!==Ja){if(16===h.length){var t,u,v,w,x,y=h[0],z=h[1],A=h[2],B=h[3],C=h[4],D=h[5],E=h[6],F=h[7],G=h[8],H=h[9],J=h[10],K=h[12],L=h[13],M=h[14],N=h[11],O=Math.atan2(E,J);n.zOrigin&&(M=-n.zOrigin,K=G*M-h[12],L=H*M-h[13],M=J*M+n.zOrigin-h[14]),n.rotationX=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=C*w+G*x,u=D*w+H*x,v=E*w+J*x,G=C*-x+G*w,H=D*-x+H*w,J=E*-x+J*w,N=F*-x+N*w,C=t,D=u,E=v),O=Math.atan2(-A,J),n.rotationY=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=y*w-G*x,u=z*w-H*x,v=A*w-J*x,H=z*x+H*w,J=A*x+J*w,N=B*x+N*w,y=t,z=u,A=v),O=Math.atan2(z,y),n.rotation=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),y=y*w+C*x,u=z*w+D*x,D=z*-x+D*w,E=A*-x+E*w,z=u),n.rotationX&&Math.abs(n.rotationX)+Math.abs(n.rotation)>359.9&&(n.rotationX=n.rotation=0,n.rotationY=180-n.rotationY),n.scaleX=(Math.sqrt(y*y+z*z)*q+.5|0)/q,n.scaleY=(Math.sqrt(D*D+H*H)*q+.5|0)/q,n.scaleZ=(Math.sqrt(E*E+J*J)*q+.5|0)/q,n.skewX=0,n.perspective=N?1/(0>N?-N:N):0,n.x=K,n.y=L,n.z=M,n.svg&&(n.x-=n.xOrigin-(n.xOrigin*y-n.yOrigin*C),n.y-=n.yOrigin-(n.yOrigin*z-n.xOrigin*D))}else if((!Ba||f||!h.length||n.x!==h[4]||n.y!==h[5]||!n.rotationX&&!n.rotationY)&&(void 0===n.x||\"none\"!==X(a,\"display\",c))){var P=h.length>=6,Q=P?h[0]:1,R=h[1]||0,S=h[2]||0,T=P?h[3]:1;n.x=h[4]||0,n.y=h[5]||0,j=Math.sqrt(Q*Q+R*R),k=Math.sqrt(T*T+S*S),l=Q||R?Math.atan2(R,Q)*I:n.rotation||0,m=S||T?Math.atan2(S,T)*I+l:n.skewX||0,Math.abs(m)>90&&Math.abs(m)<270&&(o?(j*=-1,m+=0>=l?180:-180,l+=0>=l?180:-180):(k*=-1,m+=0>=m?180:-180)),n.scaleX=j,n.scaleY=k,n.rotation=l,n.skewX=m,Ba&&(n.rotationX=n.rotationY=n.z=0,n.perspective=s,n.scaleZ=1),n.svg&&(n.x-=n.xOrigin-(n.xOrigin*Q+n.yOrigin*S),n.y-=n.yOrigin-(n.xOrigin*R+n.yOrigin*T))}n.zOrigin=r;for(i in n)n[i]<p&&n[i]>-p&&(n[i]=0)}return d&&(a._gsTransform=n,n.svg&&(wa&&a.style[ya]?b.delayedCall(.001,function(){Pa(a.style,ya)}):!wa&&a.getAttribute(\"transform\")&&b.delayedCall(.001,function(){a.removeAttribute(\"transform\")}))),n},Ma=function(a){var b,c,d=this.data,e=-d.rotation*H,f=e+d.skewX*H,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter=\"\";var n,o,q=this.t.offsetWidth,r=this.t.offsetHeight,s=\"absolute\"!==m.position,t=\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+h+\", M12=\"+i+\", M21=\"+j+\", M22=\"+k,w=d.x+q*d.xPercent/100,x=d.y+r*d.yPercent/100;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,o=(d.oyp?r*d.oy*.01:d.oy)-r/2,w+=n-(n*h+o*i),x+=o-(n*j+o*k)),s?(n=q/2,o=r/2,t+=\", Dx=\"+(n-(n*h+o*i)+w)+\", Dy=\"+(o-(n*j+o*k)+x)+\")\"):t+=\", sizingMethod='auto expand')\",-1!==b.indexOf(\"DXImageTransform.Microsoft.Matrix(\")?l.filter=b.replace(F,t):l.filter=t+\" \"+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===t.indexOf(\"Dx=0, Dy=0\")||v.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf(b.indexOf(\"Alpha\"))&&l.removeAttribute(\"filter\")),!s){var y,z,A,B=8>p?1:-1;for(n=d.ieOffsetX||0,o=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+w),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+x),sa=0;4>sa;sa++)z=ba[sa],y=m[z],c=-1!==y.indexOf(\"px\")?parseFloat(y):Y(this.t,z,parseFloat(y),y.replace(u,\"\"))||0,A=c!==d[z]?2>sa?-d.ieOffsetX:-d.ieOffsetY:2>sa?n-d.ieOffsetX:o-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===sa||2===sa?1:B)))+\"px\"}}},Na=O.set3DTransformRatio=O.setTransformRatio=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z=this.data,A=this.t.style,B=z.rotation,C=z.rotationX,D=z.rotationY,E=z.scaleX,F=z.scaleY,G=z.scaleZ,I=z.x,J=z.y,K=z.z,L=z.svg,M=z.perspective,N=z.force3D;if(((1===a||0===a)&&\"auto\"===N&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!N)&&!K&&!M&&!D&&!C&&1===G||wa&&L||!Ba)return void(B||z.skewX||L?(B*=H,x=z.skewX*H,y=1e5,b=Math.cos(B)*E,e=Math.sin(B)*E,c=Math.sin(B-x)*-F,f=Math.cos(B-x)*F,x&&\"simple\"===z.skewType&&(s=Math.tan(x),s=Math.sqrt(1+s*s),c*=s,f*=s,z.skewY&&(b*=s,e*=s)),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset,wa&&(z.xPercent||z.yPercent)&&(p=this.t.getBBox(),I+=.01*z.xPercent*p.width,J+=.01*z.yPercent*p.height),p=1e-6,p>I&&I>-p&&(I=0),p>J&&J>-p&&(J=0)),u=(b*y|0)/y+\",\"+(e*y|0)/y+\",\"+(c*y|0)/y+\",\"+(f*y|0)/y+\",\"+I+\",\"+J+\")\",L&&wa?this.t.setAttribute(\"transform\",\"matrix(\"+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+E+\",0,0,\"+F+\",\"+I+\",\"+J+\")\");if(n&&(p=1e-4,p>E&&E>-p&&(E=G=2e-5),p>F&&F>-p&&(F=G=2e-5),!M||z.z||z.rotationX||z.rotationY||(M=0)),B||z.skewX)B*=H,q=b=Math.cos(B),r=e=Math.sin(B),z.skewX&&(B-=z.skewX*H,q=Math.cos(B),r=Math.sin(B),\"simple\"===z.skewType&&(s=Math.tan(z.skewX*H),s=Math.sqrt(1+s*s),q*=s,r*=s,z.skewY&&(b*=s,e*=s))),c=-r,f=q;else{if(!(D||C||1!==G||M||L))return void(A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) translate3d(\":\"translate3d(\")+I+\"px,\"+J+\"px,\"+K+\"px)\"+(1!==E||1!==F?\" scale(\"+E+\",\"+F+\")\":\"\"));b=f=1,c=e=0}j=1,d=g=h=i=k=l=0,m=M?-1/M:0,o=z.zOrigin,p=1e-6,v=\",\",w=\"0\",B=D*H,B&&(q=Math.cos(B),r=Math.sin(B),h=-r,k=m*-r,d=b*r,g=e*r,j=q,m*=q,b*=q,e*=q),B=C*H,B&&(q=Math.cos(B),r=Math.sin(B),s=c*q+d*r,t=f*q+g*r,i=j*r,l=m*r,d=c*-r+d*q,g=f*-r+g*q,j*=q,m*=q,c=s,f=t),1!==G&&(d*=G,g*=G,j*=G,m*=G),1!==F&&(c*=F,f*=F,i*=F,l*=F),1!==E&&(b*=E,e*=E,h*=E,k*=E),(o||L)&&(o&&(I+=d*-o,J+=g*-o,K+=j*-o+o),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset),p>I&&I>-p&&(I=w),p>J&&J>-p&&(J=w),p>K&&K>-p&&(K=0)),u=z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix3d(\":\"matrix3d(\",u+=(p>b&&b>-p?w:b)+v+(p>e&&e>-p?w:e)+v+(p>h&&h>-p?w:h),u+=v+(p>k&&k>-p?w:k)+v+(p>c&&c>-p?w:c)+v+(p>f&&f>-p?w:f),C||D||1!==G?(u+=v+(p>i&&i>-p?w:i)+v+(p>l&&l>-p?w:l)+v+(p>d&&d>-p?w:d),u+=v+(p>g&&g>-p?w:g)+v+(p>j&&j>-p?w:j)+v+(p>m&&m>-p?w:m)+v):u+=\",0,0,0,0,1,0,\",u+=I+v+J+v+K+v+(M?1+-K/M:1)+\")\",A[ya]=u};j=Ca.prototype,j.x=j.y=j.z=j.skewX=j.skewY=j.rotation=j.rotationX=j.rotationY=j.zOrigin=j.xPercent=j.yPercent=j.xOffset=j.yOffset=0,j.scaleX=j.scaleY=j.scaleZ=1,ua(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\",{parser:function(a,b,c,d,f,h,i){if(d._lastParsedTransform===i)return f;d._lastParsedTransform=i;var j,k,l,m,n,o,p,q,r,s,t=a._gsTransform,u=a.style,v=1e-6,w=xa.length,x=i,y={},z=\"transformOrigin\";if(i.display?(m=X(a,\"display\"),u.display=\"block\",j=La(a,e,!0,i.parseTransform),u.display=m):j=La(a,e,!0,i.parseTransform),d._transform=j,\"string\"==typeof x.transform&&ya)m=M.style,m[ya]=x.transform,m.display=\"block\",m.position=\"absolute\",K.body.appendChild(M),k=La(M,null,!1),K.body.removeChild(M),k.perspective||(k.perspective=j.perspective),null!=x.xPercent&&(k.xPercent=fa(x.xPercent,j.xPercent)),null!=x.yPercent&&(k.yPercent=fa(x.yPercent,j.yPercent));else if(\"object\"==typeof x){if(k={scaleX:fa(null!=x.scaleX?x.scaleX:x.scale,j.scaleX),scaleY:fa(null!=x.scaleY?x.scaleY:x.scale,j.scaleY),scaleZ:fa(x.scaleZ,j.scaleZ),x:fa(x.x,j.x),y:fa(x.y,j.y),z:fa(x.z,j.z),xPercent:fa(x.xPercent,j.xPercent),yPercent:fa(x.yPercent,j.yPercent),perspective:fa(x.transformPerspective,j.perspective)},q=x.directionalRotation,null!=q)if(\"object\"==typeof q)for(m in q)x[m]=q[m];else x.rotation=q;\"string\"==typeof x.x&&-1!==x.x.indexOf(\"%\")&&(k.x=0,k.xPercent=fa(x.x,j.xPercent)),\"string\"==typeof x.y&&-1!==x.y.indexOf(\"%\")&&(k.y=0,k.yPercent=fa(x.y,j.yPercent)),k.rotation=ga(\"rotation\"in x?x.rotation:\"shortRotation\"in x?x.shortRotation+\"_short\":\"rotationZ\"in x?x.rotationZ:j.rotation,j.rotation,\"rotation\",y),Ba&&(k.rotationX=ga(\"rotationX\"in x?x.rotationX:\"shortRotationX\"in x?x.shortRotationX+\"_short\":j.rotationX||0,j.rotationX,\"rotationX\",y),k.rotationY=ga(\"rotationY\"in x?x.rotationY:\"shortRotationY\"in x?x.shortRotationY+\"_short\":j.rotationY||0,j.rotationY,\"rotationY\",y)),k.skewX=null==x.skewX?j.skewX:ga(x.skewX,j.skewX),k.skewY=null==x.skewY?j.skewY:ga(x.skewY,j.skewY),(l=k.skewY-j.skewY)&&(k.skewX+=l,k.rotation+=l)}for(Ba&&null!=x.force3D&&(j.force3D=x.force3D,p=!0),j.skewType=x.skewType||j.skewType||g.defaultSkewType,o=j.force3D||j.z||j.rotationX||j.rotationY||k.z||k.rotationX||k.rotationY||k.perspective,o||null==x.scale||(k.scaleZ=1);--w>-1;)c=xa[w],n=k[c]-j[c],(n>v||-v>n||null!=x[c]||null!=J[c])&&(p=!0,f=new pa(j,c,j[c],n,f),c in y&&(f.e=y[c]),f.xs0=0,f.plugin=h,d._overwriteProps.push(f.n));return n=x.transformOrigin,j.svg&&(n||x.svgOrigin)&&(r=j.xOffset,s=j.yOffset,Ha(a,da(n),k,x.svgOrigin,x.smoothOrigin),f=qa(j,\"xOrigin\",(t?j:k).xOrigin,k.xOrigin,f,z),f=qa(j,\"yOrigin\",(t?j:k).yOrigin,k.yOrigin,f,z),(r!==j.xOffset||s!==j.yOffset)&&(f=qa(j,\"xOffset\",t?r:j.xOffset,j.xOffset,f,z),f=qa(j,\"yOffset\",t?s:j.yOffset,j.yOffset,f,z)),n=wa?null:\"0px 0px\"),(n||Ba&&o&&j.zOrigin)&&(ya?(p=!0,c=Aa,n=(n||X(a,c,e,!1,\"50% 50%\"))+\"\",f=new pa(u,c,0,0,f,-1,z),f.b=u[c],f.plugin=h,Ba?(m=j.zOrigin,n=n.split(\" \"),j.zOrigin=(n.length>2&&(0===m||\"0px\"!==n[2])?parseFloat(n[2]):m)||0,f.xs0=f.e=n[0]+\" \"+(n[1]||\"50%\")+\" 0px\",f=new pa(j,\"zOrigin\",0,0,f,-1,f.n),f.b=m,f.xs0=f.e=j.zOrigin):f.xs0=f.e=n):da(n+\"\",j)),p&&(d._transformType=j.svg&&wa||!o&&3!==this._transformType?2:3),f},prefix:!0}),ua(\"boxShadow\",{defaultValue:\"0px 0px 0px 0px #999\",prefix:!0,color:!0,multi:!0,keyword:\"inset\"}),ua(\"borderRadius\",{defaultValue:\"0px\",parser:function(a,b,c,f,g,h){b=this.format(b);var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],z=a.style;for(q=parseFloat(a.offsetWidth),r=parseFloat(a.offsetHeight),i=b.split(\" \"),j=0;j<y.length;j++)this.p.indexOf(\"border\")&&(y[j]=V(y[j])),m=l=X(a,y[j],e,!1,\"0px\"),-1!==m.indexOf(\" \")&&(l=m.split(\" \"),m=l[0],l=l[1]),n=k=i[j],o=parseFloat(m),t=m.substr((o+\"\").length),u=\"=\"===n.charAt(1),u?(p=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),p*=parseFloat(n),s=n.substr((p+\"\").length-(0>p?1:0))||\"\"):(p=parseFloat(n),s=n.substr((p+\"\").length)),\"\"===s&&(s=d[c]||t),s!==t&&(v=Y(a,\"borderLeft\",o,t),w=Y(a,\"borderTop\",o,t),\"%\"===s?(m=v/q*100+\"%\",l=w/r*100+\"%\"):\"em\"===s?(x=Y(a,\"borderLeft\",1,\"em\"),m=v/x+\"em\",l=w/x+\"em\"):(m=v+\"px\",l=w+\"px\"),u&&(n=parseFloat(m)+p+s,k=parseFloat(l)+p+s)),g=ra(z,y[j],m+\" \"+l,n+\" \"+k,!1,\"0px\",g);return g},prefix:!0,formatter:ma(\"0px 0px 0px 0px\",!1,!0)}),ua(\"backgroundPosition\",{\ndefaultValue:\"0 0\",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n=\"background-position\",o=e||W(a,null),q=this.format((o?p?o.getPropertyValue(n+\"-x\")+\" \"+o.getPropertyValue(n+\"-y\"):o.getPropertyValue(n):a.currentStyle.backgroundPositionX+\" \"+a.currentStyle.backgroundPositionY)||\"0 0\"),r=this.format(b);if(-1!==q.indexOf(\"%\")!=(-1!==r.indexOf(\"%\"))&&(m=X(a,\"backgroundImage\").replace(B,\"\"),m&&\"none\"!==m)){for(h=q.split(\" \"),i=r.split(\" \"),N.setAttribute(\"src\",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf(\"%\"),k!==(-1!==i[j].indexOf(\"%\"))&&(l=0===j?a.offsetWidth-N.width:a.offsetHeight-N.height,h[j]=k?parseFloat(q)/100*l+\"px\":parseFloat(q)/l*100+\"%\");q=h.join(\" \")}return this.parseComplex(a.style,q,r,f,g)},formatter:da}),ua(\"backgroundSize\",{defaultValue:\"0 0\",formatter:da}),ua(\"perspective\",{defaultValue:\"0px\",prefix:!0}),ua(\"perspectiveOrigin\",{defaultValue:\"50% 50%\",prefix:!0}),ua(\"transformStyle\",{prefix:!0}),ua(\"backfaceVisibility\",{prefix:!0}),ua(\"userSelect\",{prefix:!0}),ua(\"margin\",{parser:na(\"marginTop,marginRight,marginBottom,marginLeft\")}),ua(\"padding\",{parser:na(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")}),ua(\"clip\",{defaultValue:\"rect(0px,0px,0px,0px)\",parser:function(a,b,c,d,f,g){var h,i,j;return 9>p?(i=a.currentStyle,j=8>p?\" \":\",\",h=\"rect(\"+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+\")\",b=this.format(b).split(\",\").join(j)):(h=this.format(X(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),ua(\"textShadow\",{defaultValue:\"0px 0px 0px #999\",color:!0,multi:!0}),ua(\"autoRound,strictUnits\",{parser:function(a,b,c,d,e){return e}}),ua(\"border\",{defaultValue:\"0px solid #000\",parser:function(a,b,c,d,f,g){return this.parseComplex(a.style,this.format(X(a,\"borderTopWidth\",e,!1,\"0px\")+\" \"+X(a,\"borderTopStyle\",e,!1,\"solid\")+\" \"+X(a,\"borderTopColor\",e,!1,\"#000\")),this.format(b),f,g)},color:!0,formatter:function(a){var b=a.split(\" \");return b[0]+\" \"+(b[1]||\"solid\")+\" \"+(a.match(la)||[\"#000\"])[0]}}),ua(\"borderWidth\",{parser:na(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}),ua(\"float,cssFloat,styleFloat\",{parser:function(a,b,c,d,e,f){var g=a.style,h=\"cssFloat\"in g?\"cssFloat\":\"styleFloat\";return new pa(g,h,0,0,e,-1,c,!1,0,g[h],b)}});var Oa=function(a){var b,c=this.t,d=c.filter||X(this.data,\"filter\")||\"\",e=this.s+this.c*a|0;100===e&&(-1===d.indexOf(\"atrix(\")&&-1===d.indexOf(\"radient(\")&&-1===d.indexOf(\"oader(\")?(c.removeAttribute(\"filter\"),b=!X(this.data,\"filter\")):(c.filter=d.replace(x,\"\"),b=!0)),b||(this.xn1&&(c.filter=d=d||\"alpha(opacity=\"+e+\")\"),-1===d.indexOf(\"pacity\")?0===e&&this.xn1||(c.filter=d+\" alpha(opacity=\"+e+\")\"):c.filter=d.replace(v,\"opacity=\"+e))};ua(\"opacity,alpha,autoAlpha\",{defaultValue:\"1\",parser:function(a,b,c,d,f,g){var h=parseFloat(X(a,\"opacity\",e,!1,\"1\")),i=a.style,j=\"autoAlpha\"===c;return\"string\"==typeof b&&\"=\"===b.charAt(1)&&(b=(\"-\"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&\"hidden\"===X(a,\"visibility\",e)&&0!==b&&(h=0),Q?f=new pa(i,\"opacity\",h,b-h,f):(f=new pa(i,\"opacity\",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b=\"alpha(opacity=\"+f.s+\")\",f.e=\"alpha(opacity=\"+(f.s+f.c)+\")\",f.data=a,f.plugin=g,f.setRatio=Oa),j&&(f=new pa(i,\"visibility\",0,0,f,-1,null,!1,0,0!==h?\"inherit\":\"hidden\",0===b?\"hidden\":\"inherit\"),f.xs0=\"inherit\",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Pa=function(a,b){b&&(a.removeProperty?((\"ms\"===b.substr(0,2)||\"webkit\"===b.substr(0,6))&&(b=\"-\"+b),a.removeProperty(b.replace(z,\"-$1\").toLowerCase())):a.removeAttribute(b))},Qa=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.setAttribute(\"class\",0===a?this.b:this.e);for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Pa(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute(\"class\")!==this.e&&this.t.setAttribute(\"class\",this.e)};ua(\"className\",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.getAttribute(\"class\")||\"\",p=a.style.cssText;if(g=f._classNamePT=new pa(a,d,0,0,g,2),g.setRatio=Qa,g.pr=-11,c=!0,g.b=o,k=$(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e=\"=\"!==b.charAt(1)?b:o.replace(new RegExp(\"\\\\s*\\\\b\"+b.substr(2)+\"\\\\b\"),\"\")+(\"+\"===b.charAt(0)?\" \"+b.substr(2):\"\"),a.setAttribute(\"class\",g.e),j=_(a,k,$(a),i,m),a.setAttribute(\"class\",o),g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)}});var Ra=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&\"isFromStart\"!==this.data.data){var b,c,d,e,f,g=this.t.style,h=i.transform.parse;if(\"all\"===this.e)g.cssText=\"\",e=!0;else for(b=this.e.split(\" \").join(\"\").split(\",\"),d=b.length;--d>-1;)c=b[d],i[c]&&(i[c].parse===h?e=!0:c=\"transformOrigin\"===c?Aa:i[c].p),Pa(g,c);e&&(Pa(g,ya),f=this.t._gsTransform,f&&(f.svg&&(this.t.removeAttribute(\"data-svg-origin\"),this.t.removeAttribute(\"transform\")),delete this.t._gsTransform))}};for(ua(\"clearProps\",{parser:function(a,b,d,e,f){return f=new pa(a,d,0,0,f,2),f.setRatio=Ra,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),j=\"bezier,throwProps,physicsProps,physics2D\".split(\",\"),sa=j.length;sa--;)va(j[sa]);j=g.prototype,j._firstPT=j._lastParsedTransform=j._transform=null,j._onInitTween=function(a,b,h){if(!a.nodeType)return!1;this._target=a,this._tween=h,this._vars=b,k=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=W(a,\"\"),f=this._overwriteProps;var j,n,p,q,r,s,t,u,v,x=a.style;if(l&&\"\"===x.zIndex&&(j=X(a,\"zIndex\",e),(\"auto\"===j||\"\"===j)&&this._addLazySet(x,\"zIndex\",0)),\"string\"==typeof b&&(q=x.cssText,j=$(a,e),x.cssText=q+\";\"+b,j=_(a,j,$(a)).difs,!Q&&w.test(b)&&(j.opacity=parseFloat(RegExp.$1)),b=j,x.cssText=q),b.className?this._firstPT=n=i.className.parse(a,b.className,\"className\",this,null,null,b):this._firstPT=n=this.parse(a,b,null),this._transformType){for(v=3===this._transformType,ya?m&&(l=!0,\"\"===x.zIndex&&(t=X(a,\"zIndex\",e),(\"auto\"===t||\"\"===t)&&this._addLazySet(x,\"zIndex\",0)),o&&this._addLazySet(x,\"WebkitBackfaceVisibility\",this._vars.WebkitBackfaceVisibility||(v?\"visible\":\"hidden\"))):x.zoom=1,p=n;p&&p._next;)p=p._next;u=new pa(a,\"transform\",0,0,null,2),this._linkCSSP(u,null,p),u.setRatio=ya?Na:Ma,u.data=this._transform||La(a,e,!0),u.tween=h,u.pr=-1,f.pop()}if(c){for(;n;){for(s=n._next,p=q;p&&p.pr>n.pr;)p=p._next;(n._prev=p?p._prev:r)?n._prev._next=n:q=n,(n._next=p)?p._prev=n:r=n,n=s}this._firstPT=q}return!0},j.parse=function(a,b,c,f){var g,h,j,l,m,n,o,p,q,r,s=a.style;for(g in b)n=b[g],h=i[g],h?c=h.parse(a,n,g,this,c,f,b):(m=X(a,g,e)+\"\",q=\"string\"==typeof n,\"color\"===g||\"fill\"===g||\"stroke\"===g||-1!==g.indexOf(\"Color\")||q&&y.test(n)?(q||(n=ja(n),n=(n.length>3?\"rgba(\":\"rgb(\")+n.join(\",\")+\")\"),c=ra(s,g,m,n,!0,\"transparent\",c,0,f)):!q||-1===n.indexOf(\" \")&&-1===n.indexOf(\",\")?(j=parseFloat(m),o=j||0===j?m.substr((j+\"\").length):\"\",(\"\"===m||\"auto\"===m)&&(\"width\"===g||\"height\"===g?(j=ca(a,g,e),o=\"px\"):\"left\"===g||\"top\"===g?(j=Z(a,g,e),o=\"px\"):(j=\"opacity\"!==g?0:1,o=\"\")),r=q&&\"=\"===n.charAt(1),r?(l=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(u,\"\")):(l=parseFloat(n),p=q?n.replace(u,\"\"):\"\"),\"\"===p&&(p=g in d?d[g]:o),n=l||0===l?(r?l+j:l)+p:b[g],o!==p&&\"\"!==p&&(l||0===l)&&j&&(j=Y(a,g,j,o),\"%\"===p?(j/=Y(a,g,100,\"%\")/100,b.strictUnits!==!0&&(m=j+\"%\")):\"em\"===p||\"rem\"===p||\"vw\"===p||\"vh\"===p?j/=Y(a,g,1,p):\"px\"!==p&&(l=Y(a,g,l,p),p=\"px\"),r&&(l||0===l)&&(n=l+j+p)),r&&(l+=j),!j&&0!==j||!l&&0!==l?void 0!==s[g]&&(n||n+\"\"!=\"NaN\"&&null!=n)?(c=new pa(s,g,l||j||0,0,c,-1,g,!1,0,m,n),c.xs0=\"none\"!==n||\"display\"!==g&&-1===g.indexOf(\"Style\")?n:m):S(\"invalid \"+g+\" tween value: \"+b[g]):(c=new pa(s,g,j,l-j,c,0,g,k!==!1&&(\"px\"===p||\"zIndex\"===g),0,m,n),c.xs0=p)):c=ra(s,g,m,n,!0,null,c,0,f)),f&&c&&!c.plugin&&(c.plugin=f);return c},j.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=Math.round(b):f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;){if(2!==e.type)if(e.r&&-1!==e.type)if(b=Math.round(e.s+e.c),e.type){if(1===e.type){for(d=e.l,c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}}else e.t[e.p]=b+e.xs0;else e.t[e.p]=e.e;else e.setRatio(a);e=e._next}},j._enableTransforms=function(a){this._transform=this._transform||La(this._target,e,!0),this._transformType=this._transform.svg&&wa||!a&&3!==this._transformType?2:3};var Sa=function(a){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};j._addLazySet=function(a,b,c){var d=this._firstPT=new pa(a,b,0,0,this._firstPT,2);d.e=c,d.setRatio=Sa,d.data=this},j._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},j._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}return b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),a.prototype._kill.call(this,f)};var Ta=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Ta(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push($(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Ta(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h,i=b.to(a,c,d),j=[i],k=[],l=[],m=[],n=b._internals.reservedProps;for(a=i._targets||i.target,Ta(a,k,m),i.render(c,!0,!0),Ta(a,l),i.render(0,!0,!0),i._enabled(!0),e=m.length;--e>-1;)if(f=_(m[e],k[e],l[e]),f.firstMPT){f=f.difs;for(g in d)n[g]&&(f[g]=d[g]);h={};for(g in f)h[g]=k[e][g];j.push(b.fromTo(m[e],c,h,f))}return j},a.activate([g]),g},!0),function(){var a=_gsScope._gsDefine.plugin({propName:\"roundProps\",version:\"1.5\",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=function(a){for(;a;)a.f||a.blob||(a.r=1),a=a._next},c=a.prototype;c._onInitAllProps=function(){for(var a,c,d,e=this._tween,f=e.vars.roundProps.join?e.vars.roundProps:e.vars.roundProps.split(\",\"),g=f.length,h={},i=e._propLookup.roundProps;--g>-1;)h[f[g]]=1;for(g=f.length;--g>-1;)for(a=f[g],c=e._firstPT;c;)d=c._next,c.pg?c.t._roundProps(h,!0):c.n===a&&(2===c.f&&c.t?b(c.t._firstPT):(this._add(c.t,a,c.s,c.c),d&&(d._prev=c._prev),c._prev?c._prev._next=d:e._firstPT===c&&(e._firstPT=d),c._next=c._prev=null,e._propLookup[a]=i)),c=d;return!1},c._add=function(a,b,c,d){this._addTween(a,b,c,c+d,b,!0),this._overwriteProps.push(b)}}(),function(){_gsScope._gsDefine.plugin({propName:\"attr\",API:2,version:\"0.5.0\",init:function(a,b,c){var d;if(\"function\"!=typeof a.setAttribute)return!1;for(d in b)this._addTween(a,\"setAttribute\",a.getAttribute(d)+\"\",b[d]+\"\",d,!1,d),this._overwriteProps.push(d);return!0}})}(),_gsScope._gsDefine.plugin({propName:\"directionalRotation\",version:\"0.2.1\",API:2,init:function(a,b,c){\"object\"!=typeof b&&(b={rotation:b}),this.finals={};var d,e,f,g,h,i,j=b.useRadians===!0?2*Math.PI:360,k=1e-6;for(d in b)\"useRadians\"!==d&&(i=(b[d]+\"\").split(\"_\"),e=i[0],f=parseFloat(\"function\"!=typeof a[d]?a[d]:a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]()),g=this.finals[d]=\"string\"==typeof e&&\"=\"===e.charAt(1)?f+parseInt(e.charAt(0)+\"1\",10)*Number(e.substr(2)):Number(e)||0,h=g-f,i.length&&(e=i.join(\"_\"),-1!==e.indexOf(\"short\")&&(h%=j,h!==h%(j/2)&&(h=0>h?h+j:h-j)),-1!==e.indexOf(\"_cw\")&&0>h?h=(h+9999999999*j)%j-(h/j|0)*j:-1!==e.indexOf(\"ccw\")&&h>0&&(h=(h-9999999999*j)%j-(h/j|0)*j)),(h>k||-k>h)&&(this._addTween(a,d,f,f+h,d),this._overwriteProps.push(d)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,_gsScope._gsDefine(\"easing.Back\",[\"easing.Ease\"],function(a){var b,c,d,e=_gsScope.GreenSockGlobals||_gsScope,f=e.com.greensock,g=2*Math.PI,h=Math.PI/2,i=f._class,j=function(b,c){var d=i(\"easing.\"+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},k=a.register||function(){},l=function(a,b,c,d,e){var f=i(\"easing.\"+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return k(f,a),f},m=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},n=function(b,c){var d=i(\"easing.\"+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},o=l(\"Back\",n(\"BackOut\",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),n(\"BackIn\",function(a){return a*a*((this._p1+1)*a-this._p1)}),n(\"BackInOut\",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),p=i(\"easing.SlowMo\",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),q=p.prototype=new a;return q.constructor=p,q.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},p.ease=new p(.7,.7),q.config=p.config=function(a,b,c){return new p(a,b,c)},b=i(\"easing.SteppedEase\",function(a){a=a||1,this._p1=1/a,this._p2=a+1},!0),q=b.prototype=new a,q.constructor=b,q.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),(this._p2*a>>0)*this._p1},q.config=b.config=function(a){return new b(a)},c=i(\"easing.RoughEase\",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||\"none\",j=[],k=0,l=0|(b.points||20),n=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r=\"number\"==typeof b.strength?.4*b.strength:.4;--n>-1;)c=o?Math.random():1/l*n,d=q?q.getRatio(c):c,\"none\"===i?e=r:\"out\"===i?(f=1-c,e=f*f*r):\"in\"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:n%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new m(1,1,null),n=l;--n>-1;)g=j[n],h=new m(g.x,g.y,h);this._prev=new m(0,0,0!==h.t?h:h.next)},!0),q=c.prototype=new a,q.constructor=c,q.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},q.config=function(a){return new c(a)},c.ease=new c,l(\"Bounce\",j(\"BounceOut\",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),j(\"BounceIn\",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),j(\"BounceInOut\",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),l(\"Circ\",j(\"CircOut\",function(a){return Math.sqrt(1-(a-=1)*a)}),j(\"CircIn\",function(a){return-(Math.sqrt(1-a*a)-1)}),j(\"CircInOut\",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),d=function(b,c,d){var e=i(\"easing.\"+b,function(a,b){this._p1=a>=1?a:1,this._p2=(b||d)/(1>a?a:1),this._p3=this._p2/g*(Math.asin(1/this._p1)||0),this._p2=g/this._p2},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},l(\"Elastic\",d(\"ElasticOut\",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*this._p2)+1},.3),d(\"ElasticIn\",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2))},.3),d(\"ElasticInOut\",function(a){return(a*=2)<1?-.5*(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*this._p2)*.5+1},.45)),l(\"Expo\",j(\"ExpoOut\",function(a){return 1-Math.pow(2,-10*a)}),j(\"ExpoIn\",function(a){return Math.pow(2,10*(a-1))-.001}),j(\"ExpoInOut\",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),l(\"Sine\",j(\"SineOut\",function(a){return Math.sin(a*h)}),j(\"SineIn\",function(a){return-Math.cos(a*h)+1}),j(\"SineInOut\",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),i(\"easing.EaseLookup\",{find:function(b){return a.map[b]}},!0),k(e.SlowMo,\"SlowMo\",\"ease,\"),k(c,\"RoughEase\",\"ease,\"),k(b,\"SteppedEase\",\"ease,\"),o},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a,b){\"use strict\";var c=a.GreenSockGlobals=a.GreenSockGlobals||a;if(!c.TweenLite){var d,e,f,g,h,i=function(a){var b,d=a.split(\".\"),e=c;for(b=0;b<d.length;b++)e[d[b]]=e=e[d[b]]||{};return e},j=i(\"com.greensock\"),k=1e-10,l=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},m=function(){},n=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return null!=c&&(c instanceof Array||\"object\"==typeof c&&!!c.push&&a.call(c)===b)}}(),o={},p=function(d,e,f,g){this.sc=o[d]?o[d].sc:[],o[d]=this,this.gsClass=null,this.func=f;var h=[];this.check=function(j){for(var k,l,m,n,q,r=e.length,s=r;--r>-1;)(k=o[e[r]]||new p(e[r],[])).gsClass?(h[r]=k.gsClass,s--):j&&k.sc.push(this);if(0===s&&f)for(l=(\"com.greensock.\"+d).split(\".\"),m=l.pop(),n=i(l.join(\".\"))[m]=this.gsClass=f.apply(f,h),g&&(c[m]=n,q=\"undefined\"!=typeof module&&module.exports,!q&&\"function\"==typeof define&&define.amd?define((a.GreenSockAMDPath?a.GreenSockAMDPath+\"/\":\"\")+d.split(\".\").pop(),[],function(){return n}):d===b&&q&&(module.exports=n)),r=0;r<this.sc.length;r++)this.sc[r].check()},this.check(!0)},q=a._gsDefine=function(a,b,c,d){return new p(a,b,c,d)},r=j._class=function(a,b,c){return b=b||function(){},q(a,[],function(){return b},c),b};q.globals=c;var s=[0,0,1,1],t=[],u=r(\"easing.Ease\",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?s.concat(b):s},!0),v=u.map={},w=u.register=function(a,b,c,d){for(var e,f,g,h,i=b.split(\",\"),k=i.length,l=(c||\"easeIn,easeOut,easeInOut\").split(\",\");--k>-1;)for(f=i[k],e=d?r(\"easing.\"+f,null,!0):j.easing[f]||{},g=l.length;--g>-1;)h=l[g],v[f+\".\"+h]=v[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(f=u.prototype,f._calcEnd=!1,f.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},d=[\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"],e=d.length;--e>-1;)f=d[e]+\",Power\"+e,w(new u(null,null,1,e),f,\"easeOut\",!0),w(new u(null,null,2,e),f,\"easeIn\"+(0===e?\",easeNone\":\"\")),w(new u(null,null,3,e),f,\"easeInOut\");v.linear=j.easing.Linear.easeIn,v.swing=j.easing.Quad.easeInOut;var x=r(\"events.EventDispatcher\",function(a){this._listeners={},this._eventTarget=a||this});f=x.prototype,f.addEventListener=function(a,b,c,d,e){e=e||0;var f,i,j=this._listeners[a],k=0;for(null==j&&(this._listeners[a]=j=[]),i=j.length;--i>-1;)f=j[i],f.c===b&&f.s===c?j.splice(i,1):0===k&&f.pr<e&&(k=i+1);j.splice(k,0,{c:b,s:c,up:d,pr:e}),this!==g||h||g.wake()},f.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return void d.splice(c,1)},f.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,c=this._eventTarget;--b>-1;)d=e[b],d&&(d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c))};var y=a.requestAnimationFrame,z=a.cancelAnimationFrame,A=Date.now||function(){return(new Date).getTime()},B=A();for(d=[\"ms\",\"moz\",\"webkit\",\"o\"],e=d.length;--e>-1&&!y;)y=a[d[e]+\"RequestAnimationFrame\"],z=a[d[e]+\"CancelAnimationFrame\"]||a[d[e]+\"CancelRequestAnimationFrame\"];r(\"Ticker\",function(a,b){var c,d,e,f,i,j=this,l=A(),n=b!==!1&&y?\"auto\":!1,o=500,p=33,q=\"tick\",r=function(a){var b,g,h=A()-B;h>o&&(l+=h-p),B+=h,j.time=(B-l)/1e3,b=j.time-i,(!c||b>0||a===!0)&&(j.frame++,i+=b+(b>=f?.004:f-b),g=!0),a!==!0&&(e=d(r)),g&&j.dispatchEvent(q)};x.call(j),j.time=j.frame=0,j.tick=function(){r(!0)},j.lagSmoothing=function(a,b){o=a||1/k,p=Math.min(b,o,0)},j.sleep=function(){null!=e&&(n&&z?z(e):clearTimeout(e),d=m,e=null,j===g&&(h=!1))},j.wake=function(a){null!==e?j.sleep():a?l+=-B+(B=A()):j.frame>10&&(B=A()-o+5),d=0===c?m:n&&y?y:function(a){return setTimeout(a,1e3*(i-j.time)+1|0)},j===g&&(h=!0),r(2)},j.fps=function(a){return arguments.length?(c=a,f=1/(c||60),i=this.time+f,void j.wake()):c},j.useRAF=function(a){return arguments.length?(j.sleep(),n=a,void j.fps(c)):n},j.fps(a),setTimeout(function(){\"auto\"===n&&j.frame<5&&\"hidden\"!==document.visibilityState&&j.useRAF(!1)},1500)}),f=j.Ticker.prototype=new j.events.EventDispatcher,f.constructor=j.Ticker;var C=r(\"core.Animation\",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,V){h||g.wake();var c=this.vars.useFrames?U:V;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});g=C.ticker=new j.Ticker,f=C.prototype,f._dirty=f._gc=f._initted=f._paused=!1,f._totalTime=f._time=0,f._rawPrevTime=-1,f._next=f._last=f._onUpdate=f._timeline=f.timeline=null,f._paused=!1;var D=function(){h&&A()-B>2e3&&g.wake(),setTimeout(D,2e3)};D(),f.play=function(a,b){return null!=a&&this.seek(a,b),this.reversed(!1).paused(!1)},f.pause=function(a,b){return null!=a&&this.seek(a,b),this.paused(!0)},f.resume=function(a,b){return null!=a&&this.seek(a,b),this.paused(!1)},f.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},f.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},f.reverse=function(a,b){return null!=a&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},f.render=function(a,b,c){},f.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},f.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime())>=c&&a<c+this.totalDuration()/this._timeScale},f._enabled=function(a,b){return h||g.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},f._kill=function(a,b){return this._enabled(!1,!1)},f.kill=function(a,b){return this._kill(a,b),this},f._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},f._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)\"{self}\"===a[b]&&(c[b]=this);return c},f._callback=function(a){var b=this.vars;b[a].apply(b[a+\"Scope\"]||b.callbackScope||this,b[a+\"Params\"]||t)},f.eventCallback=function(a,b,c,d){if(\"on\"===(a||\"\").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+\"Params\"]=n(c)&&-1!==c.join(\"\").indexOf(\"{self}\")?this._swapSelfInParams(c):c,e[a+\"Scope\"]=d),\"onUpdate\"===a&&(this._onUpdate=b)}return this},f.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},f.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},f.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},f.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},f.totalTime=function(a,b,c){if(h||g.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&(I.length&&X(),this.render(a,b,!1),I.length&&X())}return this},f.progress=f.totalProgress=function(a,b){var c=this.duration();return arguments.length?this.totalTime(c*a,b):c?this._time/c:this.ratio},f.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},f.endTime=function(a){return this._startTime+(0!=a?this.totalDuration():this.duration())/this._timeScale},f.timeScale=function(a){if(!arguments.length)return this._timeScale;if(a=a||k,this._timeline&&this._timeline.smoothChildTiming){var b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime();this._startTime=c-(c-this._startTime)*this._timeScale/a}return this._timeScale=a,this._uncache(!1)},f.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},f.paused=function(a){if(!arguments.length)return this._paused;var b,c,d=this._timeline;return a!=this._paused&&d&&(h||a||g.wake(),b=d.rawTime(),c=b-this._pauseTime,!a&&d.smoothChildTiming&&(this._startTime+=c,this._uncache(!1)),this._pauseTime=a?b:null,this._paused=a,this._active=this.isActive(),!a&&0!==c&&this._initted&&this.duration()&&(b=d.smoothChildTiming?this._totalTime:(b-this._startTime)/this._timeScale,this.render(b,b===this._totalTime,!0))),this._gc&&!a&&this._enabled(!0,!1),this};var E=r(\"core.SimpleTimeline\",function(a){C.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});f=E.prototype=new C,f.constructor=E,f.kill()._gc=!1,f._first=f._last=f._recent=null,f._sortChildren=!1,f.add=f.insert=function(a,b,c,d){var e,f;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=a._startTime+(this.rawTime()-a._startTime)/a._timeScale),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),e=this._last,this._sortChildren)for(f=a._startTime;e&&e._startTime>f;)e=e._prev;return e?(a._next=e._next,e._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=e,this._recent=a,this._timeline&&this._uncache(!0),this},f._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),a._next=a._prev=a.timeline=null,a===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},f.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},f.rawTime=function(){return h||g.wake(),this._totalTime};var F=r(\"TweenLite\",function(b,c,d){if(C.call(this,c,d),this.render=F.prototype.render,null==b)throw\"Cannot tween a null target.\";this.target=b=\"string\"!=typeof b?b:F.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?T[F.defaultOverwrite]:\"number\"==typeof i?i>>0:T[i],(h||b instanceof Array||b.push&&n(b))&&\"number\"!=typeof b[0])for(this._targets=g=l(b),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?\"string\"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(l(f))):(this._siblings[e]=Y(f,this,!1),1===i&&this._siblings[e].length>1&&$(f,this,null,1,this._siblings[e])):(f=g[e--]=F.selector(f),\"string\"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=Y(b,this,!1),1===i&&this._siblings.length>1&&$(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-k,this.render(-this._delay))},!0),G=function(b){return b&&b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},H=function(a,b){var c,d={};for(c in a)S[c]||c in b&&\"transform\"!==c&&\"x\"!==c&&\"y\"!==c&&\"width\"!==c&&\"height\"!==c&&\"className\"!==c&&\"border\"!==c||!(!P[c]||P[c]&&P[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};f=F.prototype=new C,f.constructor=F,f.kill()._gc=!1,f.ratio=0,f._firstPT=f._targets=f._overwrittenProps=f._startAt=null,f._notifyPluginsOfEnabled=f._lazy=!1,F.version=\"1.18.2\",F.defaultEase=f._ease=new u(null,null,1,1),F.defaultOverwrite=\"auto\",F.ticker=g,F.autoSleep=120,F.lagSmoothing=function(a,b){g.lagSmoothing(a,b)},F.selector=a.$||a.jQuery||function(b){var c=a.$||a.jQuery;return c?(F.selector=c,c(b)):\"undefined\"==typeof document?b:document.querySelectorAll?document.querySelectorAll(b):document.getElementById(\"#\"===b.charAt(0)?b.substr(1):b)};var I=[],J={},K=/(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi,L=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.blob?a?this.join(\"\"):this.start:c.c*a+c.s,c.r?b=Math.round(b):d>b&&b>-d&&(b=0),c.f?c.fp?c.t[c.p](c.fp,b):c.t[c.p](b):c.t[c.p]=b,c=c._next},M=function(a,b,c,d){var e,f,g,h,i,j,k,l=[a,b],m=0,n=\"\",o=0;for(l.start=a,c&&(c(l),a=l[0],b=l[1]),l.length=0,e=a.match(K)||[],f=b.match(K)||[],d&&(d._next=null,d.blob=1,l._firstPT=d),i=f.length,h=0;i>h;h++)k=f[h],j=b.substr(m,b.indexOf(k,m)-m),n+=j||!h?j:\",\",m+=j.length,o?o=(o+1)%5:\"rgba(\"===j.substr(-5)&&(o=1),k===e[h]||e.length<=h?n+=k:(n&&(l.push(n),n=\"\"),g=parseFloat(e[h]),l.push(g),l._firstPT={_next:l._firstPT,t:l,p:l.length-1,s:g,c:(\"=\"===k.charAt(1)?parseInt(k.charAt(0)+\"1\",10)*parseFloat(k.substr(2)):parseFloat(k)-g)||0,f:0,r:o&&4>o}),m+=k.length;return n+=b.substr(m),n&&l.push(n),l.setRatio=L,l},N=function(a,b,c,d,e,f,g,h){var i,j,k=\"get\"===c?a[b]:c,l=typeof a[b],m=\"string\"==typeof d&&\"=\"===d.charAt(1),n={t:a,p:b,s:k,f:\"function\"===l,pg:0,n:e||b,r:f,pr:0,c:m?parseInt(d.charAt(0)+\"1\",10)*parseFloat(d.substr(2)):parseFloat(d)-k||0};return\"number\"!==l&&(\"function\"===l&&\"get\"===c&&(j=b.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+b.substr(3)]?b:\"get\"+b.substr(3),n.s=k=g?a[j](g):a[j]()),\"string\"==typeof k&&(g||isNaN(k))?(n.fp=g,i=M(k,d,h||F.defaultStringFilter,n),n={t:i,p:\"setRatio\",s:0,c:1,f:2,pg:0,n:e||b,pr:0}):m||(n.s=parseFloat(k),n.c=parseFloat(d)-n.s||0)),n.c?((n._next=this._firstPT)&&(n._next._prev=n),this._firstPT=n,n):void 0},O=F._internals={isArray:n,isSelector:G,lazyTweens:I,blobDif:M},P=F._plugins={},Q=O.tweenLookup={},R=0,S=O.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1},T={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,\"true\":1,\"false\":0},U=C._rootFramesTimeline=new E,V=C._rootTimeline=new E,W=30,X=O.lazyRender=function(){\nvar a,b=I.length;for(J={};--b>-1;)a=I[b],a&&a._lazy!==!1&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);I.length=0};V._startTime=g.time,U._startTime=g.frame,V._active=U._active=!0,setTimeout(X,1),C._updateRoot=F.render=function(){var a,b,c;if(I.length&&X(),V.render((g.time-V._startTime)*V._timeScale,!1,!1),U.render((g.frame-U._startTime)*U._timeScale,!1,!1),I.length&&X(),g.frame>=W){W=g.frame+(parseInt(F.autoSleep,10)||120);for(c in Q){for(b=Q[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete Q[c]}if(c=V._first,(!c||c._paused)&&F.autoSleep&&!U._first&&1===g._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||g.sleep()}}},g.addEventListener(\"tick\",C._updateRoot);var Y=function(a,b,c){var d,e,f=a._gsTweenID;if(Q[f||(a._gsTweenID=f=\"t\"+R++)]||(Q[f]={target:a,tweens:[]}),b&&(d=Q[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return Q[f].tweens},Z=function(a,b,c,d){var e,f,g=a.vars.onOverwrite;return g&&(e=g(a,b,c,d)),g=F.onOverwrite,g&&(f=g(a,b,c,d)),e!==!1&&f!==!1},$=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._kill(null,a,b)&&(g=!0);else if(5===d)break;return g}var j,l=b._startTime+k,m=[],n=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(j=j||_(b,0,o),0===_(h,j,o)&&(m[n++]=h)):h._startTime<=l&&h._startTime+h.totalDuration()/h._timeScale>l&&((o||!h._initted)&&l-h._startTime<=2e-10||(m[n++]=h)));for(f=n;--f>-1;)if(h=m[f],2===d&&h._kill(c,a,b)&&(g=!0),2!==d||!h._firstPT&&h._initted){if(2!==d&&!Z(h,b))continue;h._enabled(!1,!1)&&(g=!0)}return g},_=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*k>f-b?k:(f+=a.totalDuration()/a._timeScale/e)>b+k?0:f-b-k};f._init=function(){var a,b,c,d,e,f=this.vars,g=this._overwrittenProps,h=this._duration,i=!!f.immediateRender,j=f.ease;if(f.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),e={};for(d in f.startAt)e[d]=f.startAt[d];if(e.overwrite=!1,e.immediateRender=!0,e.lazy=i&&f.lazy!==!1,e.startAt=e.delay=null,this._startAt=F.to(this.target,0,e),i)if(this._time>0)this._startAt=null;else if(0!==h)return}else if(f.runBackwards&&0!==h)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(i=!1),c={};for(d in f)S[d]&&\"autoCSS\"!==d||(c[d]=f[d]);if(c.overwrite=0,c.data=\"isFromStart\",c.lazy=i&&f.lazy!==!1,c.immediateRender=i,this._startAt=F.to(this.target,0,c),i){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=j=j?j instanceof u?j:\"function\"==typeof j?new u(j,f.easeParams):v[j]||F.defaultEase:F.defaultEase,f.easeParams instanceof Array&&j.config&&(this._ease=j.config.apply(j,f.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length;--a>-1;)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],g?g[a]:null)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,g);if(b&&F._onPluginEvent(\"_onInitAllProps\",this),g&&(this._firstPT||\"function\"!=typeof this.target&&this._enabled(!1,!1)),f.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=f.onUpdate,this._initted=!0},f._initProps=function(b,c,d,e){var f,g,h,i,j,k;if(null==b)return!1;J[b._gsTweenID]&&X(),this.vars.css||b.style&&b!==a&&b.nodeType&&P.css&&this.vars.autoCSS!==!1&&H(this.vars,b);for(f in this.vars)if(k=this.vars[f],S[f])k&&(k instanceof Array||k.push&&n(k))&&-1!==k.join(\"\").indexOf(\"{self}\")&&(this.vars[f]=k=this._swapSelfInParams(k,this));else if(P[f]&&(i=new P[f])._onInitTween(b,this.vars[f],this)){for(this._firstPT=j={_next:this._firstPT,t:i,p:\"setRatio\",s:0,c:1,f:1,n:f,pg:1,pr:i._priority},g=i._overwriteProps.length;--g>-1;)c[i._overwriteProps[g]]=this._firstPT;(i._priority||i._onInitAllProps)&&(h=!0),(i._onDisable||i._onEnable)&&(this._notifyPluginsOfEnabled=!0),j._next&&(j._next._prev=j)}else c[f]=N.call(this,b,f,\"get\",k,f,0,null,this.vars.stringFilter);return e&&this._kill(e,b)?this._initProps(b,c,d,e):this._overwrite>1&&this._firstPT&&d.length>1&&$(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(J[b._gsTweenID]=!0),h)},f.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration,j=this._rawPrevTime;if(a>=i-1e-7)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===i&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>j||0>=a&&a>=-1e-7||j===k&&\"isPause\"!==this.data)&&j!==a&&(c=!0,j>k&&(e=\"onReverseComplete\")),this._rawPrevTime=g=!b||a||j===a?a:k);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&j>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===i&&(this._initted||!this.vars.lazy||c)&&(j>=0&&(j!==k||\"isPause\"!==this.data)&&(c=!0),this._rawPrevTime=g=!b||a||j===a?a:k)),this._initted||(c=!0);else if(this._totalTime=this._time=a,this._easeType){var l=a/i,m=this._easeType,n=this._easePower;(1===m||3===m&&l>=.5)&&(l=1-l),3===m&&(l*=2),1===n?l*=l:2===n?l*=l*l:3===n?l*=l*l*l:4===n&&(l*=l*l*l*l),1===m?this.ratio=1-l:2===m?this.ratio=l:.5>a/i?this.ratio=l/2:this.ratio=1-l/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=h,this._rawPrevTime=j,I.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&a!==-1e-4&&this._startAt.render(a,b,c),b||(this._time!==h||d)&&this._callback(\"onUpdate\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&a!==-1e-4&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===i&&this._rawPrevTime===k&&g!==k&&(this._rawPrevTime=0))}},f._kill=function(a,b,c){if(\"all\"===a&&(a=null),null==a&&(null==b||b===this.target))return this._lazy=!1,this._enabled(!1,!1);b=\"string\"!=typeof b?b||this._targets||this.target:F.selector(b)||b;var d,e,f,g,h,i,j,k,l,m=c&&this._time&&c._startTime===this._startTime&&this._timeline===c._timeline;if((n(b)||G(b))&&\"number\"!=typeof b[0])for(d=b.length;--d>-1;)this._kill(a,b[d],c)&&(i=!0);else{if(this._targets){for(d=this._targets.length;--d>-1;)if(b===this._targets[d]){h=this._propLookup[d]||{},this._overwrittenProps=this._overwrittenProps||[],e=this._overwrittenProps[d]=a?this._overwrittenProps[d]||{}:\"all\";break}}else{if(b!==this.target)return!1;h=this._propLookup,e=this._overwrittenProps=a?this._overwrittenProps||{}:\"all\"}if(h){if(j=a||h,k=a!==e&&\"all\"!==e&&a!==h&&(\"object\"!=typeof a||!a._tempKill),c&&(F.onOverwrite||this.vars.onOverwrite)){for(f in j)h[f]&&(l||(l=[]),l.push(f));if((l||!a)&&!Z(this,c,b,l))return!1}for(f in j)(g=h[f])&&(m&&(g.f?g.t[g.p](g.s):g.t[g.p]=g.s,i=!0),g.pg&&g.t._kill(j)&&(i=!0),g.pg&&0!==g.t._overwriteProps.length||(g._prev?g._prev._next=g._next:g===this._firstPT&&(this._firstPT=g._next),g._next&&(g._next._prev=g._prev),g._next=g._prev=null),delete h[f]),k&&(e[f]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return i},f.invalidate=function(){return this._notifyPluginsOfEnabled&&F._onPluginEvent(\"_onDisable\",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],C.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-k,this.render(-this._delay)),this},f._enabled=function(a,b){if(h||g.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=Y(d[c],this,!0);else this._siblings=Y(this.target,this,!0)}return C.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?F._onPluginEvent(a?\"_onEnable\":\"_onDisable\",this):!1},F.to=function(a,b,c){return new F(a,b,c)},F.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new F(a,b,c)},F.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new F(a,b,d)},F.delayedCall=function(a,b,c,d,e){return new F(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,lazy:!1,useFrames:e,overwrite:0})},F.set=function(a,b){return new F(a,0,b)},F.getTweensOf=function(a,b){if(null==a)return[];a=\"string\"!=typeof a?a:F.selector(a)||a;var c,d,e,f;if((n(a)||G(a))&&\"number\"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(F.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else for(d=Y(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d},F.killTweensOf=F.killDelayedCallsTo=function(a,b,c){\"object\"==typeof b&&(c=b,b=!1);for(var d=F.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var aa=r(\"plugins.TweenPlugin\",function(a,b){this._overwriteProps=(a||\"\").split(\",\"),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=aa.prototype},!0);if(f=aa.prototype,aa.version=\"1.18.0\",aa.API=2,f._firstPT=null,f._addTween=N,f.setRatio=L,f._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},f._roundProps=function(a,b){for(var c=this._firstPT;c;)(a[this._propName]||null!=c.n&&a[c.n.split(this._propName+\"_\").join(\"\")])&&(c.r=b),c=c._next},F._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if(\"_onInitAllProps\"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&\"function\"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},aa.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===aa.API&&(P[(new a[b])._propName]=a[b]);return!0},q.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw\"illegal plugin definition.\";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:\"_onInitTween\",set:\"setRatio\",kill:\"_kill\",round:\"_roundProps\",initAll:\"_onInitAllProps\"},g=r(\"plugins.\"+c.charAt(0).toUpperCase()+c.substr(1)+\"Plugin\",function(){aa.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new aa(c);h.constructor=g,g.API=a.API;for(b in f)\"function\"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,aa.activate([g]),g},d=a._gsQueue){for(e=0;e<d.length;e++)d[e]();for(f in o)o[f].func||a.console.log(\"GSAP encountered missing dependency: com.greensock.\"+f)}h=!1}}(\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window,\"TweenMax\");","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update () {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function() {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t//console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t//console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseDownRotate( event );\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseDownDolly( event );\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseDownPan( event );\n\n\t\t\tstate = STATE.PAN;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseMoveRotate( event );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseMoveDolly( event );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseMovePan( event );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n","/**\n * @author dmarcos / https://github.com/dmarcos\n * @author mrdoob / http://mrdoob.com\n */\n\nTHREE.VRControls = function ( object, onError ) {\n\n\tvar scope = this;\n\n\tvar vrDisplay, vrDisplays;\n\n\tvar standingMatrix = new THREE.Matrix4();\n\n\tvar frameData = null;\n\tif ( 'VRFrameData' in window ) {\n\t\tframeData = new VRFrameData();\n\t}\n\n\tfunction gotVRDisplays( displays ) {\n\n\t\tvrDisplays = displays;\n\n\t\tif ( displays.length > 0 ) {\n\n\t\t\tvrDisplay = displays[ 0 ];\n\n\t\t} else {\n\n\t\t\tif ( onError ) onError( 'VR input not available.' );\n\n\t\t}\n\n\t}\n\n\tif ( navigator.getVRDisplays ) {\n\n\t\tnavigator.getVRDisplays().then( gotVRDisplays );\n\n\t}\n\n\t// the Rift SDK returns the position in meters\n\t// this scale factor allows the user to define how meters\n\t// are converted to scene units.\n\n\tthis.scale = 1;\n\n\t// If true will use \"standing space\" coordinate system where y=0 is the\n\t// floor and x=0, z=0 is the center of the room.\n\tthis.standing = false;\n\n\t// Distance from the users eyes to the floor in meters. Used when\n\t// standing=true but the VRDisplay doesn't provide stageParameters.\n\tthis.userHeight = 1.6;\n\n\tthis.getVRDisplay = function () {\n\n\t\treturn vrDisplay;\n\n\t};\n\n\tthis.getVRDisplays = function () {\n\n\t\treturn vrDisplays;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvar pose;\n\n\t\t\tif ( vrDisplay.getFrameData ) {\n\n\t\t\t\tvrDisplay.getFrameData( frameData );\n\t\t\t\tpose = frameData.pose;\n\n\t\t\t} else if ( vrDisplay.getPose ) {\n\n\t\t\t\tpose = vrDisplay.getPose();\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tobject.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tobject.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( this.standing ) {\n\n\t\t\t\tif ( vrDisplay.stageParameters ) {\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tstandingMatrix.fromArray( vrDisplay.stageParameters.sittingToStandingTransform );\n\t\t\t\t\tobject.applyMatrix( standingMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.position.setY( object.position.y + this.userHeight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.position.multiplyScalar( scope.scale );\n\n\t\t}\n\n\t};\n\n\tthis.resetPose = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvrDisplay.resetPose();\n\n\t\t}\n\n\t};\n\n\tthis.resetSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .resetSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.zeroSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .zeroSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tvrDisplay = null;\n\n\t};\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com\n * @author stewdio / http://stewd.io\n */\n\nTHREE.ViveController = function ( id ) {\n\n\tTHREE.Object3D.call( this );\n\n\tvar scope = this;\n\tvar gamepad;\n\n\tvar axes = [ 0, 0 ];\n\tvar thumbpadIsPressed = false;\n\tvar triggerIsPressed = false;\n\tvar gripsArePressed = false;\n\tvar menuIsPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\t// Iterate across gamepads as Vive Controllers may not be\n\t\t// in position 0 and 1.\n\n\t\tvar gamepads = navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0; i < 4; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && gamepad.id === 'OpenVR Gamepad' ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.matrixAutoUpdate = false;\n\tthis.standingMatrix = new THREE.Matrix4();\n\n\tthis.getGamepad = function () {\n\n\t\treturn gamepad;\n\n\t};\n\n\tthis.getButtonState = function ( button ) {\n\n\t\tif ( button === 'thumbpad' ) return thumbpadIsPressed;\n\t\tif ( button === 'trigger' ) return triggerIsPressed;\n\t\tif ( button === 'grips' ) return gripsArePressed;\n\t\tif ( button === 'menu' ) return menuIsPressed;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tgamepad = findGamepad( id );\n\n\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\tif ( gamepad.pose === null ) return; // No user action yet\n\n\t\t\t//  Position and orientation.\n\n\t\t\tvar pose = gamepad.pose;\n\n\t\t\tif ( pose.position !== null ) scope.position.fromArray( pose.position );\n\t\t\tif ( pose.orientation !== null ) scope.quaternion.fromArray( pose.orientation );\n\t\t\tscope.matrix.compose( scope.position, scope.quaternion, scope.scale );\n\t\t\tscope.matrix.multiplyMatrices( scope.standingMatrix, scope.matrix );\n\t\t\tscope.matrixWorldNeedsUpdate = true;\n\t\t\tscope.visible = true;\n\n\t\t\t//  Thumbpad and Buttons.\n\n\t\t\tif ( axes[ 0 ] !== gamepad.axes[ 0 ] || axes[ 1 ] !== gamepad.axes[ 1 ] ) {\n\n\t\t\t\taxes[ 0 ] = gamepad.axes[ 0 ]; //  X axis: -1 = Left, +1 = Right.\n\t\t\t\taxes[ 1 ] = gamepad.axes[ 1 ]; //  Y axis: -1 = Bottom, +1 = Top.\n\t\t\t\tscope.dispatchEvent( { type: 'axischanged', axes: axes } );\n\n\t\t\t}\n\n\t\t\tif ( thumbpadIsPressed !== gamepad.buttons[ 0 ].pressed ) {\n\n\t\t\t\tthumbpadIsPressed = gamepad.buttons[ 0 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: thumbpadIsPressed ? 'thumbpaddown' : 'thumbpadup' } );\n\n\t\t\t}\n\n\t\t\tif ( triggerIsPressed !== gamepad.buttons[ 1 ].pressed ) {\n\n\t\t\t\ttriggerIsPressed = gamepad.buttons[ 1 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: triggerIsPressed ? 'triggerdown' : 'triggerup' } );\n\n\t\t\t}\n\n\t\t\tif ( gripsArePressed !== gamepad.buttons[ 2 ].pressed ) {\n\n\t\t\t\tgripsArePressed = gamepad.buttons[ 2 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: gripsArePressed ? 'gripsdown' : 'gripsup' } );\n\n\t\t\t}\n\n\t\t\tif ( menuIsPressed !== gamepad.buttons[ 3 ].pressed ) {\n\n\t\t\t\tmenuIsPressed = gamepad.buttons[ 3 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: menuIsPressed ? 'menudown' : 'menuup' } );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tscope.visible = false;\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.ViveController.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ViveController.prototype.constructor = THREE.ViveController;\n","var BG = function () {\r\n\r\n    var groupHolder;\r\n    var material;\r\n    var planeMaterial\r\n    var spd = 0;\r\n\r\n    var shapes = [];\r\n\r\n    var cubeMesh, cubeShader;\r\n\r\n    function init() {\r\n\r\n        //console.log(\"BG\")\r\n\r\n        //init event listeners\r\n        events.on(\"update\", update);\r\n        events.on(\"onBeat\", onBeat);\r\n\r\n\r\n        groupHolder = new THREE.Object3D();\r\n        VizHandler.getScene().add(groupHolder);\r\n\r\n        var cubeMapId = 23//4//28//23//20//16//7;//9\r\n        //4,,23,16,9,,28,20\r\n        cubeMap = Assets.getCubeMap(cubeMapId)\r\n\r\n        cubeShader = THREE.ShaderLib['cube'];\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n\r\n        var skyBoxMaterial = new THREE.ShaderMaterial({\r\n            fragmentShader: cubeShader.fragmentShader,\r\n            vertexShader: cubeShader.vertexShader,\r\n            uniforms: cubeShader.uniforms,\r\n            depthWrite: true,\r\n            side: THREE.BackSide\r\n        });\r\n\r\n        var skyBox = new THREE.Mesh(\r\n                new THREE.CubeGeometry(1500, 1500, 1500),\r\n                skyBoxMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        //groupHolder.add(skyBox);\r\n\r\n        cubeMaterial = new THREE.MeshStandardMaterial({\r\n            shading: THREE.FlatShading,\r\n            //envMap: reflectionCube,\r\n            //side: THREE.DoubleSide,\r\n            //depthWrite:false,\r\n            //depthTest:false,\r\n            //blendEquation:THREE.MinEquation\r\n        })\r\n\r\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(10, 10), cubeMaterial);\r\n        cubeMesh.rotation.x = -Math.PI / 2\r\n        cubeMesh.position.y = -.25;\r\n        cubeMesh.castShadow = true;\r\n        cubeMesh.receiveShadow = true;\r\n        groupHolder.add(cubeMesh);\r\n\r\n        var test = new THREE.Mesh(\r\n                new THREE.CubeGeometry(.2, .2, .2),\r\n                cubeMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        test.castShadow = true;\r\n        test.receiveShadow = true;\r\n        //groupHolder.add(test);\r\n\r\n\r\n        /*planeMaterial = new THREE.MeshPhongMaterial({\r\n         envMap: Assets.textureCube(),\r\n         reflectivity: 1,\r\n         //opacity:.3,//.75,\r\n         color: 0xffffff,\r\n         //transparent:true,\r\n         shading: THREE.FlatShading,\r\n         //blending: THREE.AdditiveBlending,\r\n         side: THREE.DoubleSide//BackSide\r\n         });\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         var vert = groundGeometry.vertices\r\n         for (var i = 0; i < vert.length; i++) {\r\n         vert[i].z += Math.random() * 1000\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground.position.x = -2000;\r\n         ground.position.y = -1500;\r\n         ground.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground );\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         for (var i = 0; i < vert.length; i++) {\r\n         groundGeometry.vertices[i].x = -vert[i].x\r\n         groundGeometry.vertices[i].y = vert[i].y\r\n         groundGeometry.vertices[i].z = vert[i].z\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground2 = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground2.position.x = 2000;\r\n         ground2.position.y = -1500;\r\n         ground2.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground2 );\r\n         */\r\n\r\n\r\n    }\r\n\r\n    function update() {\r\n\r\n        //cubeMesh.rotation.x += spd * .001\r\n        //cubeMesh.scale.x = cubeMesh.scale.y = cubeMesh.scale.z = 16 - ControlsHandler.fxParams.bgProgress * 8\r\n        //groupHolder.rotation.z+=.001\r\n    }\r\n\r\n    function onBeat() {\r\n        /*if (Math.random() < .05)\r\n         spd = (Math.random() - .5)\r\n         \r\n         if (ControlsHandler.fxParams.wireframe) {\r\n         cubeMesh.material.wireframe = true;\r\n         planeMaterial.wireframe = true;\r\n         } else {\r\n         cubeMesh.material.wireframe = false;\r\n         planeMaterial.wireframe = false;\r\n         }\r\n         \r\n         \r\n         var basic = [ControlsHandler.fxParams.colorProgress * .75, ControlsHandler.fxParams.colorProgress * .75, (1 - ControlsHandler.fxParams.colorProgress) * .5]\r\n         cubeMesh.material.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         planeMaterial.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         if (ControlsHandler.fxParams.black) {\r\n         cubeMesh.material.color.setRGB(.2, .2, .2);\r\n         planeMaterial.color.setRGB(.2, .2, .2);\r\n         }*/\r\n    }\r\n\r\n    function setEnvMap(cubeMap) {\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        update: update,\r\n        onBeat: onBeat,\r\n        setEnvMap: setEnvMap\r\n    };\r\n\r\n}();","var Mecha = function () {\n    var groupHolder;\n    var multiMaterial\n    var scene\n    var dae;\n    var timeout\n    var flotilla = []\n    var material\n    var bonesCount = 10;\n    var bonesPositions = []\n    var bonesPositionsTween = []\n    var center = new THREE.Vector3()\n    var centerTween = new THREE.Vector3()\n    var mouseControl = false;\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n        groupHolder = new THREE.Object3D();\n        VizHandler.getScene().add(groupHolder);\n\n        reload()\n\n        cubeMaterial = new THREE.MeshPhongMaterial({\n            shading: THREE.FlatShading,\n            emissive: 0x333333\n        })\n\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), cubeMaterial);\n        cubeMesh.rotation.x = -Math.PI / 2\n        cubeMesh.position.y = -.25;\n        //cubeMesh.castShadow = true;\n        cubeMesh.receiveShadow = true;\n        groupHolder.add(cubeMesh);\n\n        document.addEventListener(\"mousemove\", onDocumentMouseDown);\n        document.addEventListener(\"touchmove\", onDocumentTouchStart, false);\n    }\n    function onDocumentTouchStart(event) {\n        if (event.touches.length === 1) {\n            var mouse = new THREE.Vector2();\n            mouse.x = (event.touches[ 0 ].pageX / window.innerWidth) * 2 - 1;\n            mouse.y = -(event.touches[ 0 ].pageY / window.innerHeight) * 2 + 1;\n            boom(mouse)\n        }\n    }\n    function onDocumentMouseDown(event) {\n        var mouse = new THREE.Vector2();\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        boom(mouse)\n\n    }\n    function boom(mouse) {\n        var raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(mouse, VizHandler.getCamera());\n        var intersects = raycaster.intersectObject(cubeMesh, true);\n        //console.log(intersects, mouse)\n        if (intersects[ 0 ]) {\n            mouseControl = true\n            //console.log(intersects[ 0 ])\n            var p = intersects[ 0 ].point.multiplyScalar(1 / .05)\n            //center.copy()\n            TweenMax.to(center, center.distanceTo(p) * .1, {x: p.x * .6, z: p.z * .6, ease: Linear.easeNone, onComplete: function () {\n                    mouseControl = false\n                }});\n        }\n    }\n\n    function reload() {\n        if (dae) {\n            groupHolder.remove(dae);\n            dae.geometry.dispose();\n            dae = null;\n        }\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            skinning: true,\n            bumpScale: bumpScale,\n            color: 0xFFFFFF,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        initBones();\n    }\n\n    function initBones() {\n        meshes = []\n        skeletonHelpers = [];\n\n        var segmentHeight = 5;\n        var segmentCount = 2;\n        var height = segmentHeight * segmentCount;\n        var halfHeight = height * 0.5;\n\n        var sizing = {\n            segmentHeight: segmentHeight,\n            segmentCount: segmentCount,\n            height: height,\n            halfHeight: halfHeight\n        };\n\n        for (var i = 0; i < bonesCount; i++) {\n            var mesh\n            var geometry = createGeometry(sizing);\n            var bones = createBones(sizing);\n            mesh = createMesh(geometry, bones);\n            mesh.scale.set(.05, .05, .05)\n\n            groupHolder.add(mesh);\n            meshes.push(mesh)\n\n            var pos = new THREE.Vector3();\n            pos.oldCenter = new THREE.Vector3();\n            bonesPositions.push(pos)\n            bonesPositionsTween.push(pos.clone())\n        }\n\n    }\n\n    function createGeometry(sizing) {\n\n        var geometry = new THREE.CylinderGeometry(\n                0, // radiusTop\n                3, // radiusBottom\n                sizing.height, // height\n                7, // radiusSegments\n                sizing.segmentCount * 3, // heightSegments\n                true                     // openEnded\n                );\n\n        for (var i = 0; i < geometry.vertices.length; i++) {\n\n            var vertex = geometry.vertices[ i ];\n            var y = (vertex.y + sizing.halfHeight);\n\n            var skinIndex = Math.floor(y / sizing.segmentHeight);\n            var skinWeight = (y % sizing.segmentHeight) / sizing.segmentHeight;\n\n            vertex.x -= (.5 - Math.random()) * 2\n            vertex.z -= (.5 - Math.random()) * 2\n            if (vertex.y == -sizing.segmentHeight) {\n                vertex.x = vertex.z = 0;\n            }\n\n            geometry.skinIndices.push(new THREE.Vector4(skinIndex, skinIndex + 1, 0, 0));\n            geometry.skinWeights.push(new THREE.Vector4(1 - skinWeight, skinWeight, 0, 0));\n\n        }\n\n        return geometry;\n\n    }\n\n    function createBones(sizing) {\n\n        bones = [];\n\n        var prevBone = new THREE.Bone();\n        bones.push(prevBone);\n        prevBone.position.y = -sizing.halfHeight;\n\n        for (var i = 0; i < sizing.segmentCount; i++) {\n\n            var bone = new THREE.Bone();\n            bone.position.y = sizing.segmentHeight;\n            bones.push(bone);\n            prevBone.add(bone);\n            prevBone = bone;\n\n        }\n\n        return bones;\n\n    }\n\n    function createMesh(geometry, bones) {\n\n        var mesh = new THREE.SkinnedMesh(geometry, material);\n        var skeleton = new THREE.Skeleton(bones);\n        mesh.castShadow = true;\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n\n        mesh.add(bones[ 0 ]);\n        mesh.bind(skeleton);\n\n        var skeletonHelper = new THREE.SkeletonHelper(mesh);\n        skeletonHelper.material.linewidth = 2;\n        //groupHolder.add(skeletonHelper);\n        skeletonHelpers.push(skeletonHelper)\n\n        return mesh;\n\n    }\n\n    function update() {\n\n        var time = Date.now() * 0.00010;\n        //var bone = mesh;\n\n        //Wiggle the bones\n        /*if (state.animateBones) {\n         for (var i = 0; i < mesh.skeleton.bones.length; i++) {\n         mesh.skeleton.bones[ i ].position.x = 20*Math.sin(i+3*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.z = 20*Math.sin(i+2*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.y = 10*Math.sin(i+time) * 2 / mesh.skeleton.bones.length;\n         }\n         }*/\n        var i = 0\n\n        var spd = .2\n        if (!mouseControl) {\n            var des = new THREE.Vector3(window.innerWidth / window.innerHeight * 10 * Math.sin(i + 2 * time) * Math.sin(i + 3.5 * time) * 1, 0, 15 * Math.sin(i + 1 * time) * Math.sin(i + 4.5 * time) * 1)\n            TweenMax.to(center, center.distanceTo(des) * .2, {\n                x: des.x,\n                z: des.z,\n                ease: Linear.easeNone\n            })\n        }\n        TweenMax.to(center, 0, {\n            y: 2 * Math.sin(i + time * 10), ease: Linear.easeNone\n        });\n        //var centerSpd = centerTween.distanceTo(center) / 2.5\n        //console.log(centerSpd)\n        TweenMax.to(centerTween, spd * 5, {x: center.x, y: center.y, z: center.z, ease: Linear.easeNone});\n\n        for (var j = 0; j < bonesCount; j++) {\n            var mesh = meshes[j]\n\n            if (bonesPositions[j].x == 0 || Math.random() < .003 || bonesPositions[j].distanceTo(center) > 13 && !TweenMax.isTweening(bonesPositionsTween[j])) {\n                //var i = Math.floor(Math.random() * bonesCount)\n\n                var r = 2 * Math.PI * (j / bonesCount + Math.random() / 10)\n\n                bonesPositions[j].x = center.x + Math.sin(r) * 10\n                bonesPositions[j].y = 0\n                bonesPositions[j].z = center.z + Math.cos(r) * 10\n                bonesPositions[j].oldCenter.copy(center)\n\n                //if (!TweenMax.isTweening(bonesPositionsTween[j])) {\n                TweenMax.killTweensOf(bonesPositionsTween[j])\n                TweenMax.to(bonesPositionsTween[j], spd * 2, {x: bonesPositions[j].x, z: bonesPositions[j].z})\n                TweenMax.to(bonesPositionsTween[j], spd, {y: 5})\n                TweenMax.to(bonesPositionsTween[j], spd, {delay: spd, y: bonesPositions[j].y})\n                //}\n            }\n\n            mesh.skeleton.bones[ 0 ].position.copy(centerTween)\n            mesh.skeleton.bones[ 0 ].position.add(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 1 ].position.set(bonesPositionsTween[j].x / 2, 5 + bonesPositionsTween[j].y / 2, bonesPositionsTween[j].z / 2)\n            mesh.skeleton.bones[ 1 ].position.sub(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 2 ].position.set(bonesPositionsTween[j].x, -10 + bonesPositionsTween[j].y, bonesPositionsTween[j].z)\n            mesh.skeleton.bones[ 2 ].position.sub(centerTween.clone().multiplyScalar(1))\n\n            skeletonHelpers[j].update();\n        }\n\n        //console.log(bonesPositionsTween[0].x)\n\n        /*mesh.skeleton.bones[1].position.x=0;\n         mesh.skeleton.bones[1].position.y=0;\n         mesh.skeleton.bones[1].position.z=0;\n         mesh.skeleton.bones[2].position.x=10;\n         mesh.skeleton.bones[2].position.y=10;\n         mesh.skeleton.bones[2].position.z=10;*/\n    }\n\n    function onBeat() {\n        /*if (Math.random() < .2) {\n         goBack();\n         return;\n         }\n         var point = new THREE.Vector3()\n         var s = Math.random() * Math.PI\n         var t = Math.random() * Math.PI\n         var r = 4;\n         point.x = r * Math.cos(s) * Math.sin(t)\n         point.y = r * Math.sin(s) * Math.sin(t)\n         point.z = r * Math.cos(t)\n         animate(point)*/\n    }\n\n    function prerender() {\n        //plane.visible = false;\n    }\n\n    function postrender() {\n        //plane.visible = true;\n    }\n\n    function setEnvMap(cubeMap) {\n        material.envMap = cubeMap;\n    }\n    function getRandomOne() {\n        return flotilla[Math.floor(Math.random() * flotilla.length)]\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        //generate: generate,\n        //generateArmy: generateArmy,\n        prerender: prerender,\n        postrender: postrender,\n        setEnvMap: setEnvMap,\n        getRandomOne: getRandomOne,\n    }\n\n}\n();","var Shards = function () {\n    var groupHolder;\n    var multiMaterial\n\n    var drewNewShape = false;\n    var scl = 0;\n    var full;\n    var spd = 0;\n    var mod = 0;\n    var speed = .035;\n    var back = false;\n    var main;\n    var timeout\n    var flotilla = []\n    var isMobile = {any: false};\n    var plane;\n    var rings = []\n    var material\n    var time = 0\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        //var diffuseColor = new THREE.Color(.1,.1,.1);\n        material = new THREE.MeshStandardMaterial({\n            bumpScale: bumpScale,\n            metalness: metalness,\n            fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            //side: THREE.DoubleSide,\n            //map: new THREE.TextureLoader().load(\"2708diffuse.jpg\"),\n            //alphaMap: new THREE.TextureLoader().load(\"textures/op.png\"),\n            //transparent:true,\n            //normalMap: new THREE.TextureLoader().load(\"2708normal.jpg\"),\n            //bumpMap: texture,\n            //emissive: 0x111111,\n            //metalnessMap:texture,\n            //lightMap:texture,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n        \n        reload()\n    }\n\n    function reload() {\n        if (full) {\n            VizHandler.getScene().remove(full);\n            full.geometry.dispose();\n            full = null;\n        }\n\n        var geo = new THREE.BoxGeometry(.1, .1, .1, 1, 1, 1)\n        var group = new THREE.Object3D();\n        \n        for (var j = 0; j < 400; j++) {\n            var r = 15\n            var tpos = new THREE.Vector3()\n            if (j != 0)\n                tpos.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n            var ran=Math.random()*5\n            for (var i = 0; i < ran; i++) {\n                var cube = new THREE.Mesh(geo, material)\n                var r = .2 + .4 * Math.random()\n                cube.position.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n                cube.position.add(tpos)\n                var scr0 = Math.random()\n                var scr1 = Math.random()\n                var scr2 = Math.random()\n                cube.scale.set(scr0, scr1, scr2)\n                group.add(cube)\n                cube.castShadow = true;\n                cube.receiveShadow = true;\n            }\n        }\n\n\n        var geom = new THREE.Geometry()\n        for (var i = 0; i < group.children.length; i++) {\n            group.children[i].updateMatrix();\n            geom.merge(group.children[i].geometry, group.children[i].matrix);\n        }\n\n        var mod = .1\n        for (var i = 0; i < geom.vertices.length; i++) {\n            var v = geom.vertices[i]\n            v.x += (Math.random() - .5) * mod\n            v.y += (Math.random() - .5) * mod\n            v.z += (Math.random() - .5) * mod\n        }\n\n        geom.computeFaceNormals();\n        geom.computeVertexNormals();\n\n        full = new THREE.Mesh(geom, material)\n        full.castShadow = true;\n        full.receiveShadow = true;\n        VizHandler.getScene().add(full)\n\n        VizHandler.getRenderer().shadowMap.needsUpdate = true;\n    }\n\n    function update() {\n    }\n\n    function onBeat() {\n    }\n\n    function generate() {\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        generate: generate,\n        reload: reload,\n    }\n\n}\n();","var Assets = function () {\n\n    var textureCube;\n    var cubeMaps=[]\n\n    function init() {\n\n    }\n\n    function destroy(object, textureToo) {\n        if (object.children.length > 0) {\n            var objects = [object.children[1], object.children[0]]\n\n            object.remove(objects[0]);\n            object.remove(objects[1]);\n\n            destroyMesh(objects[0], textureToo)\n            destroyMesh(objects[1], textureToo)\n        } else {\n            destroyMesh(object, textureToo)\n        }\n    }\n    \n    function getCubeMap(i) {\n        i=0\n        if(cubeMaps[i])\n            return cubeMaps[i]\n        \n        var cubeMap = new THREE.Texture([]);\n        cubeMap.format = THREE.RGBFormat;\n        cubeMap.flipY = false;\n\n        var envMaps = [\n            {file: \"assets/img/skin.jpg\", size: 1024, glow: .2},\n        ];\n\n        var loader = new THREE.ImageLoader();\n        var file = envMaps[i].file;\n        var size = envMaps[i].size;\n        loader.load(file, function (image) {\n            var getSide = function (x, y) {\n\n                var canvas = document.createElement('canvas');\n                canvas.width = size;\n                canvas.height = size;\n\n                var context = canvas.getContext('2d');\n                context.drawImage(image, -x * size, -y * size);\n\n                return canvas;\n\n            };\n\n            cubeMap.image[ 0 ] = getSide(2, 1); // px\n            cubeMap.image[ 1 ] = getSide(0, 1); // nx\n            cubeMap.image[ 2 ] = getSide(1, 0); // py\n            cubeMap.image[ 3 ] = getSide(1, 2); // ny\n            cubeMap.image[ 4 ] = getSide(1, 1); // pz\n            cubeMap.image[ 5 ] = getSide(3, 1); // nz\n            cubeMap.needsUpdate = true;\n\n        });\n\n        cubeMaps[i]=cubeMap\n        return cubeMap;\n    }\n\n    function destroyMesh(mesh, textureToo) {\n        if (mesh.geometry)\n            mesh.geometry.dispose();\n        if (!mesh.material)\n            return;\n        var tex = mesh.material.map\n        if (!tex && mesh.material.materials)\n            tex = mesh.material.materials[1].map\n        //console.log(mesh.material.map)\n        if (tex && textureToo) {\n            tex.needsUpdate = false;\n            tex.dispose();\n            tex.image = null\n            tex = null;\n        }\n        if (mesh.material.materials) {\n            mesh.material.materials[1].dispose();\n            mesh.material.materials[0].dispose();\n            mesh.material.materials[1] = null;\n            mesh.material.materials[0] = null;\n        }\n        if (mesh.material.dispose)\n            mesh.material.dispose();\n\n        mesh.material = null;\n        mesh.geometry = null;\n        tex = null;\n    }\n\n    return {\n        init: init,\n        textureCube: function () {\n            return textureCube;\n        },\n        destroy: destroy,\n        getCubeMap: getCubeMap\n    };\n\n}();","var events = new Events();\nvar simplexNoise = new SimplexNoise();\n\nvar Main = function () {\n\n    function init() {\n\n        if (!Detector.webgl) {\n            Detector.addGetWebGLMessage();\n        }\n\n        //INIT DOCUMENT\n\n        window.addEventListener('resize', onResize, false);\n\n        //INIT HANDLERS\n        ControlsHandler.init();\n        VizHandler.init();\n        FXHandler.init();\n\n        onResize();\n\n        if (ControlsHandler.vizParams.showControls) {\n            $('#controls').show();\n        }\n\n        update();\n\n    }\n\n    function update() {\n        requestAnimationFrame(update);\n        events.emit(\"update\");\n    }\n\n    function onResize() {\n        VizHandler.onResize();\n        FXHandler.onResize();\n    }\n\n    return {\n        init: init\n    };\n\n}();\n\n$(window).on('load', function() {\n  $('#status').fadeOut();\n  $('#preloader').delay(300).fadeOut('slow');\n})\n\n$(document).ready(function () {\n    setTimeout(Main.init, 100);\n});\n","var ControlsHandler = function () {\n\n    var t = 0;\n\n    var mainParams = {\n        time: 0.0001,\n        auto: false,\n        fullscreen: function () {\n            document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            Main.toggleControls()\n        },\n        generate_one: function () {\n            Asteroid.generate(0,0)\n        },\n        generate_grid: function () {\n            Asteroid.generate(8,8)\n        }\n    }\n\n    var audioParams = {\n        useMic: false,\n        useSample: false,\n        showDebug: true,\n        volSens: 1,//1,\n        beatHoldTime: 40,\n        beatDecayRate: 0.97,\n        bpmMode: false,\n        bpmRate: 0\n    };\n\n    var fxParams = {\n        song: 0,\n        nuts: false,\n        tilt: true,\n        tv: false,\n        kaleidoscope: -1,\n        kaleidoscopeJump: false,\n        rgb: true,\n        wireframe: false,\n        dots: false,\n        person: false,\n        ssao:true,\n        ssaoOnly:false,\n        heart: true,\n        items: true,\n        black: true,\n        animSpeed: 1.0,\n        colorProgress: 0.0,\n        spreadProgress: 0.0,\n        waterProgress: 0.3,\n        bgProgress: 0.0,\n        glow: 0.3\n    };\n\n    var vizParams = {\n        fullSize: true,\n        showControls: false,\n        fakeKinect: false,\n        // useBars: false,\n        // useGoldShapes: true,\n        // useNebula:true,\n        // useNeonShapes:true,\n        // useStripes:true,\n        // useTunnel:true,\n        // useWaveform:true,\n    };\n\n    function init() {\n        return events.on(\"update\", update);\n    }\n\n    function show(trigger, percStart, percFinish, value) {\n        var changedValue = true;\n        if (typeof value === 'number') {\n            changedValue = value\n        }\n        if (mainParams.time > percStart && mainParams.time <= percFinish) {\n            fxParams[trigger] = changedValue;\n        }\n    }\n\n    function autoChange() {\n        mainParams.auto = true;\n    }\n\n    function manualChange() {\n        mainParams.auto = false;\n        FXHandler.toggle();\n    }\n\n    function update() {\n\n\n        if (mainParams.auto) {\n            mainParams.time += 1 / 3/*hours*/ / 60/*minutes*/ / 60/*seconds*/ / 60/*fps*/;//*60*4;\n            if (mainParams.time > 1)\n                mainParams.time = 1;\n            if (mainParams.time < 0)\n                mainParams.time = 0;\n        }\n\n        var clone = {};\n        for (var attr in fxParams) {\n            if (fxParams.hasOwnProperty(attr)) {\n                clone[attr] = fxParams[attr];\n            }\n        }\n        if (mainParams.auto) {\n            for (var attr in fxParams) {\n                if (fxParams.hasOwnProperty(attr)) {\n                    if (fxParams[attr] === true)\n                        fxParams[attr] = false;\n                }\n            }\n\n            fxParams.waterProgress = Math.sin(3.5 + mainParams.time * 6) / 2 + .5\n            fxParams.colorProgress = mainParams.time\n            fxParams.spreadProgress = mainParams.time\n            //fxParams.bgProgress=mainParams.time\n\n            show('black', 0.07, 0.25)\n            show('bgProgress', 0.00, 0.50, 0)\n            show('bgProgress', 0.50, 1.00, 1)\n\n            show('kaleidoscope', 0.00, 0.09, -1)\n            show('kaleidoscope', 0.13, 0.16, 0)\n            show('kaleidoscope', 0.16, 0.19, 1)\n            show('kaleidoscope', 0.19, 0.24, 4)\n\n            show('heart', 0.00, 0.37)\n            show('heart', 0.43, 1)\n            show('black', 0.30, 0.40)\n            show('spreadProgress', 0.30, 1, 1)\n\n            show('kaleidoscope', 0.24, 0.30, -1)\n            show('kaleidoscope', 0.30, 0.33, 0)\n            show('kaleidoscope', 0.33, 0.36, 1)\n            show('kaleidoscope', 0.36, 0.43, 2)\n\n            show('items', 0.15, 1.00)\n\n            show('animSpeed', 0.17, 0.20, -3)\n            show('animSpeed', 0.20, 0.23, 4)\n            show('animSpeed', 0.23, 0.30, -10)\n            show('animSpeed', 0.53, 0.61, -3)\n            show('animSpeed', 0.61, 0.67, 4)\n            show('animSpeed', 0.67, 0.73, -6)\n            show('animSpeed', 0.73, 0.81, 7)\n            show('animSpeed', 0.81, 0.87, 0)\n            show('animSpeed', 0.91, 1, -10)\n\n            show('kaleidoscope', 0.40, 0.60, -1)\n            show('kaleidoscope', 0.60, 0.65, 0)\n            show('kaleidoscope', 0.65, 0.70, 1)\n            show('kaleidoscope', 0.70, 0.75, 2)\n\n            show('nuts', 0.43, 0.47)\n            show('wireframe', 0.47, 0.57)\n            show('nuts', 0.57, 1.00)\n\n            show('rgb', 0.30, 0.40)\n            show('rgb', 0.70, 1.00)\n\n            show('tv', .65, 1)\n\n            show('kaleidoscopeJump', .75, 1)\n\n        }\n\n        /*show('nuts',.5,1)\n         show('tv',.5,1)\n         show('wireframe',.16,.20)\n         show('wireframe',.33,.38)\n         show('dots',.9,1)\n         show('black',.3,.7)*/\n\n        var changed = false;\n\n        for (var attr in fxParams) {\n            if (clone[attr] != fxParams[attr] && (typeof fxParams[attr] === 'boolean') && attr !== \"heart\" && attr !== \"wireframe\" && attr !== \"items\" && attr !== \"black\" && attr !== \"waterProgress\" && attr !== \"spreadProgress\" && attr !== \"bgProgress\") {\n                changed = true;\n                console.log(attr, fxParams[attr])\n            }\n        }\n        //if(changed)console.log(fxParams.nuts, changed)\n        //if(changed)alert('hi')\n        if (changed)\n            FXHandler.toggle();\n\n    }\n\n    return {\n        init: init,\n        audioParams: audioParams,\n        fxParams: fxParams,\n        vizParams: vizParams\n    };\n}();","var FXHandler = function () {\n\n    var shaderTime = 0;\n    var screenW = 1920;\n    var screenH = 1080;\n    var blurriness = 3;\n    var nuts = false;\n    var bloomPass;\n    var hblurPass = null;\n    var vblurPass = null;\n    var copyPass = null;\n    var renderTarget2 = null;\n    var glowComposer = null;\n    var composer = null;\n    var blendPass = null;\n    var badTVPass = null;\n    var mirrorPass = null;\n    var dotScreenPass = null;\n    var rgbPass = null;\n    var smaaPass = null;\n    var depthMaterial, depthRenderTarget;\n    var msaaPass = null\n    var scene, renderer, camera, controls, vrControls\n    var vr, controller2, material, geom, bubbles = []\n    var material, geoms = []\n    var group = new THREE.Group()\n\n    function init() {\n        controls = VizHandler.getControls();\n        scene = VizHandler.getScene();\n        renderer = VizHandler.getRenderer();\n        camera = VizHandler.getCamera();\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n        setup()\n    }\n\n    function setup() {\n\n        vrControls = new THREE.VRControls(camera);\n        vrControls.standing = true;\n        //vrControls.scale = .5;\n    }\n\n    function switchControls() {\n\n        controls.autoRotate = false;\n        controls.enabled = false;\n\n        scene.add(group)\n        group.position.y = -1.5\n\n        vr = true\n        \n        Shards.init()\n\n        /*var roz = 4\n         var directionalLight=VizHandler.getLight()\n         directionalLight.shadow.camera.near = -roz\n         directionalLight.shadow.camera.far = roz * 5\n         directionalLight.shadow.camera.left = -roz\n         directionalLight.shadow.camera.right = roz\n         directionalLight.shadow.camera.top = roz\n         directionalLight.shadow.camera.bottom = -roz\n         directionalLight.shadow.mapSize.width = 2048;\n         directionalLight.shadow.mapSize.height = 2048;\n         directionalLight.shadow.bias = 0//.001\n         VizHandler.getRenderer().shadowMap.autoUpdate = true;*/\n\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        geom = new THREE.BoxGeometry(.2, .2, .2, 1, 1, 1)\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = .4;\n        var metalness = .9;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            //skinning: true,\n            bumpScale: bumpScale,\n            color: diffuseColor,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        onResize();\n        mobile = false;\n    }\n\n    function removeBubble(bubble) {\n        scene.remove(bubble)\n    }\n\n    function onBeat() {\n        setTimeout(onBeatEnd, 300);\n    }\n\n    function onBeatEnd() {\n    }\n\n    function toggle() {\n        setup()\n    }\n\n    function onResize() {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n\n        var pixelRatio = renderer.getPixelRatio();\n        var newWidth = Math.floor(width / pixelRatio) || 1;\n        var newHeight = Math.floor(height / pixelRatio) || 1;\n        if (composer)\n            composer.setSize(newWidth, newHeight);\n\n    }\n\n    function update(t) {\n\n        if (vr)\n            return;\n\n        renderer.render(scene, camera);\n        //renderer.shadowMap.needsUpdate = true;\n\n        scene.overrideMaterial = depthMaterial;\n        renderer.render(scene, camera, depthRenderTarget, true);\n        scene.overrideMaterial = null;\n\n        if (composer) {\n            //renderer.clear();\n            composer.render();\n        }\n\n        return;\n    }\n\n    return {\n        init: init,\n        update: update,\n        toggle: toggle,\n        onBeat: onBeat,\n        onResize: onResize\n    };\n\n}();","//VizHandler\n//Handle 3D world\nvar VizHandler = function () {\n\n    var rendertime = 0; //constantly incrementing value public\n    var camera, scene, renderer, controls, fullscreen = false;\n    var cubeCameraRead, cubeCameraWrite;\n    var debugCube;\n    var renderToggle = true;\n    var mobile\n\n    var BG_COLOR = 0x000000;\n    var directionalLight;\n\n    function init() {\n\n        var id = parseInt(window.location.hash.substr(1))\n        if (!id)\n            id = 1\n        ControlsHandler.fxParams.song = id;\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n\n        // var container = document.getElementById('viz')\n        //document.body.appendChild(container);\n\n        container = document.createElement('div');\n        document.body.appendChild(container);\n\n        //RENDERER\n        renderer = new THREE.WebGLRenderer({\n            antialias: true\n        });\n        renderer.setSize(1920, 1080);\n        renderer.setClearColor(BG_COLOR);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.autoUpdate = true;\n        //renderer.shadowMap.needsUpdate = true;\n        //renderer.autoClear = false;\n\n        //renderer.shadowMap.type = THREE.PCFShadowMap;\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true;\n        //renderer.sortObjects = false;\n        container.appendChild(renderer.domElement);\n\n        scene = new THREE.Scene();\n        //3D SCENE\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, .1, 2000);\n        camera.position.y = 2.5;\n        camera.position.z = 2;\n        //scene.add(camera);\n\n        scene.fog = new THREE.Fog(BG_COLOR, 1, 12);\n\n        //controls = new THREE.TrackballControls(camera);\n        controls = new THREE.OrbitControls(camera);\n        controls.target.set(0, 0, 0);\n        controls.update();\n        controls.autoRotate = false;\n        controls.enablePan = false;\n        controls.enableZoom = false;\n        controls.enableRotate = false\n        controls.enableDamping = true;\n        controls.dampingFactor = .2;\n        controls.rotateSpeed = .5;\n        //controls.autoRotateSpeed = (Math.random() * .5 - .25) / 7;\n        //controls.minDistance = 3;\n        //controls.maxDistance = 3;\n        //controls.maxPolarAngle = Math.PI / 2 + .4;\n        //controls.minPolarAngle = Math.PI / 2 - .4;\n\n        Assets.init();\n\n        directionalLight = new THREE.DirectionalLight(0xffffff, .5);\n        directionalLight.position.x = .8\n        directionalLight.position.z = -.9\n        directionalLight.position.y = .8\n        directionalLight.castShadow = true;\n        var roz = 4\n        directionalLight.shadow.camera.near = -roz * 2\n        directionalLight.shadow.camera.far = roz * 2\n        directionalLight.shadow.camera.left = -roz\n        directionalLight.shadow.camera.right = roz\n        directionalLight.shadow.camera.top = roz\n        directionalLight.shadow.camera.bottom = -roz\n        directionalLight.shadow.mapSize.width = 4096;\n        directionalLight.shadow.mapSize.height = 4096;\n        directionalLight.shadow.bias = 0.0001\n\n        //scene.add(new THREE.CameraHelper(directionalLight.shadow.camera))\n\n        //scene.add(new THREE.AmbientLight(0x777777));\n\n        hemiLight = new THREE.HemisphereLight(0xffffff, 0x666666, 0.6);\n        hemiLight.color.setHSL(0.6, 1, 0.8);\n        hemiLight.groundColor.setHSL(0.095, 1, 0.9);\n        hemiLight.position.set(0, 10, 0);\n        //scene.add(hemiLight);\n\n        var helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n        //scene.add(helper);\n\n        //directionalLight.position.set(1, 1, .65);\n        scene.add(directionalLight);\n\n        activeViz = [Mecha];\n\n        activeVizCount = activeViz.length;\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].init();\n        }\n\n        //window.addEventListener('deviceorientation', setOrientationControls, true);\n\n        TweenMax.delayedCall(.1, updateShadow)\n    }\n\n    function updateShadow() {\n        renderer.shadowMap.needsUpdate = true;\n    }\n\n    function remake() {\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].reload();\n        }\n        controls.autoRotateSpeed = Math.random() * .5 - .25\n        TweenMax.delayedCall(5, remake)\n    }\n\n    function setOrientationControls(e) {\n        if (!e.alpha) {\n            return;\n        }\n\n        controls.enabled = false\n        controls = new THREE.DeviceOrientationControls(camera, true);\n        controls.connect();\n        controls.update();\n\n        window.removeEventListener('deviceorientation', setOrientationControls, true);\n\n        if (renderer.domElement) {\n            renderer.domElement.addEventListener('click', function () {\n\n                if (this.requestFullscreen) {\n                    this.requestFullscreen();\n                } else if (this.msRequestFullscreen) {\n                    this.msRequestFullscreen();\n                } else if (this.mozRequestFullScreen) {\n                    this.mozRequestFullScreen();\n                } else if (this.webkitRequestFullscreen) {\n                    this.webkitRequestFullscreen();\n                }\n                fullscreen = true;\n\n            });\n\n            mobile = true;\n\n        }\n    }\n\n    function update() {\n        controls.update();\n\n        if (mobile) {\n            camera.position.set(0, 0, 0)\n            camera.translateZ(1.8);\n        }\n    }\n\n\n    function onResize() {\n\n        var renderW = 1920;\n        var renderH = 1080;\n\n        if (ControlsHandler.vizParams.fullSize) {\n            var renderW = window.innerWidth;\n            var renderH = window.innerHeight;\n\n            if (ControlsHandler.vizParams.showControls) {\n                renderW -= 250;\n            }\n            $('#viz').css({position: 'relative', top: 0});\n\n        } else {\n            //vertically center viz output\n            $('#viz').css({position: 'relative', top: window.innerHeight / 2 - FIXED_SIZE_H / 2});\n        }\n\n        camera.aspect = renderW / renderH;\n        camera.updateProjectionMatrix();\n        renderer.setSize(renderW, renderH);\n\n    }\n\n    return {\n        init: init,\n        update: update,\n        getCamera: function () {\n            return camera;\n        },\n        getScene: function () {\n            return scene;\n        },\n        getLight: function () {\n            return directionalLight;\n        },\n        getRenderer: function () {\n            return renderer;\n        },\n        getCubeCameras: function () {\n            return [cubeCameraRead, cubeCameraWrite]\n        },\n        getControls: function () {\n            return controls;\n        },\n        onResize: onResize,\n        isFullscreen: function () {\n            return fullscreen;\n        },\n        isMobile: function () {\n            return mobile;\n        }\n    };\n\n}();"]}