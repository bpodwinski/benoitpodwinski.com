{"version":3,"sources":["minivents.js","jquery-2.2.4.js","Detector.js","three.js","SimplexNoise.js","atutil.js","TweenMax.min.js","OrbitControls.js","DeviceOrientationControls.js","VRControls.js","ViveController.js","BG.js","Mecha.js","Shards.js","Assets.js","Main.js","ControlsHandler.js","FXHandler.js","VizHandler.js"],"names":["Events","target","events","empty","this","on","type","func","ctx","push","off","list","i","length","splice","emit","j","e","slice","apply","call","arguments","global","factory","module","exports","document","w","Error","window","noGlobal","fcamelCase","all","letter","toUpperCase","arr","concat","indexOf","class2type","toString","hasOwn","hasOwnProperty","support","version","jQuery","selector","context","fn","init","rtrim","rmsPrefix","rdashAlpha","isArrayLike","obj","isWindow","prototype","jquery","constructor","toArray","get","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","first","eq","last","len","end","sort","extend","options","name","copy","copyIsArray","clone","deep","isFunction","src","isPlainObject","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","Array","isNumeric","realStringObj","parseFloat","nodeType","key","isEmptyObject","globalEval","code","script","indirect","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","camelCase","string","nodeName","toLowerCase","makeArray","results","Object","inArray","second","grep","invert","matches","callbackExpect","arg","value","guid","proxy","args","tmp","now","Date","Symbol","iterator","split","Sizzle","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","setDocument","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","rescape","runescape","childNodes","els","seed","m","nid","nidselect","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","assert","div","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createPositionalPseudo","argument","matchIndexes","documentElement","node","doc","parent","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","find","filter","attrId","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","hasCompare","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">","dir"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","disabled","checked","selected","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","createInputPseudo","submit","reset","createButtonPseudo","tokens","addCombinator","combinator","base","checkNonElements","doneName","newCache","oldCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromGroupMatchers","elementMatchers","setMatchers","superMatcher","outermost","matchedCount","setMatched","contextBackup","byElement","dirrunsUnique","bySet","filters","parseOnly","soFar","preFilters","cached","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","token","compiled","div1","defaultValue","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","rsingleTag","risSimple","winnow","qualifier","self","rootjQuery","ready","parseHTML","rparentsprev","guaranteedUnique","children","contents","next","prev","sibling","targets","l","closest","pos","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","readyList","rnotwhite","completed","removeEventListener","Callbacks","object","flag","fire","locked","once","fired","firing","queue","firingIndex","memory","stopOnFalse","remove","disable","lock","fireWith","Deferred","tuples","state","promise","always","deferred","fail","then","fns","newDefer","tuple","returned","progress","notify","resolve","reject","pipe","stateString","when","subordinate","updateFunc","values","progressValues","notifyWith","remaining","resolveWith","progressContexts","resolveContexts","resolveValues","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","setTimeout","acceptData","owner","access","chainable","emptyGet","raw","bulk","Data","uid","register","initial","defineProperty","writable","configurable","set","data","prop","stored","camel","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","parseJSON","removeData","_data","_removeData","camelKey","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","isHidden","el","css","pnum","source","rcssNum","cssExpand","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","style","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","types","one","origFn","event","handleObjIn","eventHandle","t","handleObj","special","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","handlers","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","props","fixHooks","keyHooks","original","which","charCode","keyCode","mouseHooks","body","pageX","clientX","eventDoc","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","relatedTarget","rxhtmlTag","rnoInnerhtml","rchecked","rscriptTypeMasked","rcleanScript","manipulationTarget","content","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","domManip","collection","hasScripts","iNoClone","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","insert","iframe","elemdisplay","HTML","BODY","actualDisplay","display","defaultDisplay","write","close","swap","old","pixelPositionVal","boxSizingReliableVal","pixelMarginRightVal","reliableMarginLeftVal","container","rmargin","rnumnonpx","getStyles","view","opener","getComputedStyle","computeStyleTests","cssText","divStyle","marginLeft","width","marginRight","curCSS","computed","getPropertyValue","pixelMarginRight","minWidth","maxWidth","addGetHookIf","conditionFn","hookFn","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","vendorPropName","capName","setPositiveNumber","subtract","max","augmentWidthOrHeight","extra","isBorderBox","styles","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","showHide","show","hidden","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","hide","toggle","propHooks","run","percent","eased","duration","step","fx","linear","p","swing","cos","PI","fxNow","timerId","rfxtypes","rrun","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","tick","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","rejectWith","propFilter","timer","anim","complete","*","tweener","oldfire","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","getClass","addClass","classes","clazz","finalValue","curValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","s","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","mimeType","status","abort","statusText","finalText","success","method","crossDomain","host","param","traditional","hasContent","ifModified","headers","beforeSend","send","nativeStatusText","responses","response","isSuccess","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","modified","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","getClientRects","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","buildParams","v","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","getWindow","params","animated","offset","setOffset","curCSSTop","curTop","curOffset","curCSSLeft","curElem","curLeft","curPosition","using","box","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","Detector","canvas","CanvasRenderingContext2D","webgl","WebGLRenderingContext","getContext","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","fontFamily","fontSize","textAlign","background","color","addGetWebGLMessage","parameters","THREE","EventDispatcher","Number","EPSILON","pow","sign","x","Function","assign","TypeError","output","nextKey","listener","_listeners","listeners","hasEventListener","listenerArray","dispatchEvent","array","r","chars","uuid","rnd","min","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","BlendingMode","AddEquation","SrcAlphaFactor","OneMinusSrcAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TextureMapping","UVMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TextureWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapLinearFilter","TextureFilter","LinearMipMapNearestFilter","UnsignedByteType","FloatType","HalfFloatType","RGBFormat","RGBAFormat","RGBEFormat","DepthFormat","DepthStencilFormat","InterpolateDiscrete","InterpolateLinear","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","RAD2DEG","generateUUID","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","random16","console","warn","randInt","low","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Vector2","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","sourceFile","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","sqrt","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","fromAttribute","attribute","itemSize","rotateAround","center","c","sin","isTexture","needsUpdate","toJSON","meta","textures","metadata","generator","images","toDataURL","createElementNS","drawImage","dispose","transformUv","uv","matrix","quaternion","vector","z","TextureIdCount","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","Float32Array","CubeTexture","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","isWebGLRenderTarget","setSize","create","isWebGLRenderTargetCube","onChangeCallback","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","crossVectors","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","f","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","copyPosition","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ce","cf","de","df","ae","af","be","bf","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","applyToVector3Array","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","transpose","flattenToArrayOffset","getPosition","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","right","bottom","near","far","makePerspective","fov","aspect","ymax","tan","ymin","xmin","xmax","makeOrthographic","h","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","u","RePathPart","addUniform","uniformObject","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","parseUniform","getUniformLocation","setOptional","upload","seqWithValue","UniformsUtils","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isColor","isMatrix3","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","Color","setRGB","hue2rgb","setHex","setStyle","hex","setHSL","handleAlpha","components","charAt","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","hsl","lightness","saturation","delta","getStyle","offsetHSL","addColors","color1","color2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","UniformsLib","diffuse","offsetRepeat","specularMap","alphaMap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","points","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","Box2","Infinity","LensFlarePlugin","flares","vertexBuffer","elementBuffer","shader","tempTexture","occlusionTexture","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","getPrecision","shaderSource","compileShader","attachShader","linkProgram","vertex","getAttribLocation","renderType","occlusionMap","rotation","screenPosition","render","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","CULL_FACE","setDepthWrite","flare","matrixWorldInverse","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","alphaTest","fillStyle","fillRect","painterSortStable","renderOrder","oldFogType","sceneFogType","isFog","isFogExp2","density","material","setDepthTest","depthTest","depthWrite","Material","count$1","side","shading","vertexColors","transparent","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","physical","clearCoat","clearCoatRoughness","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","intersect","union","translate","isMaterial","setValues","newValue","isRoot","extractFromCache","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","srcPlanes","dstPlanes","closestPoint","m1","p1","p2","sphere","edge1","edge2","segCenter","segDir","q1","MaterialIdCount","ShaderMaterial","defines","linewidth","clipping","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","MeshDepthMaterial","depthPacking","Box3","Sphere","Matrix3","Plane","constant","Frustum","p0","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","_gl","_state","_frustum","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","USE_SHADOWMAP","scope","getDepthMaterial","isPointLight","lightPositionWorld","materialsForVariant","geometry","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","cachedMaterial","renderSingleSided","renderReverseSided","autoUpdate","faceCount","clearColor","setScissorTest","light","vpWidth","vpHeight","shadowCamera","mapSize","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","vpDimensions","face","updateMatrixWorld","setFromMatrix","projectObject","layers","mask","isMesh","isLine","isPoints","castShadow","frustumCulled","intersectsObject","isMultiMaterial","materials","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","getClearColor","clearAlpha","getClearAlpha","setClearColor","Ray","origin","Euler","_order","DefaultOrder","Layers","Object3D","count$2","DefaultUp","setFromQuaternion","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","onBeforeRender","onAfterRender","isShaderMaterial","isMeshDepthMaterial","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","traverse","stride","isInterleavedBufferAttribute","intersectsSphere","intersectsPlane","plane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","line","denominator","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","s0","segExtent","a01","b0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tymin","tzmin","invdirx","invdiry","invdirz","tmax","tymax","tzmax","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","isRootObject","geometries","stringify","recursive","child","startP","startEnd","edgeList","projectedPoint","Object3DIdCount","Line3","Triangle","Face3","vertexNormals","MeshBasicMaterial","combine","BufferAttribute","normalized","dynamic","updateRange","Uint16Attribute","Uint32Attribute","Uint32Array","Float32Attribute","Geometry","count$3","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","minDistance","isMeshBasicMaterial","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","computeBoundingBox","fromBufferGeometry","positions","normals","uvs","uvs2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceVertexNormals","faceVertexColors","faceCopy","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","changes","faceIndicesToRemove","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","faceType","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","setBit","getUvIndex","getNormalIndex","getColorIndex","uvsCopy","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","GeometryIdCount","DirectGeometry","BufferGeometry","drawRange","Mesh","drawMode","updateMorphTargets","uvIntersection","uv1","uv3","checkIntersection","raycaster","pA","pB","pC","checkBufferGeometryIntersection","intersection","faceIndex","BoxBufferGeometry","widthSegments","heightSegments","depthSegments","vertexCount","indexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","Camera","PerspectiveCamera","filmGauge","filmOffset","OrthographicCamera","WebGLIndexedBufferRenderer","infoRender","mode","setMode","UNSIGNED_INT","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLLights","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","lines","addLineNumbers","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","getIndex","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","MaxIndex","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","intersects","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","uvs_f","isCamera","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isOrthographicCamera","cx","cy","zoomW","zoomH","scaleW","scaleH","matrixPosition","offsetMatrix","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","__webglShader","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","flatShading","logarithmicDepthBuffer","customDefines","chunks","generateDefines","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","useFog","fogExp","numClipIntersection","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","floatVertexTextures","skeleton","nVertexUniforms","maxVertexUniforms","bones","allocateBones","getMaxPrecision","currentRenderTarget","getCurrentRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","directional","spot","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLGeometries","onGeometryDispose","buffergeometry","deleteAttribute","deleteAttributes","property","delete","bufferproperty","__webglBuffer","deleteBuffer","_bufferGeometry","WebGLObjects","updateAttribute","bufferType","attributeProperties","usage","DYNAMIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","getAttributeBuffer","getWireframeAttribute","WebGLTextures","paramThreeToGL","_infoMemory","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","filterFallback","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","__version","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","HTMLCanvasElement","makePowerOfTwo","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","isDataTexture","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","uploadTexture","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","colorBuffer","currentColorMask","currentColorClear","setMask","colorMask","setLocked","setClear","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","Uint8Array","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","maxTextures","MAX_TEXTURE_IMAGE_UNITS","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setDepthFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","webglSlot","buffers","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setColorWrite","setStencilTest","setStencilWrite","stencilWrite","setStencilFunc","setStencilOp","setLineWidth","lineWidth","setPolygonOffset","factor","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglType","boundTexture","WebGLCapabilities","maxAnisotropy","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_clipping","_clippingEnabled","_localClippingEnabled","_sphere","_vector3","ambient","_infoRender","rangeMin","rangeMax","onContextLost","objects","programCache","lightCache","bufferRenderer","indexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","backgroundBoxShader","backgroundBoxMesh","getTargetPixelRatio","glClearColor","setDefaultGLState","warned","spritePlugin","lensFlarePlugin","onMaterialDispose","releaseMaterialProgramReference","absNumericalSort","reversePainterSortStable","pushRenderItem","renderItem","isObjectViewable","isSphereViewable","isSpriteViewable","negRad","renderObjects","renderList","overrideMaterial","isImmediateRenderObject","setMaterial","setProgram","renderBufferImmediate","materialProperties","lightsHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","initMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","emissiveIntensity","uvScaleMap","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","isPointsMaterial","isMeshPhysicalMaterial","refreshUniformsStandard","isMeshNormalMaterial","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","getContextAttributes","forceContextLoss","loseContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","setScissor","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","updateBuffers","geometryProgram","activeInfluences","rangeFactor","startIndex","isInstancedBufferGeometry","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","Float64Array","Int16Array","Int8Array","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","LINE_STRIP","POINTS","forceClear","isLight","isSprite","isLensFlare","lightShadowsLength","setupShadows","ll","intensity","directionalLength","pointLength","spotLength","hemiLength","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isHemisphereLight","setupLights","setFaceCulling","frontFaceDirection","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","DataTexture","Skeleton","boneInverses","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","Bone","skin","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bone","gbone","rotq","scl","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","Points","Group","VideoTexture","video","requestAnimationFrame","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge","sortFunction","numEdges","edges","coords","o","ol","numTris","ParametricBufferGeometry","slices","stacks","sliceCount","ParametricGeometry","PolyhedronBufferGeometry","detail","uvBuffer","pushVertex","getVertexByIndex","correctUV","azimuth","cols","aj","bj","rows","subdivideFace","subdivide","appplyRadius","inclination","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronBufferGeometry","TetrahedronGeometry","OctahedronBufferGeometry","OctahedronGeometry","IcosahedronBufferGeometry","IcosahedronGeometry","DodecahedronBufferGeometry","DodecahedronGeometry","PolyhedronGeometry","TubeBufferGeometry","tubularSegments","radialSegments","closed","frames","computeFrenetFrames","tangents","binormals","generateSegment","P","getPointAt","N","B","generateIndices","generateBufferData","TubeGeometry","taper","bufferGeometry","TorusKnotBufferGeometry","tube","indexOffset","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","TorusBufferGeometry","arc","TorusGeometry","vecX","vecY","wantedRotation","level","addLevel","getObjectForDistance","pose","isBone","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","intersectPoint","rayPointDistanceSq","distanceToRay","ShapeUtils","contour","triangulate","verts","vertIndices","nv","px","py","cCROSSap","bCROSScp","aX","aY","bX","bY","cX","cY","snip","triangulateShape","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","perpSeg2","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg1Pt","seg2Pt","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","forEach","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","holeIndex","shapeIndex","shapePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","shape","indepHoles","failedCuts","minShapeIndex","counter","h2","holePt","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","isCutLineInsideAngles","inShapePt","inHolePt","nextIdx","sIdx","intersectsShapeEdge","chkHole","hIdx","ihIdx","intersectsHoleEdge","removeHoles","triangles","isClockWise","pts","b3","ExtrudeGeometry","shapes","addShapeList","TextGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","verticesRow","pz","v3","v4","SphereGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","RingGeometry","PlaneGeometry","LatheBufferGeometry","segments","inverseSegments","n1","n2","LatheGeometry","ShapeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","vert1","vert2","face1","face2","CylinderBufferGeometry","radiusTop","radiusBottom","openEnded","nbCap","calculateVertexCount","calculateIndexCount","indexArray","halfHeight","generateCap","centerIndexEnd","centerIndexStart","cosTheta","sinTheta","slope","indexRow","i3","generateTorso","CylinderGeometry","ConeGeometry","ConeBufferGeometry","CircleBufferGeometry","ii","CircleGeometry","BoxGeometry","sl","addShape","extrudePts","splineTube","binormal","position2","ahole","bevelSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","getSpacedPoints","shapesOffset","shapePoints","extractPoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","v_trans_x","v_trans_y","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","generateSideWallUV","f3","generateTopUV","buildLidFaces","buildSideFaces","indexA","indexB","indexC","indexD","Geometries","freeze","ShadowMaterial","RawShaderMaterial","MultiMaterial","STANDARD","PHYSICAL","isShadowMaterial","Materials","Cache","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","DefaultLoadingManager","XHRLoader","manager","CompressedTextureLoader","_parser","dataUriRegexResult","isBase64","decodeURIComponent","atob","ArrayBuffer","charCodeAt","request","withCredentials","setPath","setResponseType","setWithCredentials","loader","loaded","texDatas","mipmapCount","loadTexture","isCubemap","DataTextureLoader","BinaryTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","texData","URL","revokeObjectURL","blob","createObjectURL","setCrossOrigin","crossOrigin","urls","isJPEG","search","textureLoader","materialLoader","AnimationUtils","arraySlice","from","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","ObjectLoader","texturePath","Curve","LineCurve","CurvePath","curves","autoClose","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","message","ValueTypeName","getInterpolation","timeOffset","timeScale","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","trackType","_getTrackTypeForValueTypeName","track","typeName","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetName","morphTargetNames","animationKey","boneName","setTextures","getTexture","TYPED_ARRAYS","Uint8ClampedArray","typedArray","drawcalls","offsets","extractUrlBase","initMaterials","createMaterial","fullPath","Handlers","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","regex","setTexturePath","fi","zLength","colorIndex","normalIndex","uvIndex","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","getGeometry","getMaterial","isInteger","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","comparison","arcLengths","targetArcLength","lengthBefore","getTangent","t2","pt1","getTangentAt","mat","MAX_VALUE","tz","getPointFunc","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","SplineCurve","CubicBezierCurve","QuadraticBezierCurve","intPoint","weight","point0","point1","point2","point3","instance","eyeRight","eyeLeft","orientation","vector2","pointMap","PathPrototype","fromPoints","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","Path","ShapePath","subPaths","currentPath","Font","FontLoader","getAudioContext","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","cameraL","cameraR","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","createBufferSource","onended","onEnded","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","PropertyBinding","rootNode","parsedPath","parseTrackName","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindings","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","PointLightHelper","sphereSize","HemisphereLightHelper","lightSphere","GridHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","hexFrustum","hexCone","hexCross","addLine","addPoint","setPoint","BoundingBoxHelper","BoxHelper","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","solid","tmpPoints","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpHoles","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","isPointInsidePolygon","froms","tos","paths","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","ha","createPath","createPaths","decodeAudioData","audioBuffer","eyeSepOnProjection","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setOrientation","setNodeSource","audioNode","setBuffer","play","pause","getFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetArray","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","_getValue_unbound","_setValue_unbound","Composite","targetGroup","optionalParsedPath","_targetGroup","subscribe_","firstValidIndex","bindings","isAnimationObjectGroup","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","_scheduleFading","crossFadeFrom","fadeOutAction","warp","fadeInDuration","endStartRatio","startEndRatio","fadeOutDuration","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","loopDelta","pingPong","pending","atStart","atEnd","weightNow","weightThen","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","_nActiveBindings","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingByName","_bindingsByRootAndName","_removeInactiveBinding","uncacheAction","bindingsByRoot","bindingsByName","_addInactiveBinding","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","isInterleavedBuffer","setFromCamera","intersectObjects","performance","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","lastFrame","currentFrame","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","coneLength","coneWidth","boneList","matrixWorldInv","boneMatrix","setColors","lightPlane","targetLine","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","AxisHelper","setColor","CatmullRomCurve3","CubicPoly","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","t3","ClosedSplineCurve3","SplineCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","SceneUtils","createMultiMaterialObject","attach","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","DynamicBufferAttribute","Float64Attribute","Int32Attribute","Int16Attribute","Uint8ClampedAttribute","Uint8Attribute","Int8Attribute","Spline","w2","w3","pa","pb","pc","pd","initFromArray","getControlPointsArray","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FaceColors","VertexColors","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateSmooth","TriangleStripDrawMode","TriangleFanDrawMode","LogLuvEncoding","CubeGeometry","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","EdgesHelper","WireframeHelper","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SimplexNoise","grad3","grad4","perm","simplex","dot3","dot4","noise","xin","yin","G2","j1","jj","gi0","gi1","gi2","n0","noise3d","zin","j2","k2","k1","y3","z3","kk","gi3","n3","noise4d","F4","G4","l1","l2","j3","k3","l3","x4","y4","z4","w4","gi4","t4","n4","ATUtil","randomRange","randomInt","min1","max1","min2","max2","norm","amt","shuffle","_gsScope","_gsQueue","da","ca","ba","substr","_gsDefine","cycle","_cycle","_yoyo","vars","yoyo","_repeat","_repeatDelay","repeatDelay","_dirty","_internals","isSelector","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","ratio","immediateRender","_timeline","_time","_enabled","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","_totalTime","_init","_next","totalDuration","_totalDuration","_rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","_easeType","_easePower","lazyTweens","_lazy","_paused","_startAt","_callback","_onUpdate","onRepeat","runBackwards","fromTo","staggerTo","allTo","onComplete","onCompleteScope","callbackScope","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","onCompleteParams","onReverseComplete","onReverseCompleteParams","useFrames","overwrite","isTweening","_first","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","totalTime","killChildTweensOf","tweenLookup","pauseAll","resumeAll","globalTimeScale","_timeScale","frame","totalProgress","_labels","smoothChildTiming","_sortChildren","_swapSelfInParams","align","stagger","lazyRender","globals","pauseCallback","_forcingPlayhead","_hasPause","TweenMax","_parseTimeOrLabel","exportRoot","_remove","addLabel","rawTime","_pauseTime","removeLabel","_last","insertMultiple","appendMultiple","addPause","getLabelTime","timeline","gotoAndPlay","gotoAndStop","_hasPausedChild","_prev","getChildren","_contains","recent","_recent","shiftChildren","_kill","usesFrames","addCallback","removeCallback","removePause","tweenTo","ease","tweenFromTo","_locked","A","C","getActive","isActive","getLabelAfter","getLabelsArray","getLabelBefore","currentLabel","plugin","priority","API","_target","_func","_round","_props","_timeRes","timeResolution","autoRotate","orientToBezier","_autoRotate","_overwriteProps","_beziers","curviness","correlate","_segCount","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","bezierThrough","cubicToQuadratic","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","setRatio","_transform","_enableTransforms","_gsTransform","_onInitTween","_tween","_roundProps","bezier","_super","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","perspective","R","currentStyle","$1","S","V","M","U","W","za","ya","Q","La","skewX","Ba","rotationX","rotationY","Z","oa","difs","firstMPT","oxp","oyp","oxr","oyr","ox","oy","ea","fa","ga","I","ia","ka","la","ja","D","E","F","G","H","J","K","L","O","_specialProps","navigator","userAgent","X","Y","convertToPixels","clientWidth","clientHeight","_gsCache","cacheWidths","calculateOffset","aa","parseColor","colorStringFilter","defaultStringFilter","ma","na","xs0","xs1","rxp","pr","ra","parseComplex","appendXtra","xfirst","sa","ta","formatter","collapsible","multi","clrs","keyword","dflt","ua","registerSpecialProp","useSVGTransformAttr","Ha","Ka","xOrigin","yOrigin","getBBox","Ja","xOffset","yOffset","Ia","Da","getCTM","Ma","xPercent","yPercent","ieOffsetX","ieOffsetY","wa","xa","Aa","Ca","Transform","force3D","defaultForce3D","SVGElement","Ea","setAttributeNS","Fa","Ga","chrome","svg","getTransform","zOrigin","Pa","Na","set3DTransformRatio","setTransformRatio","skewType","skewY","_lastParsedTransform","parseTransform","transform","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","transformOrigin","svgOrigin","smoothOrigin","_transformType","backgroundPositionX","backgroundPositionY","clipTop","clipRight","clipBottom","clipLeft","Oa","xn1","Qa","_gsClassPT","removeProperty","_classNamePT","Ra","com","greensock","plugins","va","_vars","autoRound","_addLazySet","WebkitBackfaceVisibility","_linkCSSP","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","Sa","autoAlpha","Ta","cascadeTo","reservedProps","_targets","activate","_onInitAllProps","roundProps","_propLookup","pg","_add","_addTween","finals","useRadians","easeOut","easeIn","easeInOut","gap","GreenSockGlobals","_class","_p1","_p2","config","_p","_p3","randomize","template","strength","SlowMo","TweenLite","sc","gsClass","GreenSockAMDPath","_type","_power","_params","Linear","Quad","_eventTarget","wake","cancelAnimationFrame","getTime","sleep","useRAF","visibilityState","Ticker","reversed","resume","restart","eventCallback","_overwrite","defaultOverwrite","_siblings","_overwrittenProps","defaultEase","autoSleep","fp","blobDif","_plugins","onUpdateParams","onUpdateScope","onStartParams","onStartScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","stringFilter","none","auto","concurrent","allOnStart","true","false","_updateRoot","_gsTweenID","_initProps","_priority","_onDisable","_onEnable","_tempKill","_propName","overwriteProps","initAll","OrbitControls","quat","quatInverse","lastPosition","lastQuaternion","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","dollyIn","dollyScale","dollyOut","handleKeyDown","touches","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","DeviceOrientationControls","deviceOrientation","screenOrientation","alphaOffsetAngle","onDeviceOrientationChangeEvent","onScreenOrientationChangeEvent","zee","q0","setObjectQuaternion","beta","gamma","orient","updateAlphaOffsetAngle","VRControls","vrDisplay","vrDisplays","standingMatrix","frameData","VRFrameData","getVRDisplays","displays","standing","userHeight","getVRDisplay","getStandingMatrix","getFrameData","getPose","stageParameters","sittingToStandingTransform","resetPose","resetSensor","zeroSensor","ViveController","gamepad","axes","thumbpadIsPressed","triggerIsPressed","gripsArePressed","menuIsPressed","getGamepad","getButtonState","gamepads","getGamepads","findGamepad","buttons","pressed","BG","groupHolder","cubeShader","onBeat","VizHandler","getScene","cubeMap","Assets","getCubeMap","skyBoxMaterial","setEnvMap","Mecha","dae","flotilla","bonesCount","bonesPositions","bonesPositionsTween","centerTween","mouseControl","onDocumentTouchStart","mouse","innerWidth","innerHeight","boom","onDocumentMouseDown","getCamera","cubeMesh","easeNone","des","spd","meshes","oldCenter","skeletonHelpers","reflectionCube","sizing","segmentCount","skinIndex","prevBone","createBones","skeletonHelper","createMesh","initBones","reload","groundBump","cubeMaterial","prerender","postrender","getRandomOne","Shards","full","geo","tpos","ran","scr0","scr1","scr2","geom","getRenderer","generate","cubeMaps","destroyMesh","textureToo","tex","textureCube","envMaps","glow","getSide","simplexNoise","Main","onResize","FXHandler","ControlsHandler","vizParams","showControls","mainParams","fullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","toggleControls","generate_one","Asteroid","generate_grid","fxParams","song","nuts","tilt","tv","kaleidoscope","kaleidoscopeJump","rgb","dots","person","ssao","ssaoOnly","heart","items","animSpeed","colorProgress","spreadProgress","waterProgress","bgProgress","percStart","percFinish","changedValue","changed","audioParams","useMic","useSample","showDebug","volSens","beatHoldTime","beatDecayRate","bpmMode","bpmRate","fullSize","fakeKinect","depthRenderTarget","vr","composer","onBeatEnd","pixelRatio","newWidth","newHeight","getControls","controls","mobile","directionalLight","WIDTH","HEIGHT","updateShadow","roz","activeViz","activeVizCount","getLight","getCubeCameras","cubeCameraRead","cubeCameraWrite","renderW","renderH","FIXED_SIZE_H","isFullscreen","isMobile"],"mappings":"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,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,KAGAJ,aAAAp0J,UAAA0wC,IAAA,SAAA8W,EAAA9hB,EAAA8G,GACA,OAAAgb,EAAA,GAAA9hB,EAAA8hB,EAAA,GAAAhb,GAGA4nH,aAAAp0J,UAAAy0J,KAAA,SAAAjtG,EAAA9hB,EAAA8G,EAAA8G,GACA,OAAAkU,EAAA,GAAA9hB,EAAA8hB,EAAA,GAAAhb,EAAAgb,EAAA,GAAAlU,GAGA8gH,aAAAp0J,UAAA00J,KAAA,SAAAltG,EAAA9hB,EAAA8G,EAAA8G,EAAAl1C,GACA,OAAAopD,EAAA,GAAA9hB,EAAA8hB,EAAA,GAAAhb,EAAAgb,EAAA,GAAAlU,EAAAkU,EAAA,GAAAppD,GAGAg2J,aAAAp0J,UAAA20J,MAAA,SAAAC,EAAAC,GACA,IAcAtxE,EAXA9nD,GAAAm5H,EAAAC,IADA,IAAA3yJ,KAAA0uC,KAAA,GAAA,IAEAvzC,EAAA6E,KAAA8qC,MAAA4nH,EAAAn5H,GACAh+B,EAAAyE,KAAA8qC,MAAA6nH,EAAAp5H,GACAq5H,GAAA,EAAA5yJ,KAAA0uC,KAAA,IAAA,EACAhuB,GAAAvlB,EAAAI,GAAAq3J,EAGAp7G,EAAAk7G,GAFAv3J,EAAAulB,GAGA+2B,EAAAk7G,GAFAp3J,EAAAmlB,GAMAmyI,EAAAp7G,EAAAD,GAAA6pC,EAAA,EAAA,IACAA,EAAA,EAAA,GAIAzpC,EAAAJ,EAAA6pC,EAAAuxE,EACA/6G,EAAAJ,EAAAo7G,EAAAD,EACA70G,EAAAvG,EAAA,EAAA,EAAAo7G,EACA50G,EAAAvG,EAAA,EAAA,EAAAm7G,EAEAzmC,EAAA,IAAAhxH,EACA23J,EAAA,IAAAv3J,EACAw3J,EAAAp4J,KAAA03J,KAAAlmC,EAAAxxH,KAAA03J,KAAAS,IAAA,GACAE,EAAAr4J,KAAA03J,KAAAlmC,EAAA9qC,EAAA1mF,KAAA03J,KAAAS,EAAAD,IAAA,GACAI,EAAAt4J,KAAA03J,KAAA,EAAAlmC,EAAAxxH,KAAA03J,KAAA,EAAAS,IAAA,GAEAz4E,EAAA,GAAA7iC,EAAAA,EAAAC,EAAAA,EACAy7G,EAAA74E,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1/E,KAAA6zC,IAAA7zC,KAAAw3J,MAAAY,GAAAv7G,EAAAC,GAEA6iC,EAAA,GAAA1iC,EAAAA,EAAAC,EAAAA,EACAqyE,EAAA5vC,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA3/E,KAAA6zC,IAAA7zC,KAAAw3J,MAAAa,GAAAp7G,EAAAC,GAEAwtF,EAAA,GAAAtnF,EAAAA,EAAAC,EAAAA,EACAmsE,EAAAkb,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1qI,KAAA6zC,IAAA7zC,KAAAw3J,MAAAc,GAAAl1G,EAAAC,GAIA,OAAA,IAAAk1G,EAAAhpC,EAAAC,IAIA+nC,aAAAp0J,UAAAq1J,QAAA,SAAAT,EAAAC,EAAAS,GACA,IAiBA/xE,EAAAwxE,EACAvxE,EAAA+xE,EAfA95H,GAAAm5H,EAAAC,EAAAS,IADA,EAAA,GAEAj4J,EAAA6E,KAAA8qC,MAAA4nH,EAAAn5H,GACAh+B,EAAAyE,KAAA8qC,MAAA6nH,EAAAp5H,GACAw5C,EAAA/yE,KAAA8qC,MAAAsoH,EAAA75H,GAEA7Y,GAAAvlB,EAAAI,EAAAw3E,IADA,EAAA,GAKAv7B,EAAAk7G,GAHAv3J,EAAAulB,GAIA+2B,EAAAk7G,GAHAp3J,EAAAmlB,GAIAg3B,EAAA07G,GAHArgF,EAAAryD,GAUA4yI,EAFA77G,GAAAD,EACAE,GAAAD,GACA47G,EAAA/xE,EAAAD,EAAA,EAAAkyE,EAAAV,EAAA,GACAvxE,EAAA5pC,GAAAF,GAAA67G,EAAAE,EAAAV,EAAA,EAAAxxE,EAAA,IACAgyE,EAAAR,EAAAxxE,EAAA,EAAAkyE,EAAA,GAGA97G,EAAAC,GAAA4pC,EAAAuxE,EAAAxxE,EAAA,EAAAgyE,EAAAE,EAAA,GACA/7G,EAAAE,GAAA4pC,EAAAiyE,EAAAlyE,EAAA,EAAAgyE,EAAAR,EAAA,IACAQ,EAAA/xE,EAAAuxE,EAAA,EAAAU,EAAAlyE,EAAA,GAMAzpC,EAAAJ,EAAA6pC,EA3BA,EAAA,EA4BAxpC,EAAAJ,EAAAo7G,EA5BA,EAAA,EA6BA/6G,EAAAJ,EAAA67G,EA7BA,EAAA,EA8BAx1G,EAAAvG,EAAA8pC,EA9BA,EAAA,EA8BA,EACAtjC,EAAAvG,EAAA47G,EA/BA,EAAA,EA+BA,EACAp1G,EAAAvG,EAAA47G,EAhCA,EAAA,EAgCA,EACAtM,EAAAxvG,EAAA,EAAA,GACAg8G,EAAA/7G,EAAA,EAAA,GACAg8G,EAAA/7G,EAAA,EAAA,GAEAy0E,EAAA,IAAAhxH,EACA23J,EAAA,IAAAv3J,EACAm4J,EAAA,IAAA3gF,EACAggF,EAAAp4J,KAAA03J,KAAAlmC,EAAAxxH,KAAA03J,KAAAS,EAAAn4J,KAAA03J,KAAAqB,KAAA,GACAV,EAAAr4J,KAAA03J,KAAAlmC,EAAA9qC,EAAA1mF,KAAA03J,KAAAS,EAAAD,EAAAl4J,KAAA03J,KAAAqB,EAAAH,KAAA,GACAN,EAAAt4J,KAAA03J,KAAAlmC,EAAA7qC,EAAA3mF,KAAA03J,KAAAS,EAAAO,EAAA14J,KAAA03J,KAAAqB,EAAAJ,KAAA,GACAK,EAAAh5J,KAAA03J,KAAA,EAAAlmC,EAAAxxH,KAAA03J,KAAA,EAAAS,EAAAn4J,KAAA03J,KAAA,EAAAqB,KAAA,GAEAr5E,EAAA,GAAA7iC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAw7G,EAAA74E,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1/E,KAAA43J,KAAA53J,KAAAw3J,MAAAY,GAAAv7G,EAAAC,EAAAC,GAEA4iC,EAAA,GAAA1iC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAoyE,EAAA5vC,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA3/E,KAAA43J,KAAA53J,KAAAw3J,MAAAa,GAAAp7G,EAAAC,EAAAC,GAEAutF,EAAA,GAAAtnF,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAksE,EAAAkb,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1qI,KAAA43J,KAAA53J,KAAAw3J,MAAAc,GAAAl1G,EAAAC,EAAAC,GAEAspG,EAAA,GAAAP,EAAAA,EAAAwM,EAAAA,EAAAC,EAAAA,EACAG,EAAArM,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA5sJ,KAAA43J,KAAA53J,KAAAw3J,MAAAwB,GAAA3M,EAAAwM,EAAAC,GAIA,OAAA,IAAAP,EAAAhpC,EAAAC,EAAAypC,IAIA1B,aAAAp0J,UAAA+1J,QAAA,SAAArwH,EAAA8G,EAAA8G,EAAAl1C,GAEA,IAAAk2J,EAAAz3J,KAAAy3J,MACAE,EAAA33J,KAAA23J,QACAD,EAAA13J,KAAA03J,KAGAyB,GAAA9zJ,KAAA0uC,KAAA,GAAA,GAAA,EACAqlH,GAAA,EAAA/zJ,KAAA0uC,KAAA,IAAA,GAGAnV,GAAAiK,EAAA8G,EAAA8G,EAAAl1C,GAAA43J,EACA34J,EAAA6E,KAAA8qC,MAAAtH,EAAAjK,GACAh+B,EAAAyE,KAAA8qC,MAAAR,EAAA/Q,GACAw5C,EAAA/yE,KAAA8qC,MAAAsG,EAAA7X,GACA3jB,EAAA5V,KAAA8qC,MAAA5uC,EAAAq9B,GACA7Y,GAAAvlB,EAAAI,EAAAw3E,EAAAn9D,GAAAm+I,EAKAv8G,EAAAhU,GAJAroC,EAAAulB,GAKA+2B,EAAAnN,GAJA/uC,EAAAmlB,GAKAg3B,EAAAtG,GAJA2hC,EAAAryD,GAKAi3B,EAAAz7C,GAJA0Z,EAAA8K,GAoBAuvB,GANAwH,EAAAD,EAAA,GAAA,IACAE,EAAAF,EAAA,GAAA,IACAE,EAAAD,EAAA,EAAA,IACAE,EAAAH,EAAA,EAAA,IACAG,EAAAF,EAAA,EAAA,IACAE,EAAAD,EAAA,EAAA,GAUA2pC,EAAA,GAAAixE,EAAAriH,GAAA,GAAA,EAAA,EACA4iH,EAAA,GAAAP,EAAAriH,GAAA,GAAA,EAAA,EACAsjH,EAAA,GAAAjB,EAAAriH,GAAA,GAAA,EAAA,EACA+jH,EAAA,GAAA1B,EAAAriH,GAAA,GAAA,EAAA,EAEAqxC,EAAA,GAAAgxE,EAAAriH,GAAA,GAAA,EAAA,EACAojH,EAAA,GAAAf,EAAAriH,GAAA,GAAA,EAAA,EAAAqjH,EAAA,GAAAhB,EAAAriH,GAAA,GAAA,EAAA,EACAgkH,EAAA,GAAA3B,EAAAriH,GAAA,GAAA,EAAA,EAEA47E,EAAA,GAAAymC,EAAAriH,GAAA,GAAA,EAAA,EACAikH,EAAA,GAAA5B,EAAAriH,GAAA,GAAA,EAAA,EACAkkH,EAAA,GAAA7B,EAAAriH,GAAA,GAAA,EAAA,EACAmkH,EAAA,GAAA9B,EAAAriH,GAAA,GAAA,EAAA,EAEA2H,EAAAJ,EAAA6pC,EAAA0yE,EACAl8G,EAAAJ,EAAAo7G,EAAAkB,EACAj8G,EAAAJ,EAAA67G,EAAAQ,EACAh8G,EAAAJ,EAAAq8G,EAAAD,EACAh2G,EAAAvG,EAAA8pC,EAAA,EAAAyyE,EACA/1G,EAAAvG,EAAA47G,EAAA,EAAAU,EACA91G,EAAAvG,EAAA47G,EAAA,EAAAS,EACAzH,EAAA30G,EAAAs8G,EAAA,EAAAF,EACA/M,EAAAxvG,EAAAq0E,EAAA,EAAAkoC,EACAP,EAAA/7G,EAAAy8G,EAAA,EAAAH,EACAN,EAAA/7G,EAAAy8G,EAAA,EAAAJ,EACAxH,EAAA50G,EAAAy8G,EAAA,EAAAL,EACAM,EAAA78G,EAAA,EAAA,EAAAu8G,EACAO,EAAA78G,EAAA,EAAA,EAAAs8G,EACAQ,EAAA78G,EAAA,EAAA,EAAAq8G,EACAS,EAAA78G,EAAA,EAAA,EAAAo8G,EAEA5nC,EAAA,IAAAhxH,EACA23J,EAAA,IAAAv3J,EACAm4J,EAAA,IAAA3gF,EACAyjC,EAAA,IAAA5gG,EACAm9I,EAAAV,EAAAlmC,EAAAkmC,EAAAS,EAAAT,EAAAqB,EAAArB,EAAA77C,MAAA,GACAw8C,EAAAX,EAAAlmC,EAAA9qC,EAAAgxE,EAAAS,EAAAD,EAAAR,EAAAqB,EAAAH,EAAAlB,EAAA77C,EAAAw9C,MAAA,GACAf,EAAAZ,EAAAlmC,EAAA7qC,EAAA+wE,EAAAS,EAAAO,EAAAhB,EAAAqB,EAAAJ,EAAAjB,EAAA77C,EAAAy9C,MAAA,GACAN,EAAAtB,EAAAlmC,EAAAN,EAAAwmC,EAAAS,EAAAoB,EAAA7B,EAAAqB,EAAAS,EAAA9B,EAAA77C,EAAA49C,MAAA,GACAK,EAAApC,EAAA,EAAAlmC,EAAAkmC,EAAA,EAAAS,EAAAT,EAAA,EAAAqB,EAAArB,EAAA,EAAA77C,MAAA,GAEAn8B,EAAA,GAAA7iC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAu7G,EAAA74E,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1/E,KAAA63J,KAAAJ,EAAAW,GAAAv7G,EAAAC,EAAAC,EAAAC,GAEA2iC,EAAA,GAAA1iC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAmyE,EAAA5vC,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA3/E,KAAA63J,KAAAJ,EAAAY,GAAAp7G,EAAAC,EAAAC,EAAAC,GAEAstF,EAAA,GAAAtnF,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAAquG,EAAAA,EACAniC,EAAAkb,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA1qI,KAAA63J,KAAAJ,EAAAa,GAAAl1G,EAAAC,EAAAC,EAAAquG,GACA/E,EAAA,GAAAP,EAAAA,EAAAwM,EAAAA,EAAAC,EAAAA,EAAAlH,EAAAA,EACAqH,EAAArM,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA5sJ,KAAA63J,KAAAJ,EAAAuB,GAAA3M,EAAAwM,EAAAC,EAAAlH,GAEAmI,EAAA,GAAAL,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EAAAC,EAAAA,EACAG,EAAAD,EAAA,EAAA,GAEAA,GAAAA,GACAA,EAAA/5J,KAAA63J,KAAAJ,EAAAqC,GAAAJ,EAAAC,EAAAC,EAAAC,GAGA,OAAA,IAAAtB,EAAAhpC,EAAAC,EAAAypC,EAAAe,IClUAC,OAAA,CACAC,YAAA,SAAApwH,EAAArZ,GACA,OAAAqZ,EAAAzkC,KAAAC,UAAAmrB,EAAAqZ,IAEAqwH,UAAA,SAAArwH,EAAArZ,GACA,OAAAprB,KAAA8qC,MAAArG,EAAAzkC,KAAAC,UAAAmrB,EAAAqZ,EAAA,KAEA9lC,IAAA,SAAA6D,EAAAuyJ,EAAAC,EAAAC,EAAAC,GACA,OAAAN,OAAAvqH,KAAA4qH,EAAAC,EAAAN,OAAAO,KAAA3yJ,EAAAuyJ,EAAAC,KAEA3qH,KAAA,SAAA+qH,EAAA3wH,EAAArZ,GACA,OAAAqZ,GAAArZ,EAAAqZ,GAAA2wH,GAEAD,KAAA,SAAA3yJ,EAAAiiC,EAAArZ,GACA,OAAA5oB,EAAAiiC,IAAArZ,EAAAqZ,IAEA4wH,QAAA,SAAAp6C,GACA,IAAA,IAAA1/G,EAAAioC,EAAAroC,EAAA8/G,EAAA7/G,OAAAD,EAAAI,EAAAq4B,SAAA5zB,KAAAC,SAAA9E,GAAAqoC,EAAAy3E,IAAA9/G,GAAA8/G,EAAA9/G,GAAA8/G,EAAA1/G,GAAA0/G,EAAA1/G,GAAAioC,GACA,OAAAy3E,ICLA,IAAAq6C,SAAA,oBAAAv5J,QAAAA,OAAAC,SAAA,oBAAAH,OAAAA,OAAAlB,MAAAyB,QAAAk5J,SAAAC,WAAAD,SAAAC,SAAA,KAAAv6J,KAAA,wBAEA,IAFAkK,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAA3pB,EACAykB,EADA,SAAAsS,EAAApgD,EAAAC,EAAA8qC,EAAAyI,GAAA/9C,KAAAuK,EAAAA,EAAAvK,KAAAwK,EAAAA,EAAAxK,KAAAs1C,EAAAA,EAAAt1C,KAAA+9C,EAAAA,EAAA/9C,KAAA66J,GAAA98G,EAAAxzC,EAAAvK,KAAA86J,GAAAxlH,EAAA/qC,EAAAvK,KAAA+6J,GAAAvwJ,EAAAD,EAAA,SAAA/J,EAAA+J,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAAl9C,EAAA,CAAA0J,EAAAA,GAAAgzC,EAAA,GAAAoN,EAAA,GAAA3B,EAAA,CAAA1T,EAAAyI,GAAAv9C,GAAA+J,EAAAC,GAAA,EAAA4tE,GAAA9iC,EAAAyI,GAAA,EAAAhkC,IAAArN,IAAA9L,GAAA4J,EAAA8qC,GAAA,GAAA8iC,GAAA,IAAAn9D,GAAAza,EAAAI,GAAA,IAAA,EAAA,OAAAC,EAAA2J,EAAAhK,GAAA+J,EAAA/J,GAAA,EAAA+8C,EAAA/yC,EAAAyQ,EAAAlB,EAAAlZ,EAAAy0C,EAAAiI,EAAAhzC,GAAA1J,EAAA2J,EAAA+yC,EAAA/yC,GAAA,EAAA+yC,EAAAjI,EAAAqV,EAAApgD,GAAA0Q,EAAAvO,GAAA,EAAAi+C,EAAAngD,EAAAkC,EAAAqN,EAAAivC,EAAAx+C,EAAA4tE,GAAAr6B,EAAAq6B,GAAA,EAAAztB,EAAArV,EAAA0T,EAAAz+C,GAAAogD,EAAAngD,EAAAw+C,EAAAx+C,GAAA,EAAA,CAAA3J,EAAA08C,EAAAoN,EAAA3B,GAAA,SAAA/tC,EAAA1Q,EAAAgzC,EAAAoN,EAAAnqD,EAAAya,EAAAvO,GAAA,IAAAqN,EAAAumG,EAAA1sF,EAAAykB,EAAA3O,EAAA9K,EAAA7Y,EAAAqnC,EAAA7qB,EAAA,GAAAhhC,EAAA,GAAAsnC,EAAAn8B,GAAAnC,EAAA,GAAA,IAAA+1G,KAAArlG,EAAA,iBAAAA,EAAA,IAAAA,EAAA,IAAA,wKAAA,MAAAsiC,IAAAA,EAAA,GAAAhzC,EAAA,GAAAhJ,EAAAlB,KAAAigH,GAAA,GAAA,EAAA/1G,EAAA9J,OAAA,CAAA,IAAA2sD,EAAA7iD,EAAAA,EAAA9J,OAAA,GAAAslB,GAAA,EAAAhM,EAAAxY,EAAAd,QAAA,IAAAsZ,GAAA,GAAAumG,EAAA/+G,EAAAwY,GAAA,IAAA1U,KAAA4uC,IAAApL,EAAAy3E,GAAAlzD,EAAAkzD,IAAA,CAAAv6F,GAAA,EAAA,MAAAA,IAAAxb,EAAAA,EAAAvI,SAAA0K,GAAAnC,EAAA+G,QAAA5E,GAAAnC,EAAAlK,KAAAkK,EAAA,IAAAmC,EAAAnC,EAAAA,EAAA9J,OAAA,IAAA,IAAA+J,EAAA/J,OAAA60C,EAAA70C,OAAAs9C,EAAAt9C,OAAA,EAAAsZ,EAAAxY,EAAAd,QAAA,IAAAsZ,GAAAumG,EAAA/+G,EAAAwY,GAAAlZ,EAAAy/G,IAAA,IAAArlG,EAAAhZ,QAAA,IAAAq+G,EAAA,KAAA/9E,EAAA+9E,GAAA,SAAA/1G,EAAAwzC,EAAAl9C,EAAA08C,GAAA,IAAAyL,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAAqN,EAAA,GAAA,GAAAwjC,EAAA,IAAA/8C,GAAA+J,EAAA,CAAAgzC,GAAAv7C,OAAAuI,IAAA9J,QAAA,IAAAD,GAAA,iBAAAkM,EAAAnC,EAAA/J,GAAAu9C,KAAA,MAAArxC,EAAA0pD,OAAA,KAAA7rD,EAAA/J,GAAAu9C,GAAAR,EAAAQ,GAAAtV,OAAA/7B,EAAA0pD,OAAA,GAAA1pD,EAAAsuJ,OAAA,KAAA,IAAAhyG,EAAAz+C,EAAA9J,OAAA,GAAA,EAAA,OAAAsZ,EAAA,GAAA,IAAA4wC,EAAApgD,EAAA,GAAAwzC,GAAA,EAAA,EAAAxzC,EAAAy+C,GAAA,EAAA,EAAA,GAAAjL,IAAAhkC,EAAA,IAAAvZ,EAAA,EAAAA,EAAAwoD,EAAAxoD,IAAAI,EAAA2J,EAAA/J,GAAAu9C,GAAAq6B,EAAA7tE,EAAA/J,EAAA,GAAAu9C,GAAAhkC,EAAAvZ,GAAA,IAAAmqD,EAAA/pD,EAAA,EAAA,EAAAw3E,GAAAv3E,IAAAoa,EAAA1Q,EAAA/J,EAAA,GAAAu9C,GAAAvzC,EAAAhK,IAAAgK,EAAAhK,IAAA,IAAA43E,EAAAx3E,IAAAw3E,EAAAx3E,GAAA00C,EAAA90C,IAAA80C,EAAA90C,IAAA,IAAAya,EAAAm9D,IAAAn9D,EAAAm9D,IAAA,OAAAr+D,EAAAvZ,GAAA,IAAAmqD,EAAApgD,EAAA/J,GAAAu9C,GAAA,EAAA,EAAAxzC,EAAA/J,EAAA,GAAAu9C,IAAAhkC,EAAAq+D,CAAA7tE,EAAA+1G,EAAAz/G,EAAAy/G,GAAA5zG,GAAA,IAAAqN,EAAAvP,EAAA/J,QAAA,IAAAsZ,GAAAvP,EAAAuP,GAAA1U,KAAA0uC,KAAAvpC,EAAAuP,IAAAu7B,EAAAv7B,GAAA1U,KAAA0uC,KAAAuB,EAAAv7B,IAAA,IAAAvZ,EAAA,CAAA,IAAAuZ,EAAAxY,EAAAd,QAAA,IAAAsZ,GAAA,GAAAlZ,EAAAy/G,GAAA,IAAA1hF,GAAAhL,EAAA2O,EAAAhhC,EAAAwY,KAAAtZ,OAAA,EAAA43C,EAAA,EAAAA,EAAAzZ,EAAAyZ,IAAA3O,EAAA9V,EAAAykB,EAAA,GAAAwiH,GAAAvlH,EAAA+C,GAAAzkB,EAAAykB,GAAAwiH,GAAArwJ,EAAA6tC,GAAA0F,EAAA1F,IAAA0F,EAAA1F,IAAA,GAAA3O,EAAAA,EAAA,IAAA3vB,EAAAgkC,EAAAt9C,QAAA,IAAAsZ,GAAAgkC,EAAAhkC,GAAA1U,KAAA0uC,KAAAgK,EAAAhkC,IAAA,IAAAA,EAAAxY,EAAAd,OAAA43C,EAAAsS,EAAA,EAAA,GAAA,IAAA5wC,IAAA,SAAAxP,EAAA1J,EAAA08C,EAAAoN,EAAA3B,GAAA,IAAA,IAAAovB,EAAAn9D,EAAAlB,EAAAumG,EAAA52E,EAAA9K,EAAA7Y,EAAAqnC,EAAA7qB,EAAAhhC,EAAAgJ,EAAA9J,OAAA,EAAAooC,EAAA,EAAA8G,EAAAplC,EAAA,GAAAA,EAAA3J,EAAA,EAAAA,EAAAW,EAAAX,IAAAw3E,GAAAr+D,EAAAxP,EAAAs+B,IAAAt+B,EAAA0Q,EAAAlB,EAAAgkC,EAAArxC,EAAAnC,EAAAs+B,EAAA,GAAAkV,EAAA1F,EAAA2Q,GAAAjjC,EAAAvb,EAAA5J,GAAA2hC,IAAA6qB,EAAA9X,EAAA10C,IAAAmlB,GAAAllB,EAAA,MAAA8pD,GAAA5M,EAAAn9C,IAAA,IAAAqa,IAAAqlG,EAAArlG,GAAAA,EAAAm9D,IAAAztB,EAAA,GAAA9pD,EAAA,IAAAklB,EAAAwc,EAAAxc,EAAA,OAAA6N,EAAA3Y,GAAAvO,EAAAuO,IAAA0vC,EAAA,GAAA9pD,EAAA,IAAAusD,EAAA7qB,EAAA6qB,EAAA,IAAAkzD,IAAA,EAAAv6F,GAAAA,EAAAqnC,GAAA,IAAA,GAAA,KAAAnyC,IAAAqlG,EAAArlG,GAAAA,EAAAm9D,GAAAv3E,EAAA,KAAA+yB,EAAA3Y,GAAAvO,EAAAuO,GAAApa,EAAA,KAAA,EAAAy/G,GAAAjoE,EAAAzkB,GAAAykB,EAAAt+B,EAAAu7B,EAAA5L,EAAA42E,EAAAvmG,EAAAvP,EAAA,IAAA5J,EAAA+uC,EAAAA,EAAA51B,EAAAxP,EAAA,IAAAwP,EAAAu7B,EAAAv7B,EAAAxP,GAAAwP,EAAA8gJ,GAAA5/I,EAAAm9D,EAAAr+D,EAAA+gJ,GAAApxH,EAAA0uC,EAAAr+D,EAAAghJ,GAAAprH,EAAAyoC,EAAA76B,GAAA3e,EAAAp+B,EAAA43E,EAAAzoC,EAAAjG,EAAAzuB,GAAA1Q,EAAA7J,OAAAmoC,EAAA,EAAAjK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAiK,GAAA,GAAAA,IAAA8G,EAAA/b,GAAA7Z,EAAAxP,EAAAs+B,IAAAr+B,EAAAmlC,EAAA51B,EAAAu7B,EAAA3F,EAAA,IAAA51B,EAAAgkC,EAAApO,GAAA51B,EAAA8gJ,GAAA9gJ,EAAAgkC,EAAAhkC,EAAAxP,EAAAwP,EAAA+gJ,GAAA/gJ,EAAAu7B,EAAAv7B,EAAAxP,EAAAwP,EAAAghJ,GAAAprH,EAAA51B,EAAAxP,EAAAgzC,IAAA3e,EAAAp+B,EAAAuZ,EAAAxP,EAAAolC,EAAA51B,EAAAu7B,EAAAv7B,EAAAgkC,GAAAxzC,EAAA7J,OAAAmoC,EAAA,EAAAjK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAAAh+B,CAAAgzB,EAAA2O,EAAA+9E,EAAA/+G,EAAAwY,IAAAwjC,EAAAoN,EAAAnqD,EAAAK,EAAAy/G,IAAAv6F,IAAA6N,EAAAlzB,OAAA,EAAA23C,GAAAzkB,EAAAlzB,OAAAkzB,EAAAnzB,OAAA43C,EAAAA,IAAA,OAAA9V,EAAA,SAAA+9E,EAAA/1G,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA,GAAA3B,EAAA,GAAAxoD,EAAA,EAAAI,EAAA,EAAAw3E,GAAA5tE,EAAAA,GAAA,GAAA,GAAA,EAAAyQ,EAAA,GAAAvO,EAAA,GAAA,IAAA4oC,KAAA/qC,GAAA,SAAAA,EAAAC,EAAA8qC,GAAA,IAAA,IAAAz0C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAA43E,EAAAn9D,EAAAvO,EAAAqN,EAAAumG,EAAA,EAAAhrE,EAAA1hB,EAAArpB,EAAA9J,QAAA,IAAAmzB,GAAA,IAAA2pB,GAAA7wC,EAAAnC,EAAAqpB,IAAArpB,EAAAogD,EAAAj+C,EAAAqxC,EAAAR,EAAAyL,EAAAt8C,EAAA4oC,EAAAiI,EAAA/8C,EAAAkM,EAAAlC,EAAA+yC,EAAA18C,EAAA,EAAAu3E,EAAA,EAAAA,GAAA9iC,EAAA8iC,IAAAr6B,EAAAl9C,GAAAA,IAAAD,EAAA0/G,EAAAloC,GAAAx3E,EAAA+pD,EAAA,GAAA1vC,EAAA,EAAAra,IAAAA,EAAAooD,EAAA/tC,EAAAza,IAAAI,GAAA4J,EAAAuP,EAAA6Z,EAAA0hB,EAAA8iC,EAAA,IAAA5tE,EAAAuP,IAAA,GAAAgkC,EAAAA,EAAAhkC,CAAAxP,EAAA+qC,GAAAqV,EAAAngD,GAAA,IAAA3J,EAAA8pD,EAAAlqD,OAAAs9C,EAAA,EAAAA,EAAAl9C,EAAAk9C,IAAAv9C,GAAA6E,KAAA0uC,KAAA4W,EAAA5M,IAAArxC,EAAA6wC,EAAAQ,EAAAvzC,GAAAhK,EAAA+8C,GAAA66B,IAAAx3E,GAAAJ,EAAAya,EAAAsiC,EAAAQ,EAAAvzC,GAAA,GAAAkC,EAAAs8C,EAAAzL,GAAA38C,EAAAJ,EAAA,EAAAkM,EAAA,IAAA,MAAA,CAAAjM,OAAAG,EAAAopI,QAAAhhF,EAAAqmE,SAAAp0G,GAAA0/I,SAAAM,UAAA,WAAA,CAAA,iBAAA,sBAAA,aAAA,SAAA1wJ,EAAAC,EAAA8qC,GAAA,SAAAyI,EAAAxzC,GAAA,IAAA,IAAA+qC,EAAA,GAAAyI,EAAAxzC,EAAA9J,OAAA+J,EAAA,EAAAA,IAAAuzC,EAAAzI,EAAAj1C,KAAAkK,EAAAC,OAAA,OAAA8qC,EAAA,SAAAz0C,EAAA0J,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAhzC,EAAA2wJ,MAAA,IAAAn9G,KAAAR,EAAA18C,EAAA08C,EAAAQ,GAAAxzC,EAAAwzC,GAAA,mBAAAl9C,EAAAA,EAAAG,KAAAwJ,EAAA8qC,GAAAA,GAAAz0C,EAAAy0C,EAAAz0C,EAAAJ,eAAA8J,EAAA2wJ,MAAA,IAAA39G,EAAA,SAAAhzC,EAAAC,EAAAuzC,GAAAzI,EAAAt0C,KAAAhB,KAAAuK,EAAAC,EAAAuzC,GAAA/9C,KAAAm7J,OAAA,EAAAn7J,KAAAo7J,OAAA,IAAAp7J,KAAAq7J,KAAAC,KAAAt7J,KAAAu7J,QAAAv7J,KAAAq7J,KAAAtpH,QAAA,EAAA/xC,KAAAw7J,aAAAx7J,KAAAq7J,KAAAI,aAAA,EAAAz7J,KAAA07J,QAAA,EAAA17J,KAAA+oE,OAAAxrB,EAAAp6C,UAAA4lE,QAAApe,EAAA,MAAA3B,EAAA1T,EAAAqmH,WAAAn7J,EAAAwoD,EAAA4yG,WAAAh7J,EAAAooD,EAAA9jD,QAAAkzE,EAAA76B,EAAAp6C,UAAAmyC,EAAA5e,GAAA,GAAA,GAAA,IAAAzb,EAAA,GAAAsiC,EAAAh7C,QAAA,SAAA61E,EAAA/0E,YAAAk6C,EAAA66B,EAAAyjF,OAAAC,KAAA,EAAAv+G,EAAAw+G,aAAAx+G,EAAAy+G,mBAAA1mH,EAAAymH,aAAAx+G,EAAA0+G,YAAA3mH,EAAA2mH,YAAA1+G,EAAA2+G,aAAA5mH,EAAA4mH,aAAA3+G,EAAA4+G,OAAA7mH,EAAA6mH,OAAA5+G,EAAAwrB,OAAAzzB,EAAAyzB,OAAAqP,EAAAgkF,WAAA,WAAA,OAAAp8J,KAAAo7J,OAAA,IAAAp7J,KAAAq7J,KAAAC,KAAAt7J,KAAAu7J,QAAAv7J,KAAAq7J,KAAAtpH,QAAA,EAAA/xC,KAAAw7J,aAAAx7J,KAAAq7J,KAAAI,aAAA,EAAAz7J,KAAAq8J,UAAA,GAAA/mH,EAAAnyC,UAAAi5J,WAAAp7J,KAAAhB,OAAAo4E,EAAAkkF,SAAA,SAAA/xJ,EAAAC,GAAA,IAAAuzC,EAAAl9C,EAAAb,KAAAu8J,MAAAh/G,EAAAv9C,KAAAq7J,KAAAmB,iBAAAjyJ,EAAAiyJ,gBAAA,IAAAz+G,KAAAvzC,GAAAxK,KAAA40I,WAAA50I,KAAAy8J,UAAAC,QAAA18J,KAAA40I,WAAA50I,KAAAy8J,UAAAC,MAAA18J,KAAAq8J,UAAA,GAAAr8J,KAAA87J,IAAA97J,KAAA28J,UAAA,GAAA,GAAA38J,KAAAy8J,UAAA1vI,OAAA/sB,KAAAA,KAAA40I,WAAA50I,KAAA48J,SAAAryJ,EAAAvK,KAAAq7J,KAAAt9G,GAAAxzC,EAAAwzC,GAAA,GAAA/9C,KAAA68J,UAAAt/G,EAAA,GAAA/yC,EAAAxK,KAAA68J,UAAA,EAAAt/G,GAAAv9C,KAAA+oE,OAAA,GAAA,GAAA,QAAA,GAAA/oE,KAAA87J,KAAA97J,KAAA28J,UAAA,GAAA,GAAA38J,KAAA88J,yBAAA98J,KAAA+8J,UAAAznH,EAAA0nH,eAAA,aAAAh9J,MAAA,KAAAA,KAAA08J,MAAA18J,KAAAi9J,UAAA,CAAAtyG,EAAA3qD,KAAAk9J,WAAAl9J,KAAA+oE,OAAA,GAAA,GAAA,GAAA/oE,KAAA68J,UAAA,EAAA78J,KAAA+oE,OAAApe,GAAA,GAAA,QAAA,GAAA3qD,KAAA68J,UAAA,EAAA78J,KAAAm9J,QAAA,EAAAn9J,KAAA08J,OAAAn/G,EAAA,IAAA,IAAAyL,EAAAxoD,EAAA,GAAA,EAAAK,GAAAD,EAAAZ,KAAA+8J,SAAAn8J,GAAAooD,EAAApoD,EAAAg+B,EAAAh+B,EAAA00C,EAAA10C,EAAA00C,GAAA90C,EAAAI,EAAAg+B,EAAAoqB,EAAApoD,EAAA00C,EAAA10C,EAAAA,EAAAw8J,MAAA,OAAAp9J,MAAAo4E,EAAArP,OAAA,SAAAx+D,EAAAC,EAAA8qC,GAAAt1C,KAAA68J,UAAA,IAAA78J,KAAAi9J,WAAAj9J,KAAAq7J,KAAAtpH,QAAA/xC,KAAAo8J,aAAA,IAAAr+G,EAAAl9C,EAAA08C,EAAA38C,EAAAqa,EAAAvO,EAAAqN,EAAA/Z,KAAA07J,OAAA17J,KAAAq9J,gBAAAr9J,KAAAs9J,eAAAh9C,EAAAtgH,KAAA08J,MAAA9oI,EAAA5zB,KAAAk9J,WAAA7kH,EAAAr4C,KAAAm7J,OAAAzxH,EAAA1pC,KAAAi9J,UAAAr+H,EAAA5+B,KAAAu9J,aAAA,GAAAxjJ,EAAA,MAAAxP,GAAAvK,KAAAk9J,WAAAnjJ,EAAA/Z,KAAAm7J,OAAAn7J,KAAAu7J,QAAAv7J,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,SAAAn7J,KAAA08J,MAAA,EAAA18J,KAAAu8J,MAAAv8J,KAAAw9J,MAAAC,SAAAz9J,KAAAw9J,MAAAE,SAAA,GAAA,IAAA19J,KAAA08J,MAAAhzH,EAAA1pC,KAAAu8J,MAAAv8J,KAAAw9J,MAAAC,SAAAz9J,KAAAw9J,MAAAE,SAAA,GAAA,GAAA19J,KAAA29J,YAAA5/G,GAAA,EAAAl9C,EAAA,aAAAy0C,EAAAA,GAAAt1C,KAAAy8J,UAAAmB,oBAAA,IAAAl0H,IAAA1pC,KAAA68J,UAAA78J,KAAAq7J,KAAAwC,OAAAvoH,IAAAt1C,KAAA40I,aAAA50I,KAAAy8J,UAAAQ,YAAA1yJ,EAAA,IAAAq0B,EAAA,GAAAr0B,GAAA,IAAA,MAAAA,GAAAq0B,IAAA+rB,GAAA,YAAA3qD,KAAAugB,OAAAqe,IAAAr0B,IAAA+qC,GAAA,EAAAqV,EAAA/rB,IAAA/9B,EAAA,sBAAAb,KAAAu9J,aAAA7wJ,GAAAlC,GAAAD,GAAAq0B,IAAAr0B,EAAAA,EAAAogD,IAAApgD,EAAA,MAAAvK,KAAAk9J,WAAAl9J,KAAA08J,MAAA18J,KAAAm7J,OAAA,EAAAn7J,KAAAu8J,MAAAv8J,KAAAw9J,MAAAC,SAAAz9J,KAAAw9J,MAAAE,SAAA,GAAA,GAAA,IAAA9pI,GAAA,IAAA8V,GAAA,EAAA9K,KAAA/9B,EAAA,oBAAAk9C,EAAA/9C,KAAA29J,WAAApzJ,EAAA,IAAAvK,KAAA89J,SAAA,EAAA,IAAAp0H,IAAA1pC,KAAA68J,UAAA78J,KAAAq7J,KAAAwC,OAAAvoH,IAAA,GAAA1W,IAAA0W,GAAA,GAAAt1C,KAAAu9J,aAAA7wJ,GAAAlC,GAAAD,GAAAq0B,IAAAr0B,EAAAA,EAAAogD,IAAA3qD,KAAA68J,WAAAvnH,GAAA,KAAAt1C,KAAAk9J,WAAAl9J,KAAA08J,MAAAnyJ,EAAA,IAAAvK,KAAAu7J,UAAA/6J,EAAAkpC,EAAA1pC,KAAAw7J,aAAAx7J,KAAAm7J,OAAAn7J,KAAAk9J,WAAA18J,GAAA,EAAA,IAAAR,KAAAm7J,QAAAn7J,KAAAm7J,SAAAn7J,KAAAk9J,WAAA18J,GAAAR,KAAAm7J,SAAAn7J,KAAA08J,MAAA18J,KAAAk9J,WAAAl9J,KAAAm7J,OAAA36J,EAAAR,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,UAAAn7J,KAAA08J,MAAAhzH,EAAA1pC,KAAA08J,OAAA18J,KAAA08J,MAAAhzH,EAAA1pC,KAAA08J,MAAAhzH,EAAA1pC,KAAA08J,MAAA,IAAA18J,KAAA08J,MAAA,IAAA18J,KAAA+9J,WAAAn9J,EAAAZ,KAAA08J,MAAAhzH,GAAA,KAAA0uC,EAAAp4E,KAAA+9J,YAAA,IAAA3lF,GAAA,IAAAx3E,KAAAA,EAAA,EAAAA,GAAA,IAAAw3E,IAAAx3E,GAAA,GAAA,KAAAqa,EAAAjb,KAAAg+J,YAAAp9J,GAAAA,EAAA,IAAAqa,EAAAra,GAAAA,EAAAA,EAAA,IAAAqa,EAAAra,GAAAA,EAAAA,EAAAA,EAAA,IAAAqa,IAAAra,GAAAA,EAAAA,EAAAA,EAAAA,GAAA,IAAAw3E,EAAAp4E,KAAAu8J,MAAA,EAAA37J,EAAA,IAAAw3E,EAAAp4E,KAAAu8J,MAAA37J,EAAAZ,KAAA08J,MAAAhzH,EAAA,GAAA1pC,KAAAu8J,MAAA37J,EAAA,EAAAZ,KAAAu8J,MAAA,EAAA37J,EAAA,GAAAZ,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAA19J,KAAA08J,MAAAhzH,IAAA42E,IAAAtgH,KAAA08J,OAAApnH,GAAA+C,IAAAr4C,KAAAm7J,OAAA,CAAA,IAAAn7J,KAAA68J,SAAA,CAAA,GAAA78J,KAAAm9J,SAAAn9J,KAAA68J,UAAA78J,KAAA87J,IAAA,OAAA,IAAAxmH,GAAAt1C,KAAA+8J,YAAA,IAAA/8J,KAAAq7J,KAAAwC,MAAA79J,KAAAi9J,WAAAj9J,KAAAq7J,KAAAwC,OAAA79J,KAAAi9J,WAAA,OAAAj9J,KAAA08J,MAAAp8C,EAAAtgH,KAAAk9J,WAAAtpI,EAAA5zB,KAAAu9J,aAAA3+H,EAAA5+B,KAAAm7J,OAAA9iH,EAAA2Q,EAAAi1G,WAAA59J,KAAAL,WAAAA,KAAAk+J,MAAA,CAAA3zJ,EAAAC,IAAAxK,KAAA08J,QAAA3+G,EAAA/9C,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAA19J,KAAA08J,MAAAhzH,GAAAqU,GAAA/9C,KAAAw9J,MAAAC,WAAAz9J,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAA,IAAA19J,KAAA08J,MAAA,EAAA,IAAA,KAAA,IAAA18J,KAAAk+J,QAAAl+J,KAAAk+J,OAAA,GAAAl+J,KAAA89J,UAAA99J,KAAAm+J,SAAAn+J,KAAA08J,QAAAp8C,GAAA,GAAA/1G,IAAAvK,KAAA89J,SAAA,GAAA,IAAAlqI,IAAA,IAAA5zB,KAAA68J,UAAA,EAAAtyJ,GAAAvK,KAAAm9J,QAAAn9J,KAAAo+J,WAAA,GAAA7zJ,EAAAvK,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAAz0C,EAAAA,GAAA,aAAAb,KAAAq7J,KAAA3kC,SAAA,IAAA12H,KAAAk9J,YAAA,IAAAxzH,IAAAl/B,GAAAxK,KAAAq+J,UAAA,aAAA9gH,EAAAv9C,KAAA+8J,SAAAx/G,GAAAA,EAAAA,EAAAA,EAAAx3B,EAAAw3B,EAAA3pB,GAAA2pB,EAAAjI,EAAAt1C,KAAAu8J,MAAAh/G,EAAA3e,GAAA2e,EAAAx3B,EAAAw3B,EAAA3pB,GAAA2pB,EAAAjI,EAAAt1C,KAAAu8J,MAAAh/G,EAAA3e,EAAA2e,EAAAA,EAAA6/G,MAAAp9J,KAAAs+J,YAAA/zJ,EAAA,GAAAvK,KAAAo+J,UAAAp+J,KAAA40I,YAAA50I,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAA9qC,GAAAxK,KAAAk9J,aAAAtpI,IAAAmqB,GAAA/9C,KAAAq+J,UAAA,aAAAr+J,KAAAm7J,SAAA9iH,IAAA7tC,GAAAxK,KAAA87J,KAAA97J,KAAAq7J,KAAAkD,UAAAv+J,KAAAq+J,UAAA,cAAAx9J,GAAAb,KAAA87J,MAAAxmH,IAAA/qC,EAAA,GAAAvK,KAAAo+J,WAAAp+J,KAAAs+J,WAAAt+J,KAAA40I,YAAA50I,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAAyI,IAAA/9C,KAAAy8J,UAAAmB,oBAAA59J,KAAA28J,UAAA,GAAA,GAAA38J,KAAA89J,SAAA,IAAAtzJ,GAAAxK,KAAAq7J,KAAAx6J,IAAAb,KAAAq+J,UAAAx9J,GAAA,IAAA6oC,GAAA1pC,KAAAu9J,eAAA5yG,GAAAj+C,IAAAi+C,IAAA3qD,KAAAu9J,aAAA,SAAA3pI,IAAA5zB,KAAAk9J,YAAAl9J,KAAAs+J,YAAA9zJ,GAAAxK,KAAAq+J,UAAA,cAAA9gH,EAAA7mB,GAAA,SAAAnsB,EAAAC,EAAA8qC,GAAA,OAAA,IAAAiI,EAAAhzC,EAAAC,EAAA8qC,IAAAiI,EAAA08E,KAAA,SAAA1vH,EAAAC,EAAA8qC,GAAA,OAAAA,EAAAkpH,cAAA,EAAAlpH,EAAAknH,gBAAA,GAAAlnH,EAAAknH,gBAAA,IAAAj/G,EAAAhzC,EAAAC,EAAA8qC,IAAAiI,EAAAkhH,OAAA,SAAAl0J,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAAA,EAAA2kG,QAAAptG,EAAAyI,EAAAy+G,gBAAA,GAAAz+G,EAAAy+G,iBAAA,GAAAlnH,EAAAknH,gBAAA,IAAAj/G,EAAAhzC,EAAAC,EAAAuzC,IAAAR,EAAAmhH,UAAAnhH,EAAAohH,MAAA,SAAAp0J,EAAAC,EAAAmgD,EAAA3B,EAAAovB,EAAA1rE,EAAAqN,GAAAivC,EAAAA,GAAA,EAAA,SAAAoE,IAAAzC,EAAAi0G,YAAAj0G,EAAAi0G,WAAA79J,MAAA4pD,EAAAk0G,iBAAA7+J,KAAAiB,WAAAm3E,EAAAr3E,MAAAgZ,GAAA4wC,EAAAm0G,eAAA9+J,KAAA0M,GAAAuO,GAAA,IAAAqlG,EAAA1sF,EAAAykB,EAAA3O,EAAA9K,EAAA,EAAA7Y,EAAA,GAAAwc,EAAAooB,EAAAuwG,MAAA35J,EAAAopD,EAAA+3F,SAAA/3F,EAAA+3F,QAAAwY,MAAA,IAAAt6J,EAAA2J,KAAA,iBAAAA,IAAAA,EAAA+qC,EAAA7yC,SAAA8H,IAAAA,GAAA/J,EAAA+J,KAAAA,EAAAwzC,EAAAxzC,KAAAA,EAAAA,GAAA,GAAAy+C,EAAA,KAAAz+C,EAAAwzC,EAAAxzC,IAAAuR,UAAAktC,IAAA,GAAAs3D,EAAA/1G,EAAA9J,OAAA,EAAA43C,EAAA,EAAAA,GAAAioE,EAAAjoE,IAAA,CAAA,IAAA3O,KAAA9V,EAAA,GAAA+2B,EAAA/2B,EAAA8V,GAAAihB,EAAAjhB,GAAA,GAAAnH,GAAA1hC,EAAA+yB,EAAArpB,EAAA8tC,GAAA92C,EAAA,CAAA,IAAAmoC,KAAAnoC,EAAAqyB,EAAA8uH,QAAA,GAAA/3F,EAAA+3F,QAAAnhJ,EAAAmoC,GAAAihB,EAAA+3F,QAAAh5G,GAAA7oC,EAAA+yB,EAAA8uH,QAAAn4I,EAAA8tC,GAAAzkB,EAAAiE,MAAA+G,GAAAhL,EAAAiE,OAAA,GAAAwgB,IAAAioE,GAAAloC,IAAAxkD,EAAAgrI,WAAAxxG,GAAArnC,EAAAsyB,GAAA,IAAAkF,EAAAhzC,EAAA8tC,GAAA7tC,EAAAopB,GAAAgL,GAAAoqB,EAAA,OAAAjjC,GAAAw3B,EAAAwhH,YAAAxhH,EAAAyhH,QAAA,SAAAz0J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA8pD,EAAA3B,GAAA,OAAA1T,EAAAkpH,cAAA,EAAAlpH,EAAAknH,gBAAA,GAAAlnH,EAAAknH,gBAAAj/G,EAAAmhH,UAAAn0J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA8pD,EAAA3B,IAAAzL,EAAA0hH,cAAA1hH,EAAA2hH,UAAA,SAAA30J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA8pD,EAAA3B,EAAAxoD,GAAA,OAAAu9C,EAAA2kG,QAAAptG,EAAAyI,EAAAy+G,gBAAA,GAAAz+G,EAAAy+G,iBAAA,GAAAlnH,EAAAknH,gBAAAj/G,EAAAmhH,UAAAn0J,EAAAC,EAAAuzC,EAAAl9C,EAAA8pD,EAAA3B,EAAAxoD,IAAA+8C,EAAA4hH,YAAA,SAAA50J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,OAAA,IAAA08C,EAAA/yC,EAAA,EAAA,CAAAqtB,MAAAttB,EAAAq0J,WAAAp0J,EAAA40J,iBAAA9pH,EAAAwpH,cAAA/gH,EAAAshH,kBAAA70J,EAAA80J,wBAAAhqH,EAAAknH,iBAAA,EAAA+C,UAAA1+J,EAAA2+J,UAAA,KAAAjiH,EAAAj9B,IAAA,SAAA/V,EAAAC,GAAA,OAAA,IAAA+yC,EAAAhzC,EAAA,EAAAC,IAAA+yC,EAAAkiH,WAAA,SAAAl1J,GAAA,OAAA,EAAA+qC,EAAA2mH,YAAA1xJ,GAAA,GAAA9J,QAAA,IAAAiM,EAAA,SAAAnC,EAAAC,GAAA,IAAA,IAAAuzC,EAAA,GAAAl9C,EAAA,EAAA08C,EAAAhzC,EAAAm1J,OAAAniH,GAAAA,aAAAjI,EAAAyI,EAAAl9C,KAAA08C,GAAA/yC,IAAAuzC,EAAAl9C,KAAA08C,GAAA18C,GAAAk9C,EAAAA,EAAA/7C,OAAA0K,EAAA6wC,EAAA/yC,KAAA/J,QAAA88C,EAAAA,EAAA6/G,MAAA,OAAAr/G,GAAAhkC,EAAAwjC,EAAAoiH,aAAA,SAAAn1J,GAAA,OAAAkC,EAAAnC,EAAAq1J,cAAAp1J,GAAAxI,OAAA0K,EAAAnC,EAAAs1J,oBAAAr1J,KAAA+yC,EAAAuiH,QAAA,SAAAv1J,EAAA+qC,EAAAyI,EAAAl9C,GAAA,MAAAy0C,IAAAA,GAAA,GAAA,MAAAyI,IAAAA,GAAA,GAAA,IAAA,IAAAR,EAAAoN,EAAAnqD,EAAAuZ,EAAA,GAAAlZ,GAAAD,EAAAJ,EAAAC,OAAA23E,EAAA9iC,GAAAyI,GAAAl9C,EAAAmoD,EAAA,EAAAA,EAAApoD,EAAAooD,IAAA2B,EAAAnqD,EAAAwoD,IAAAovB,GAAAztB,aAAAngD,IAAA+yC,EAAAoN,EAAA9qD,SAAA8qD,EAAA0wG,KAAAuD,aAAA7gH,GAAAzI,IAAAiI,KAAAhzC,EAAAogD,EAAAo1G,UAAAp1G,EAAAgzG,UAAA,EAAAhzG,EAAA0yG,iBAAA1yG,EAAAgyG,UAAA,GAAA,KAAAp/G,EAAAyiH,kBAAA,SAAAz1J,EAAAC,GAAA,GAAA,MAAAD,EAAA,CAAA,IAAA1J,EAAA8pD,EAAAytB,EAAAn9D,EAAAvO,EAAAqN,EAAAivC,EAAAi3G,YAAA,GAAA,iBAAA11J,IAAAA,EAAA+qC,EAAA7yC,SAAA8H,IAAAA,GAAA/J,EAAA+J,KAAAA,EAAAwzC,EAAAxzC,IAAA3J,EAAA2J,GAAA,IAAA0Q,EAAA1Q,EAAA9J,QAAA,IAAAwa,GAAAsiC,EAAAyiH,kBAAAz1J,EAAA0Q,GAAAzQ,OAAA,CAAA,IAAA4tE,KAAAv3E,EAAA,GAAAkZ,EAAA,IAAA4wC,EAAA5wC,EAAAq+D,GAAAv4E,OAAAgH,WAAA8jD,GAAAA,IAAApgD,IAAA1J,EAAAA,EAAAmB,OAAA+X,EAAAq+D,GAAAljD,SAAAy1B,EAAAA,EAAA9jD,WAAA,IAAA6F,EAAA7L,EAAAJ,OAAAwa,EAAA,EAAAA,EAAAvO,EAAAuO,IAAAzQ,GAAA3J,EAAAoa,GAAA8kJ,UAAAl/J,EAAAoa,GAAAoiJ,iBAAAx8J,EAAAoa,GAAA0hJ,UAAA,GAAA,MAAA,SAAAr8C,EAAA/1G,EAAA+qC,EAAAyI,EAAAl9C,GAAAy0C,GAAA,IAAAA,EAAAyI,GAAA,IAAAA,EAAA,IAAA,IAAAR,EAAAoN,EAAA3B,EAAAjvC,EAAAlZ,GAAA,IAAAA,GAAAL,EAAA80C,GAAAyI,GAAAl9C,EAAAD,EAAAooD,EAAAvoD,QAAA,IAAAG,GAAA+pD,EAAA3B,EAAApoD,IAAAJ,GAAAmqD,aAAAngD,IAAA+yC,EAAAoN,EAAA9qD,SAAA8qD,EAAA0wG,KAAAuD,aAAA7gH,GAAAzI,IAAAiI,IAAAoN,EAAAqqF,OAAAzqI,GAAA,OAAAgzC,EAAA2iH,SAAA,SAAA31J,EAAAC,EAAA8qC,GAAAgrE,GAAA,EAAA/1G,EAAAC,EAAA8qC,IAAAiI,EAAA4iH,UAAA,SAAA51J,EAAAC,EAAA8qC,GAAAgrE,GAAA,EAAA/1G,EAAAC,EAAA8qC,IAAAiI,EAAA6iH,gBAAA,SAAA51J,GAAA,IAAAuzC,EAAAxzC,EAAAq1J,cAAA/+J,EAAAy0C,EAAA6mH,OAAArkI,KAAA,OAAA72B,UAAAR,QAAA+J,EAAAA,GAAAmgD,EAAA5M,EAAA62F,WAAA/zI,GAAAA,EAAAk9C,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAAuzC,EAAAxzC,EAAAs1J,oBAAAh/J,EAAAy0C,EAAA6mH,OAAAmE,MAAAviH,EAAA62F,WAAA/zI,GAAAA,EAAAk9C,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAAuzC,EAAAsiH,WAAA91J,EAAAq1J,cAAAS,WAAA71J,GAAAuzC,EAAAsiH,YAAAjoF,EAAAr6D,SAAA,SAAAxT,GAAA,OAAAtJ,UAAAR,OAAAT,KAAA+/J,UAAA//J,KAAAwzB,YAAAxzB,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,QAAA,EAAA5wJ,EAAAA,GAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,eAAA,GAAAx7J,KAAA08J,MAAA18J,KAAAwzB,YAAA4kD,EAAAmoF,cAAA,SAAAh2J,GAAA,OAAAtJ,UAAAR,OAAAT,KAAA+/J,UAAA//J,KAAAq9J,gBAAA9yJ,GAAA,GAAAvK,KAAAk9J,WAAAl9J,KAAAq9J,iBAAAjlF,EAAAtgD,KAAA,SAAAvtB,EAAAC,GAAA,OAAAvJ,UAAAR,QAAAT,KAAA07J,QAAA17J,KAAAq9J,gBAAA9yJ,EAAAvK,KAAAi9J,YAAA1yJ,EAAAvK,KAAAi9J,WAAAj9J,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,QAAA5wJ,EAAAvK,KAAAi9J,UAAA1yJ,EAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,cAAA,IAAAx7J,KAAAu7J,UAAAhxJ,GAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,eAAAx7J,KAAA+/J,UAAAx1J,EAAAC,IAAAxK,KAAA08J,OAAAtkF,EAAA5kD,SAAA,SAAAhpB,GAAA,OAAAvJ,UAAAR,OAAA8J,EAAApH,UAAAqwB,SAAAxyB,KAAAhB,KAAAwK,GAAAxK,KAAAi9J,WAAA7kF,EAAAilF,cAAA,SAAA9yJ,GAAA,OAAAtJ,UAAAR,QAAA,IAAAT,KAAAu7J,QAAAv7J,KAAAA,KAAAwzB,UAAAjpB,EAAAvK,KAAAu7J,QAAAv7J,KAAAw7J,eAAAx7J,KAAAu7J,QAAA,KAAAv7J,KAAA07J,SAAA17J,KAAAs9J,gBAAA,IAAAt9J,KAAAu7J,QAAA,aAAAv7J,KAAAi9J,WAAAj9J,KAAAu7J,QAAA,GAAAv7J,KAAAw7J,aAAAx7J,KAAAu7J,QAAAv7J,KAAA07J,QAAA,GAAA17J,KAAAs9J,iBAAAllF,EAAArmC,OAAA,SAAAxnC,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAu7J,QAAAhxJ,EAAAvK,KAAAq8J,UAAA,IAAAr8J,KAAAu7J,SAAAnjF,EAAAqjF,YAAA,SAAAlxJ,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAw7J,aAAAjxJ,EAAAvK,KAAAq8J,UAAA,IAAAr8J,KAAAw7J,cAAApjF,EAAAkjF,KAAA,SAAA/wJ,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAo7J,MAAA7wJ,EAAAvK,MAAAA,KAAAo7J,OAAA79G,IAAA,GAAAo9G,SAAAM,UAAA,eAAA,CAAA,iBAAA,sBAAA,aAAA,SAAA1wJ,EAAAC,EAAA8qC,GAAA,SAAAyI,EAAAxzC,GAAAC,EAAAxJ,KAAAhB,KAAAuK,GAAAvK,KAAAwgK,QAAA,GAAAxgK,KAAA49J,oBAAA,IAAA59J,KAAAq7J,KAAAuC,mBAAA59J,KAAAygK,mBAAA,IAAAzgK,KAAAq7J,KAAAoF,kBAAAzgK,KAAA0gK,eAAA,EAAA1gK,KAAAs+J,UAAAt+J,KAAAq7J,KAAAjpH,SAAA,IAAAkD,EAAAyI,EAAAl9C,EAAAb,KAAAq7J,KAAA,IAAAt9G,KAAAl9C,EAAAy0C,EAAAz0C,EAAAk9C,GAAAv9C,EAAA80C,KAAA,IAAAA,EAAA1nC,KAAA,IAAA3L,QAAA,YAAApB,EAAAk9C,GAAA/9C,KAAA2gK,kBAAArrH,IAAA90C,EAAAK,EAAAq0B,SAAAl1B,KAAAsb,IAAAza,EAAAq0B,OAAA,EAAAr0B,EAAA+/J,MAAA//J,EAAAggK,SAAA,SAAAn0J,EAAAnC,GAAA,IAAAC,EAAA8qC,EAAA,GAAA,IAAA9qC,KAAAD,EAAA+qC,EAAA9qC,GAAAD,EAAAC,GAAA,OAAA8qC,EAAA,SAAAv7B,EAAAxP,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAhzC,EAAA2wJ,MAAA,IAAAn9G,KAAAR,EAAA18C,EAAA08C,EAAAQ,GAAAxzC,EAAAwzC,GAAA,mBAAAl9C,EAAAA,EAAAG,KAAAwJ,EAAA8qC,GAAAA,GAAAz0C,EAAAy0C,EAAAz0C,EAAAJ,eAAA8J,EAAA2wJ,MAAA,SAAAtnI,EAAArpB,GAAA,IAAA,IAAA+qC,EAAA,GAAAyI,EAAAxzC,EAAA9J,OAAA+J,EAAA,EAAAA,IAAAuzC,EAAAzI,EAAAj1C,KAAAkK,EAAAC,OAAA,OAAA8qC,EAAA,IAAAiI,EAAAjI,EAAAqmH,WAAAhxG,EAAA5M,EAAA49G,WAAA,GAAA3yG,EAAAzL,EAAAq+G,WAAAp7J,EAAA+8C,EAAAr4C,QAAAtE,EAAA28C,EAAA0gH,WAAA7lF,EAAA76B,EAAAujH,WAAA7lJ,EAAA0/I,SAAAM,UAAA8F,QAAAzgD,EAAA31D,EAAAq2G,cAAA,aAAA3oH,EAAA0F,EAAA56C,UAAA,IAAAqH,EAAA,OAAAuzC,EAAAx7C,QAAA,SAAA81C,EAAAh1C,YAAA06C,EAAA1F,EAAAwjH,OAAAC,IAAAzjH,EAAA4oH,iBAAA5oH,EAAA6oH,WAAA,EAAA7oH,EAAA3hB,GAAA,SAAAnsB,EAAAC,EAAAuzC,EAAAl9C,GAAA,IAAA08C,EAAAQ,EAAAhM,QAAA92B,EAAAkmJ,UAAA7rH,EAAA,OAAA9qC,EAAAxK,KAAAsb,IAAA,IAAAiiC,EAAAhzC,EAAAC,EAAAuzC,GAAAl9C,GAAAb,KAAAsgB,IAAA/V,EAAAwzC,EAAAl9C,IAAAw3C,EAAA4hF,KAAA,SAAA1vH,EAAAC,EAAAuzC,EAAAl9C,GAAA,OAAAb,KAAAsb,KAAAyiC,EAAAhM,QAAA92B,EAAAkmJ,UAAA7rH,GAAA2kF,KAAA1vH,EAAAC,EAAAuzC,GAAAl9C,IAAAw3C,EAAAomH,OAAA,SAAAl0J,EAAAC,EAAAuzC,EAAAl9C,EAAA08C,GAAA,IAAAoN,EAAA9pD,EAAAkxC,QAAA92B,EAAAkmJ,UAAA7rH,EAAA,OAAA9qC,EAAAxK,KAAAsb,IAAAqvC,EAAA8zG,OAAAl0J,EAAAC,EAAAuzC,EAAAl9C,GAAA08C,GAAAv9C,KAAAsgB,IAAA/V,EAAA1J,EAAA08C,IAAAlF,EAAAqmH,UAAA,SAAAn0J,EAAAC,EAAA3J,EAAA08C,EAAAoN,EAAAnqD,EAAAI,EAAAw3E,GAAA,IAAAn9D,EAAAqlG,EAAAjoE,EAAA,IAAA0F,EAAA,CAAA6gH,WAAAp+J,EAAA4+J,iBAAAx+J,EAAAk+J,cAAA1mF,EAAAqoF,kBAAAzgK,KAAAygK,oBAAA/2H,EAAA7oC,EAAAq6J,MAAA,IAAA,iBAAA3wJ,IAAAA,EAAA+qC,EAAA7yC,SAAA8H,IAAAA,GAAAy+C,EAAAz+C,EAAAA,GAAA,MAAAA,EAAAqpB,EAAArpB,KAAAgzC,EAAAA,GAAA,GAAA,KAAAhzC,EAAAqpB,EAAArpB,IAAAuR,UAAAyhC,IAAA,GAAA+iE,EAAA,EAAAA,EAAA/1G,EAAA9J,OAAA6/G,KAAArlG,EAAAvO,EAAA7L,IAAA6hJ,UAAAznI,EAAAynI,QAAAh2I,EAAAuO,EAAAynI,SAAAznI,EAAAynI,QAAAwY,OAAAnhJ,EAAAkB,EAAAynI,QAAAn4I,EAAA+1G,IAAA52E,GAAA3vB,EAAAkB,EAAA1Q,EAAA+1G,GAAAjoE,EAAA3hB,GAAAnsB,EAAA+1G,GAAA91G,EAAAyQ,EAAAqlG,EAAA/iE,GAAA,OAAAv9C,KAAAsb,IAAA+8B,EAAAsS,IAAAtS,EAAA0mH,YAAA,SAAAx0J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,GAAA,OAAA1T,EAAAknH,gBAAA,GAAAlnH,EAAAknH,gBAAAlnH,EAAAkpH,cAAA,EAAAx+J,KAAA0+J,UAAAn0J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,IAAA3Q,EAAA4mH,cAAA,SAAA10J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,GAAA,OAAAu9C,EAAA2kG,QAAAptG,EAAAyI,EAAAy+G,gBAAA,GAAAz+G,EAAAy+G,iBAAA,GAAAlnH,EAAAknH,gBAAAx8J,KAAA0+J,UAAAn0J,EAAAC,EAAAuzC,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,IAAA63C,EAAAr3C,KAAA,SAAAuJ,EAAAC,EAAAuzC,EAAAl9C,GAAA,OAAAb,KAAAsb,IAAAg6B,EAAA6pH,YAAA,EAAA50J,EAAAC,EAAAuzC,GAAAl9C,IAAAw3C,EAAA/3B,IAAA,SAAA/V,EAAAC,EAAAuzC,GAAA,OAAAA,EAAA/9C,KAAAohK,kBAAArjH,EAAA,GAAA,GAAA,MAAAvzC,EAAAgyJ,kBAAAhyJ,EAAAgyJ,gBAAAz+G,IAAA/9C,KAAA08J,QAAA18J,KAAAm+J,SAAAn+J,KAAAsb,IAAA,IAAAg6B,EAAA/qC,EAAA,EAAAC,GAAAuzC,IAAAA,EAAAsjH,WAAA,SAAA92J,EAAAC,GAAA,OAAAD,EAAAA,GAAA,IAAAk2J,oBAAAl2J,EAAAk2J,mBAAA,GAAA,IAAA5/J,EAAA08C,EAAAoN,EAAA,IAAA5M,EAAAxzC,GAAAy+C,EAAA2B,EAAA8xG,UAAA,IAAA,MAAAjyJ,IAAAA,GAAA,GAAAw+C,EAAAs4G,QAAA32G,GAAA,GAAAA,EAAAiqF,WAAA,EAAAjqF,EAAA4yG,aAAA5yG,EAAA+xG,MAAA/xG,EAAAuyG,WAAAl0G,EAAA0zG,MAAA77J,EAAAmoD,EAAA02G,OAAA7+J,GAAA08C,EAAA18C,EAAAu8J,MAAA5yJ,GAAA3J,aAAAy0C,GAAAz0C,EAAAhB,SAAAgB,EAAAw6J,KAAAuD,YAAAj0G,EAAArvC,IAAAza,EAAAA,EAAA+zI,WAAA/zI,EAAA+7J,QAAA/7J,EAAA08C,EAAA,OAAAyL,EAAA1tC,IAAAqvC,EAAA,GAAAA,GAAAtS,EAAA/8B,IAAA,SAAAza,EAAA08C,EAAAoN,EAAA3B,GAAA,IAAApoD,EAAAw3E,EAAAn9D,EAAAvO,EAAAqN,EAAAumG,EAAA,GAAA,iBAAA/iE,IAAAA,EAAAv9C,KAAAohK,kBAAA7jH,EAAA,GAAA,EAAA18C,MAAAA,aAAA0J,GAAA,CAAA,GAAA1J,aAAA+E,OAAA/E,GAAAA,EAAAR,MAAAG,EAAAK,GAAA,CAAA,IAAA8pD,EAAAA,GAAA,SAAA3B,EAAAA,GAAA,EAAApoD,EAAA28C,EAAA66B,EAAAv3E,EAAAJ,OAAAwa,EAAA,EAAAA,EAAAm9D,EAAAn9D,IAAAza,EAAAkM,EAAA7L,EAAAoa,MAAAvO,EAAA,IAAAqxC,EAAA,CAAA7oB,OAAAxoB,KAAA1M,KAAAsb,IAAA5O,EAAA9L,GAAA,iBAAA8L,GAAA,mBAAAA,IAAA,aAAAi+C,EAAA/pD,EAAA8L,EAAAkoI,WAAAloI,EAAA2wJ,gBAAA3wJ,EAAA2zJ,WAAA,UAAA11G,IAAAj+C,EAAAkoI,YAAAloI,EAAAmrB,UAAAj3B,GAAAooD,EAAA,OAAAhpD,KAAAq8J,UAAA,GAAA,GAAA,iBAAAx7J,EAAA,OAAAb,KAAAuhK,SAAA1gK,EAAA08C,GAAA,GAAA,mBAAA18C,EAAA,KAAA,cAAAA,EAAA,wEAAAA,EAAAy0C,EAAA6pH,YAAA,EAAAt+J,GAAA,GAAA2J,EAAArH,UAAAmY,IAAAta,KAAAhB,KAAAa,EAAA08C,IAAAv9C,KAAA87J,KAAA97J,KAAA08J,QAAA18J,KAAAi9J,aAAAj9J,KAAAm+J,SAAAn+J,KAAAi9J,UAAAj9J,KAAAwzB,WAAA,IAAA8sF,GAAAvmG,EAAA/Z,MAAAwhK,UAAA3gK,EAAA+zI,WAAA76H,EAAA0iJ,WAAAn8C,GAAAvmG,EAAA0iJ,UAAAgE,kBAAA1mJ,EAAAgmJ,UAAAhmJ,EAAAmjJ,YAAA,GAAAnjJ,EAAA+hJ,KAAA/hJ,EAAA4iJ,UAAA,GAAA,GAAA5iJ,EAAAA,EAAA0iJ,UAAA,OAAAz8J,MAAAq4C,EAAAt7B,OAAA,SAAAvS,GAAA,GAAAA,aAAAD,EAAA,CAAAvK,KAAAshK,QAAA92J,GAAA,GAAA,IAAA8qC,EAAA9qC,EAAAiyJ,UAAAjyJ,EAAA6wJ,KAAAkE,UAAAh1J,EAAAs1J,oBAAAt1J,EAAAq1J,cAAA,OAAAp1J,EAAAoqI,YAAApqI,EAAA2zJ,QAAA3zJ,EAAAi3J,WAAAnsH,EAAAonH,QAAAlyJ,EAAAmzJ,UAAAnzJ,EAAA6yJ,gBAAA7yJ,EAAA0yJ,WAAA1yJ,EAAA0yJ,YAAA1yJ,EAAA61J,WAAArgK,KAAA,GAAAwK,aAAA5E,OAAA4E,GAAAA,EAAAnK,MAAAG,EAAAgK,GAAA,CAAA,IAAA,IAAAuzC,EAAAvzC,EAAA/J,QAAA,IAAAs9C,GAAA/9C,KAAA+c,OAAAvS,EAAAuzC,IAAA,OAAA/9C,KAAA,MAAA,iBAAAwK,EAAAxK,KAAA0hK,YAAAl3J,GAAAxK,KAAA67J,KAAA,KAAArxJ,IAAA6tC,EAAAipH,QAAA,SAAA/2J,EAAA+qC,GAAA9qC,EAAArH,UAAAm+J,QAAAtgK,KAAAhB,KAAAuK,EAAA+qC,GAAAyI,EAAA/9C,KAAA2hK,MAAA,OAAA5jH,EAAA/9C,KAAA08J,MAAA3+G,EAAA62F,WAAA72F,EAAAu/G,eAAAv/G,EAAAsiH,aAAArgK,KAAA08J,MAAA18J,KAAAwzB,WAAAxzB,KAAAk9J,WAAAl9J,KAAAs9J,gBAAAt9J,KAAA08J,MAAA18J,KAAAk9J,WAAAl9J,KAAAi9J,UAAAj9J,KAAAs9J,eAAA,EAAAt9J,MAAAq4C,EAAAjsB,OAAA,SAAA7hB,EAAAC,GAAA,OAAAxK,KAAAsb,IAAA/Q,EAAAvK,KAAAohK,kBAAA,KAAA52J,GAAA,EAAAD,KAAA8tC,EAAAtrB,OAAAsrB,EAAAupH,eAAA,SAAAr3J,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAA/9C,KAAAsb,IAAA/Q,EAAAC,GAAA,EAAA8qC,EAAAyI,IAAA1F,EAAAwpH,eAAA,SAAAt3J,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAA/9C,KAAAsb,IAAA/Q,EAAAvK,KAAAohK,kBAAA,KAAA52J,GAAA,EAAAD,GAAA+qC,EAAAyI,IAAA1F,EAAAkpH,SAAA,SAAAh3J,EAAAC,GAAA,OAAAxK,KAAAwgK,QAAAj2J,GAAAvK,KAAAohK,kBAAA52J,GAAAxK,MAAAq4C,EAAAypH,SAAA,SAAAv3J,EAAAC,EAAAuzC,EAAAl9C,GAAA08C,EAAAjI,EAAA6pH,YAAA,EAAA7+C,EAAAviE,EAAAl9C,GAAAb,MAAA,OAAAu9C,EAAA89G,KAAAuD,WAAArhH,EAAA89G,KAAAgE,kBAAA70J,EAAA+yC,EAAAh9B,KAAA,UAAAvgB,KAAAkhK,WAAA,EAAAlhK,KAAAsb,IAAAiiC,EAAAhzC,IAAA8tC,EAAAqpH,YAAA,SAAAn3J,GAAA,cAAAvK,KAAAwgK,QAAAj2J,GAAAvK,MAAAq4C,EAAA0pH,aAAA,SAAAx3J,GAAA,OAAA,MAAAvK,KAAAwgK,QAAAj2J,GAAAvK,KAAAwgK,QAAAj2J,IAAA,GAAA8tC,EAAA+oH,kBAAA,SAAA52J,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA08C,EAAA,GAAA18C,aAAA0J,GAAA1J,EAAAmhK,WAAAhiK,KAAAA,KAAA+c,OAAAlc,QAAA,GAAAA,IAAAA,aAAA+E,OAAA/E,EAAAR,MAAAG,EAAAK,IAAA,IAAA08C,EAAA18C,EAAAJ,QAAA,IAAA88C,GAAA18C,EAAA08C,aAAAhzC,GAAA1J,EAAA08C,GAAAykH,WAAAhiK,MAAAA,KAAA+c,OAAAlc,EAAA08C,IAAA,GAAA,iBAAAjI,EAAA,OAAAt1C,KAAAohK,kBAAA9rH,EAAAyI,GAAA,iBAAAvzC,GAAA,MAAAxK,KAAAwgK,QAAAlrH,GAAA9qC,EAAAxK,KAAAwzB,WAAA,EAAAuqB,GAAA,GAAAzI,EAAAA,GAAA,EAAA,iBAAA9qC,IAAAsd,MAAAtd,IAAA,MAAAxK,KAAAwgK,QAAAh2J,GAAA,MAAAA,IAAAA,EAAAxK,KAAAwzB,gBAAA,CAAA,IAAA,KAAA+pB,EAAA/yC,EAAAvI,QAAA,MAAA,OAAA,MAAAjC,KAAAwgK,QAAAh2J,GAAAuzC,EAAA/9C,KAAAwgK,QAAAh2J,GAAAxK,KAAAwzB,WAAA8hB,EAAAA,EAAAt1C,KAAAwgK,QAAAh2J,GAAA8qC,EAAAA,EAAArc,SAAAzuB,EAAA4rD,OAAA7Y,EAAA,GAAA,IAAA,IAAA9U,OAAAj+B,EAAAwwJ,OAAAz9G,EAAA,IAAA/yC,EAAA,EAAA+yC,EAAAv9C,KAAAohK,kBAAA52J,EAAAwwJ,OAAA,EAAAz9G,EAAA,GAAA,EAAAQ,GAAA/9C,KAAAwzB,WAAA,OAAAiV,OAAAj+B,GAAA8qC,GAAA+C,EAAAmmF,KAAA,SAAAj0H,EAAAC,GAAA,OAAAxK,KAAA+/J,UAAA,iBAAAx1J,EAAAA,EAAAvK,KAAAohK,kBAAA72J,IAAA,IAAAC,IAAA6tC,EAAA32B,KAAA,WAAA,OAAA1hB,KAAAg1I,QAAA,IAAA38F,EAAA4pH,YAAA,SAAA13J,EAAAC,GAAA,OAAAxK,KAAA28I,KAAApyI,EAAAC,IAAA6tC,EAAA6pH,YAAA,SAAA33J,EAAAC,GAAA,OAAAxK,KAAA48I,MAAAryI,EAAAC,IAAA6tC,EAAA0wB,OAAA,SAAAx+D,EAAAC,EAAA8qC,GAAAt1C,KAAA87J,KAAA97J,KAAA28J,UAAA,GAAA,GAAA,IAAA5+G,EAAAR,EAAAoN,EAAA3B,EAAAxoD,EAAAya,EAAAvO,EAAAqN,EAAA/Z,KAAA07J,OAAA17J,KAAAq9J,gBAAAr9J,KAAAs9J,eAAAh9C,EAAAtgH,KAAA08J,MAAA9oI,EAAA5zB,KAAA40I,WAAAv8F,EAAAr4C,KAAAqgK,WAAA32H,EAAA1pC,KAAAm+J,QAAA,GAAApkJ,EAAA,MAAAxP,EAAAvK,KAAAk9J,WAAAl9J,KAAA08J,MAAA3iJ,EAAA/Z,KAAA29J,WAAA39J,KAAAmiK,oBAAA5kH,GAAA,EAAAyL,EAAA,aAAAxoD,IAAAR,KAAAy8J,UAAAmB,mBAAA,IAAA59J,KAAAi9J,YAAA1yJ,GAAA,IAAA,MAAAA,GAAAvK,KAAAu9J,aAAA,GAAA,QAAAv9J,KAAAu9J,eAAAv9J,KAAAu9J,eAAAhzJ,GAAAvK,KAAA0/J,SAAAl/J,GAAA,EAAA,MAAAR,KAAAu9J,eAAAv0G,EAAA,uBAAAhpD,KAAAu9J,aAAAv9J,KAAAi9J,YAAAzyJ,GAAAD,GAAAvK,KAAAu9J,eAAAhzJ,EAAAA,EAAA,MAAAA,EAAAwP,EAAA,UAAA,GAAAxP,EAAA,KAAA,KAAAvK,KAAAk9J,WAAAl9J,KAAA08J,MAAA,KAAAp8C,GAAA,IAAAtgH,KAAAi9J,WAAA,QAAAj9J,KAAAu9J,eAAA,EAAAv9J,KAAAu9J,cAAAhzJ,EAAA,GAAA,GAAAvK,KAAAu9J,iBAAAv0G,EAAA,oBAAAzL,EAAAv9C,KAAA29J,WAAApzJ,EAAA,EAAAvK,KAAA89J,SAAA,EAAA99J,KAAAy8J,UAAAmB,oBAAA59J,KAAA29J,WAAAn9J,EAAA+8C,GAAA,EAAAyL,EAAA,qBAAA,GAAAhpD,KAAAu9J,cAAAv9J,KAAA0/J,SAAAl/J,GAAA,GAAAR,KAAAu9J,aAAAhzJ,MAAA,CAAA,GAAAvK,KAAAu9J,aAAAv9J,KAAAi9J,YAAAzyJ,GAAAD,GAAAvK,KAAAu9J,eAAAhzJ,EAAAA,EAAA,MAAA,IAAAA,GAAAgzC,EAAA,IAAAQ,EAAA/9C,KAAA0/J,OAAA3hH,GAAA,IAAAA,EAAA62F,YAAA72F,EAAAk/G,YAAA1/G,GAAA,GAAAQ,EAAAA,EAAAq/G,MAAA7yJ,EAAA,EAAAvK,KAAA68J,WAAAr8J,GAAA,OAAA,CAAA,GAAAR,KAAAkhK,YAAAlhK,KAAAihK,mBAAAz2J,EAAA,CAAA,GAAA81G,GAAA/1G,EAAA,IAAAwzC,EAAA/9C,KAAA0/J,OAAA3hH,GAAAA,EAAA62F,YAAArqI,IAAA0Q,GAAA8iC,EAAAk/G,WAAA,YAAAl/G,EAAAx9B,MAAAw9B,EAAAw+G,OAAA,IAAAx+G,EAAA62F,YAAA,IAAA50I,KAAAu9J,eAAAtiJ,EAAA8iC,GAAAA,EAAAA,EAAAq/G,WAAA,IAAAr/G,EAAA/9C,KAAA2hK,MAAA5jH,GAAAA,EAAA62F,YAAArqI,IAAA0Q,GAAA8iC,EAAAk/G,WAAA,YAAAl/G,EAAAx9B,MAAA,EAAAw9B,EAAAw/G,eAAAtiJ,EAAA8iC,GAAAA,EAAAA,EAAAqkH,MAAAnnJ,IAAAjb,KAAA08J,MAAAnyJ,EAAA0Q,EAAA25H,WAAA50I,KAAAk9J,WAAA3yJ,EAAAvK,KAAAm7J,QAAAn7J,KAAAs9J,eAAAt9J,KAAAw7J,eAAAx7J,KAAAk9J,WAAAl9J,KAAA08J,MAAA18J,KAAAu9J,aAAAhzJ,EAAA,GAAAvK,KAAA08J,QAAAp8C,GAAAtgH,KAAA0/J,QAAApqH,GAAA90C,GAAAya,EAAA,CAAA,GAAAjb,KAAA68J,WAAA78J,KAAA68J,UAAA,GAAA78J,KAAA89J,UAAA99J,KAAAm+J,SAAAn+J,KAAA08J,QAAAp8C,GAAA,EAAA/1G,IAAAvK,KAAA89J,SAAA,GAAA,IAAAx9C,GAAAtgH,KAAAq7J,KAAA3kC,SAAA,IAAA12H,KAAA08J,QAAAlyJ,GAAAxK,KAAAq+J,UAAA,YAAA/9C,IAAA5zG,EAAA1M,KAAA08J,OAAA,IAAA3+G,EAAA/9C,KAAA0/J,OAAA3hH,IAAA4M,EAAA5M,EAAAq/G,MAAA1wJ,IAAA1M,KAAA08J,SAAA18J,KAAAm+J,SAAAz0H,MAAAqU,EAAA+/G,SAAA//G,EAAA62F,YAAAloI,IAAAqxC,EAAAogH,UAAApgH,EAAA+9G,OAAA7gJ,IAAA8iC,GAAA/9C,KAAA48I,QAAA7+F,EAAA4/G,UAAA5/G,EAAAgrB,QAAAhrB,EAAA29G,OAAA39G,EAAAs/G,gBAAAt/G,EAAAu/G,iBAAA/yJ,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAAgrB,QAAAx+D,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,IAAAyI,EAAA4M,OAAA,IAAA5M,EAAA/9C,KAAA2hK,MAAA5jH,IAAA4M,EAAA5M,EAAAqkH,MAAA11J,IAAA1M,KAAA08J,SAAA18J,KAAAm+J,SAAAz0H,KAAA,CAAA,GAAAqU,EAAA+/G,SAAA//G,EAAA62F,YAAAt0B,IAAAviE,EAAAogH,UAAApgH,EAAA+9G,IAAA,CAAA,GAAA7gJ,IAAA8iC,EAAA,CAAA,IAAA9iC,EAAA8iC,EAAAqkH,MAAAnnJ,GAAAA,EAAAomH,UAAArhI,KAAA08J,OAAAzhJ,EAAA8tD,OAAA9tD,EAAA0iJ,UAAA1iJ,EAAAoiJ,iBAAA9yJ,EAAA0Q,EAAA25H,YAAA35H,EAAAolJ,YAAA91J,EAAA0Q,EAAA25H,YAAA35H,EAAAolJ,WAAA71J,EAAA8qC,GAAAr6B,EAAAA,EAAAmnJ,MAAAnnJ,EAAA,KAAAjb,KAAA48I,QAAA7+F,EAAA4/G,UAAA5/G,EAAAgrB,QAAAhrB,EAAA29G,OAAA39G,EAAAs/G,gBAAAt/G,EAAAu/G,iBAAA/yJ,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAAgrB,QAAAx+D,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAA4M,EAAA3qD,KAAAs+J,YAAA9zJ,IAAA5J,EAAAH,QAAA23E,IAAAp4E,KAAAq+J,UAAA,cAAAr1G,IAAAhpD,KAAA87J,KAAAloI,IAAA5zB,KAAA40I,YAAAv8F,IAAAr4C,KAAAqgK,cAAA,IAAArgK,KAAA08J,OAAA3iJ,GAAA/Z,KAAAq9J,mBAAA9/G,IAAA38C,EAAAH,QAAA23E,IAAAp4E,KAAAy8J,UAAAmB,oBAAA59J,KAAA28J,UAAA,GAAA,GAAA38J,KAAA89J,SAAA,IAAAtzJ,GAAAxK,KAAAq7J,KAAAryG,IAAAhpD,KAAAq+J,UAAAr1G,OAAA3Q,EAAA8pH,gBAAA,WAAA,IAAA,IAAA53J,EAAAvK,KAAA0/J,OAAAn1J,GAAA,CAAA,GAAAA,EAAA4zJ,SAAA5zJ,aAAAwzC,GAAAxzC,EAAA43J,kBAAA,OAAA,EAAA53J,EAAAA,EAAA6yJ,MAAA,OAAA,GAAA/kH,EAAAgqH,YAAA,SAAA93J,EAAAC,EAAAuzC,EAAAl9C,GAAAA,EAAAA,IAAA,WAAA,IAAA,IAAA08C,EAAA,GAAAoN,EAAA3qD,KAAA0/J,OAAA12G,EAAA,EAAA2B,GAAAA,EAAAiqF,WAAA/zI,IAAA8pD,aAAArV,GAAA,IAAA9qC,IAAA+yC,EAAAyL,KAAA2B,KAAA,IAAA5M,IAAAR,EAAAyL,KAAA2B,IAAA,IAAApgD,IAAAy+C,GAAAzL,EAAAA,EAAAv7C,OAAA2oD,EAAA03G,aAAA,EAAA73J,EAAAuzC,KAAAt9C,UAAAkqD,EAAAA,EAAAyyG,MAAA,OAAA7/G,GAAAlF,EAAA4jH,YAAA,SAAA1xJ,EAAAC,GAAA,IAAAuzC,EAAAl9C,EAAA08C,EAAAv9C,KAAA87J,IAAAnxG,EAAA,GAAA3B,EAAA,EAAA,IAAAzL,GAAAv9C,KAAA28J,UAAA,GAAA,GAAA97J,GAAAk9C,EAAAzI,EAAA2mH,YAAA1xJ,IAAA9J,QAAA,IAAAI,IAAAk9C,EAAAl9C,GAAAmhK,WAAAhiK,MAAAwK,GAAAxK,KAAAsiK,UAAAvkH,EAAAl9C,OAAA8pD,EAAA3B,KAAAjL,EAAAl9C,IAAA,OAAA08C,GAAAv9C,KAAA28J,UAAA,GAAA,GAAAhyG,GAAAtS,EAAAkqH,OAAA,WAAA,OAAAviK,KAAAwiK,SAAAnqH,EAAAiqH,UAAA,SAAA/3J,GAAA,IAAA,IAAAC,EAAAD,EAAAy3J,SAAAx3J,GAAA,CAAA,GAAAA,IAAAxK,KAAA,OAAA,EAAAwK,EAAAA,EAAAw3J,SAAA,OAAA,GAAA3pH,EAAAoqH,cAAA,SAAAl4J,EAAAC,EAAA8qC,GAAAA,EAAAA,GAAA,EAAA,IAAA,IAAAyI,EAAAl9C,EAAAb,KAAA0/J,OAAAniH,EAAAv9C,KAAAwgK,QAAA3/J,GAAAA,EAAA+zI,YAAAt/F,IAAAz0C,EAAA+zI,YAAArqI,GAAA1J,EAAAA,EAAAu8J,MAAA,GAAA5yJ,EAAA,IAAAuzC,KAAAR,EAAAA,EAAAQ,IAAAzI,IAAAiI,EAAAQ,IAAAxzC,GAAA,OAAAvK,KAAAq8J,UAAA,IAAAhkH,EAAAqqH,MAAA,SAAAn4J,EAAAC,GAAA,IAAAD,IAAAC,EAAA,OAAAxK,KAAA28J,UAAA,GAAA,GAAA,IAAA,IAAArnH,EAAA9qC,EAAAxK,KAAAi8J,YAAAzxJ,GAAAxK,KAAAqiK,aAAA,GAAA,GAAA,GAAAtkH,EAAAzI,EAAA70C,OAAAI,GAAA,GAAA,IAAAk9C,GAAAzI,EAAAyI,GAAA2kH,MAAAn4J,EAAAC,KAAA3J,GAAA,GAAA,OAAAA,GAAAw3C,EAAA++B,MAAA,SAAA7sE,GAAA,IAAAC,EAAAxK,KAAAqiK,aAAA,GAAA,GAAA,GAAA/sH,EAAA9qC,EAAA/J,OAAA,IAAAT,KAAA08J,MAAA18J,KAAAk9J,WAAA,GAAA,IAAA5nH,GAAA9qC,EAAA8qC,GAAAqnH,UAAA,GAAA,GAAA,OAAA,IAAApyJ,IAAAvK,KAAAwgK,QAAA,IAAAxgK,KAAAq8J,UAAA,IAAAhkH,EAAA+jH,WAAA,WAAA,IAAA,IAAA5xJ,EAAAxK,KAAA0/J,OAAAl1J,GAAAA,EAAA4xJ,aAAA5xJ,EAAAA,EAAA4yJ,MAAA,OAAA7yJ,EAAApH,UAAAi5J,WAAAp7J,KAAAhB,OAAAq4C,EAAAskH,SAAA,SAAApyJ,EAAA+qC,GAAA,GAAA/qC,IAAAvK,KAAA87J,IAAA,IAAA,IAAA/9G,EAAA/9C,KAAA0/J,OAAA3hH,GAAAA,EAAA4+G,SAAApyJ,GAAA,GAAAwzC,EAAAA,EAAAq/G,MAAA,OAAA5yJ,EAAArH,UAAAw5J,SAAA37J,KAAAhB,KAAAuK,EAAA+qC,IAAA+C,EAAA0nH,UAAA,SAAAv1J,EAAA8qC,EAAAyI,GAAA/9C,KAAAihK,kBAAA,EAAA,IAAApgK,EAAA0J,EAAApH,UAAA48J,UAAAh/J,MAAAf,KAAAiB,WAAA,OAAAjB,KAAAihK,kBAAA,EAAApgK,GAAAw3C,EAAA7kB,SAAA,SAAAjpB,GAAA,OAAAtJ,UAAAR,QAAA,IAAAT,KAAAwzB,YAAA,IAAAjpB,GAAAvK,KAAAohI,UAAAphI,KAAAi9J,UAAA1yJ,GAAAvK,OAAAA,KAAA07J,QAAA17J,KAAAq9J,gBAAAr9J,KAAAi9J,YAAA5kH,EAAAglH,cAAA,SAAA9yJ,GAAA,GAAAtJ,UAAAR,OAAA,OAAA8J,GAAAvK,KAAAq9J,gBAAAr9J,KAAAohI,UAAAphI,KAAAs9J,eAAA/yJ,GAAAvK,KAAA,GAAAA,KAAA07J,OAAA,CAAA,IAAA,IAAAlxJ,EAAA8qC,EAAAyI,EAAA,EAAAl9C,EAAAb,KAAA2hK,MAAApkH,EAAA,aAAA18C,GAAA2J,EAAA3J,EAAAuhK,MAAAvhK,EAAA66J,QAAA76J,EAAAw8J,gBAAAx8J,EAAA+zI,WAAAr3F,GAAAv9C,KAAA0gK,gBAAA7/J,EAAAs9J,QAAAn+J,KAAAsb,IAAAza,EAAAA,EAAA+zI,WAAA/zI,EAAA+7J,QAAAr/G,EAAA18C,EAAA+zI,WAAA/zI,EAAA+zI,WAAA,IAAA/zI,EAAAs9J,UAAApgH,GAAAl9C,EAAA+zI,WAAA50I,KAAAy8J,UAAAgE,oBAAAzgK,KAAA40I,YAAA/zI,EAAA+zI,WAAA50I,KAAAqgK,YAAArgK,KAAAyiK,eAAA5hK,EAAA+zI,YAAA,GAAA,YAAAr3F,EAAA,GAAAQ,GAAAzI,EAAAz0C,EAAA+zI,WAAA/zI,EAAAy8J,eAAAz8J,EAAAw/J,cAAAtiH,EAAAzI,GAAAz0C,EAAA2J,EAAAxK,KAAAi9J,UAAAj9J,KAAAs9J,eAAAv/G,EAAA/9C,KAAA07J,QAAA,EAAA,OAAA17J,KAAAs9J,gBAAAjlH,EAAA28F,OAAA,SAAAxqI,GAAA,IAAAA,EAAA,IAAA,IAAA8qC,EAAAt1C,KAAA0/J,OAAA3hH,EAAA/9C,KAAA08J,MAAApnH,GAAAA,EAAAs/F,aAAA72F,GAAA,YAAAzI,EAAA/0B,OAAA+0B,EAAAioH,aAAA,GAAAjoH,EAAAA,EAAA8nH,MAAA,OAAA7yJ,EAAApH,UAAA6xI,OAAAj0I,MAAAf,KAAAiB,YAAAo3C,EAAAsqH,WAAA,WAAA,IAAA,IAAAn4J,EAAAxK,KAAAy8J,UAAAjyJ,EAAAiyJ,WAAAjyJ,EAAAA,EAAAiyJ,UAAA,OAAAjyJ,IAAAD,EAAAs1J,qBAAAxnH,EAAAmpH,QAAA,WAAA,OAAAxhK,KAAAm+J,QAAAn+J,KAAAk9J,YAAAl9J,KAAAy8J,UAAA+E,UAAAxhK,KAAA40I,YAAA50I,KAAAqgK,YAAAtiH,IAAA,GAAA48G,SAAAM,UAAA,cAAA,CAAA,eAAA,YAAA,eAAA,SAAA1wJ,EAAAC,EAAA8qC,GAAA,SAAAyI,EAAAvzC,GAAAD,EAAAvJ,KAAAhB,KAAAwK,GAAAxK,KAAAu7J,QAAAv7J,KAAAq7J,KAAAtpH,QAAA,EAAA/xC,KAAAw7J,aAAAx7J,KAAAq7J,KAAAI,aAAA,EAAAz7J,KAAAm7J,OAAA,EAAAn7J,KAAAo7J,OAAA,IAAAp7J,KAAAq7J,KAAAC,KAAAt7J,KAAA07J,QAAA,EAAA,IAAAn+G,EAAA/yC,EAAAmxJ,WAAAhxG,EAAApN,EAAA0gH,WAAAj1G,EAAAzL,EAAAujH,WAAAtgK,EAAA,IAAA80C,EAAA,KAAA,KAAA,EAAA,GAAA10C,EAAAm9C,EAAA56C,UAAA,IAAAoH,EAAA,OAAA3J,EAAAyC,YAAA06C,EAAAn9C,EAAAi7J,OAAAC,KAAA,EAAA/9G,EAAAx7C,QAAA,SAAA3B,EAAAw7J,WAAA,WAAA,OAAAp8J,KAAAo7J,OAAA,IAAAp7J,KAAAq7J,KAAAC,KAAAt7J,KAAAu7J,QAAAv7J,KAAAq7J,KAAAtpH,QAAA,EAAA/xC,KAAAw7J,aAAAx7J,KAAAq7J,KAAAI,aAAA,EAAAz7J,KAAAq8J,UAAA,GAAA9xJ,EAAApH,UAAAi5J,WAAAp7J,KAAAhB,OAAAY,EAAAgiK,YAAA,SAAAr4J,EAAA+qC,EAAAyI,EAAAl9C,GAAA,OAAAb,KAAAsb,IAAA9Q,EAAA20J,YAAA,EAAA50J,EAAAwzC,EAAAl9C,GAAAy0C,IAAA10C,EAAAiiK,eAAA,SAAAt4J,EAAAC,GAAA,GAAAD,EAAA,GAAA,MAAAC,EAAAxK,KAAA0iK,MAAA,KAAAn4J,QAAA,IAAA,IAAA+qC,EAAAt1C,KAAAi8J,YAAA1xJ,GAAA,GAAAwzC,EAAAzI,EAAA70C,OAAAI,EAAAb,KAAAohK,kBAAA52J,IAAA,IAAAuzC,GAAAzI,EAAAyI,GAAA62F,aAAA/zI,GAAAy0C,EAAAyI,GAAA4+G,UAAA,GAAA,GAAA,OAAA38J,MAAAY,EAAAkiK,YAAA,SAAAt4J,GAAA,OAAAxK,KAAA6iK,eAAAt4J,EAAAoxJ,WAAAqF,cAAAx2J,IAAA5J,EAAAmiK,QAAA,SAAAx4J,EAAA+qC,GAAAA,EAAAA,GAAA,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA,CAAAq4G,KAAAxiK,EAAA++J,UAAAv/J,KAAA2iK,aAAAnG,iBAAA,GAAA,IAAA37J,KAAAy0C,EAAAqV,EAAA9pD,GAAAy0C,EAAAz0C,GAAA,OAAA8pD,EAAA7yB,KAAA93B,KAAAohK,kBAAA72J,GAAAwzC,EAAA14C,KAAA4uC,IAAAxL,OAAAkiB,EAAA7yB,MAAA93B,KAAA08J,OAAA18J,KAAAqgK,YAAA,KAAA9iH,EAAA,IAAA/yC,EAAAxK,KAAA+9C,EAAA4M,GAAAA,EAAA+rE,QAAA,WAAAn5E,EAAA19C,OAAAm1I,QAAA,GAAAz3F,EAAA89G,KAAAvjI,OAAAylB,EAAA19C,OAAAi4B,QAAAimB,IAAAR,EAAA/pB,YAAA+pB,EAAA/pB,SAAAnuB,KAAA4uC,IAAAsJ,EAAA89G,KAAAvjI,KAAAylB,EAAA19C,OAAAi4B,QAAAylB,EAAA19C,OAAAwgK,YAAA/qH,EAAAohF,SAAAn5E,EAAA8gH,UAAA,YAAA9gH,GAAA38C,EAAAqiK,YAAA,SAAA14J,EAAAC,EAAA8qC,GAAAA,EAAAA,GAAA,GAAA/qC,EAAAvK,KAAAohK,kBAAA72J,GAAA+qC,EAAAotG,QAAA,CAAAkc,WAAA5+J,KAAAw+H,KAAA4gC,iBAAA,CAAA70J,GAAAu0J,cAAA9+J,MAAAs1C,EAAAknH,iBAAA,IAAAlnH,EAAAknH,gBAAAz+G,EAAA/9C,KAAA+iK,QAAAv4J,EAAA8qC,GAAA,OAAAyI,EAAAvqB,SAAAnuB,KAAA4uC,IAAA8J,EAAAs9G,KAAAvjI,KAAAvtB,GAAAvK,KAAAqgK,YAAA,OAAAz/J,EAAAmoE,OAAA,SAAAx+D,EAAAC,EAAA8qC,GAAAt1C,KAAA87J,KAAA97J,KAAA28J,UAAA,GAAA,GAAA,IAAA5+G,EAAAR,EAAA/8C,EAAAI,EAAAw3E,EAAA1rE,EAAAqN,EAAAumG,EAAAtgH,KAAA07J,OAAA17J,KAAAq9J,gBAAAr9J,KAAAs9J,eAAA1pI,EAAA5zB,KAAAi9J,UAAA5kH,EAAAr4C,KAAA08J,MAAAhzH,EAAA1pC,KAAAk9J,WAAAt+H,EAAA5+B,KAAA40I,WAAA7uH,EAAA/lB,KAAAqgK,WAAAjzG,EAAAptD,KAAAu9J,aAAAh7H,EAAAviC,KAAAm+J,QAAA58J,EAAAvB,KAAAm7J,OAAA,GAAA76C,EAAA,MAAA/1G,EAAAvK,KAAAkjK,UAAAljK,KAAAk9J,WAAA58C,EAAAtgH,KAAAm7J,OAAAn7J,KAAAu7J,SAAAv7J,KAAA29J,WAAA39J,KAAAmiK,oBAAA5kH,GAAA,EAAA38C,EAAA,aAAAw3E,IAAAp4E,KAAAy8J,UAAAmB,mBAAA,IAAA59J,KAAAi9J,YAAA1yJ,GAAA,IAAA,MAAAA,GAAA6iD,EAAA,GAAA,QAAAA,IAAAA,IAAA7iD,GAAAvK,KAAA0/J,SAAAtnF,GAAA,EAAA,MAAAhrB,IAAAxsD,EAAA,uBAAAZ,KAAAu9J,aAAAv9J,KAAAi9J,YAAAzyJ,GAAAD,GAAAvK,KAAAu9J,eAAAhzJ,EAAAA,EAAA,MAAAvK,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,QAAAn7J,KAAA08J,MAAAnyJ,EAAA,EAAAA,GAAAvK,KAAA08J,MAAA9oI,GAAA,UAAA,GAAArpB,EAAA,KAAA,GAAAvK,KAAAkjK,UAAAljK,KAAAk9J,WAAAl9J,KAAAm7J,OAAA,KAAAn7J,KAAA08J,MAAA,KAAArkH,GAAA,IAAAzkB,GAAA,QAAAw5B,IAAA,EAAAA,GAAA7iD,EAAA,GAAA,GAAA6iD,KAAAptD,KAAAkjK,WAAAtiK,EAAA,oBAAA28C,EAAAv9C,KAAA29J,WAAApzJ,EAAA,EAAAvK,KAAA89J,SAAA,EAAA99J,KAAAy8J,UAAAmB,oBAAA59J,KAAA29J,WAAAvlF,EAAA76B,GAAA,EAAA38C,EAAA,qBAAA,GAAAwsD,GAAAptD,KAAA0/J,SAAAtnF,GAAA,GAAAp4E,KAAAu9J,aAAAhzJ,MAAA,CAAA,GAAAvK,KAAAu9J,aAAA3pI,IAAAppB,GAAAD,GAAAvK,KAAAu9J,eAAAhzJ,EAAAA,EAAA,MAAA,IAAAA,GAAAgzC,EAAA,IAAAQ,EAAA/9C,KAAA0/J,OAAA3hH,GAAA,IAAAA,EAAA62F,YAAA72F,EAAAk/G,YAAA1/G,GAAA,GAAAQ,EAAAA,EAAAq/G,MAAA7yJ,EAAA,EAAAvK,KAAA68J,WAAAzkF,GAAA,QAAA,GAAA,IAAAxkD,GAAAw5B,EAAA,IAAAgrB,GAAA,GAAAp4E,KAAA08J,MAAA18J,KAAAu9J,aAAAhzJ,EAAAvK,KAAAkjK,UAAAljK,KAAAk9J,WAAA3yJ,EAAA,IAAAvK,KAAAu7J,UAAAtgJ,EAAA2Y,EAAA5zB,KAAAw7J,aAAAx7J,KAAAm7J,OAAAn7J,KAAAk9J,WAAAjiJ,GAAA,EAAA,IAAAjb,KAAAm7J,QAAAn7J,KAAAm7J,SAAAn7J,KAAAk9J,WAAAjiJ,GAAAjb,KAAAm7J,SAAAn7J,KAAA08J,MAAA18J,KAAAk9J,WAAAl9J,KAAAm7J,OAAAlgJ,EAAAjb,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,UAAAn7J,KAAA08J,MAAA9oI,EAAA5zB,KAAA08J,OAAA18J,KAAA08J,MAAA9oI,EAAArpB,GAAAvK,KAAA08J,MAAA9oI,GAAA,KAAA5zB,KAAA08J,MAAA,EAAA18J,KAAA08J,MAAAnyJ,EAAA,EAAAA,EAAAvK,KAAA08J,QAAA18J,KAAAkhK,YAAAlhK,KAAAihK,mBAAAz2J,EAAA,CAAA,GAAA6tC,IAAA9tC,EAAAvK,KAAA08J,OAAA,IAAA3+G,EAAA/9C,KAAA0/J,OAAA3hH,GAAAA,EAAA62F,YAAArqI,IAAAmC,GAAAqxC,EAAAk/G,WAAA,YAAAl/G,EAAAx9B,MAAAw9B,EAAAw+G,OAAA,IAAAx+G,EAAA62F,YAAA,IAAA50I,KAAAu9J,eAAA7wJ,EAAAqxC,GAAAA,EAAAA,EAAAq/G,WAAA,IAAAr/G,EAAA/9C,KAAA2hK,MAAA5jH,GAAAA,EAAA62F,YAAArqI,IAAAmC,GAAAqxC,EAAAk/G,WAAA,YAAAl/G,EAAAx9B,MAAA,EAAAw9B,EAAAw/G,eAAA7wJ,EAAAqxC,GAAAA,EAAAA,EAAAqkH,MAAA11J,IAAA1M,KAAA08J,MAAAnyJ,EAAAmC,EAAAkoI,WAAA50I,KAAAk9J,WAAA3yJ,EAAAvK,KAAAm7J,QAAAn7J,KAAAs9J,eAAAt9J,KAAAw7J,eAAA,GAAAx7J,KAAAm7J,SAAA55J,IAAAvB,KAAAkjK,QAAA,CAAA,IAAAr6H,EAAA7oC,KAAAo7J,OAAA,IAAA,EAAA75J,GAAAouC,EAAA9G,KAAA7oC,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,SAAA1kH,EAAAz2C,KAAAk9J,WAAAiG,EAAAnjK,KAAAm7J,OAAA53C,EAAAvjH,KAAAu9J,aAAA6F,EAAApjK,KAAA08J,MAAA,GAAA18J,KAAAk9J,WAAA37J,EAAAqyB,EAAA5zB,KAAAm7J,OAAA55J,EAAAsnC,GAAAA,EAAA7oC,KAAAk9J,YAAAtpI,EAAA5zB,KAAA08J,MAAArkH,EAAAr4C,KAAAu9J,aAAA,IAAA3pI,EAAAw5B,EAAA,KAAAA,EAAAptD,KAAAm7J,OAAA55J,EAAAvB,KAAAkjK,SAAA,EAAA7qH,EAAAxP,EAAA,EAAAjV,EAAA5zB,KAAA+oE,OAAA1wB,EAAA7tC,EAAA,IAAAopB,GAAAppB,GAAAxK,KAAA87J,KAAA97J,KAAAq7J,KAAAkD,UAAAv+J,KAAAq+J,UAAA,YAAAhmH,IAAAr4C,KAAA08J,MAAA,OAAA,GAAA/sH,IAAA0I,EAAAxP,EAAAjV,EAAA,MAAA,KAAA5zB,KAAA+oE,OAAA1wB,GAAA,GAAA,IAAAr4C,KAAAkjK,SAAA,EAAAljK,KAAAm+J,UAAA57H,EAAA,OAAAviC,KAAA08J,MAAA0G,EAAApjK,KAAAk9J,WAAAzmH,EAAAz2C,KAAAm7J,OAAAgI,EAAAnjK,KAAAu9J,aAAAh6C,EAAA,GAAAvjH,KAAA08J,QAAArkH,GAAAr4C,KAAA0/J,QAAApqH,GAAA8iC,GAAA1rE,EAAA,CAAA,GAAA1M,KAAA68J,WAAA78J,KAAA68J,UAAA,GAAA78J,KAAA89J,UAAA99J,KAAAm+J,SAAAn+J,KAAAk9J,aAAAxzH,GAAA,EAAAn/B,IAAAvK,KAAA89J,SAAA,GAAA,IAAAp0H,GAAA1pC,KAAAq7J,KAAA3kC,SAAA,IAAA12H,KAAAk9J,aAAA1yJ,GAAAxK,KAAAq+J,UAAA,YAAAhmH,IAAAt+B,EAAA/Z,KAAA08J,OAAA,IAAA3+G,EAAA/9C,KAAA0/J,OAAA3hH,IAAAv9C,EAAAu9C,EAAAq/G,MAAArjJ,IAAA/Z,KAAA08J,SAAA18J,KAAAm+J,SAAA57H,MAAAwb,EAAA+/G,SAAA//G,EAAA62F,YAAA50I,KAAA08J,QAAA3+G,EAAAogH,UAAApgH,EAAA+9G,OAAApvJ,IAAAqxC,GAAA/9C,KAAA48I,QAAA7+F,EAAA4/G,UAAA5/G,EAAAgrB,QAAAhrB,EAAA29G,OAAA39G,EAAAs/G,gBAAAt/G,EAAAu/G,iBAAA/yJ,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAAgrB,QAAAx+D,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,IAAAyI,EAAAv9C,OAAA,IAAAu9C,EAAA/9C,KAAA2hK,MAAA5jH,IAAAv9C,EAAAu9C,EAAAqkH,MAAAroJ,IAAA/Z,KAAA08J,SAAA18J,KAAAm+J,SAAA57H,KAAA,CAAA,GAAAwb,EAAA+/G,SAAA//G,EAAA62F,YAAAv8F,IAAA0F,EAAAogH,UAAApgH,EAAA+9G,IAAA,CAAA,GAAApvJ,IAAAqxC,EAAA,CAAA,IAAArxC,EAAAqxC,EAAAqkH,MAAA11J,GAAAA,EAAA20H,UAAArhI,KAAA08J,OAAAhwJ,EAAAq8D,OAAAr8D,EAAAixJ,UAAAjxJ,EAAA2wJ,iBAAA9yJ,EAAAmC,EAAAkoI,YAAAloI,EAAA2zJ,YAAA91J,EAAAmC,EAAAkoI,YAAAloI,EAAA2zJ,WAAA71J,EAAA8qC,GAAA5oC,EAAAA,EAAA01J,MAAA11J,EAAA,KAAA1M,KAAA48I,QAAA7+F,EAAA4/G,UAAA5/G,EAAAgrB,QAAAhrB,EAAA29G,OAAA39G,EAAAs/G,gBAAAt/G,EAAAu/G,iBAAA/yJ,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAAgrB,QAAAx+D,EAAAwzC,EAAA62F,YAAA72F,EAAAsiH,WAAA71J,EAAA8qC,GAAAyI,EAAAv9C,EAAAR,KAAAs+J,YAAA9zJ,IAAAmgD,EAAAlqD,QAAAuoD,IAAAhpD,KAAAq+J,UAAA,cAAAz9J,IAAAZ,KAAAkjK,SAAAljK,KAAA87J,KAAAl9H,IAAA5+B,KAAA40I,YAAA7uH,IAAA/lB,KAAAqgK,cAAA,IAAArgK,KAAA08J,OAAAp8C,GAAAtgH,KAAAq9J,mBAAA9/G,IAAAoN,EAAAlqD,QAAAuoD,IAAAhpD,KAAAy8J,UAAAmB,oBAAA59J,KAAA28J,UAAA,GAAA,GAAA38J,KAAA89J,SAAA,IAAAtzJ,GAAAxK,KAAAq7J,KAAAz6J,IAAAZ,KAAAq+J,UAAAz9J,UAAA8oC,IAAA1pC,KAAAk9J,YAAAl9J,KAAAs+J,YAAA9zJ,GAAAxK,KAAAq+J,UAAA,cAAAz9J,EAAAyiK,UAAA,SAAA94J,EAAAC,EAAA8qC,GAAA,MAAA/qC,IAAAA,GAAA,GAAA,MAAAC,IAAAA,GAAA,GAAA,MAAA8qC,IAAAA,GAAA,GAAA,IAAA,IAAAz0C,EAAA08C,EAAA,GAAAoN,EAAA3qD,KAAAqiK,YAAA93J,EAAAC,EAAA8qC,GAAA0T,EAAA,EAAAxoD,EAAAmqD,EAAAlqD,OAAAs9C,EAAA,EAAAA,EAAAv9C,EAAAu9C,KAAAl9C,EAAA8pD,EAAA5M,IAAAulH,aAAA/lH,EAAAyL,KAAAnoD,GAAA,OAAA08C,GAAA38C,EAAA2iK,cAAA,SAAAh5J,GAAAA,GAAA,IAAAA,IAAAA,EAAAvK,KAAA08J,OAAA,IAAA,IAAApnH,EAAAt1C,KAAAwjK,iBAAAzlH,EAAAzI,EAAA70C,OAAA+J,EAAA,EAAAA,EAAAuzC,EAAAvzC,IAAA,GAAA8qC,EAAA9qC,GAAAstB,KAAAvtB,EAAA,OAAA+qC,EAAA9qC,GAAA9F,KAAA,OAAA,MAAA9D,EAAA6iK,eAAA,SAAAl5J,GAAA,MAAAA,IAAAA,EAAAvK,KAAA08J,OAAA,IAAA,IAAAlyJ,EAAAxK,KAAAwjK,iBAAAluH,EAAA9qC,EAAA/J,QAAA,IAAA60C,GAAA,GAAA9qC,EAAA8qC,GAAAxd,KAAAvtB,EAAA,OAAAC,EAAA8qC,GAAA5wC,KAAA,OAAA,MAAA9D,EAAA4iK,eAAA,WAAA,IAAAj5J,EAAAC,EAAA,GAAA8qC,EAAA,EAAA,IAAA/qC,KAAAvK,KAAAwgK,QAAAh2J,EAAA8qC,KAAA,CAAAxd,KAAA93B,KAAAwgK,QAAAj2J,GAAA7F,KAAA6F,GAAA,OAAAC,EAAAjG,KAAA,SAAAgG,EAAAC,GAAA,OAAAD,EAAAutB,KAAAttB,EAAAstB,OAAAttB,GAAA5J,EAAAmd,SAAA,SAAAxT,EAAAC,GAAA,OAAAvJ,UAAAR,OAAAT,KAAA+/J,UAAA//J,KAAAwzB,YAAAxzB,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,QAAA,EAAA5wJ,EAAAA,GAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,cAAAhxJ,GAAAxK,KAAA08J,MAAA18J,KAAAwzB,YAAA5yB,EAAA2/J,cAAA,SAAAh2J,EAAAC,GAAA,OAAAvJ,UAAAR,OAAAT,KAAA+/J,UAAA//J,KAAAq9J,gBAAA9yJ,EAAAC,GAAAxK,KAAAk9J,WAAAl9J,KAAAq9J,iBAAAz8J,EAAAy8J,cAAA,SAAA7yJ,GAAA,OAAAvJ,UAAAR,QAAA,IAAAT,KAAAu7J,SAAA/wJ,EAAAxK,KAAAohI,UAAAphI,KAAAq9J,gBAAA7yJ,GAAAxK,MAAAA,KAAA07J,SAAAnxJ,EAAApH,UAAAk6J,cAAAr8J,KAAAhB,MAAAA,KAAAs9J,gBAAA,IAAAt9J,KAAAu7J,QAAA,aAAAv7J,KAAAi9J,WAAAj9J,KAAAu7J,QAAA,GAAAv7J,KAAAw7J,aAAAx7J,KAAAu7J,SAAAv7J,KAAAs9J,iBAAA18J,EAAAk3B,KAAA,SAAAvtB,EAAAC,GAAA,OAAAvJ,UAAAR,QAAAT,KAAA07J,QAAA17J,KAAAq9J,gBAAA9yJ,EAAAvK,KAAAi9J,YAAA1yJ,EAAAvK,KAAAi9J,WAAAj9J,KAAAo7J,OAAA,IAAA,EAAAp7J,KAAAm7J,QAAA5wJ,EAAAvK,KAAAi9J,UAAA1yJ,EAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,cAAA,IAAAx7J,KAAAu7J,UAAAhxJ,GAAAvK,KAAAm7J,QAAAn7J,KAAAi9J,UAAAj9J,KAAAw7J,eAAAx7J,KAAA+/J,UAAAx1J,EAAAC,IAAAxK,KAAA08J,OAAA97J,EAAAmxC,OAAA,SAAAxnC,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAu7J,QAAAhxJ,EAAAvK,KAAAq8J,UAAA,IAAAr8J,KAAAu7J,SAAA36J,EAAA66J,YAAA,SAAAlxJ,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAw7J,aAAAjxJ,EAAAvK,KAAAq8J,UAAA,IAAAr8J,KAAAw7J,cAAA56J,EAAA06J,KAAA,SAAA/wJ,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAo7J,MAAA7wJ,EAAAvK,MAAAA,KAAAo7J,OAAAx6J,EAAA8iK,aAAA,SAAAn5J,GAAA,OAAAtJ,UAAAR,OAAAT,KAAAw+H,KAAAj0H,GAAA,GAAAvK,KAAAyjK,eAAAzjK,KAAA08J,MAAA,OAAA3+G,IAAA,GAAAxzC,EAAA,IAAAlF,KAAA0uB,GAAAvpB,EAAA,GAAA8qC,EAAA,GAAAyI,EAAA,GAAAl9C,EAAA,GAAA08C,EAAAo9G,SAAAM,UAAA8F,QAAAntI,EAAA+mI,SAAAM,UAAA0I,OAAA,CAAAlrI,SAAA,SAAAmrI,UAAA,EAAArhK,QAAA,QAAAshK,IAAA,EAAA3iK,QAAA,EAAA0B,KAAA,SAAA2H,EAAAC,EAAA8qC,GAAAt1C,KAAA8jK,QAAAv5J,EAAAC,aAAA5E,QAAA4E,EAAA,CAAAgU,OAAAhU,IAAAxK,KAAA+jK,MAAA,GAAA/jK,KAAAgkK,OAAA,GAAAhkK,KAAAikK,OAAA,GAAAjkK,KAAAkkK,SAAA,MAAA15J,EAAA25J,eAAA,EAAAlrI,SAAAzuB,EAAA25J,eAAA,IACA,IAAApmH,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAgK,EAAAgU,QAAA,GAAA5d,EAAA,GAAAw3E,EAAA53E,EAAA,GAAAuZ,EAAAvP,EAAA45J,YAAA9uH,EAAA+lH,KAAAgJ,eAAA,IAAAtmH,KAAA/9C,KAAAskK,YAAAvqJ,EAAAA,aAAAnU,MAAAmU,EAAA,CAAA,CAAA,IAAA,IAAA,YAAA,IAAAA,GAAA0uB,OAAA1uB,IAAA,IAAA,KAAAq+D,EAAAp4E,KAAAikK,OAAA5jK,KAAA09C,GAAA,IAAAR,EAAAv9C,KAAAikK,OAAAxjK,QAAA,IAAA88C,GAAAQ,EAAA/9C,KAAAikK,OAAA1mH,GAAAv9C,KAAAukK,gBAAAlkK,KAAA09C,GAAAl9C,EAAAb,KAAA+jK,MAAAhmH,GAAA,mBAAAxzC,EAAAwzC,GAAAn9C,EAAAm9C,GAAAl9C,EAAA0J,EAAAwzC,EAAA97C,QAAA,QAAA,mBAAAsI,EAAA,MAAAwzC,EAAAi9G,OAAA,IAAAj9G,EAAA,MAAAA,EAAAi9G,OAAA,MAAAj1J,WAAAwE,EAAAwzC,IAAAiL,GAAApoD,EAAAm9C,KAAAv9C,EAAA,GAAAu9C,KAAAiL,EAAApoD,GAAA,GAAAZ,KAAAwkK,SAAA,UAAAh6J,EAAAtK,MAAA,cAAAsK,EAAAtK,MAAA,SAAAsK,EAAAtK,KAAA+a,EAAAza,EAAAsnB,MAAAtd,EAAAi6J,WAAA,EAAAj6J,EAAAi6J,WAAA,EAAA,cAAAj6J,EAAAtK,KAAAsK,EAAAk6J,UAAA17G,GADA,SAAAz+C,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAyL,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAAqN,EAAAumG,EAAA1sF,EAAA,GAAAykB,EAAA,WAAA7tC,EAAAA,GAAA,QAAA,EAAA,EAAAk/B,EAAA,SAAAl/B,EAAAo0B,EAAA,GAAA,GAAA,OAAAr0B,EAAAm/B,GAAA4L,EAAA,CAAAA,GAAAtzC,OAAAuI,GAAAA,IAAAA,EAAA9J,OAAA,EAAA43C,EAAA,KAAA,sBAAA,IAAA3rC,KAAAnC,EAAA,GAAAq0B,EAAAv+B,KAAAqM,GAAA,IAAA9L,EAAAg+B,EAAAn+B,QAAA,IAAAG,GAAA,CAAA,IAAAgzB,EAAAlnB,EAAAkyB,EAAAh+B,IAAAJ,EAAA,GAAAuZ,EAAA,EAAAkB,EAAA1Q,EAAA9J,OAAA23E,EAAA,EAAAA,EAAAn9D,EAAAm9D,IAAAr6B,EAAA,MAAAzI,EAAA/qC,EAAA6tE,GAAA1rE,GAAA,iBAAA4zG,EAAA/1G,EAAA6tE,GAAA1rE,KAAA,MAAA4zG,EAAAlqD,OAAA,GAAA9gB,EAAA5oC,GAAA+7B,OAAA63E,EAAAlqD,OAAA,GAAAkqD,EAAA06C,OAAA,IAAAvyH,OAAA63E,GAAA52E,GAAA,EAAA0uC,GAAAA,EAAAn9D,EAAA,IAAAza,EAAAuZ,MAAAgkC,EAAAv9C,EAAAuZ,EAAA,IAAA,GAAAvZ,EAAAuZ,KAAAgkC,EAAA,IAAA9iC,EAAAlB,EAAAs+B,EAAA,EAAA+/B,EAAAr+D,EAAA,EAAAq+D,EAAAn9D,EAAAm9D,GAAA//B,EAAA0F,EAAAv9C,EAAA43E,GAAAv3E,EAAAL,EAAA43E,EAAA,GAAA76B,EAAA/8C,EAAA43E,EAAA,GAAApvB,EAAA,GAAA3Q,EAAA,EAAA73C,EAAA43E,EAAA,GAAA53E,EAAAuZ,KAAAumG,EAAA,GAAAjoE,EAAA,IAAAsS,EAAA5M,EAAAl9C,EAAA08C,EAAAyL,GAAA,IAAA2B,EAAA5M,GAAA,EAAAl9C,EAAAk9C,GAAA,GAAA,EAAAl9C,EAAA08C,GAAA,EAAAA,GAAA/8C,EAAAC,OAAAsZ,EAAA,OAAA6Z,EACAlnB,CAAAlM,EAAAgK,EAAAtK,KAAAU,GAAAZ,KAAA2kK,UAAA3kK,KAAAwkK,SAAAzmH,GAAAt9C,OAAAT,KAAAkkK,WAAAtwI,EAAA0sF,EAAAtgH,KAAAwkK,SAAAxkK,KAAAkkK,UAAAlkK,KAAA4kK,QAAAhxI,EAAAnzB,OAAAT,KAAA6kK,SAAAjxI,EAAAo2G,QAAAhqI,KAAA8kK,UAAAlxI,EAAAy7F,SAAArvH,KAAA+kK,IAAA/kK,KAAAglK,IAAAhlK,KAAAilK,IAAAjlK,KAAAklK,IAAA,EAAAllK,KAAAmlK,IAAAnlK,KAAA6kK,SAAA,GAAA7kK,KAAAolK,QAAAplK,KAAA8kK,UAAA,GAAA9kK,KAAAqlK,IAAArlK,KAAAolK,QAAA,GAAAplK,KAAAslK,MAAA,EAAAtlK,KAAAolK,QAAA3kK,QAAAsZ,EAAA/Z,KAAAskK,YAAA,IAAAtkK,KAAAulK,kBAAA,GAAAxrJ,EAAA,aAAAnU,QAAA5F,KAAAskK,YAAAvqJ,EAAA,CAAAA,IAAAwjC,EAAAxjC,EAAAtZ,QAAA,IAAA88C,GAAA,CAAA,IAAAoN,EAAA,EAAAA,EAAA,EAAAA,IAAA5M,EAAAhkC,EAAAwjC,GAAAoN,GAAA3qD,KAAA+jK,MAAAhmH,GAAA,mBAAAxzC,EAAAwzC,IAAAxzC,EAAAwzC,EAAA97C,QAAA,QAAA,mBAAAsI,EAAA,MAAAwzC,EAAAi9G,OAAA,IAAAj9G,EAAA,MAAAA,EAAAi9G,OAAA,IAAAj9G,EAAAhkC,EAAAwjC,GAAA,GAAAv9C,KAAAulK,kBAAAhoH,GAAAv9C,KAAA+jK,MAAAhmH,GAAA/9C,KAAA+jK,MAAAhmH,GAAA/8C,KAAAhB,KAAA8jK,SAAA9jK,KAAA8jK,QAAA/lH,GAAA,OAAA/9C,KAAAwlK,YAAAlwH,EAAA+lH,KAAAmD,aAAA,EAAA,GAAA,GAAAl+I,IAAA,SAAA9V,GAAA,IAAA8qC,EAAAyI,EAAAR,EAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAA1M,KAAA2kK,UAAA5qJ,EAAA/Z,KAAA+jK,MAAAzjD,EAAAtgH,KAAA8jK,QAAAlwI,EAAAppB,IAAAxK,KAAAwlK,YAAA,GAAAxlK,KAAAkkK,SAAA,CAAA,GAAA9rF,EAAAp4E,KAAA6kK,SAAA5pJ,EAAAjb,KAAAolK,QAAA56J,GAAAxK,KAAA4kK,QAAA/jK,EAAAb,KAAAglK,IAAAx6J,EAAAxK,KAAAmlK,KAAAtkK,EAAA6L,EAAA,EAAA,CAAA,IAAA9L,EAAA8L,EAAA,EAAA7L,EAAAD,IAAAZ,KAAAmlK,IAAA/sF,IAAAv3E,KAAA2J,IAAAxK,KAAA+kK,IAAA3sF,EAAAv3E,EAAA,GAAAb,KAAAglK,IAAAnkK,EAAAb,KAAAolK,QAAAnqJ,EAAAjb,KAAA8kK,UAAAjkK,GAAAb,KAAAqlK,IAAApqJ,EAAAjb,KAAAilK,IAAAjlK,KAAAklK,IAAA,QAAA,GAAA16J,EAAAxK,KAAA+kK,KAAA,EAAAlkK,EAAA,CAAA,KAAA,EAAAA,IAAAb,KAAA+kK,IAAA3sF,IAAAv3E,KAAA2J,IAAA,IAAA3J,GAAA2J,EAAAxK,KAAA+kK,IAAA/kK,KAAA+kK,IAAA,EAAAlkK,IAAAb,KAAAmlK,IAAA/sF,EAAAv3E,GAAAb,KAAAglK,IAAAnkK,EAAAb,KAAAolK,QAAAnqJ,EAAAjb,KAAA8kK,UAAAjkK,GAAAb,KAAAilK,IAAAhqJ,GAAAjb,KAAAklK,IAAAjqJ,EAAAxa,OAAA,GAAA,IAAA,EAAAT,KAAAqlK,IAAApqJ,EAAAjb,KAAAklK,KAAA,GAAA5vH,EAAAz0C,EAAA2J,GAAAxK,KAAA+kK,IAAAlkK,EAAAb,KAAAklK,IAAA16J,EAAAxK,KAAAqlK,KAAAxkK,EAAAoa,EAAAxa,OAAA,EAAA,CAAA,IAAAG,EAAAqa,EAAAxa,OAAA,EAAAI,EAAAD,IAAAZ,KAAAqlK,IAAApqJ,IAAApa,KAAA2J,IAAAxK,KAAAilK,IAAAhqJ,EAAApa,EAAA,GAAAb,KAAAklK,IAAArkK,OAAA,GAAA2J,EAAAxK,KAAAilK,KAAA,EAAApkK,EAAA,CAAA,KAAA,EAAAA,IAAAb,KAAAilK,IAAAhqJ,IAAApa,KAAA2J,IAAA,IAAA3J,GAAA2J,EAAAxK,KAAAilK,IAAAjlK,KAAAilK,IAAA,EAAApkK,IAAAb,KAAAqlK,IAAApqJ,EAAApa,GAAAb,KAAAklK,IAAArkK,EAAAmoD,GAAAnoD,GAAA2J,EAAAxK,KAAAilK,MAAAjlK,KAAAqlK,IAAArlK,KAAAilK,MAAAjlK,KAAAslK,WAAAt8G,GAAAx+C,GAAA8qC,EAAA9qC,EAAA,EAAA,EAAA,GAAAA,EAAAkC,EAAA,EAAAA,EAAAlC,GAAA,IAAA,EAAAkC,IAAAA,EAAA,IAAAqxC,EAAA,EAAAiL,EAAAnoD,EAAAb,KAAAikK,OAAAxjK,QAAA,IAAAI,GAAA08C,EAAAv9C,KAAAikK,OAAApjK,GAAAL,GAAAwoD,EAAAA,GAAA2B,EAAA3qD,KAAAwkK,SAAAjnH,GAAAjI,IAAAulH,GAAA,EAAA98G,GAAAiL,EAAA2B,EAAAmwG,GAAA/8G,EAAA4M,EAAAowG,KAAA/xG,EAAA2B,EAAApgD,EAAAvK,KAAAgkK,OAAAzmH,KAAA/8C,EAAA6E,KAAAwrC,MAAArwC,IAAAuZ,EAAAwjC,GAAA+iE,EAAA/iE,GAAA/8C,GAAA8/G,EAAA/iE,GAAA/8C,EAAA,GAAAR,KAAAskK,YAAA,IAAA,IAAAjsH,EAAA3O,EAAA9K,EAAA7Y,EAAAqnC,EAAA7qB,EAAAhhC,EAAAsnC,EAAA7oC,KAAAskK,YAAAzjK,EAAAgoC,EAAApoC,QAAA,IAAAI,GAAA08C,EAAA1U,EAAAhoC,GAAA,GAAA0hC,EAAAsG,EAAAhoC,GAAA,IAAA,EAAAU,GAAA,IAAAsnC,EAAAhoC,GAAA,GAAA,EAAA0J,EAAAogD,EAAA3qD,KAAAwkK,SAAA37H,EAAAhoC,GAAA,IAAAw3C,EAAAr4C,KAAAwkK,SAAA37H,EAAAhoC,GAAA,IAAA8pD,GAAAtS,IAAAsS,EAAAA,EAAArV,GAAA+C,EAAAA,EAAA/C,GAAA5L,EAAAihB,EAAApgD,GAAAogD,EAAAngD,EAAAmgD,EAAApgD,GAAAy+C,EAAAtf,KAAA3jB,EAAA4kC,EAAAngD,GAAAmgD,EAAArV,EAAAqV,EAAAngD,GAAAw+C,GAAAtf,GAAAsf,EAAAjjC,IAAA4kC,EAAArV,GAAAqV,EAAA5M,EAAA4M,EAAArV,GAAA0T,EAAAjjC,GAAAijC,EAAApqB,EAAAyZ,EAAA9tC,GAAA8tC,EAAA7tC,EAAA6tC,EAAA9tC,GAAAy+C,EAAApqB,KAAAwuB,EAAA/U,EAAA7tC,GAAA6tC,EAAA/C,EAAA+C,EAAA7tC,GAAAw+C,GAAApqB,GAAAoqB,EAAAoE,IAAA/U,EAAA/C,GAAA+C,EAAA0F,EAAA1F,EAAA/C,GAAA0T,EAAAoE,GAAApE,EAAAxoD,EAAAozB,EAAAvuB,KAAA+uC,MAAAgZ,EAAAxuB,EAAA7Y,EAAA2jB,GAAAnoC,EAAAghC,EAAAviC,KAAAulK,kBAAA1kK,GAAAkZ,EAAAwjC,GAAA+iE,EAAA/iE,GAAA/8C,GAAA8/G,EAAA/iE,GAAA/8C,MAAA63C,EAAAzkB,EAAAzwB,UAAAywB,EAAA6xI,cAAAxqJ,EAAA2Y,EAAA8xI,iBAAAllK,EAAAozB,EAAA+xI,UAAA,EAAA/xI,EAAAgyI,iBAAA,SAAAr7J,EAAAC,EAAA8qC,GAAA,OAAA,IAAAqV,EAAApgD,GAAA,EAAAC,EAAAD,GAAA,GAAA,EAAAC,EAAA8qC,GAAA,EAAAA,IAAA1hB,EAAAiyI,aAAA,WAAA,IAAAvwH,EAAAyI,EAAAl9C,EAAA0J,EAAAgzC,EAAAuoH,UAAAv7J,IAAAC,EAAAD,EAAAoxJ,WAAArmH,EAAA9qC,EAAAu7J,cAAAhoH,EAAAvzC,EAAAw7J,gBAAAnlK,EAAA2J,EAAAy7J,aAAAz7J,EAAA07J,4BAAA,SAAA,CAAAC,OAAA,SAAA57J,EAAAC,EAAA+yC,EAAAoN,EAAA3B,EAAAxoD,GAAAgK,aAAA5E,QAAA4E,EAAA,CAAAgU,OAAAhU,IAAAhK,EAAA,IAAAozB,EAAA,IAAAhzB,EAAAw3E,EAAAn9D,EAAAvO,EAAAlC,EAAAgU,OAAAzE,EAAArN,EAAAjM,OAAA,EAAA6/G,EAAA,GAAAjoE,EAAA,GAAA,GAAAt+B,EAAA,EAAA,OAAAivC,EAAA,IAAApoD,EAAA,EAAAA,GAAAmZ,EAAAnZ,IAAAqa,EAAAq6B,EAAA/qC,EAAAmC,EAAA9L,GAAA+pD,EAAA3B,EAAAxoD,EAAAuZ,IAAAnZ,GAAA0/G,EAAA1/G,GAAAqa,EAAA3W,IAAA,IAAA8zE,KAAA5tE,EAAA6tC,EAAA+/B,GAAA5tE,EAAA4tE,GAAA,OAAA//B,EAAA75B,OAAA8hG,GAAAt3D,EAAA,IAAAnoD,EAAA0J,EAAA,SAAA,EAAA,EAAA0Q,EAAA63G,GAAA,IAAAvyG,KAAAtF,EAAA+tC,EAAA26G,OAAAnjK,EAAAwoD,EAAAo9G,SAAAroH,EAAA,IAAA1F,EAAA+rH,aAAA/rH,EAAA+rH,YAAA,IAAA/rH,EAAA+rH,YAAA/rH,EAAA+rH,sBAAAx+J,QAAAhF,GAAA,IAAAy3C,EAAA+rH,WAAA,EAAA37H,OAAA4P,EAAA+rH,YAAA/rH,EAAA+rH,WAAA,MAAAnpJ,EAAA3W,IAAAmuB,KAAA,CAAA,CAAA,OAAA,MAAA,WAAA7xB,GAAA,IAAA,MAAAqa,EAAA3W,IAAAukC,GAAA,CAAA,CAAA,IAAA,IAAA,WAAAjoC,GAAA,KAAAy3C,EAAA+rH,aAAAz5G,EAAA07G,YAAA17G,EAAA27G,mBAAA,GAAArrJ,EAAAmpJ,WAAAz5G,EAAAm5G,QAAAyC,cAAA/lK,EAAAgmK,aAAAvrJ,EAAAlT,MAAAswC,EAAAsS,EAAA87G,QAAAz9G,OAAA3Q,EAAAquH,YAAA,SAAAn8J,EAAAC,GAAA,IAAA,IAAA8qC,EAAAt1C,KAAAukK,gBAAAxmH,EAAAzI,EAAA70C,QAAA,IAAAs9C,IAAAxzC,EAAA+qC,EAAAyI,KAAAxzC,EAAAo8J,QAAAp8J,EAAAk7J,iBAAAzlK,KAAAgkK,OAAA1uH,EAAAyI,IAAAvzC,IAAA6tC,EAAAqqH,MAAA,SAAAn4J,GAAA,IAAAC,EAAA8qC,EAAAyI,EAAA/9C,KAAAikK,OAAA,IAAAz5J,KAAAxK,KAAAwkK,SAAA,GAAAh6J,KAAAD,EAAA,WAAAvK,KAAAwkK,SAAAh6J,UAAAxK,KAAA+jK,MAAAv5J,GAAA8qC,EAAAyI,EAAAt9C,QAAA,IAAA60C,GAAAyI,EAAAzI,KAAA9qC,GAAAuzC,EAAAr9C,OAAA40C,EAAA,GAAA,OAAAt1C,KAAA4mK,OAAAlE,MAAA1hK,KAAAhB,KAAAuK,IAAAowJ,SAAAM,UAAA,oBAAA,CAAA,sBAAA,aAAA,SAAA1wJ,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA,WAAApgD,EAAAvJ,KAAAhB,KAAA,OAAAA,KAAAukK,gBAAA9jK,OAAA,EAAAT,KAAAomK,SAAAz7G,EAAAxnD,UAAAijK,UAAAp9G,EAAA2xG,SAAAM,UAAA8F,QAAAvgK,EAAA,GAAAI,EAAA+pD,EAAAxnD,UAAA,IAAAoH,EAAA,QAAA3J,EAAAyC,YAAAsnD,GAAApoD,QAAA,SAAAooD,EAAAk5G,IAAA,EAAAl5G,EAAAk8G,4BAAA,EAAAl8G,EAAAm8G,gBAAA,cAAAn8G,EAAAo8G,qBAAA,EAAAnmK,EAAA,KAAA+pD,EAAAq8G,UAAA,CAAAv3J,IAAA7O,EAAAunD,MAAAvnD,EAAAwnD,OAAAxnD,EAAA6xB,KAAA7xB,EAAA8tB,MAAA9tB,EAAA2zB,OAAA3zB,EAAAqnC,SAAArnC,EAAA+xB,QAAA/xB,EAAA8xB,OAAA9xB,EAAAqmK,YAAArmK,EAAAkxB,WAAA,IAAA,SAAAsxI,EAAA74J,EAAAC,GAAA,OAAAA,EAAA1I,cAAA,SAAAolK,EAAA38J,GAAA,OAAAg4B,EAAA/0B,KAAA,iBAAAjD,EAAAA,GAAAA,EAAA48J,cAAA58J,EAAAyY,OAAA/S,QAAA,IAAAlK,WAAAkF,OAAAm8J,IAAA,IAAA,EAAA,SAAAC,EAAA98J,GAAA9I,OAAAsuC,SAAAA,QAAAe,IAAAvmC,GAAA,SAAA+8J,EAAA/8J,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,GAAA2J,EAAAA,GAAA+8J,GAAAvkJ,MAAA,QAAA,IAAAniB,EAAA0J,GAAA,OAAAA,EAAA,IAAAA,EAAAA,EAAA6rD,OAAA,GAAAt0D,cAAAyI,EAAAywJ,OAAA,GAAA1lH,EAAA,CAAA,IAAA,MAAA,KAAA,KAAA,UAAAyI,EAAA,GAAA,IAAAA,QAAA,IAAAl9C,EAAAy0C,EAAAyI,GAAAxzC,KAAA,OAAA,GAAAwzC,GAAAmmE,GAAA,KAAAsjD,GAAA,IAAAzpH,EAAA,KAAAzI,EAAAyI,IAAA72C,cAAA,IAAAsgK,GAAAj9J,GAAA,KAAA,SAAAw8B,EAAAx8B,EAAAC,GAAA,IAAA8qC,EAAAz0C,EAAA08C,EAAA,GAAA,GAAA/yC,EAAAA,GAAAi9J,GAAAl9J,EAAA,MAAA,GAAA+qC,EAAA9qC,EAAA/J,OAAA,MAAA,IAAA60C,IAAA,KAAAz0C,EAAA2J,EAAA8qC,IAAArzC,QAAA,eAAAylK,KAAA7mK,IAAA08C,EAAA18C,EAAA0E,QAAA49J,EAAAC,IAAA54J,EAAAskB,iBAAAjuB,SAAA,IAAAy0C,KAAA9qC,GAAA,IAAA8qC,EAAArzC,QAAA,cAAA0lK,KAAAryH,IAAAiI,EAAAjI,GAAA9qC,EAAA8qC,SAAA,GAAA9qC,EAAAD,EAAA48J,cAAA58J,EAAAyY,MAAA,IAAAsyB,KAAA9qC,EAAA,iBAAA8qC,QAAA,IAAAiI,EAAAjI,KAAAiI,EAAAjI,EAAA/vC,QAAA49J,EAAAC,IAAA54J,EAAA8qC,IAAA,OAAAsyH,IAAArqH,EAAA/rB,QAAA01I,EAAA38J,IAAAwzC,EAAA8pH,GAAAt9J,EAAAC,GAAA,GAAA+yC,EAAAsrB,SAAA9qB,EAAA8qB,SAAAtrB,EAAAuqH,MAAA/pH,EAAA+pH,MAAAvqH,EAAA4E,OAAApE,EAAAoE,OAAA5E,EAAA6E,OAAArE,EAAAqE,OAAA7E,EAAA1U,EAAAkV,EAAAlV,EAAA0U,EAAA5N,EAAAoO,EAAApO,EAAAo4H,KAAAxqH,EAAA9G,EAAAsH,EAAAtH,EAAA8G,EAAAyqH,UAAAjqH,EAAAiqH,UAAAzqH,EAAA0qH,UAAAlqH,EAAAkqH,UAAA1qH,EAAA8E,OAAAtE,EAAAsE,QAAA9E,EAAA7kC,gBAAA6kC,EAAA7kC,QAAA6kC,EAAA,SAAA90C,EAAA8B,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAA,GAAAI,EAAA2J,EAAAyY,MAAA,IAAA2nC,KAAArV,EAAA,YAAAqV,GAAA,WAAAA,GAAA7iC,MAAA6iC,KAAAngD,EAAAmgD,MAAApN,EAAAjI,EAAAqV,KAAA9pD,GAAAA,EAAA8pD,MAAA,IAAAA,EAAA1oD,QAAA,YAAA,iBAAAs7C,GAAA,iBAAAA,KAAA/8C,EAAAmqD,GAAA,SAAApN,GAAA,SAAAoN,GAAA,QAAAA,EAAA,KAAApN,GAAA,SAAAA,GAAA,SAAAA,GAAA,iBAAA/yC,EAAAmgD,IAAA,KAAAngD,EAAAmgD,GAAAplD,QAAAwgB,EAAA,IAAAw3B,EAAA,EAAA2qH,GAAA39J,EAAAogD,QAAA,IAAA/pD,EAAA+pD,KAAA3B,EAAA,IAAAm/G,GAAAvnK,EAAA+pD,EAAA/pD,EAAA+pD,GAAA3B,KAAA,GAAAjL,EAAA,IAAA4M,KAAA5M,EAAA,cAAA4M,IAAAnqD,EAAAmqD,GAAA5M,EAAA4M,IAAA,MAAA,CAAAy9G,KAAA5nK,EAAA6nK,SAAAr/G,GAAA,SAAA6xG,EAAAtwJ,EAAAC,GAAA,GAAA,YAAAD,GAAA,SAAAA,GAAA,cAAAA,EAAA,OAAAA,EAAA,IAAA,IAAA+qC,GAAA/qC,EAAA,MAAAA,GAAA,KAAAA,EAAA,MAAAA,GAAAjC,MAAA,KAAAy1C,GAAA,IAAAxzC,EAAAtI,QAAA,QAAA,MAAA,IAAAsI,EAAAtI,QAAA,SAAA,OAAAqzC,EAAA,GAAAz0C,GAAA,IAAA0J,EAAAtI,QAAA,OAAA,MAAA,IAAAsI,EAAAtI,QAAA,UAAA,OAAAqzC,EAAA,GAAA,OAAA,MAAAz0C,EAAAA,EAAA,WAAAk9C,EAAA,MAAA,IAAA,WAAAl9C,IAAAA,EAAA,OAAA0J,GAAAwzC,EAAA,WAAAA,GAAAj2B,MAAA/hB,WAAAg4C,MAAA,KAAAA,EAAA,IAAA97C,QAAA,KAAA,MAAA87C,GAAA,IAAAl9C,GAAA,EAAAy0C,EAAA70C,OAAA,IAAA60C,EAAA,GAAA,IAAA9qC,IAAAA,EAAA89J,KAAA,IAAAvqH,EAAA97C,QAAA,KAAAuI,EAAA+9J,KAAA,IAAA1nK,EAAAoB,QAAA,KAAAuI,EAAAg+J,IAAA,MAAAzqH,EAAAqY,OAAA,GAAA5rD,EAAAi+J,IAAA,MAAA5nK,EAAAu1D,OAAA,GAAA5rD,EAAAk+J,GAAA3iK,WAAAg4C,EAAAx4C,QAAAwgB,EAAA,KAAAvb,EAAAm+J,GAAA5iK,WAAAlF,EAAA0E,QAAAwgB,EAAA,KAAAvb,EAAA+3B,EAAAh4B,GAAAC,GAAAD,EAAA,SAAAq+J,EAAAr+J,EAAAC,GAAA,MAAA,iBAAAD,GAAA,MAAAA,EAAA6rD,OAAA,GAAAn9B,SAAA1uB,EAAA6rD,OAAA,GAAA,IAAA,IAAArwD,WAAAwE,EAAAywJ,OAAA,IAAAj1J,WAAAwE,GAAAxE,WAAAyE,GAAA,SAAAq+J,EAAAt+J,EAAAC,GAAA,OAAA,MAAAD,EAAAC,EAAA,iBAAAD,GAAA,MAAAA,EAAA6rD,OAAA,GAAAn9B,SAAA1uB,EAAA6rD,OAAA,GAAA,IAAA,IAAArwD,WAAAwE,EAAAywJ,OAAA,IAAAxwJ,EAAAzE,WAAAwE,GAAA,SAAAu+J,EAAAv+J,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAAR,EAAAyL,EAAA,MAAAz+C,EAAAC,EAAA,iBAAAD,EAAAA,GAAAgzC,EAAAhzC,EAAAjC,MAAA,KAAAqiD,IAAAnqD,EAAA,MAAA+J,EAAA6rD,OAAA,IAAAn9B,SAAA1uB,EAAA6rD,OAAA,GAAA,IAAA,IAAArwD,WAAAw3C,EAAA,GAAAy9G,OAAA,IAAAj1J,WAAAw3C,EAAA,OAAA,IAAAhzC,EAAAtI,QAAA,OAAA,EAAA8mK,IAAAvoK,EAAA,EAAAgK,GAAA+yC,EAAA98C,SAAAs9C,IAAAA,EAAAzI,GAAA9qC,EAAAmgD,IAAA,IAAApgD,EAAAtI,QAAA,YAAA0oD,GAAA,OAAAA,EAAA,MAAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAA,EAAA,OAAA,IAAApgD,EAAAtI,QAAA,QAAA0oD,EAAA,EAAAA,GAAAA,EAAA,eAAA,IAAA,KAAAA,EAAA,IAAA,IAAA,IAAApgD,EAAAtI,QAAA,QAAA,EAAA0oD,IAAAA,GAAAA,EAAA,eAAA,IAAA,KAAAA,EAAA,IAAA,KAAAngD,EAAAmgD,GAAA,OAAA3B,EAAAA,EAAA,OAAA,KAAAA,EAAA,EAAAA,EAAA,SAAAggH,EAAAz+J,EAAAC,EAAA8qC,GAAA,OAAA,KAAA,GAAA/qC,EAAAA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAA,EAAAA,GAAA,EAAAC,GAAA8qC,EAAA9qC,GAAAD,EAAA,EAAAA,EAAA,GAAA+qC,EAAA,EAAA/qC,EAAA,EAAAC,GAAA8qC,EAAA9qC,IAAA,EAAA,EAAAD,GAAA,EAAAC,GAAA,GAAA,EAAA,SAAAy+J,EAAA1+J,EAAAC,GAAA,IAAA,IAAAuzC,EAAAl9C,EAAA08C,EAAAhzC,EAAAsC,MAAAq8J,KAAA,GAAAv+G,EAAA,EAAA3B,EAAAzL,EAAA98C,OAAA,GAAA8J,EAAA+qC,EAAA,EAAAA,EAAAiI,EAAA98C,OAAA60C,IAAAyI,EAAAR,EAAAjI,GAAAqV,IAAA9pD,EAAA0J,EAAAywJ,OAAArwG,EAAApgD,EAAAtI,QAAA87C,EAAA4M,GAAAA,IAAAlqD,OAAAs9C,EAAAt9C,OAAA,KAAAs9C,EAAAorH,GAAAprH,EAAAvzC,IAAA/J,QAAAs9C,EAAA19C,KAAA,GAAA2oD,GAAAnoD,GAAA2J,EAAA,QAAAuzC,EAAA,GAAA,IAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,QAAAA,EAAAnwC,KAAA,MAAA,IAAA,OAAAo7C,EAAA,IAAAovB,EAAAn9D,EAAAvO,EAAAqN,EAAAumG,EAAA1sF,EAAAykB,EAAA,4BAAA3O,EAAA,uDAAA9K,EAAA,mDAAA7Y,EAAA,0CAAAqnC,EAAA,wBAAA7qB,EAAA,uBAAAhhC,EAAA,mBAAAsnC,EAAA,0BAAA8G,EAAA,aAAA8G,EAAA,WAAA0sH,EAAA,aAAA5/C,EAAA,yCAAA6lD,EAAA,wBAAAC,EAAA,iCAAAC,EAAA,sDAAAC,EAAA,wBAAAC,EAAAnkK,KAAA0uB,GAAA,IAAAg1I,EAAA,IAAA1jK,KAAA0uB,GAAA01I,EAAA,GAAAC,EAAApoK,SAAAqoK,EAAA,SAAAp/J,GAAA,OAAAm/J,EAAAzzH,gBAAAyzH,EAAAzzH,gBAAA,+BAAA1rC,GAAAm/J,EAAAjjK,cAAA8D,IAAAg9J,EAAAoC,EAAA,OAAArmD,EAAAqmD,EAAA,OAAAC,EAAAj/G,EAAAgxG,WAAA,CAAAkO,cAAArpK,GAAA4iH,EAAA0mD,UAAAC,UAAAnC,GAAAr9J,GAAA64G,EAAAnhH,QAAA,WAAAuI,GAAAm/J,EAAA,KAAAj9J,GAAA,IAAA02G,EAAAnhH,QAAA,YAAA,IAAAmhH,EAAAnhH,QAAA,aAAA,IAAAsI,IAAA,EAAAk+B,OAAA26E,EAAA43C,OAAAzwJ,GAAA,EAAA,KAAA+1G,EAAA5zG,GAAA+7B,OAAA26E,EAAA43C,OAAA53C,EAAAnhH,QAAA,YAAA,EAAA,IAAA,EAAA8X,GAAA,IAAAqpG,EAAAnhH,QAAA,YAAA,8BAAAiL,KAAAk2G,IAAA,uCAAAl2G,KAAAk2G,MAAAxvF,EAAA7tB,WAAAkF,OAAAm8J,OAAA58J,KAAAA,GAAAwY,MAAAuL,QAAA,uBAAA,QAAA/gB,KAAAhD,GAAAwY,MAAAwO,WAAA0yF,GAAA,GAAAsjD,GAAA,GAAAC,GAAAiC,EAAAl6J,YAAAk6J,EAAAl6J,YAAA6e,iBAAA,aAAA27I,GAAAr/G,EAAA0M,SAAA,SAAA9sD,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA08C,EAAA,OAAAqqH,GAAA,YAAAp9J,IAAAuzC,GAAAxzC,EAAAyY,MAAAxY,GAAA+yC,EAAAhzC,EAAAyY,MAAAxY,IAAA8qC,EAAAA,GAAAmyH,GAAAl9J,IAAAgzC,EAAAjI,EAAA9qC,IAAA8qC,EAAAxmB,iBAAAtkB,IAAA8qC,EAAAxmB,iBAAAtkB,EAAAjF,QAAAkxC,EAAA,OAAAvvC,eAAAqD,EAAA48J,eAAA5pH,EAAAhzC,EAAA48J,aAAA38J,IAAA,MAAA3J,GAAA08C,GAAA,SAAAA,GAAA,SAAAA,GAAA,cAAAA,EAAAA,EAAA18C,GAAAqmK,EAAA38J,IAAA0/J,GAAAL,EAAAM,gBAAA,SAAA3/J,EAAA+qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,GAAA,OAAA18C,IAAAA,EAAA,OAAAk9C,EAAA,GAAA,SAAAl9C,IAAAk9C,EAAA,OAAA,EAAA,IAAAiL,EAAAxoD,EAAAI,EAAAw3E,EAAAgxF,EAAA57J,KAAA8nC,GAAAr6B,EAAA1Q,EAAAmC,EAAA66J,EAAAvkJ,MAAAjJ,EAAAgkC,EAAA,EAAA,GAAAhkC,IAAAgkC,GAAAA,GAAA,MAAAl9C,IAAA,IAAAy0C,EAAArzC,QAAA,UAAA+mD,EAAAjL,EAAA,KAAAq6B,EAAA7tE,EAAA4/J,YAAA5/J,EAAA6/J,kBAAA,CAAA,GAAA19J,EAAA6hB,QAAA,+BAAAy7I,GAAAz/J,EAAA,YAAA,kBAAA,MAAA1J,GAAAoa,EAAArU,aAAA,MAAA/F,EAAAu1D,OAAA,IAAA,QAAAv1D,EAAA6L,EAAA0rE,EAAA,kBAAA,kBAAAr6B,EAAAl9C,MAAA,CAAA,GAAAL,GAAAya,EAAA1Q,EAAA1D,YAAA6iK,EAAAnhJ,MAAA8hJ,SAAAzpK,EAAA4J,EAAA2xJ,OAAAmE,MAAA9/J,GAAA43E,GAAA53E,EAAAs3B,OAAAl3B,EAAA,OAAAJ,EAAAkuB,MAAAqvB,EAAA,IAAArxC,EAAA0rE,EAAA,QAAA,UAAAr6B,EAAAl9C,EAAAoa,EAAArU,YAAA2gK,GAAAv+G,EAAAjjD,WAAAwhK,EAAAnvF,EAAA,cAAA,iBAAAn9D,EAAAnU,YAAAygK,GAAAnvF,GAAA,MAAAv3E,IAAA,IAAA8pD,EAAA2/G,eAAA9pK,EAAAya,EAAAovJ,SAAApvJ,EAAAovJ,UAAA,IAAAvyI,KAAAl3B,EAAAJ,EAAAkuB,MAAAs6B,EAAAjL,EAAA,KAAA,IAAAiL,GAAAzL,IAAAyL,EAAAihH,GAAA1/J,EAAA+qC,EAAAyI,EAAAl9C,GAAA,IAAA,OAAAkZ,GAAAivC,EAAAA,GAAAk/G,GAAA0B,EAAAW,gBAAA,SAAAhgK,EAAAC,EAAA8qC,GAAA,GAAA,aAAA00H,GAAAz/J,EAAA,WAAA+qC,GAAA,OAAA,EAAA,IAAAyI,EAAA,SAAAvzC,EAAA,OAAA,MAAA3J,EAAAmpK,GAAAz/J,EAAA,SAAAwzC,EAAAzI,GAAA,OAAA/qC,EAAA,SAAAwzC,IAAAksH,GAAA1/J,EAAAC,EAAAzE,WAAAlF,GAAAA,EAAA0E,QAAA6nD,EAAA,MAAA,IAAAo9G,GAAA,CAAA97I,MAAA,CAAA,OAAA,SAAA6F,OAAA,CAAA,MAAA,WAAAwmI,GAAA,CAAA,aAAA,cAAA,YAAA,gBAAApf,GAAA,CAAA/jF,KAAA,CAAA,EAAA,IAAA,KAAAgF,KAAA,CAAA,EAAA,IAAA,GAAA8C,OAAA,CAAA,IAAA,IAAA,KAAAzH,MAAA,CAAA,EAAA,EAAA,GAAA+E,OAAA,CAAA,IAAA,EAAA,GAAAkD,KAAA,CAAA,EAAA,IAAA,KAAA/H,KAAA,CAAA,EAAA,EAAA,KAAA4F,KAAA,CAAA,EAAA,EAAA,KAAAyC,MAAA,CAAA,IAAA,IAAA,KAAA9F,QAAA,CAAA,IAAA,EAAA,KAAAuD,MAAA,CAAA,IAAA,IAAA,GAAAyC,OAAA,CAAA,IAAA,IAAA,GAAAvC,OAAA,CAAA,IAAA,IAAA,GAAApD,KAAA,CAAA,IAAA,IAAA,KAAAiE,OAAA,CAAA,IAAA,EAAA,KAAAhE,MAAA,CAAA,EAAA,IAAA,GAAAiE,IAAA,CAAA,IAAA,EAAA,GAAAJ,KAAA,CAAA,IAAA,IAAA,KAAA/F,KAAA,CAAA,EAAA,IAAA,KAAAsU,YAAA,CAAA,IAAA,IAAA,IAAA,IAAA+7F,GAAAx+G,EAAA8/G,WAAA,SAAAlgK,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAkM,EAAA,GAAAnC,EAAA,GAAA,iBAAAA,EAAA+qC,EAAA,CAAA/qC,GAAA,GAAAA,GAAA,EAAA,IAAA,IAAAA,OAAA,CAAA,GAAA,MAAAA,EAAA6rD,OAAA7rD,EAAA9J,OAAA,KAAA8J,EAAAA,EAAAywJ,OAAA,EAAAzwJ,EAAA9J,OAAA,IAAAk7I,GAAApxI,GAAA+qC,EAAAqmG,GAAApxI,QAAA,GAAA,MAAAA,EAAA6rD,OAAA,GAAA,IAAA7rD,EAAA9J,SAAA8J,EAAA,KAAAwzC,EAAAxzC,EAAA6rD,OAAA,IAAArY,GAAAl9C,EAAA0J,EAAA6rD,OAAA,IAAAv1D,GAAA08C,EAAAhzC,EAAA6rD,OAAA,IAAA7Y,GAAAjI,EAAA,EAAA/qC,EAAA0uB,SAAA1uB,EAAAywJ,OAAA,GAAA,MAAA,GAAAzwJ,GAAA,EAAA,IAAA,IAAAA,QAAA,GAAA,QAAAA,EAAAywJ,OAAA,EAAA,GAAA,GAAA1lH,EAAA5oC,EAAAnC,EAAAsC,MAAAwrC,GAAA7tC,GAAA,IAAA,IAAAD,EAAAtI,QAAA,KAAA,OAAAsI,EAAAsC,MAAA68B,QAAAihB,EAAAliB,OAAA6M,EAAA,IAAA,IAAA,IAAA0T,EAAAvgB,OAAA6M,EAAA,IAAA,IAAAyI,EAAA,GAAAv9C,EAAAioC,OAAA6M,EAAA,IAAA,MAAAz0C,EAAAL,GAAA,GAAAA,GAAAwoD,EAAA,GAAAxoD,EAAAwoD,EAAAxoD,EAAAwoD,GAAA,EAAA1T,EAAA70C,SAAA60C,EAAA,GAAA7M,OAAAl+B,EAAA,KAAA+qC,EAAA,GAAA0zH,EAAAr+G,EAAA,EAAA,EAAA5M,EAAAl9C,GAAAy0C,EAAA,GAAA0zH,EAAAr+G,EAAA5M,EAAAl9C,GAAAy0C,EAAA,GAAA0zH,EAAAr+G,EAAA,EAAA,EAAA5M,EAAAl9C,QAAAy0C,EAAA/qC,EAAAsC,MAAAwrC,IAAAsjG,GAAAvuE,YAAA93B,EAAA,GAAA7M,OAAA6M,EAAA,IAAAA,EAAA,GAAA7M,OAAA6M,EAAA,IAAAA,EAAA,GAAA7M,OAAA6M,EAAA,IAAA,EAAAA,EAAA70C,SAAA60C,EAAA,GAAA7M,OAAA6M,EAAA,UAAAA,EAAAqmG,GAAA1jF,MAAA,OAAAztD,IAAAkC,IAAAqxC,EAAAzI,EAAA,GAAA,IAAAz0C,EAAAy0C,EAAA,GAAA,IAAAiI,EAAAjI,EAAA,GAAA,IAAA90C,IAAAI,EAAAyE,KAAAorB,IAAAstB,EAAAl9C,EAAA08C,KAAA66B,EAAA/yE,KAAAykC,IAAAiU,EAAAl9C,EAAA08C,KAAA,EAAA38C,IAAAw3E,EAAAztB,EAAA3B,EAAA,GAAA/tC,EAAAra,EAAAw3E,EAAApvB,EAAA,GAAAxoD,EAAAya,GAAA,EAAAra,EAAAw3E,GAAAn9D,GAAAra,EAAAw3E,GAAAztB,EAAA/pD,IAAAm9C,GAAAl9C,EAAA08C,GAAAtiC,GAAApa,EAAA08C,EAAA,EAAA,GAAA38C,IAAAC,GAAA08C,EAAAQ,GAAA9iC,EAAA,GAAA8iC,EAAAl9C,GAAAoa,EAAA,EAAA0vC,GAAA,IAAArV,EAAA,GAAAqV,EAAA,GAAA,EAAArV,EAAA,GAAA,IAAA0T,EAAA,GAAA,EAAA1T,EAAA,GAAA,IAAA90C,EAAA,GAAA,GAAA80C,GAAA4zH,GAAA,uEAAA,IAAAtoK,KAAA+6I,GAAAutB,IAAA,IAAAtoK,EAAA,MAAAsoK,GAAA,IAAAj+J,OAAAi+J,GAAA,IAAA,MAAAv+G,EAAA+/G,kBAAA,SAAAngK,GAAA,IAAA+qC,EAAA/qC,EAAA,GAAAA,EAAA,GAAA2+J,GAAAl7G,UAAA,EAAAk7G,GAAA17J,KAAA8nC,KAAA9qC,GAAA,IAAA8qC,EAAArzC,QAAA,UAAA,IAAAqzC,EAAArzC,QAAA,SAAAsI,EAAA,GAAA0+J,EAAA1+J,EAAA,GAAAC,GAAAD,EAAA,GAAA0+J,EAAA1+J,EAAA,GAAAC,KAAAA,EAAAmgK,sBAAAngK,EAAAmgK,oBAAAhgH,EAAA+/G,mBAAA,SAAAE,GAAArgK,EAAAC,EAAA8qC,EAAAyI,GAAA,GAAA,MAAAxzC,EAAA,OAAA,SAAAA,GAAA,OAAAA,GAAA,IAAA1J,EAAA08C,EAAA/yC,GAAAD,EAAAsC,MAAAq8J,KAAA,CAAA,KAAA,GAAA,GAAAv+G,EAAApgD,EAAAjC,MAAAi1C,GAAA3vC,KAAA,IAAAf,MAAA+xB,IAAA,GAAAoqB,EAAAz+C,EAAAywJ,OAAA,EAAAzwJ,EAAAtI,QAAA0oD,EAAA,KAAAnqD,EAAA,MAAA+J,EAAA6rD,OAAA7rD,EAAA9J,OAAA,GAAA,IAAA,GAAAG,GAAA,IAAA2J,EAAAtI,QAAA,KAAA,IAAA,IAAAm2E,EAAAztB,EAAAlqD,OAAAwa,EAAA,EAAAm9D,EAAAztB,EAAA,GAAAplD,QAAA8yC,EAAA,IAAA,GAAA,OAAA+/B,EAAAv3E,EAAA2J,EAAA,SAAAD,GAAA,IAAAC,EAAAkC,EAAAqN,EAAAumG,EAAA,GAAA,iBAAA/1G,EAAAA,GAAA0Q,OAAA,GAAA8iC,GAAAwrH,EAAA/7J,KAAAjD,GAAA,CAAA,IAAA+1G,EAAA/1G,EAAAhF,QAAAgkK,EAAA,KAAAjhK,MAAA,KAAAyR,EAAA,EAAAA,EAAAumG,EAAA7/G,OAAAsZ,IAAAumG,EAAAvmG,GAAAlZ,EAAAy/G,EAAAvmG,IAAA,OAAAumG,EAAA1yG,KAAA,KAAA,GAAApD,GAAAD,EAAAsC,MAAAq8J,KAAA,CAAA3rH,IAAA,GAAAxjC,GAAArN,EAAAnC,EAAAjC,MAAAkC,GAAAoD,KAAA,IAAAf,MAAA+xB,IAAA,IAAAn+B,OAAA23E,EAAAr+D,IAAA,OAAAA,EAAAq+D,GAAA1rE,EAAAqN,GAAAu7B,EAAA5oC,GAAAqN,EAAA,GAAA,EAAA,GAAA4wC,EAAA5wC,GAAA,OAAAivC,EAAAt8C,EAAAkB,KAAAhN,GAAAA,EAAA4J,EAAAhK,IAAA,IAAA+J,EAAAtI,QAAA,SAAA,SAAA,KAAA,SAAAsI,GAAA,IAAAC,EAAA+yC,EAAA7wC,EAAA,GAAA,iBAAAnC,EAAAA,GAAA0Q,OAAA,GAAA8iC,GAAAwrH,EAAA/7J,KAAAjD,GAAA,CAAA,IAAAgzC,EAAAhzC,EAAAhF,QAAAgkK,EAAA,KAAAjhK,MAAA,KAAAoE,EAAA,EAAAA,EAAA6wC,EAAA98C,OAAAiM,IAAA6wC,EAAA7wC,GAAA7L,EAAA08C,EAAA7wC,IAAA,OAAA6wC,EAAA3vC,KAAA,KAAA,GAAAlB,GAAAlC,EAAAD,EAAAsC,MAAA+xB,IAAA,IAAAn+B,OAAA23E,EAAA1rE,IAAA,OAAAA,EAAA0rE,GAAA5tE,EAAAkC,GAAA4oC,EAAA9qC,GAAAkC,EAAA,GAAA,EAAA,GAAAi+C,EAAAj+C,GAAA,OAAAs8C,EAAAx+C,EAAAoD,KAAAhN,GAAAJ,GAAA,SAAA+J,GAAA,OAAAA,GAAA,SAAAsgK,GAAAtgK,GAAA,OAAAA,EAAAA,EAAAjC,MAAA,KAAA,SAAAkC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,GAAA,IAAAxoD,EAAAI,GAAA00C,EAAA,IAAAhtC,MAAA,KAAA,IAAA0gD,EAAA,GAAAxoD,EAAA,EAAAA,EAAA,EAAAA,IAAAwoD,EAAAz+C,EAAA/J,IAAAI,EAAAJ,GAAAI,EAAAJ,IAAAI,GAAAJ,EAAA,GAAA,GAAA,GAAA,OAAAK,EAAAu6B,MAAA5wB,EAAAw+C,EAAAzL,EAAAoN,IAAA,SAAAvO,GAAA7xC,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,OAAAoN,EAAA,IAAAknG,GAAAtnJ,EAAAC,EAAA8qC,EAAAyI,EAAAzI,EAAAz0C,GAAA,EAAA08C,IAAA/yC,EAAA8qC,EAAAqV,EAAA9pD,EAAA8pD,EAAAmgH,IAAA/sH,EAAA4M,EAAA,IAAAw9G,IAAAyB,EAAA5D,gBAAA,SAAAz7J,GAAAvK,KAAA2jK,OAAAyC,SAAA77J,GAAA,IAAA,IAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3qD,KAAAugB,KAAAyoC,EAAA2B,EAAA5iD,MAAAvH,EAAAmqD,EAAA09G,SAAA7nK,GAAAgK,EAAAw+C,EAAAxoD,EAAA+hC,GAAA/hC,EAAAkpC,EAAAl/B,EAAAnF,KAAAwrC,MAAArmC,GAAAA,EAAA,OAAA,KAAAA,IAAAA,EAAA,GAAAhK,EAAAulB,EAAAvlB,EAAAozB,GAAAppB,EAAAhK,EAAAA,EAAA48J,MAAA,GAAAzyG,EAAAy5G,aAAAz5G,EAAAy5G,WAAAv7F,SAAA7f,EAAA6f,UAAA,IAAAt+D,GAAA,IAAAA,EAAA,IAAA/J,EAAAmqD,EAAA09G,SAAA9qH,EAAA,IAAAhzC,EAAA,IAAA,IAAA/J,GAAA,CAAA,IAAA80C,EAAA90C,EAAAulB,GAAA7lB,MAAA,GAAA,IAAAo1C,EAAAp1C,KAAA,CAAA,IAAAW,EAAAy0C,EAAAw1H,IAAAx1H,EAAA1W,EAAA0W,EAAAy1H,IAAAhtH,EAAA,EAAAA,EAAAzI,EAAAr6B,EAAA8iC,IAAAl9C,GAAAy0C,EAAA,KAAAyI,GAAAzI,EAAA,MAAAyI,EAAA,IAAAzI,EAAAiI,GAAA18C,QAAAy0C,EAAAiI,GAAAjI,EAAA1W,EAAA0W,EAAAw1H,IAAAtqK,EAAAA,EAAA48J,QAAA,SAAA7yJ,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAAb,KAAA+lB,EAAAxb,EAAAvK,KAAA4zB,EAAAppB,EAAAxK,KAAAuiC,EAAA+S,EAAAt1C,KAAA0pC,EAAA7oC,EAAAk9C,KAAAA,EAAAqkH,MAAApiK,MAAAo9J,MAAAr/G,KAAA8zG,IAAA+X,EAAA7D,cAAA,SAAAx7J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,IAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAqa,EAAA8iC,EAAArxC,EAAA,GAAAqN,EAAA,GAAAumG,EAAAhrE,EAAA+wH,WAAAzyI,EAAA61I,EAAA,IAAAn0H,EAAA+wH,WAAA,KAAAoD,EAAAj/J,EAAAuzC,EAAAq6B,EAAA9iC,EAAAla,MAAA7wB,EAAAC,EAAAuzC,EAAAl9C,GAAA4oK,EAAA71I,EAAA2pB,IAAAjI,EAAA+wH,WAAA/lD,EAAArlG,IAAAA,EAAAmnJ,MAAA,KAAAnnJ,EAAAmnJ,QAAAnnJ,EAAAmnJ,MAAAhF,MAAA,QAAAr/G,GAAAA,IAAA9iC,GAAA,CAAA,GAAA8iC,EAAA79C,MAAA,IAAA6Z,EAAAivC,EAAAjL,EAAAnqB,GAAAmqB,EAAAnf,EAAAmf,EAAAzI,EAAA5oC,EAAAs8C,GAAAjL,EAAAnf,EAAA2e,IAAA38C,EAAA,IAAAunK,GAAApqH,EAAA,IAAAiL,EAAApoD,EAAAm9C,EAAArU,GAAAqU,EAAAzI,EAAA,GAAA,IAAAyI,EAAA79C,MAAA,IAAAyqD,EAAA5M,EAAA9iC,EAAA,IAAA0vC,GAAAnqD,EAAA,KAAAmqD,EAAA5wC,EAAAivC,EAAAjL,EAAAnqB,EAAA,IAAApzB,GAAAu9C,EAAAx9B,KAAA/f,GAAAkM,EAAAs8C,GAAAjL,EAAAv9C,GAAA+8C,IAAA38C,EAAA,IAAAunK,GAAApqH,EAAAv9C,EAAAwoD,EAAApoD,EAAAm9C,EAAAitH,IAAAxqK,KAAAu9C,EAAAA,EAAAq/G,MAAA,MAAA,CAAAr1J,MAAA2E,EAAApI,IAAAyV,EAAAsuJ,SAAAznK,EAAAkyH,GAAA16C,IAAAwxF,EAAA3D,aAAA,SAAA17J,EAAAC,EAAAuzC,EAAAl9C,EAAA8pD,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,GAAA1M,KAAA+lB,EAAAxb,EAAAvK,KAAA4zB,EAAAppB,EAAAxK,KAAA4+B,EAAAmf,EAAA/9C,KAAAs1C,EAAAz0C,EAAAb,KAAA+Z,EAAAvZ,GAAAgK,EAAAD,aAAAsnJ,IAAAt0G,EAAAl9C,KAAAL,KAAA+Z,GAAA/Z,KAAA0pC,EAAA9oC,EAAAZ,KAAAE,KAAA8oD,GAAA,EAAAovB,IAAAp4E,KAAAirK,GAAA7yF,EAAA9iC,GAAA,GAAAt1C,KAAAwK,OAAA,IAAAyQ,EAAA8iC,EAAA9iC,EAAAjb,KAAAa,OAAA,IAAA6L,EAAAqxC,EAAAl9C,EAAA6L,EAAAi+C,KAAA3qD,KAAAo9J,MAAAzyG,GAAAy3G,MAAApiK,QAAAkrK,GAAAvgH,EAAAwgH,aAAA,SAAA5gK,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAI,GAAA+pD,EAAA,IAAAknG,GAAAtnJ,EAAAC,EAAA,EAAA,EAAAmgD,EAAA/pD,EAAA,EAAA,EAAA,MAAA,EAAAooD,EAAA1T,EAAAA,GAAAiI,GAAA,GAAAQ,GAAAA,GAAA,GAAA,IAAA9iC,EAAAvO,EAAAqN,EAAAumG,EAAA1sF,EAAAgL,EAAA7Y,EAAAwc,EAAAhhC,EAAAsnC,EAAA8G,EAAA8G,EAAA0sH,EAAA7tH,EAAAhtC,MAAA,MAAAsF,KAAA,KAAAtF,MAAA,KAAAi7G,EAAAxlE,EAAAz1C,MAAA,MAAAsF,KAAA,KAAAtF,MAAA,KAAA86J,EAAAD,EAAA1iK,OAAA2oK,GAAA,IAAAhxF,EAAA,KAAA,IAAAr6B,EAAA97C,QAAA,OAAA,IAAAqzC,EAAArzC,QAAA,OAAAkhK,EAAAA,EAAAv1J,KAAA,KAAArI,QAAAgkK,EAAA,MAAAjhK,MAAA,KAAAi7G,EAAAA,EAAA31G,KAAA,KAAArI,QAAAgkK,EAAA,MAAAjhK,MAAA,KAAA86J,EAAAD,EAAA1iK,QAAA2iK,IAAA7/C,EAAA9iH,SAAA2iK,GAAAD,GAAA5lH,GAAA,IAAAj1C,MAAA,MAAA7H,QAAAkqD,EAAAg5G,OAAAnjK,EAAAmqD,EAAAy7G,SAAAxlK,EAAAqa,EAAAiuJ,GAAAl7G,UAAA,EAAA/yC,EAAAmoJ,EAAAnoJ,IAAA,GAAAqlG,EAAA6iD,EAAAloJ,GAAA2Y,EAAA2vF,EAAAtoG,IAAAmyC,EAAArnD,WAAAu6G,KAAA,IAAAlzD,EAAAzC,EAAAygH,WAAA,GAAAh+G,EAAAw7G,EAAAh1I,EAAAw5B,GAAAx5B,EAAAruB,QAAAmkC,EAAA,IAAA0/H,IAAA,IAAAx1I,EAAA3xB,QAAA,OAAA,QAAA,GAAApB,GAAAqoK,GAAA17J,KAAA8yG,GAAA3wE,EAAA,MAAA/b,EAAAwiC,OAAAxiC,EAAAnzB,OAAA,GAAA,KAAA,IAAAg2C,GAAA,IAAA7iB,EAAA3xB,QAAA,QAAA2lK,EAAAtnD,EAAA6oD,GAAA7oD,EAAA7pE,GAAA7iB,EAAAu1I,GAAAv1I,EAAA6iB,IAAAlU,EAAA,EAAA+9E,EAAA7/G,OAAAmzB,EAAAnzB,UAAAmnK,GAAA,IAAAh0I,EAAA,IAAA+2B,EAAA,KAAAA,EAAA1vC,IAAA0vC,EAAA1vC,EAAA,eAAA,cAAA0vC,EAAA9pD,EAAA8pD,EAAA9pD,EAAAyH,MAAAi7G,EAAAtoG,IAAArN,KAAA,iBAAAg6J,IAAArlI,GAAA,GAAAkU,EAAAkU,EAAAygH,WAAA7oI,EAAA,QAAA,OAAA+9E,EAAA,GAAAsoD,EAAAh1I,EAAA,GAAA0sF,EAAA,IAAA,KAAA,GAAA,GAAA8qD,WAAA,GAAA9qD,EAAA,GAAAsoD,EAAAh1I,EAAA,GAAA0sF,EAAA,IAAA,MAAA,GAAA8qD,WAAA,GAAA9qD,EAAA,GAAAsoD,EAAAh1I,EAAA,GAAA0sF,EAAA,IAAA/9E,EAAA,KAAA,IAAAoN,GAAA,GAAAgb,EAAAygH,WAAA7oI,EAAA,QAAA,OAAA+9E,EAAA,GAAA1sF,EAAA,GAAA0sF,EAAA,GAAA,KAAA,GAAA,GAAA8qD,WAAA,GAAA9qD,EAAA,GAAA1sF,EAAA,GAAA0sF,EAAA,GAAA,KAAA,GAAA8qD,WAAA,GAAA9qD,EAAA,GAAA1sF,EAAA,GAAA0sF,EAAA,GAAA/9E,EAAA,IAAAoN,GAAA,GAAApN,IAAA+9E,EAAAA,EAAA7/G,OAAA,EAAA,EAAA6/G,EAAA,GAAA31D,EAAAygH,WAAA,GAAA9qD,GAAA1sF,EAAAnzB,OAAA,EAAA,EAAAmzB,EAAA,IAAA0sF,EAAA3wE,GAAA,KAAAu5H,GAAAl7G,UAAA,OAAA,GAAApvB,EAAA0hF,EAAAzzG,MAAAwrC,GAAA,CAAA,KAAAtyB,EAAA6N,EAAA/mB,MAAA68B,KAAA3jB,EAAAtlB,SAAAm+B,EAAAn+B,OAAA,OAAAkqD,EAAA,IAAAj+C,EAAAqN,EAAA,EAAArN,EAAAkyB,EAAAn+B,OAAAiM,IAAAm8B,EAAAjK,EAAAlyB,GAAAnL,EAAA++G,EAAAr+G,QAAA4mC,EAAA9uB,GAAA4wC,EAAAygH,WAAA9qD,EAAA06C,OAAAjhJ,EAAAxY,EAAAwY,GAAA0uB,OAAAI,GAAA+/H,EAAA7iJ,EAAArZ,GAAAm8B,GAAA,GAAAugI,GAAA,OAAA9oD,EAAA06C,OAAAz5J,EAAAsnC,EAAApoC,OAAA,GAAA,IAAAiM,GAAAqN,EAAAxY,EAAAsnC,EAAApoC,OAAAkqD,EAAA,KAAAA,EAAA1vC,IAAAqlG,EAAA06C,OAAAjhJ,QAAA4wC,EAAA,KAAAA,EAAA1vC,IAAA0vC,EAAA1vC,EAAA,IAAA2Y,EAAAA,EAAA,IAAA,IAAAmqB,EAAA97C,QAAA,MAAA0oD,EAAApqC,KAAA,CAAA,IAAAovB,EAAAgb,EAAAmgH,IAAAngH,EAAApqC,KAAAqe,EAAA3jB,EAAA,EAAAA,EAAA0vC,EAAA1vC,EAAAA,IAAA00B,GAAAgb,EAAA,KAAA1vC,GAAA0vC,EAAApqC,KAAA,KAAAtF,GAAA0vC,EAAA9pD,EAAA8uC,EAAAgb,EAAA,KAAA1vC,GAAA,OAAA0vC,EAAA1vC,IAAA0vC,EAAAzqD,MAAA,EAAAyqD,EAAAmgH,IAAAngH,EAAA9pD,GAAA8pD,EAAA0gH,QAAA1gH,GAAA2gH,GAAA,EAAA,KAAA1qK,EAAAixJ,GAAA1uJ,WAAA8X,EAAAra,EAAAqqK,GAAA,EAAA,IAAAK,IAAA1qK,EAAA,KAAA0qK,IAAA,EAAA1qK,EAAA,KAAA0qK,IAAA,GAAA1qK,EAAAkqK,IAAA,GAAAlqK,EAAAw8J,MAAAx8J,EAAAwhK,MAAAxhK,EAAAyqK,OAAAzqK,EAAA2f,KAAA3f,EAAA+iK,OAAA/iK,EAAAwlK,SAAAxlK,EAAAoqK,IAAA,KAAApqK,EAAAwqK,WAAA,SAAA7gK,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,IAAAoN,EAAA3qD,KAAAgpD,EAAA2B,EAAA1vC,EAAA,OAAA0vC,EAAA,KAAA3B,IAAAzL,GAAAyL,EAAA,IAAAz+C,EAAAA,GAAA,GAAA+qC,GAAA,IAAA0T,GAAA2B,EAAAg5G,QAAAh5G,EAAA1vC,IAAA0vC,EAAAzqD,KAAAyqD,EAAAy7G,SAAA,EAAA,EAAAz7G,EAAA,KAAAA,EAAA1vC,GAAA8iC,GAAA,GAAA,EAAAiL,GAAA2B,EAAApqC,KAAA,KAAAyoC,GAAAx+C,EAAA8qC,EAAAqV,EAAAqgH,IAAA,KAAAhiH,GAAAnoD,EAAA8pD,EAAA,KAAA3B,GAAAx+C,EAAAmgD,EAAAg5G,SAAAh5G,EAAA0gH,OAAA,IAAAxZ,GAAAlnG,EAAA,KAAA3B,EAAAx+C,EAAA8qC,EAAAqV,EAAA0gH,QAAA1gH,EAAA,EAAAA,EAAA5wC,EAAAlZ,EAAA8pD,EAAAsgH,IAAAtgH,EAAA0gH,OAAAP,IAAA,KAAAngH,EAAApqC,KAAA,CAAAqe,EAAAp0B,EAAA8qC,GAAAqV,EAAAqgH,IAAA,GAAArgH,EAAA/rB,EAAAp0B,EAAAmgD,EAAArV,EAAAA,EAAAqV,EAAAjhB,EAAA7oC,IAAA8pD,EAAA,KAAA3B,IAAAx+C,GAAAuzC,GAAA,IAAA4M,GAAA,SAAA4gH,GAAAhhK,EAAAC,GAAAA,EAAAA,GAAA,GAAAxK,KAAA4zB,EAAAppB,EAAAqoB,QAAAy0I,EAAA/8J,IAAAA,GAAA/J,EAAA+J,GAAA/J,EAAAR,KAAA4zB,GAAA5zB,MAAAwxC,OAAAhnC,EAAAghK,WAAAZ,GAAApgK,EAAAgP,aAAAhP,EAAA49B,MAAA59B,EAAAihK,YAAAjhK,EAAAkhK,OAAAlhK,EAAA27J,SAAAnmK,KAAAo7B,MAAA5wB,EAAA27J,QAAAnmK,KAAA2rK,KAAAnhK,EAAA49B,MAAApoC,KAAA0rK,MAAAlhK,EAAAkhK,MAAA1rK,KAAA4rK,QAAAphK,EAAAohK,QAAA5rK,KAAA6rK,KAAArhK,EAAAgP,aAAAxZ,KAAAirK,GAAAzgK,EAAAo5J,UAAA,EAAA,IAAAkI,GAAAlC,EAAA1D,4BAAA,SAAA37J,EAAAC,EAAA8qC,GAAA,iBAAA9qC,IAAAA,EAAA,CAAA27J,OAAA7wH,IAAA,IAAAyI,EAAAR,EAAAhzC,EAAAjC,MAAA,KAAAqiD,EAAAngD,EAAAgP,aAAA,IAAA87B,EAAAA,GAAA,CAAAqV,GAAA5M,EAAA,EAAAA,EAAAR,EAAA98C,OAAAs9C,IAAAvzC,EAAAqoB,OAAA,IAAAkrB,GAAAvzC,EAAAqoB,OAAAroB,EAAAgP,aAAA87B,EAAAyI,IAAA4M,EAAA,IAAA4gH,GAAAhuH,EAAAQ,GAAAvzC,KAAA5J,EAAA2qK,GAAApoK,WAAAgoK,aAAA,SAAA5gK,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,IAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAA1M,KAAA4rK,QAAA,GAAA5rK,KAAA0rK,QAAAnC,EAAA/7J,KAAA8nC,IAAAi0H,EAAA/7J,KAAAhD,IAAAw+C,EAAAx+C,EAAAjF,QAAAgkK,EAAA,KAAAjhK,MAAA,KAAA9H,EAAA80C,EAAA/vC,QAAAgkK,EAAA,KAAAjhK,MAAA,MAAAoE,IAAAs8C,EAAA,CAAAx+C,GAAAhK,EAAA,CAAA80C,KAAA90C,EAAA,CAAA,IAAAI,GAAAJ,EAAAC,OAAAuoD,EAAAvoD,OAAAD,EAAAwoD,GAAAvoD,OAAAkqD,EAAA,EAAAA,EAAA/pD,EAAA+pD,IAAAngD,EAAAw+C,EAAA2B,GAAA3B,EAAA2B,IAAA3qD,KAAA6rK,KAAAv2H,EAAA90C,EAAAmqD,GAAAnqD,EAAAmqD,IAAA3qD,KAAA6rK,KAAAn/J,KAAA0rE,EAAA5tE,EAAAvI,QAAAyK,OAAAuO,EAAAq6B,EAAArzC,QAAAyK,OAAA,IAAAuO,EAAA+tC,EAAA2B,GAAA3B,EAAA2B,GAAAriD,MAAAoE,GAAAkB,KAAA,KAAA,IAAAwqE,IAAApvB,EAAA2B,IAAA,IAAAj+C,KAAAlC,EAAAw+C,EAAAp7C,KAAA,MAAA0nC,EAAA90C,EAAAoN,KAAA,MAAA,OAAAs9J,GAAA3gK,EAAAvK,KAAA4zB,EAAAppB,EAAA8qC,EAAAt1C,KAAA2rK,KAAA3rK,KAAA6rK,KAAA9tH,EAAA/9C,KAAAirK,GAAApqK,EAAA08C,IAAA38C,EAAAw6B,MAAA,SAAA7wB,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAoN,EAAA3B,GAAA,OAAAhpD,KAAAmrK,aAAA5gK,EAAAyY,MAAAhjB,KAAAwxC,OAAAw4H,GAAAz/J,EAAAvK,KAAA4zB,EAAA/yB,GAAA,EAAAb,KAAA6rK,OAAA7rK,KAAAwxC,OAAAhnC,GAAA+yC,EAAAoN,IAAAA,EAAAohH,oBAAA,SAAAxhK,EAAAC,EAAA8qC,GAAAw2H,GAAAvhK,EAAA,CAAA47J,OAAA,SAAA57J,EAAAwzC,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,GAAAI,EAAA,IAAAixJ,GAAAtnJ,EAAA1J,EAAA,EAAA,EAAA8pD,EAAA,EAAA9pD,GAAA,EAAAy0C,GAAA,OAAA10C,EAAA+iK,OAAA36G,EAAApoD,EAAAwlK,SAAA57J,EAAAD,EAAAwzC,EAAAR,EAAAkpH,OAAA5lK,GAAAD,GAAAgjK,SAAAtuH,KAAAqV,EAAAqhH,oBAAAt/J,GAAAqN,EAAA,SAAAkyJ,GAAA1hK,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA08C,EAAA38C,EAAAw3E,EAAAn9D,EAAAvO,EAAA4zG,EAAA52E,EAAA9K,EAAA7Y,EAAAqnC,EAAA7iD,EAAAg8J,aAAAhkI,EAAA2pI,GAAA3hK,GAAA,GAAA6iD,IAAAxuB,EAAAwuB,EAAA++G,QAAApmJ,EAAAqnC,EAAAg/G,WAAAruH,IAAAR,EAAAQ,EAAAz1C,MAAA,MAAA7H,OAAA,KAAAiM,EAAAnC,EAAA8hK,UAAA9uH,EAAA,GAAA,KAAA/yC,EAAAqwJ,EAAArwJ,GAAAlC,MAAA,MAAA,GAAArG,QAAA,KAAA8D,WAAAyE,EAAA,IAAA,IAAAkC,EAAAgiB,MAAA3oB,WAAAyE,EAAA,KAAAkC,EAAAm8B,IAAA,IAAAr+B,EAAA,GAAAvI,QAAA,KAAA8D,WAAAyE,EAAA,IAAA,IAAAkC,EAAA6nB,OAAAxuB,WAAAyE,EAAA,KAAAkC,EAAAijC,IAAA2F,EAAA62H,QAAAvrK,EAAAmF,WAAAw3C,EAAA,IAAAjI,EAAA82H,QAAAh0F,EAAAryE,WAAAw3C,EAAA,IAAAQ,GAAAxb,IAAA+pI,KAAArxJ,EAAAsnB,EAAA,GAAA71B,EAAA61B,EAAA,GAAAxoB,EAAAwoB,EAAA,GAAA+9E,EAAA/9E,EAAA,GAAA3O,EAAA2O,EAAA,GAAAymB,EAAApoD,GAAA0/G,GAAA52E,EAAAzuB,EAAAqlG,EAAA5zG,EAAAqN,IAAAq+D,IAAAr+D,EAAA2vB,IAAA3vB,GAAAs+B,EAAA9V,EAAA,IAAA+9E,EAAA1sF,GAAA8V,EAAAlpC,EAAAI,IAAA8L,EAAAg9B,GAAA0uC,GAAAn9D,EAAAyuB,IAAAzuB,EAAAo9B,EAAA3rC,EAAAknB,GAAA8V,EAAA9oC,EAAA00C,EAAA62H,QAAA5uH,EAAA,GAAAyL,EAAAovB,EAAA9iC,EAAA82H,QAAA7uH,EAAA,GAAA/8C,GAAA4sD,IAAAvsD,IAAA,IAAAA,IAAA,IAAA8pD,EAAAo8G,qBAAA/9G,EAAApoD,EAAAg+B,EAAAp+B,EAAA43E,EAAAryD,EAAAqnC,EAAAm/G,SAAAvjH,EAAAzmB,EAAA,GAAA/hC,EAAA+hC,EAAA,GAAAymB,EAAAoE,EAAAo/G,SAAAxjH,EAAAzmB,EAAA,GAAA/hC,EAAA+hC,EAAA,GAAA/hC,GAAA4sD,EAAAm/G,QAAAn/G,EAAAo/G,QAAA,GAAAjiK,EAAAmD,aAAA,kBAAA6vC,EAAA3vC,KAAA,MAAA,SAAA6+J,GAAAliK,GAAA,SAAAmiK,IAAA,mBAAAniK,EAAA8hK,SAAA9hK,EAAAoiK,UAAApiK,EAAA1D,YAAA0D,EAAA1D,WAAAwlK,SAAA9hK,EAAA1D,WAAA8lK,SAAA,SAAAC,GAAAriK,GAAA,IAAAC,EAAA8qC,EAAAyI,EAAA/9C,KAAAugB,KAAAg9B,GAAA18C,GAAAk9C,EAAA8qB,SAAA2gG,GAAAzrH,EAAA+pH,MAAA0B,EAAAxgH,GAAA3jD,KAAAyuB,IAAAjzB,GAAAk9C,EAAAoE,OAAA,IAAA,GAAA,IAAA3hD,GAAA6E,KAAAkwC,IAAA10C,GAAAk9C,EAAAoE,OAAA,IAAA,GAAA,IAAAvhD,GAAAyE,KAAAkwC,IAAAgI,IAAAQ,EAAAqE,OAAA,IAAA,GAAA,IAAAg2B,GAAA/yE,KAAAyuB,IAAAypB,GAAAQ,EAAAqE,OAAA,IAAA,GAAA,IAAAnnC,EAAAjb,KAAA+lB,EAAA/C,MAAAtW,EAAA1M,KAAA+lB,EAAAohJ,aAAA,GAAAz6J,EAAA,CAAA4oC,EAAA90C,EAAAA,GAAAI,EAAAA,GAAA00C,EAAA9qC,EAAAkC,EAAAuD,OAAAgL,EAAAhL,OAAA,GAAA,IAAAooC,EAAAr4C,KAAA+lB,EAAAiL,YAAA0Y,EAAA1pC,KAAA+lB,EAAAkL,aAAA2N,EAAA,aAAAlyB,EAAAojB,SAAA/J,EAAA,gDAAAijC,EAAA,SAAAxoD,EAAA,SAAAI,EAAA,SAAAw3E,EAAA72E,EAAAw8C,EAAAlV,EAAAwP,EAAA0F,EAAA8uH,SAAA,IAAAhkI,EAAAkV,EAAApO,EAAAjG,EAAAqU,EAAA+uH,SAAA,IAAA,GAAA,MAAA/uH,EAAA2qH,KAAAnnK,IAAAwY,GAAAgkC,EAAAuqH,IAAAjwH,EAAA0F,EAAA2qH,GAAA,IAAA3qH,EAAA2qH,IAAArwH,EAAA,IAAAt+B,EAAAivC,GAAAs3D,GAAAviE,EAAAwqH,IAAA7+H,EAAAqU,EAAA4qH,GAAA,IAAA5qH,EAAA4qH,IAAAj/H,EAAA,GAAAlpC,GAAAqoC,GAAAy3E,GAAAvmG,EAAAnZ,EAAA0/G,EAAAloC,IAAAx5C,EAAA7Y,GAAA,UAAAhM,EAAAs+B,EAAA,IAAAt+B,EAAAivC,GAAAs3D,EAAA52E,EAAA,GAAAlpC,GAAAe,GAAA,SAAA++G,GAAAvmG,EAAAnZ,EAAA0/G,EAAAloC,GAAAvvC,GAAA,IAAA9iB,GAAA,iCAAA,IAAAvb,EAAAvI,QAAA,sCAAAgZ,EAAAhL,OAAAzF,EAAAjF,QAAA+jK,EAAAvjJ,GAAA9K,EAAAhL,OAAA8V,EAAA,IAAAvb,EAAA,IAAAD,GAAA,IAAAA,GAAA,GAAAy+C,GAAA,GAAAxoD,GAAA,GAAAI,GAAA,GAAAw3E,IAAAx5C,IAAA,IAAA7Y,EAAA9jB,QAAA,eAAAsgC,EAAA/0B,KAAAhD,IAAA,MAAAzE,WAAAkF,OAAAm8J,MAAA,IAAA58J,EAAAvI,QAAAuI,EAAAvI,QAAA,WAAAgZ,EAAAjN,gBAAA,YAAA4wB,EAAA,CAAA,IAAA6X,EAAA0sH,EAAA5/C,EAAA3vF,EAAA,EAAA,GAAA,EAAA7Z,EAAAgkC,EAAAgvH,WAAA,EAAAzsD,EAAAviE,EAAAivH,WAAA,EAAA,IAAAjvH,EAAAgvH,UAAA1nK,KAAAwrC,OAAAwH,IAAA2Q,EAAA,GAAAA,EAAAA,GAAA3Q,GAAA73C,EAAA,GAAAA,EAAAA,GAAAkpC,IAAA,EAAAnoC,GAAAw8C,EAAAivH,UAAA3nK,KAAAwrC,OAAAnH,IAAA0uC,EAAA,GAAAA,EAAAA,GAAA1uC,GAAA9oC,EAAA,GAAAA,EAAAA,GAAAy3C,IAAA,EAAAxP,GAAAyiI,GAAA,EAAAA,GAAA,EAAAA,KAAAnI,GAAA7tH,GAAA,KAAA3F,EAAAjjC,EAAA+pC,EAAAskH,GAAAuQ,MAAArpK,QAAA,MAAA8D,WAAA4pC,GAAAs6H,GAAAjqK,KAAA+lB,EAAA0wB,EAAA1wC,WAAA4pC,GAAAA,EAAApqC,QAAA6nD,EAAA,MAAA,KAAArP,EAAAtH,GAAA60H,GAAA,GAAAvtH,EAAAgvH,WAAAhvH,EAAAivH,UAAA1B,GAAA,EAAAvxJ,EAAAgkC,EAAAgvH,UAAAzsD,EAAAviE,EAAAivH,UAAA/xJ,EAAAw7B,IAAAsH,EAAAtH,GAAApxC,KAAAwrC,MAAAyE,EAAA6tH,GAAA,IAAAmI,IAAA,IAAAA,GAAA,EAAA/nD,KAAA,OAAA,IAAA0pD,GAAA1iK,GAAAwzC,GAAAmvH,GAAA,oGAAA5kK,MAAA,KAAAq/J,GAAAL,EAAA,aAAAI,GAAAxjD,GAAA,YAAAipD,GAAA7F,EAAA,mBAAAS,GAAA,OAAAT,EAAA,eAAA8F,GAAAxD,EAAAyD,UAAA,WAAArtK,KAAAinK,YAAAlhK,WAAA4kD,EAAAk8G,8BAAA,EAAA7mK,KAAAstK,WAAA,IAAA3iH,EAAA4iH,iBAAAxF,MAAAp9G,EAAA4iH,gBAAA,SAAAb,GAAAjrK,OAAA+rK,WAAAC,GAAA,SAAAljK,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA6oK,EAAAzzH,gBAAA,6BAAA1rC,GAAAgzC,EAAA,kBAAA,IAAAQ,KAAAzI,EAAAz0C,EAAA6sK,eAAA,KAAA3vH,EAAAx4C,QAAAg4C,EAAA,SAAAr2C,cAAAouC,EAAAyI,IAAA,OAAAvzC,EAAA5D,YAAA/F,GAAAA,GAAA8sK,EAAAjE,EAAAt6J,gBAAAw+J,IAAA7vH,GAAAnqB,GAAA,WAAApmB,KAAA41G,KAAA3hH,OAAAosK,OAAAnE,EAAAzzH,kBAAA8H,KAAAxzC,GAAAkjK,GAAA,MAAAE,GAAAr4H,IAAA9qC,EAAAijK,GAAA,OAAAljK,GAAA,CAAAmkB,MAAA,IAAA6F,OAAA,GAAAsU,EAAA,OAAArW,wBAAA9D,MAAAlkB,EAAAwY,MAAAmqJ,IAAA,UAAA3iK,EAAAwY,MAAA2kJ,IAAA,cAAA5pH,GAAAzI,KAAA9qC,EAAAgoB,wBAAA9D,SAAA3U,GAAAguJ,IAAA4F,EAAA7mK,YAAAyD,KAAAwzC,IAAAuuH,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAAJ,GAAA,SAAA3hK,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAz+C,EAAAg8J,cAAA,IAAA6G,GAAA,GAAAzF,GAAA5pH,EAAAisH,GAAAz/J,EAAAm9J,GAAA,MAAA,GAAAn9J,EAAA48J,eAAAppH,GAAAA,EAAAxzC,EAAA48J,aAAAl3J,OAAApD,MAAAw8J,KAAA,IAAAtrH,EAAAt9C,OAAA,CAAAs9C,EAAA,GAAAi9G,OAAA,GAAAvyH,OAAAsV,EAAA,GAAAi9G,OAAA,IAAAvyH,OAAAsV,EAAA,GAAAi9G,OAAA,IAAAj9G,EAAA,GAAAi9G,OAAA,GAAAhyG,EAAAngB,GAAA,EAAAmgB,EAAArZ,GAAA,GAAA/hC,KAAA,KAAA,IAAA0nC,GAAAyI,GAAA,SAAAA,GAAA,6BAAAA,GAAAiL,EAAA8kH,KAAAvjK,EAAA8hK,SAAAI,GAAAliK,MAAA+qC,IAAA,KAAA/qC,EAAAyY,MAAA2kJ,IAAA,IAAA1lK,QAAA,YAAA87C,EAAAxzC,EAAAyY,MAAA2kJ,IAAAryH,EAAA,GAAAz0C,EAAA0J,EAAAkD,aAAA,aAAA6nC,GAAAz0C,KAAA,IAAAA,EAAAoB,QAAA,WAAA87C,EAAAl9C,EAAAy0C,EAAA,IAAA,IAAAz0C,EAAAoB,QAAA,eAAA87C,EAAA,kBAAAl9C,EAAAgM,MAAA,2BAAAe,KAAA,KAAA,IAAA0nC,EAAA,KAAAA,EAAA,OAAAg3H,GAAA,IAAAzrK,GAAAk9C,GAAA,IAAAlxC,MAAA,4BAAA,GAAAy+J,GAAAzqK,EAAAJ,QAAA,IAAA6qK,IAAA/tH,EAAA9U,OAAA5nC,EAAAyqK,KAAAzqK,EAAAyqK,KAAA3gH,EAAApN,GAAAA,GAAA,KAAA,IAAAoN,GAAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAApN,EAAAA,EAAA,OAAA/yC,GAAA,EAAA3J,EAAAJ,OAAA,CAAAI,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAAAA,GAAAgnK,GAAA+B,EAAAmE,aAAA,SAAAxjK,EAAA+qC,EAAAyI,EAAAR,GAAA,GAAAhzC,EAAAg8J,cAAAxoH,IAAAR,EAAA,OAAAhzC,EAAAg8J,aAAA,IAAA/lK,EAAAkM,EAAAqZ,EAAAqnC,EAAA7qB,EAAAhhC,EAAAsnC,EAAAs6H,EAAA5/C,EAAA8lD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArmD,EAAAsmD,EAAAxmD,EAAAwkD,EAAAV,EAAAG,EAAAnjD,EAAAnqG,EAAAgkC,GAAAxzC,EAAAg8J,cAAA,IAAA6G,GAAA9sD,EAAAvmG,EAAAooC,OAAA,EAAAzY,EAAAq+H,KAAAhiK,WAAAikK,GAAAz/J,EAAA4iK,GAAA73H,GAAA,EAAA,SAAAhtC,MAAA,KAAA,KAAAyR,EAAAi0J,UAAA,EAAApvI,EAAA74B,WAAA4kD,EAAAk8G,8BAAA,EAAA,GAAA9sJ,EAAA+zJ,OAAAvjK,EAAA8hK,UAAAI,GAAAliK,IAAAwP,EAAA+zJ,MAAA7B,GAAA1hK,EAAAy/J,GAAAz/J,EAAA4iK,GAAAtsK,GAAA,EAAA,WAAA,GAAAkZ,EAAAxP,EAAAkD,aAAA,oBAAAw/J,GAAAtiH,EAAAqhH,qBAAA4B,IAAA5kH,EAAAkjH,GAAA3hK,GAAAy+C,IAAAsjH,GAAA,IAAA9rK,KAAA,KAAAwoD,EAAAvoD,QAAAkvC,EAAAqZ,EAAA,GAAAvS,EAAAuS,EAAA,GAAAm6G,EAAAn6G,EAAA,GAAAu6D,EAAAv6D,EAAA,GAAAo6G,EAAAp6G,EAAA,GAAAogH,EAAApgH,EAAA,GAAAqgH,EAAArgH,EAAA,GAAAsgH,EAAAtgH,EAAA,GAAAugH,EAAAvgH,EAAA,GAAAwgH,EAAAxgH,EAAA,GAAAygH,EAAAzgH,EAAA,IAAA0gH,EAAA1gH,EAAA,IAAA2gH,EAAA3gH,EAAA,IAAAu+G,EAAAv+G,EAAA,IAAAs6D,EAAAt6D,EAAA,IAAA4gH,EAAAvkK,KAAA+uC,MAAAi1H,EAAAI,GAAA1vJ,EAAAi0J,UAAAtE,EAAAH,GAAAhC,GAAAxtJ,EAAAi0J,SAAAhlH,EAAA,IAAA2gH,EAAAH,EAAAjC,EAAAv+G,EAAA,IAAAu+G,EAAAkC,EAAAlC,EAAAxtJ,EAAAi0J,QAAAhlH,EAAA,KAAAjvC,EAAAiuJ,UAAA4B,EAAAb,EAAAa,IAAA7jJ,EAAAq9I,GAAA7hK,EAAA8D,KAAAyuB,KAAA81I,IAAAL,GAAA1gI,EAAAxjC,KAAAkwC,KAAAq0H,IAAAx8G,EAAAg8G,EAAA7nK,EAAAioK,EAAA3gI,EAAAtG,EAAA8mI,EAAA9nK,EAAAkoK,EAAA5gI,EAAA0gI,EAAAnG,GAAAv6H,EAAA0gI,EAAAhoK,EAAAioK,EAAAJ,GAAAvgI,EAAA2gI,EAAAjoK,EAAAkoK,EAAAJ,GAAAxgI,EAAA4gI,EAAAloK,EAAA+hH,EAAAgmD,GAAAzgI,EAAAy6E,EAAA/hH,EAAA6hK,EAAAr9I,EAAAqjJ,EAAAh8G,EAAAi8G,EAAA9mI,GAAAqnI,EAAAvkK,KAAA+uC,OAAA+uH,EAAAsG,GAAA1vJ,EAAAkuJ,UAAA2B,EAAAb,EAAAa,IAAAx8G,EAAA3W,GAAAl1C,EAAA8D,KAAAyuB,KAAA81I,IAAAJ,GAAA3gI,EAAAxjC,KAAAkwC,KAAAq0H,IAAArnI,EAAA4gI,EAAA5hK,EAAAkoK,EAAA5gI,EAAA2gI,EAAA/yH,EAAA5N,EAAA2gI,EAAAjoK,EAAAkoK,EAAAtG,EAAAt6H,EAAA4gI,EAAAloK,EAAA+hH,EAAAC,EAAA16E,EAAAy6E,EAAA/hH,EAAAouC,EAAA5pB,EAAA4pB,EAAApuC,EAAAgoK,EAAA1gI,EAAA4N,EAAA2W,EAAA+1G,EAAA5gI,GAAAqnI,EAAAvkK,KAAA+uC,MAAAqC,EAAA9G,GAAA51B,EAAA8uD,SAAA+gG,EAAAb,EAAAa,IAAAj6H,EAAAA,GAAApuC,EAAA8D,KAAAyuB,KAAA81I,IAAAxG,GAAAv6H,EAAAxjC,KAAAkwC,KAAAq0H,IAAAx8G,EAAA3W,EAAAl1C,EAAA6nK,EAAAvgI,EAAAugI,EAAA3yH,GAAA5N,EAAAugI,EAAA7nK,EAAA8nK,EAAAlG,GAAAt6H,EAAAwgI,EAAA9nK,EAAAk1C,EAAA2W,GAAArzC,EAAAiuJ,WAAA,MAAA3iK,KAAA4uC,IAAAl6B,EAAAiuJ,WAAA3iK,KAAA4uC,IAAAl6B,EAAA8uD,YAAA9uD,EAAAiuJ,UAAAjuJ,EAAA8uD,SAAA,EAAA9uD,EAAAkuJ,UAAA,IAAAluJ,EAAAkuJ,WAAAluJ,EAAAooC,QAAA,IAAA98C,KAAA0uC,KAAApE,EAAAA,EAAA8G,EAAAA,GAAA,GAAA,GAAA,IAAA18B,EAAAqoC,QAAA,IAAA/8C,KAAA0uC,KAAAq1H,EAAAA,EAAAI,EAAAA,GAAA,GAAA,GAAA,IAAAzvJ,EAAAsoC,QAAA,IAAAh9C,KAAA0uC,KAAAs1H,EAAAA,EAAAI,EAAAA,GAAA,GAAA,GAAA,IAAA1vJ,EAAA+tJ,MAAA,EAAA/tJ,EAAAktJ,YAAA3jD,EAAA,GAAAA,EAAA,GAAAA,EAAAA,GAAA,EAAAvpG,EAAA8uB,EAAA6gI,EAAA3vJ,EAAA41B,EAAAg6H,EAAA5vJ,EAAA08B,EAAA8wH,EAAAxtJ,EAAA+zJ,MAAA/zJ,EAAA8uB,GAAA9uB,EAAAoyJ,SAAApyJ,EAAAoyJ,QAAAx8H,EAAA51B,EAAAqyJ,QAAAhJ,GAAArpJ,EAAA41B,GAAA51B,EAAAqyJ,SAAAryJ,EAAAqyJ,QAAA31H,EAAA18B,EAAAoyJ,QAAA/C,KAAArB,KAAAxqH,GAAAyL,EAAAvoD,QAAAsZ,EAAA8uB,IAAAmgB,EAAA,IAAAjvC,EAAA41B,IAAAqZ,EAAA,KAAAjvC,EAAAiuJ,WAAAjuJ,EAAAkuJ,iBAAA,IAAAluJ,EAAA8uB,GAAA,SAAAmhI,GAAAz/J,EAAA,UAAA+qC,KAAAsyH,GAAAxkD,EAAA,GAAAp6D,EAAAvoD,QAAAuoD,EAAA,GAAA,EAAAk+G,EAAAl+G,EAAA,IAAA,EAAAq+G,EAAAr+G,EAAA,IAAA,EAAAk7D,EAAAd,EAAAp6D,EAAA,GAAA,EAAAjvC,EAAA8uB,EAAAmgB,EAAA,IAAA,EAAAjvC,EAAA41B,EAAAqZ,EAAA,IAAA,EAAApoD,EAAAyE,KAAA0uC,KAAA6zH,EAAAA,EAAAV,EAAAA,GAAA9uF,EAAA/yE,KAAA0uC,KAAAmwE,EAAAA,EAAAmjD,EAAAA,GAAApsJ,EAAA2sJ,GAAAV,EAAA7hK,KAAA+uC,MAAA8yH,EAAAU,GAAAmB,EAAAhvJ,EAAA8uD,UAAA,EAAAn8D,EAAA26J,GAAAnjD,EAAA7+G,KAAA+uC,MAAAizH,EAAAnjD,GAAA6kD,EAAA9tJ,EAAAlB,EAAA+tJ,OAAA,EAAA,GAAAziK,KAAA4uC,IAAAvnC,IAAArH,KAAA4uC,IAAAvnC,GAAA,MAAA4zG,GAAA1/G,IAAA,EAAA8L,GAAAuO,GAAA,EAAA,KAAA,IAAAA,GAAAA,GAAA,EAAA,KAAA,MAAAm9D,IAAA,EAAA1rE,GAAAA,GAAA,EAAA,KAAA,MAAAqN,EAAAooC,OAAAvhD,EAAAmZ,EAAAqoC,OAAAg2B,EAAAr+D,EAAA8uD,SAAA5tD,EAAAlB,EAAA+tJ,MAAAp7J,EAAAq7J,KAAAhuJ,EAAAiuJ,UAAAjuJ,EAAAkuJ,UAAAluJ,EAAA08B,EAAA,EAAA18B,EAAAktJ,YAAAroI,EAAA7kB,EAAAsoC,OAAA,GAAAtoC,EAAA+zJ,MAAA/zJ,EAAA8uB,GAAA9uB,EAAAoyJ,SAAApyJ,EAAAoyJ,QAAAvE,EAAA7tJ,EAAAqyJ,QAAA/E,GAAAttJ,EAAA41B,GAAA51B,EAAAqyJ,SAAAryJ,EAAAoyJ,QAAAjF,EAAAntJ,EAAAqyJ,QAAAloD,KAAAnqG,EAAAi0J,QAAAtkI,EAAA3vB,EAAAA,EAAAvZ,GAAA,OAAA,KAAAuZ,EAAAvZ,KAAAuZ,EAAAvZ,GAAA,GAAA,OAAAu9C,KAAAxzC,EAAAg8J,aAAAxsJ,GAAA+zJ,MAAAb,IAAA1iK,EAAAyY,MAAA2kJ,IAAAn9J,EAAA20J,YAAA,KAAA,WAAA8O,GAAA1jK,EAAAyY,MAAA2kJ,OAAAsF,IAAA1iK,EAAAkD,aAAA,cAAAjD,EAAA20J,YAAA,KAAA,WAAA50J,EAAAyD,gBAAA,iBAAA+L,GAAAm0J,GAAAtE,EAAAuE,oBAAAvE,EAAAwE,kBAAA,SAAA7jK,GAAA,IAAAC,EAAA8qC,EAAAz0C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAA2Y,EAAAykB,EAAA3O,EAAA9K,EAAAwuB,EAAAvkB,EAAA4N,EAAAz2C,KAAAugB,KAAA4iJ,EAAAnjK,KAAA+lB,EAAA/C,MAAAugG,EAAA9sE,EAAAoyB,SAAAu6F,EAAA3sH,EAAAuxH,UAAAoB,EAAA3yH,EAAAwxH,UAAAoB,EAAA5yH,EAAA0L,OAAAmnH,EAAA7yH,EAAA2L,OAAAmnH,EAAA9yH,EAAA4L,OAAA0mH,EAAAtyH,EAAA5N,EAAA4gI,EAAAhzH,EAAA9G,EAAA+5H,EAAAjzH,EAAAA,EAAAkzH,EAAAlzH,EAAAq3H,IAAAvG,EAAA9wH,EAAAwwH,YAAA3jD,EAAA7sE,EAAA62H,QAAA,MAAA,IAAA/iK,GAAA,IAAAA,GAAA,SAAA+4G,GAAAtjH,KAAAwiB,MAAA06I,aAAAl9J,KAAAwiB,MAAA86I,gBAAAt9J,KAAAwiB,MAAA06I,aAAA55C,GAAAomD,GAAAnC,GAAA6B,GAAAhG,GAAA,IAAAmG,IAAA0D,IAAAtD,IAAA5B,GAAAxkD,GAAA9sE,EAAAqxH,OAAA6B,GAAApmD,GAAAimD,EAAA3gI,EAAA4N,EAAAqxH,MAAA0B,EAAAh/J,EAAAnF,KAAAyuB,IAAAyvF,GAAA8lD,EAAAxoK,EAAAwE,KAAAkwC,IAAAguE,GAAA8lD,EAAA/zH,EAAAjwC,KAAAkwC,IAAAguE,EAAA16E,IAAAygI,EAAA/rH,EAAAl4C,KAAAyuB,IAAAyvF,EAAA16E,GAAAygI,EAAAzgI,GAAA,WAAA4N,EAAA43H,WAAAzvI,EAAAv5B,KAAAsjD,IAAA9f,GAAAyM,GAAA1W,EAAAv5B,KAAA0uC,KAAA,EAAAnV,EAAAA,GAAA2e,GAAA3e,EAAA6X,EAAA63H,QAAA9jK,GAAAo0B,EAAA/9B,GAAA+9B,IAAA+qI,IAAAZ,GAAAtyH,EAAA01H,SAAA11H,EAAA01H,QAAA3hK,EAAAisC,EAAA21H,QAAA92H,GAAAmB,EAAA81H,QAAA9C,GAAAhzH,EAAA21H,SAAA31H,EAAA01H,QAAAtrK,EAAA41C,EAAA21H,QAAA7uH,GAAA9G,EAAA+1H,QAAAS,KAAAx2H,EAAAo2H,UAAAp2H,EAAAq2H,YAAAl5I,EAAA5zB,KAAA+lB,EAAAsmJ,UAAAtD,GAAA,IAAAtyH,EAAAo2H,SAAAj5I,EAAAlF,MAAA+6I,GAAA,IAAAhzH,EAAAq2H,SAAAl5I,EAAAW,QAAAw0I,GAAAn1I,EAAA,QAAAA,EAAAm1I,IAAAA,EAAA,GAAAU,EAAA71I,IAAAA,EAAA61I,IAAAA,EAAA,IAAAr8G,GAAA,IAAA5iD,EAAA,GAAA,IAAA,KAAA,IAAA3J,EAAA,GAAA,IAAA,KAAA,IAAAy0C,EAAA,GAAA,IAAA,KAAA,IAAAiI,EAAA,GAAA,IAAA,IAAAwrH,EAAA,IAAAU,EAAA,IAAAE,GAAAsD,GAAAjtK,KAAA+lB,EAAArY,aAAA,YAAA,UAAA0/C,GAAA+1G,EAAAwE,KAAAlxH,EAAAo2H,UAAAp2H,EAAAq2H,SAAA,aAAAr2H,EAAAo2H,SAAA,KAAAp2H,EAAAq2H,SAAA,aAAA,WAAA1/G,GAAA+1G,EAAAwE,KAAAlxH,EAAAo2H,UAAAp2H,EAAAq2H,SAAA,aAAAr2H,EAAAo2H,SAAA,KAAAp2H,EAAAq2H,SAAA,aAAA,WAAAzD,EAAA,QAAAC,EAAA,IAAAP,EAAA,IAAAU,EAAA,QAAA,CAAA,GAAA1vJ,IAAAsvJ,GAAAz1I,EAAA,QAAAA,EAAAy1I,IAAAA,EAAAE,EAAA,MAAAD,EAAA11I,IAAAA,EAAA01I,IAAAA,EAAAC,EAAA,OAAAhC,GAAA9wH,EAAAA,GAAAA,EAAAuxH,WAAAvxH,EAAAwxH,YAAAV,EAAA,IAAAhkD,GAAA9sE,EAAAqxH,MAAAvkD,GAAAimD,EAAAnxH,EAAA7tC,EAAAnF,KAAAyuB,IAAAyvF,GAAA75E,EAAA7oC,EAAAwE,KAAAkwC,IAAAguE,GAAA9sE,EAAAqxH,QAAAvkD,GAAA9sE,EAAAqxH,MAAA0B,EAAAnxH,EAAAhzC,KAAAyuB,IAAAyvF,GAAA75E,EAAArkC,KAAAkwC,IAAAguE,GAAA,WAAA9sE,EAAA43H,WAAAzvI,EAAAv5B,KAAAsjD,IAAAlS,EAAAqxH,MAAA0B,GAAAnxH,GAAAzZ,EAAAv5B,KAAA0uC,KAAA,EAAAnV,EAAAA,GAAA8K,GAAA9K,EAAA6X,EAAA63H,QAAA9jK,GAAAo0B,EAAA/9B,GAAA+9B,KAAA0W,GAAA5L,EAAA6T,EAAAlF,MAAA,CAAA,KAAA+wH,GAAAhG,GAAA,IAAAmG,GAAAhC,GAAAoC,GAAA,YAAAxG,EAAAwE,KAAAlxH,EAAAo2H,UAAAp2H,EAAAq2H,SAAA,aAAAr2H,EAAAo2H,SAAA,KAAAp2H,EAAAq2H,SAAA,kBAAA,gBAAA/D,EAAA,MAAAU,EAAA,MAAAC,EAAA,OAAA,IAAAL,GAAA,IAAAC,EAAA,UAAAD,EAAA,IAAAC,EAAA,IAAA,KAAA9+J,EAAA+yC,EAAA,EAAAjI,EAAAz0C,EAAA,EAAAD,EAAA,EAAAm9C,EAAA4M,EAAA3B,EAAAxoD,EAAA43E,EAAAn9D,EAAA,EAAAvO,EAAA66J,GAAA,EAAAA,EAAA,EAAAjnD,EAAA7pE,EAAAu3H,QAAAp6I,EAAA,MAAA2vF,EAAA6lD,EAAAI,KAAAnxH,EAAAhzC,KAAAyuB,IAAAyvF,GAAAnrC,EAAA1rE,GAAAs8C,IAAAtf,EAAArkC,KAAAkwC,IAAAguE,KAAAxlE,EAAAvzC,EAAAk/B,EAAAihB,EAAA9pD,EAAA6oC,EAAAh9B,GAAA9L,EAAAy3C,EAAA7tC,GAAA6tC,EAAAx3C,GAAAw3C,IAAAkrE,EAAA6/C,EAAAoG,KAAA5qI,EAAA0W,GAAA+C,EAAAhzC,KAAAyuB,IAAAyvF,IAAAxlE,GAAArU,EAAArkC,KAAAkwC,IAAAguE,IAAAx9F,EAAAw3B,EAAAlF,EAAAsS,EAAAjhB,EAAAlpC,EAAAI,EAAA8oC,EAAAzuB,EAAAvO,EAAAg9B,EAAAqU,EAAAzI,GAAA5L,EAAAqU,EAAA1F,EAAAsS,EAAApN,GAAA7T,EAAAihB,EAAAtS,EAAAz3C,GAAAy3C,EAAA3rC,GAAA2rC,EAAA/C,EAAA1W,EAAA2e,EAAAx3B,GAAA,IAAAwjJ,IAAAxrH,GAAAwrH,EAAA5+G,GAAA4+G,EAAA3oK,GAAA2oK,EAAA78J,GAAA68J,GAAA,IAAAD,IAAAh0H,GAAAg0H,EAAA/rH,GAAA+rH,EAAA9oK,GAAA8oK,EAAAruJ,GAAAquJ,GAAA,IAAAD,IAAA7+J,GAAA6+J,EAAAxoK,GAAAwoK,EAAArgH,GAAAqgH,EAAAjxF,GAAAixF,IAAA/oD,GAAAqpD,KAAArpD,IAAAyoD,GAAAhrH,GAAAuiE,EAAAmpD,GAAA9+G,GAAA21D,EAAAopD,GAAA9oK,GAAA0/G,EAAAA,GAAAqpD,IAAAZ,GAAAtyH,EAAA01H,SAAA11H,EAAA01H,QAAA3hK,EAAAisC,EAAA21H,QAAA92H,GAAAmB,EAAA81H,QAAA9C,GAAAhzH,EAAA21H,SAAA31H,EAAA01H,QAAAtrK,EAAA41C,EAAA21H,QAAA7uH,GAAA9G,EAAA+1H,SAAAzD,EAAAn1I,IAAAA,EAAAm1I,IAAAA,EAAA,KAAAU,EAAA71I,IAAAA,EAAA61I,IAAAA,EAAA,KAAAC,EAAA91I,IAAAA,EAAA81I,IAAAA,EAAA,IAAAt8G,EAAA3W,EAAAo2H,UAAAp2H,EAAAq2H,SAAA,aAAAr2H,EAAAo2H,SAAA,KAAAp2H,EAAAq2H,SAAA,eAAA,YAAA1/G,IAAA5iD,EAAAopB,IAAAA,EAAAppB,EAAA,IAAAA,GAAA,KAAA3J,EAAA+yB,IAAAA,EAAA/yB,EAAA,IAAAA,GAAA,KAAAmoD,EAAAp1B,IAAAA,EAAAo1B,EAAA,IAAAA,GAAAoE,GAAA,KAAAgrB,EAAAxkD,IAAAA,EAAAwkD,EAAA,IAAAA,GAAA,KAAA9iC,EAAA1hB,IAAAA,EAAA0hB,EAAA,IAAAA,GAAA,KAAAiI,EAAA3pB,IAAAA,EAAA2pB,EAAA,IAAAA,GAAA6lH,GAAAgG,GAAA,IAAAG,GAAAn8G,GAAA,KAAA5sD,EAAAozB,IAAAA,EAAApzB,EAAA,IAAAA,GAAA,KAAAya,EAAA2Y,IAAAA,EAAA3Y,EAAA,IAAAA,GAAA,KAAA8iC,EAAAnqB,IAAAA,EAAAmqB,EAAA,IAAAA,GAAAqP,GAAA,KAAAzC,EAAA/2B,IAAAA,EAAA+2B,EAAA,IAAAA,GAAA,KAAA/pD,EAAAgzB,IAAAA,EAAAhzB,EAAA,IAAAA,GAAA,KAAA8L,EAAAknB,IAAAA,EAAAlnB,EAAA,IAAAA,GAAA,KAAA0gD,GAAA,gBAAAA,GAAA27G,EAAA,IAAAU,EAAA,IAAAC,EAAA,KAAAnC,EAAA,GAAAmC,EAAAnC,EAAA,GAAA,IAAApE,EAAAwE,IAAAv6G,KAAAxsD,EAAAwsK,GAAAjqK,WAAA0lC,EAAAjoC,EAAA+uC,EAAA/uC,EAAA61C,EAAA71C,EAAAknK,MAAAlnK,EAAA0tK,MAAA1tK,EAAAioE,SAAAjoE,EAAAonK,UAAApnK,EAAAqnK,UAAArnK,EAAAotK,QAAAptK,EAAAisK,SAAAjsK,EAAAksK,SAAAlsK,EAAA2rK,QAAA3rK,EAAA4rK,QAAA,EAAA5rK,EAAAuhD,OAAAvhD,EAAAwhD,OAAAxhD,EAAAyhD,OAAA,EAAAypH,GAAA,6RAAA,CAAA3F,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAyL,EAAAxoD,GAAA,GAAAu9C,EAAAwwH,uBAAA/tK,EAAA,OAAA+8C,EAAAQ,EAAAwwH,qBAAA/tK,EAAA,IAAAI,EAAAw3E,EAAA1rE,EAAAqN,EAAAumG,EAAA1sF,EAAAykB,EAAAzZ,EAAA7Y,EAAAxb,EAAAg8J,aAAAn5G,EAAA7iD,EAAAyY,MAAAzhB,EAAA2rK,GAAAzsK,OAAAooC,EAAAroC,EAAAmvC,EAAA,GAAA8G,EAAA,kBAAA,GAAAj2C,EAAA6sB,SAAA3gB,EAAAs9J,GAAAz/J,EAAA,WAAA6iD,EAAA//B,QAAA,QAAAzsB,EAAAinK,GAAAt9J,EAAA1J,GAAA,EAAAL,EAAAguK,gBAAAphH,EAAA//B,QAAA3gB,GAAA9L,EAAAinK,GAAAt9J,EAAA1J,GAAA,EAAAL,EAAAguK,gBAAAzwH,EAAAsoH,WAAAzlK,EAAA,iBAAAioC,EAAA4lI,WAAA9G,IAAAj7J,EAAA66J,EAAAvkJ,OAAA2kJ,IAAA9+H,EAAA4lI,UAAA/hK,EAAA2gB,QAAA,QAAA3gB,EAAAojB,SAAA,WAAA45I,EAAAnhJ,KAAA3hB,YAAA2gK,GAAAnvF,EAAAyvF,GAAAN,EAAA,MAAA,GAAAmC,EAAAnhJ,KAAAzhB,YAAAygK,GAAAnvF,EAAA6uF,cAAA7uF,EAAA6uF,YAAArmK,EAAAqmK,aAAA,MAAAp+H,EAAAgkI,WAAAz0F,EAAAy0F,SAAAhE,EAAAhgI,EAAAgkI,SAAAjsK,EAAAisK,WAAA,MAAAhkI,EAAAikI,WAAA10F,EAAA00F,SAAAjE,EAAAhgI,EAAAikI,SAAAlsK,EAAAksK,gBAAA,GAAA,iBAAAjkI,EAAA,CAAA,GAAAuvC,EAAA,CAAAj2B,OAAA0mH,EAAA,MAAAhgI,EAAAsZ,OAAAtZ,EAAAsZ,OAAAtZ,EAAAnmB,MAAA9hB,EAAAuhD,QAAAC,OAAAymH,EAAA,MAAAhgI,EAAAuZ,OAAAvZ,EAAAuZ,OAAAvZ,EAAAnmB,MAAA9hB,EAAAwhD,QAAAC,OAAAwmH,EAAAhgI,EAAAwZ,OAAAzhD,EAAAyhD,QAAAxZ,EAAAggI,EAAAhgI,EAAAA,EAAAjoC,EAAAioC,GAAA8G,EAAAk5H,EAAAhgI,EAAA8G,EAAA/uC,EAAA+uC,GAAA8G,EAAAoyH,EAAAhgI,EAAA4N,EAAA71C,EAAA61C,GAAAo2H,SAAAhE,EAAAhgI,EAAAgkI,SAAAjsK,EAAAisK,UAAAC,SAAAjE,EAAAhgI,EAAAikI,SAAAlsK,EAAAksK,UAAA7F,YAAA4B,EAAAhgI,EAAA6lI,qBAAA9tK,EAAAqmK,cAAA,OAAA5uH,EAAAxP,EAAA8lI,qBAAA,GAAA,iBAAAt2H,EAAA,IAAA3rC,KAAA2rC,EAAAxP,EAAAn8B,GAAA2rC,EAAA3rC,QAAAm8B,EAAAggC,SAAAxwB,EAAA,iBAAAxP,EAAAA,IAAA,IAAAA,EAAAA,EAAA5mC,QAAA,OAAAm2E,EAAAvvC,EAAA,EAAAuvC,EAAAy0F,SAAAhE,EAAAhgI,EAAAA,EAAAjoC,EAAAisK,WAAA,iBAAAhkI,EAAA8G,IAAA,IAAA9G,EAAA8G,EAAA1tC,QAAA,OAAAm2E,EAAAzoC,EAAA,EAAAyoC,EAAA00F,SAAAjE,EAAAhgI,EAAA8G,EAAA/uC,EAAAksK,WAAA10F,EAAAvP,SAAAigG,EAAA,aAAAjgI,EAAAA,EAAAggC,SAAA,kBAAAhgC,EAAAA,EAAA+lI,cAAA,SAAA,cAAA/lI,EAAAA,EAAAgmI,UAAAjuK,EAAAioE,SAAAjoE,EAAAioE,SAAA,WAAAl5B,GAAAo4H,KAAA3vF,EAAA4vF,UAAAc,EAAA,cAAAjgI,EAAAA,EAAAm/H,UAAA,mBAAAn/H,EAAAA,EAAAimI,eAAA,SAAAluK,EAAAonK,WAAA,EAAApnK,EAAAonK,UAAA,YAAAr4H,GAAAyoC,EAAA6vF,UAAAa,EAAA,cAAAjgI,EAAAA,EAAAo/H,UAAA,mBAAAp/H,EAAAA,EAAAkmI,eAAA,SAAAnuK,EAAAqnK,WAAA,EAAArnK,EAAAqnK,UAAA,YAAAt4H,IAAAyoC,EAAA0vF,MAAA,MAAAj/H,EAAAi/H,MAAAlnK,EAAAknK,MAAAgB,EAAAjgI,EAAAi/H,MAAAlnK,EAAAknK,OAAA1vF,EAAAk2F,MAAA,MAAAzlI,EAAAylI,MAAA1tK,EAAA0tK,MAAAxF,EAAAjgI,EAAAylI,MAAA1tK,EAAA0tK,QAAArzJ,EAAAm9D,EAAAk2F,MAAA1tK,EAAA0tK,SAAAl2F,EAAA0vF,OAAA7sJ,EAAAm9D,EAAAvP,UAAA5tD,GAAA,IAAA8sJ,IAAA,MAAAl/H,EAAAykI,UAAA1sK,EAAA0sK,QAAAzkI,EAAAykI,QAAA15I,GAAA,GAAAhzB,EAAAytK,SAAAxlI,EAAAwlI,UAAAztK,EAAAytK,UAAA1jH,EAAAm8G,iBAAAxmD,EAAA1/G,EAAA0sK,SAAA1sK,EAAA61C,GAAA71C,EAAAonK,WAAApnK,EAAAqnK,WAAA7vF,EAAA3hC,GAAA2hC,EAAA4vF,WAAA5vF,EAAA6vF,WAAA7vF,EAAA6uF,cAAA,MAAAp+H,EAAAnmB,QAAA01D,EAAA/1B,OAAA,IAAA,IAAA9gD,IAAA,MAAAwY,EAAAq+D,EAAA9iC,EAAA43H,GAAA3rK,IAAAX,EAAA00C,KAAAv7B,GAAA,MAAA,MAAA8uB,EAAAyM,IAAA,MAAAm0H,EAAAn0H,MAAA1hB,GAAA,EAAA2pB,EAAA,IAAAs0G,GAAAjxJ,EAAA00C,EAAA10C,EAAA00C,GAAAv7B,EAAAwjC,GAAAjI,KAAA3F,IAAA4N,EAAA18C,EAAA8uC,EAAA2F,IAAAiI,EAAAutH,IAAA,EAAAvtH,EAAAomH,OAAA36G,EAAAjL,EAAAwmH,gBAAAlkK,KAAAk9C,EAAAxjC,IAAA,OAAAA,EAAA8uB,EAAAmmI,gBAAApuK,EAAAktK,MAAA/zJ,GAAA8uB,EAAAomI,aAAAvlI,EAAA9oC,EAAA2rK,QAAA3tI,EAAAh+B,EAAA4rK,QAAAP,GAAA1hK,EAAAswJ,EAAA9gJ,GAAAq+D,EAAAvvC,EAAAomI,UAAApmI,EAAAqmI,cAAA3xH,EAAAnB,GAAAx7C,EAAA,WAAAmlB,EAAAnlB,EAAAw3E,GAAA+zF,QAAA/zF,EAAA+zF,QAAA5uH,EAAA9G,GAAA8G,EAAAnB,GAAAx7C,EAAA,WAAAmlB,EAAAnlB,EAAAw3E,GAAAg0F,QAAAh0F,EAAAg0F,QAAA7uH,EAAA9G,GAAA/M,IAAA9oC,EAAA2rK,SAAA3tI,IAAAh+B,EAAA4rK,UAAAjvH,EAAAnB,GAAAx7C,EAAA,UAAAmlB,EAAA2jB,EAAA9oC,EAAA2rK,QAAA3rK,EAAA2rK,QAAAhvH,EAAA9G,GAAA8G,EAAAnB,GAAAx7C,EAAA,UAAAmlB,EAAA6Y,EAAAh+B,EAAA4rK,QAAA5rK,EAAA4rK,QAAAjvH,EAAA9G,IAAA18B,EAAAkzJ,GAAA,KAAA,YAAAlzJ,GAAAguJ,IAAAznD,GAAA1/G,EAAAotK,WAAArG,IAAA/zI,GAAA,EAAA0hB,EAAA63H,GAAApzJ,GAAAA,GAAAiwJ,GAAAz/J,EAAA+qC,EAAAz0C,GAAA,EAAA,YAAA,IAAA08C,EAAA,IAAAs0G,GAAAzkG,EAAA9X,EAAA,EAAA,EAAAiI,GAAA,EAAA9G,IAAAjsC,EAAA4iD,EAAA9X,GAAAiI,EAAAomH,OAAA36G,EAAA++G,IAAAr7J,EAAA9L,EAAAotK,QAAAj0J,EAAAA,EAAAzR,MAAA,KAAA1H,EAAAotK,SAAA,EAAAj0J,EAAAtZ,SAAA,IAAAiM,GAAA,QAAAqN,EAAA,IAAAhU,WAAAgU,EAAA,IAAArN,IAAA,EAAA6wC,EAAAutH,IAAAvtH,EAAA18C,EAAAkZ,EAAA,GAAA,KAAAA,EAAA,IAAA,OAAA,QAAAwjC,EAAA,IAAAs0G,GAAAjxJ,EAAA,UAAA,EAAA,EAAA28C,GAAA,EAAAA,EAAAxjC,IAAAvP,EAAAkC,EAAA6wC,EAAAutH,IAAAvtH,EAAA18C,EAAAD,EAAAotK,SAAAzwH,EAAAutH,IAAAvtH,EAAA18C,EAAAkZ,GAAA8gJ,EAAA9gJ,EAAA,GAAAnZ,IAAAgzB,IAAAmqB,EAAAoxH,eAAAvuK,EAAAktK,KAAAb,KAAA3sD,GAAA,IAAAtgH,KAAAmvK,eAAA,EAAA,GAAA5xH,GAAA1qB,QAAA,IAAAi5I,GAAA,YAAA,CAAAtyJ,aAAA,uBAAAqZ,QAAA,EAAAuV,OAAA,EAAAsjI,OAAA,EAAAE,QAAA,UAAAE,GAAA,eAAA,CAAAtyJ,aAAA,MAAA2sJ,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAiI,EAAAoN,EAAA3B,GAAAx+C,EAAAxK,KAAAwxC,OAAAhnC,GAAA,IAAA,IAAA4tE,EAAAn9D,EAAAvO,EAAAqN,EAAA6Z,EAAAgL,EAAAwuB,EAAA7qB,EAAAhhC,EAAAsnC,EAAA8G,EAAA,CAAA,sBAAA,uBAAA,0BAAA,0BAAA8G,EAAAlsC,EAAAyY,MAAAq1B,EAAAtyC,WAAAwE,EAAAymB,aAAA0Y,EAAA3jC,WAAAwE,EAAA0mB,cAAAzwB,EAAAgK,EAAAlC,MAAA,KAAA1H,EAAA,EAAAA,EAAA+uC,EAAAlvC,OAAAG,IAAAZ,KAAA4zB,EAAA3xB,QAAA,YAAA0tC,EAAA/uC,GAAA0mK,EAAA33H,EAAA/uC,MAAA,KAAA8L,EAAAuO,EAAA+uJ,GAAAz/J,EAAAolC,EAAA/uC,GAAAC,GAAA,EAAA,QAAAoB,QAAA,OAAAyK,GAAAuO,EAAAvO,EAAApE,MAAA,MAAA,GAAA2S,EAAAA,EAAA,IAAAlB,EAAAq+D,EAAA53E,EAAAI,GAAA0/G,EAAAv6G,WAAA2G,GAAAqZ,EAAArZ,EAAAsuJ,QAAA16C,EAAA,IAAA7/G,SAAAm+B,EAAA,MAAAA,GAAAwuB,EAAA,MAAArzC,EAAAq8C,OAAA,KAAAxiC,EAAAqF,SAAAlf,EAAAq8C,OAAA,GAAA,IAAA,IAAAr8C,EAAAA,EAAAihJ,OAAA,GAAApnI,GAAA7tB,WAAAgU,GAAAA,EAAAihJ,QAAApnI,EAAA,IAAAnzB,QAAAmzB,EAAA,EAAA,EAAA,KAAA,KAAAA,EAAA7tB,WAAAgU,GAAAA,EAAAihJ,QAAApnI,EAAA,IAAAnzB,UAAAs9C,EAAAzI,IAAAvvB,EAAA6Y,KAAA7Y,IAAAwc,EAAA0nI,GAAA1/J,EAAA,aAAA+1G,EAAAv6F,GAAAxkB,EAAA0oK,GAAA1/J,EAAA,YAAA+1G,EAAAv6F,GAAA9K,EAAA,MAAA2jB,GAAAlyB,EAAA61B,EAAA8V,EAAA,IAAA,IAAA92C,EAAAmoC,EAAA,IAAA,KAAA,OAAA9K,GAAAlyB,EAAA61B,GAAAsG,EAAAohI,GAAA1/J,EAAA,aAAA,EAAA,OAAA,KAAAhJ,EAAAsnC,EAAA,OAAAn8B,EAAA61B,EAAA,KAAAhhC,EAAA,MAAA6rD,IAAArzC,EAAAhU,WAAA2G,GAAAknB,EAAAgL,EAAAw5C,EAAAryE,WAAAkV,GAAA2Y,EAAAgL,IAAA+rB,EAAAugH,GAAAz0H,EAAA9G,EAAA/uC,GAAA8L,EAAA,IAAAuO,EAAAlB,EAAA,IAAAq+D,GAAA,EAAA,MAAAztB,GAAA,OAAAA,GAAA93B,QAAA,EAAA24I,UAAAZ,GAAA,mBAAA,GAAA,KAAAkB,GAAA,qBAAA,CACAtyJ,aAAA,MAAA2sJ,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAoN,GAAA,IAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAAqN,EAAA,sBAAAumG,EAAAz/G,GAAA4mK,GAAAl9J,EAAA,MAAA8tC,EAAAr4C,KAAAwxC,QAAA8uE,EAAA1sF,EAAA0sF,EAAAxxF,iBAAA/U,EAAA,MAAA,IAAAumG,EAAAxxF,iBAAA/U,EAAA,MAAAumG,EAAAxxF,iBAAA/U,GAAAxP,EAAA48J,aAAAiI,oBAAA,IAAA7kK,EAAA48J,aAAAkI,sBAAA,OAAA3lI,EAAA1pC,KAAAwxC,OAAAhnC,GAAA,IAAA,IAAA6tC,EAAAp2C,QAAA,QAAA,IAAAynC,EAAAznC,QAAA,SAAAyK,EAAAs9J,GAAAz/J,EAAA,mBAAAhF,QAAAg+G,EAAA,MAAA,SAAA72G,GAAA,CAAA,IAAAs8C,EAAA3Q,EAAA/vC,MAAA,KAAA9H,EAAAkpC,EAAAphC,MAAA,KAAAg7G,EAAA51G,aAAA,MAAAhB,GAAA9L,EAAA,GAAA,IAAAA,IAAAw3E,GAAA,KAAA//B,EAAA2Q,EAAApoD,IAAAqB,QAAA,SAAA,IAAAzB,EAAAI,GAAAqB,QAAA,QAAAgZ,EAAA,IAAAra,EAAA2J,EAAAymB,YAAAsyF,EAAA50F,MAAAnkB,EAAA0mB,aAAAqyF,EAAA/uF,OAAAy0B,EAAApoD,GAAAw3E,EAAAryE,WAAAsyC,GAAA,IAAAp9B,EAAA,KAAAlV,WAAAsyC,GAAAp9B,EAAA,IAAA,KAAAo9B,EAAA2Q,EAAAp7C,KAAA,KAAA,OAAA5N,KAAAmrK,aAAA5gK,EAAAyY,MAAAq1B,EAAA3O,EAAA6T,EAAAoN,IAAA6gH,UAAA3Q,IAAAiR,GAAA,iBAAA,CAAAtyJ,aAAA,MAAAgyJ,UAAA3Q,IAAAiR,GAAA,cAAA,CAAAtyJ,aAAA,MAAAqZ,QAAA,IAAAi5I,GAAA,oBAAA,CAAAtyJ,aAAA,UAAAqZ,QAAA,IAAAi5I,GAAA,iBAAA,CAAAj5I,QAAA,IAAAi5I,GAAA,qBAAA,CAAAj5I,QAAA,IAAAi5I,GAAA,aAAA,CAAAj5I,QAAA,IAAAi5I,GAAA,SAAA,CAAA3F,OAAA0E,GAAA,mDAAAiB,GAAA,UAAA,CAAA3F,OAAA0E,GAAA,uDAAAiB,GAAA,OAAA,CAAAtyJ,aAAA,wBAAA2sJ,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAoN,GAAA,IAAAnqD,EAAAI,EAAA,OAAA4J,EAAAopB,EAAA,GAAApzB,EAAA+J,EAAA48J,aAAAvmK,EAAAgzB,EAAA,EAAA,IAAA,IAAAo1B,EAAA,QAAAxoD,EAAA8uK,QAAA1uK,EAAAJ,EAAA+uK,UAAA3uK,EAAAJ,EAAAgvK,WAAA5uK,EAAAJ,EAAAivK,SAAA,IAAAzvK,KAAAwxC,OAAAhnC,GAAAlC,MAAA,KAAAsF,KAAAhN,KAAAooD,EAAAhpD,KAAAwxC,OAAAw4H,GAAAz/J,EAAAvK,KAAA4zB,EAAA/yB,GAAA,EAAAb,KAAA6rK,OAAA7rK,KAAAwxC,OAAAhnC,IAAAxK,KAAAmrK,aAAA5gK,EAAAyY,MAAAgmC,EAAAx+C,EAAA+yC,EAAAoN,MAAAmhH,GAAA,aAAA,CAAAtyJ,aAAA,mBAAA4uB,OAAA,EAAAsjI,OAAA,IAAAI,GAAA,wBAAA,CAAA3F,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,OAAAA,KAAAirK,GAAA,SAAA,CAAAtyJ,aAAA,iBAAA2sJ,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAoN,GAAA,OAAA3qD,KAAAmrK,aAAA5gK,EAAAyY,MAAAhjB,KAAAwxC,OAAAw4H,GAAAz/J,EAAA,iBAAA1J,GAAA,EAAA,OAAA,IAAAmpK,GAAAz/J,EAAA,iBAAA1J,GAAA,EAAA,SAAA,IAAAmpK,GAAAz/J,EAAA,iBAAA1J,GAAA,EAAA,SAAAb,KAAAwxC,OAAAhnC,GAAA+yC,EAAAoN,IAAAviB,OAAA,EAAAojI,UAAA,SAAAjhK,GAAA,IAAAC,EAAAD,EAAAjC,MAAA,KAAA,OAAAkC,EAAA,GAAA,KAAAA,EAAA,IAAA,SAAA,KAAAD,EAAAsC,MAAAq8J,KAAA,CAAA,SAAA,MAAA4C,GAAA,cAAA,CAAA3F,OAAA0E,GAAA,uEAAAiB,GAAA,4BAAA,CAAA3F,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,GAAA,IAAAoN,EAAApgD,EAAAyY,MAAAgmC,EAAA,aAAA2B,EAAA,WAAA,aAAA,OAAA,IAAAknG,GAAAlnG,EAAA3B,EAAA,EAAA,EAAAnoD,GAAA,EAAAy0C,GAAA,EAAA,EAAAqV,EAAA3B,GAAAx+C,MAAA,SAAAklK,GAAAnlK,GAAA,IAAAC,EAAA8qC,EAAAt1C,KAAA+lB,EAAAg4B,EAAAzI,EAAArlC,QAAA+5J,GAAAhqK,KAAAugB,KAAA,WAAA,GAAA1f,EAAAb,KAAA4+B,EAAA5+B,KAAAs1C,EAAA/qC,EAAA,GAAAC,EAAA,KAAA3J,GAAA,IAAAk9C,EAAA97C,QAAA,YAAA,IAAA87C,EAAA97C,QAAA,cAAA,IAAA87C,EAAA97C,QAAA,WAAAqzC,EAAAtnC,gBAAA,WAAAg8J,GAAAhqK,KAAAugB,KAAA,YAAA+0B,EAAArlC,OAAA8tC,EAAAx4C,QAAAsjC,EAAA,KAAA,GAAAr+B,KAAAxK,KAAA2vK,MAAAr6H,EAAArlC,OAAA8tC,EAAAA,GAAA,iBAAAl9C,EAAA,MAAA,IAAAk9C,EAAA97C,QAAA,UAAA,GAAApB,GAAAb,KAAA2vK,MAAAr6H,EAAArlC,OAAA8tC,EAAA,kBAAAl9C,EAAA,KAAAy0C,EAAArlC,OAAA8tC,EAAAx4C,QAAAg9B,EAAA,WAAA1hC,IAAAirK,GAAA,0BAAA,CAAAtyJ,aAAA,IAAA2sJ,OAAA,SAAA57J,EAAAC,EAAA8qC,EAAAyI,EAAAR,EAAAoN,GAAA,IAAA3B,EAAAjjD,WAAAikK,GAAAz/J,EAAA,UAAA1J,GAAA,EAAA,MAAAL,EAAA+J,EAAAyY,MAAApiB,EAAA,cAAA00C,EAAA,MAAA,iBAAA9qC,GAAA,MAAAA,EAAA4rD,OAAA,KAAA5rD,GAAA,MAAAA,EAAA4rD,OAAA,IAAA,EAAA,GAAArwD,WAAAyE,EAAAwwJ,OAAA,IAAAhyG,GAAApoD,GAAA,IAAAooD,GAAA,WAAAghH,GAAAz/J,EAAA,aAAA1J,IAAA,IAAA2J,IAAAw+C,EAAA,GAAA4+G,EAAArqH,EAAA,IAAAs0G,GAAArxJ,EAAA,UAAAwoD,EAAAx+C,EAAAw+C,EAAAzL,KAAAA,EAAA,IAAAs0G,GAAArxJ,EAAA,UAAA,IAAAwoD,EAAA,KAAAx+C,EAAAw+C,GAAAzL,IAAAoyH,IAAA/uK,EAAA,EAAA,EAAAJ,EAAA2xB,KAAA,EAAAorB,EAAAr9C,KAAA,EAAAq9C,EAAA/yC,EAAA,iBAAA+yC,EAAA3e,EAAA,IAAA2e,EAAA18C,EAAA,kBAAA08C,EAAA3e,EAAA2e,EAAAjI,GAAA,IAAAiI,EAAAh9B,KAAAhW,EAAAgzC,EAAAomH,OAAAh5G,EAAApN,EAAA6oH,SAAAsJ,IAAA9uK,KAAA28C,EAAA,IAAAs0G,GAAArxJ,EAAA,aAAA,EAAA,EAAA+8C,GAAA,EAAA,MAAA,EAAA,EAAA,IAAAyL,EAAA,UAAA,SAAA,IAAAx+C,EAAA,SAAA,YAAAsgK,IAAA,UAAA/sH,EAAAwmH,gBAAAlkK,KAAAk9C,EAAAxjC,GAAAgkC,EAAAwmH,gBAAAlkK,KAAAi1C,IAAAiI,KAAA,SAAAqyH,GAAArlK,GAAA,GAAAvK,KAAA+lB,EAAA8pJ,WAAA7vK,KAAA,IAAAuK,GAAA,IAAAA,EAAA,CAAAvK,KAAA+lB,EAAArY,aAAA,QAAA,IAAAnD,EAAAvK,KAAAwK,EAAAxK,KAAAa,GAAA,IAAA,IAAA2J,EAAAxK,KAAAugB,KAAA+0B,EAAAt1C,KAAA+lB,EAAA/C,MAAAxY,GAAAA,EAAA+3B,EAAA+S,EAAA9qC,EAAAopB,GAAAppB,EAAA+3B,EAAA0rI,GAAA34H,EAAA9qC,EAAAopB,GAAAppB,EAAAA,EAAA4yJ,MAAA,IAAA7yJ,GAAAvK,KAAA+lB,EAAA8pJ,aAAA7vK,OAAAA,KAAA+lB,EAAA8pJ,WAAA,WAAA7vK,KAAA+lB,EAAAtY,aAAA,WAAAzN,KAAAa,GAAAb,KAAA+lB,EAAArY,aAAA,QAAA1N,KAAAa,GAAA,IAAAotK,GAAA,SAAA1jK,EAAAC,GAAAA,IAAAD,EAAAulK,gBAAA,OAAAtlK,EAAAwwJ,OAAA,EAAA,IAAA,WAAAxwJ,EAAAwwJ,OAAA,EAAA,KAAAxwJ,EAAA,IAAAA,GAAAD,EAAAulK,eAAAtlK,EAAAjF,QAAAkxC,EAAA,OAAAvvC,gBAAAqD,EAAAyD,gBAAAxD,KAAAshK,GAAA,YAAA,CAAA3F,OAAA,SAAA57J,EAAAC,EAAAuzC,EAAAR,EAAAoN,EAAA3B,EAAAxoD,GAAA,IAAA43E,EAAA1rE,EAAAqN,EAAAumG,EAAA/1G,EAAAkD,aAAA,UAAA,GAAAmmB,EAAArpB,EAAAyY,MAAAuL,QAAA,IAAAo8B,EAAApN,EAAAwyH,aAAA,IAAAle,GAAAtnJ,EAAAwzC,EAAA,EAAA,EAAA4M,EAAA,IAAAy7G,SAAAwJ,GAAAjlH,EAAAsgH,IAAA,GAAA31H,GAAA,EAAAqV,EAAAngD,EAAA81G,EAAAloC,EAAArxC,EAAAx8B,EAAA1J,GAAAoa,EAAA1Q,EAAAslK,WAAA,CAAA,IAAAnjK,EAAA,GAAAqN,EAAAkB,EAAAsF,KAAAxG,GAAArN,EAAAqN,EAAA6Z,GAAA,EAAA7Z,EAAAA,EAAAqjJ,MAAAniJ,EAAAmrJ,SAAA,GAAA,OAAA77J,EAAAslK,WAAAllH,GAAA9pD,EAAA,MAAA2J,EAAA4rD,OAAA,GAAA5rD,EAAA81G,EAAA/6G,QAAA,IAAA0F,OAAA,UAAAT,EAAAwwJ,OAAA,GAAA,OAAA,KAAA,MAAAxwJ,EAAA4rD,OAAA,GAAA,IAAA5rD,EAAAwwJ,OAAA,GAAA,IAAAzwJ,EAAAmD,aAAA,QAAAi9C,EAAA9pD,GAAAD,EAAA6H,EAAA8B,EAAA6tE,EAAArxC,EAAAx8B,GAAA/J,EAAAkM,GAAAnC,EAAAmD,aAAA,QAAA4yG,GAAA31D,EAAApqC,KAAA3f,EAAAynK,SAAA99J,EAAAyY,MAAAuL,QAAAqF,EAAA+2B,EAAA0gH,OAAA9tH,EAAAniB,MAAA7wB,EAAA3J,EAAAwnK,KAAAz9G,EAAA3B,MAAA,SAAAgnH,GAAAzlK,GAAA,IAAA,IAAAA,GAAA,IAAAA,IAAAvK,KAAAugB,KAAA28I,aAAAl9J,KAAAugB,KAAA+8I,gBAAA,gBAAAt9J,KAAAugB,KAAAA,KAAA,CAAA,IAAA/V,EAAA8qC,EAAAyI,EAAAl9C,EAAA8pD,EAAA3qD,KAAA+lB,EAAA/C,MAAAgmC,EAAAxoD,EAAAiuK,UAAArzI,MAAA,GAAA,QAAAp7B,KAAAa,EAAAA,IAAA8pD,EAAAp8B,QAAA,SAAA,IAAAwvB,GAAAvzC,EAAAxK,KAAAa,EAAAyH,MAAA,KAAAsF,KAAA,IAAAtF,MAAA,MAAA7H,QAAA,IAAAs9C,GAAAzI,EAAA9qC,EAAAuzC,GAAAv9C,EAAA80C,KAAA90C,EAAA80C,GAAAla,QAAA4tB,EAAAnoD,GAAA,EAAAy0C,EAAA,oBAAAA,EAAA63H,GAAA3sK,EAAA80C,GAAA1hB,GAAAq6I,GAAAtjH,EAAArV,GAAAz0C,IAAAotK,GAAAtjH,EAAAg9G,KAAApqH,EAAAv9C,KAAA+lB,EAAAwgJ,gBAAAhpH,EAAAuwH,MAAA9tK,KAAA+lB,EAAA/X,gBAAA,mBAAAhO,KAAA+lB,EAAA/X,gBAAA,qBAAAhO,KAAA+lB,EAAAwgJ,gBAAA,IAAAuF,GAAA,aAAA,CAAA3F,OAAA,SAAA57J,EAAAC,EAAAuzC,EAAAl9C,EAAA08C,GAAA,OAAAA,EAAA,IAAAs0G,GAAAtnJ,EAAAwzC,EAAA,EAAA,EAAAR,EAAA,IAAA6oH,SAAA4J,GAAAzyH,EAAA18C,EAAA2J,EAAA+yC,EAAA0tH,IAAA,GAAA1tH,EAAAh9B,KAAA1f,EAAA4lK,OAAAnxH,GAAA,EAAAiI,KAAA38C,EAAA,2CAAA0H,MAAA,KAAAgjK,GAAA1qK,EAAAH,OAAA6qK,OADA,SAAA/gK,GAAA,IAAAC,EAAAhK,EAAA+J,KAAAC,EAAAD,EAAA6rD,OAAA,GAAAt0D,cAAAyI,EAAAywJ,OAAA,GAAA,SAAA8Q,GAAAvhK,EAAA,CAAA47J,OAAA,SAAA57J,EAAA+qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA/pD,GAAA,IAAAw3E,EAAApvB,EAAAinH,IAAAC,UAAAC,QAAA3lK,GAAA,OAAA4tE,GAAAA,EAAAytF,eAAArlK,EAAAu9C,GAAA3iB,MAAA7wB,EAAA+qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA/pD,KAAAymK,EAAA,UAAA78J,EAAA,wBAAA+yC,OACA6yH,CAAAxvK,EAAA0qK,MAAA1qK,EAAA+pD,EAAAxnD,WAAA45J,SAAAn8J,EAAA2tK,qBAAA3tK,EAAAylK,WAAA,KAAAzlK,EAAA4lK,aAAA,SAAAj8J,EAAAC,EAAAw+C,GAAA,IAAAz+C,EAAAvE,SAAA,OAAA,EAAAhG,KAAA8jK,QAAAv5J,EAAAvK,KAAAymK,OAAAz9G,EAAAhpD,KAAAqwK,MAAA7lK,EAAA4tE,EAAA5tE,EAAA8lK,UAAAh7H,GAAA,EAAAyI,EAAAvzC,EAAAw8J,WAAAr8G,EAAAq8G,UAAAnmK,EAAA4mK,GAAAl9J,EAAA,IAAAgzC,EAAAv9C,KAAAukK,gBAAA,IAAAxqJ,EAAA6Z,EAAAykB,EAAA3O,EAAA9K,EAAA2D,EAAAsG,EAAAt+B,EAAAyY,MAAA,GAAA/H,GAAA,KAAA4tB,EAAA3W,SAAA,UAAAtxB,EAAAopK,GAAAz/J,EAAA,SAAA1J,KAAA,KAAAD,GAAAZ,KAAAuwK,YAAA1nI,EAAA,SAAA,IAAA,iBAAAr+B,IAAA6tC,EAAAxP,EAAAta,QAAA3tB,EAAAmmC,EAAAx8B,EAAA1J,GAAAgoC,EAAAta,QAAA8pB,EAAA,IAAA7tC,EAAA5J,EAAA6H,EAAA8B,EAAA3J,EAAAmmC,EAAAx8B,IAAA69J,MAAAR,GAAArmK,EAAAiM,KAAAhD,KAAA5J,EAAA4wB,QAAAzrB,WAAAkF,OAAAm8J,KAAA58J,EAAA5J,EAAAioC,EAAAta,QAAA8pB,GAAA7tC,EAAAoF,UAAA5P,KAAA+8J,SAAAhjJ,EAAAvZ,EAAAoP,UAAAwrB,MAAA7wB,EAAAC,EAAAoF,UAAA,YAAA5P,KAAA,KAAA,KAAAwK,GAAAxK,KAAA+8J,SAAAhjJ,EAAA/Z,KAAAo7B,MAAA7wB,EAAAC,EAAA,MAAAxK,KAAAmvK,eAAA,CAAA,IAAA5sI,EAAA,IAAAviC,KAAAmvK,eAAAxH,GAAAj7J,IAAAuO,GAAA,EAAA,KAAA4tB,EAAA3W,SAAA,UAAAnM,EAAAikJ,GAAAz/J,EAAA,SAAA1J,KAAA,KAAAklB,GAAA/lB,KAAAuwK,YAAA1nI,EAAA,SAAA,IAAAy3E,GAAAtgH,KAAAuwK,YAAA1nI,EAAA,2BAAA7oC,KAAAqwK,MAAAG,2BAAAjuI,EAAA,UAAA,YAAAsG,EAAA1W,KAAA,EAAAyB,EAAA7Z,EAAA6Z,GAAAA,EAAAwpI,OAAAxpI,EAAAA,EAAAwpI,MAAAhwG,EAAA,IAAAykG,GAAAtnJ,EAAA,YAAA,EAAA,EAAA,KAAA,GAAAvK,KAAAywK,UAAArjH,EAAA,KAAAx5B,GAAAw5B,EAAAg5G,SAAAuB,GAAAuG,GAAAtB,GAAAx/G,EAAA7sC,KAAAvgB,KAAAqmK,YAAAwB,GAAAt9J,EAAA1J,GAAA,GAAAusD,EAAA5qC,MAAAwmC,EAAAoE,EAAA69G,IAAA,EAAA1tH,EAAA9yC,MAAA,GAAA6qC,EAAA,CAAA,KAAAv7B,GAAA,CAAA,IAAA6kB,EAAA7kB,EAAAqjJ,MAAAxpI,EAAAykB,EAAAzkB,GAAAA,EAAAq3I,GAAAlxJ,EAAAkxJ,IAAAr3I,EAAAA,EAAAwpI,OAAArjJ,EAAAqoJ,MAAAxuI,EAAAA,EAAAwuI,MAAA14H,GAAA3vB,EAAAqoJ,MAAAhF,MAAArjJ,EAAAs+B,EAAAt+B,GAAAA,EAAAqjJ,MAAAxpI,GAAAA,EAAAwuI,MAAAroJ,EAAA2vB,EAAA3vB,EAAAA,EAAA6kB,EAAA5+B,KAAA+8J,SAAA1kH,EAAA,OAAA,GAAAz3C,EAAAw6B,MAAA,SAAA7wB,EAAAC,EAAA8qC,EAAAiI,GAAA,IAAAoN,EAAA/pD,EAAAqa,EAAAvO,EAAAqN,EAAAumG,EAAAjoE,EAAA3O,EAAA9K,EAAAr0B,EAAAyY,MAAA,IAAA2nC,KAAAngD,EAAAuP,EAAAvP,EAAAmgD,GAAA3B,EAAAxoD,EAAAmqD,GAAA3B,EAAA1T,EAAA0T,EAAA5tB,MAAA7wB,EAAAwP,EAAA4wC,EAAA3qD,KAAAs1C,EAAAiI,EAAA/yC,IAAAkC,EAAAs9J,GAAAz/J,EAAAogD,EAAA9pD,GAAA,GAAAw3C,EAAA,iBAAAt+B,EAAA,UAAA4wC,GAAA,SAAAA,GAAA,WAAAA,IAAA,IAAAA,EAAA1oD,QAAA,UAAAo2C,GAAA1I,EAAAniC,KAAAuM,IAAAs+B,IAAAt+B,EAAAovJ,GAAApvJ,GAAAA,GAAA,EAAAA,EAAAtZ,OAAA,QAAA,QAAAsZ,EAAAnM,KAAA,KAAA,KAAA0nC,EAAA41H,GAAAtsI,EAAA+rB,EAAAj+C,EAAAqN,GAAA,EAAA,cAAAu7B,EAAA,EAAAiI,KAAAlF,IAAA,IAAAt+B,EAAA9X,QAAA,OAAA,IAAA8X,EAAA9X,QAAA,MAAArB,EAAAmF,WAAA2G,GAAA4zG,EAAA1/G,GAAA,IAAAA,EAAA8L,EAAAsuJ,QAAAp6J,EAAA,IAAAH,QAAA,GAAA,KAAAiM,GAAA,SAAAA,IAAA4zG,EAAA,UAAA31D,GAAA,WAAAA,GAAA/pD,EADA,SAAA2J,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAh4C,WAAA,UAAAyE,EAAAD,EAAAymB,YAAAzmB,EAAA0mB,cAAApwB,EAAA2pK,GAAAhgK,GAAA+yC,EAAA18C,EAAAJ,OAAA,IAAA60C,EAAAA,GAAAmyH,GAAAl9J,EAAA,OAAA,IAAAgzC,GAAAQ,GAAAh4C,WAAAikK,GAAAz/J,EAAA,UAAA1J,EAAA08C,GAAAjI,GAAA,KAAA,EAAAyI,GAAAh4C,WAAAikK,GAAAz/J,EAAA,SAAA1J,EAAA08C,GAAA,QAAAjI,GAAA,KAAA,EAAA,OAAAyI,EACA+8G,CAAAvwJ,EAAAogD,EAAA9pD,GAAA,MAAA,SAAA8pD,GAAA,QAAAA,GAAA/pD,EAAAsnK,GAAA39J,EAAAogD,EAAA9pD,GAAA,OAAAD,EAAA,YAAA+pD,EAAA,EAAA,EAAA,KAAAjhB,EAAA2O,GAAA,MAAAt+B,EAAAq8C,OAAA,GAAAxiC,EAAA8V,GAAAzuB,EAAAge,SAAAlf,EAAAq8C,OAAA,GAAA,IAAA,IAAAr8C,EAAAA,EAAAihJ,OAAA,GAAA//I,GAAAlV,WAAAgU,GAAAA,EAAAxU,QAAA6nD,EAAA,MAAAnyC,EAAAlV,WAAAgU,GAAAs+B,EAAAt+B,EAAAxU,QAAA6nD,EAAA,IAAA,IAAA,KAAAx5B,IAAAA,EAAA+2B,KAAA5M,EAAAA,EAAA4M,GAAA21D,GAAAvmG,EAAAkB,GAAA,IAAAA,GAAAyuB,EAAAzuB,EAAAra,EAAAqa,GAAA2Y,EAAAppB,EAAAmgD,GAAA21D,IAAA1sF,GAAA,KAAAA,IAAA3Y,GAAA,IAAAA,IAAAra,IAAAA,EAAAqpK,GAAA1/J,EAAAogD,EAAA/pD,EAAA0/G,GAAA,MAAA1sF,GAAAhzB,GAAAqpK,GAAA1/J,EAAAogD,EAAA,IAAA,KAAA,KAAA,IAAAngD,EAAAkmK,cAAAhkK,EAAA9L,EAAA,MAAA,OAAAgzB,GAAA,QAAAA,GAAA,OAAAA,GAAA,OAAAA,EAAAhzB,GAAAqpK,GAAA1/J,EAAAogD,EAAA,EAAA/2B,GAAA,OAAAA,IAAA3Y,EAAAgvJ,GAAA1/J,EAAAogD,EAAA1vC,EAAA2Y,GAAAA,EAAA,MAAA8V,IAAAzuB,GAAA,IAAAA,KAAAlB,EAAAkB,EAAAra,EAAAgzB,IAAA8V,IAAAzuB,GAAAra,IAAAA,GAAA,IAAAA,IAAAqa,GAAA,IAAAA,OAAA,IAAA2jB,EAAA+rB,KAAA5wC,GAAAA,EAAA,IAAA,OAAA,MAAAA,IAAAu7B,EAAA,IAAAu8G,GAAAjzH,EAAA+rB,EAAA1vC,GAAAra,GAAA,EAAA,EAAA00C,GAAA,EAAAqV,GAAA,EAAA,EAAAj+C,EAAAqN,GAAAu7B,EAAAw1H,IAAA,SAAA/wJ,GAAA,YAAA4wC,IAAA,IAAAA,EAAA1oD,QAAA,SAAA8X,EAAArN,GAAA26J,EAAA,WAAA18G,EAAA,iBAAAngD,EAAAmgD,KAAArV,EAAA,IAAAu8G,GAAAjzH,EAAA+rB,EAAA/pD,EAAAqa,EAAAra,EAAA00C,EAAA,EAAAqV,GAAA,IAAAytB,IAAA,OAAAxkD,GAAA,WAAA+2B,GAAA,EAAAj+C,EAAAqN,GAAAu7B,EAAAw1H,IAAAl3I,IAAA0hB,EAAA41H,GAAAtsI,EAAA+rB,EAAAj+C,EAAAqN,GAAA,EAAA,KAAAu7B,EAAA,EAAAiI,IAAAA,GAAAjI,IAAAA,EAAAquH,SAAAruH,EAAAquH,OAAApmH,GAAA,OAAAjI,GAAA10C,EAAAwlK,SAAA,SAAA77J,GAAA,IAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAAb,KAAA+8J,SAAA,GAAA,IAAAxyJ,GAAAvK,KAAAymK,OAAA/J,QAAA18J,KAAAymK,OAAAxJ,WAAA,IAAAj9J,KAAAymK,OAAA/J,MAAA,GAAAnyJ,GAAAvK,KAAAymK,OAAA/J,QAAA18J,KAAAymK,OAAAxJ,WAAA,IAAAj9J,KAAAymK,OAAA/J,QAAA,OAAA18J,KAAAymK,OAAAlJ,aAAA,KAAA18J,GAAA,CAAA,GAAA2J,EAAA3J,EAAAy0C,EAAA/qC,EAAA1J,EAAA+9B,EAAA/9B,EAAA6oC,EAAAl/B,EAAAnF,KAAAwrC,MAAArmC,GAAAA,EAAA,OAAA,KAAAA,IAAAA,EAAA,GAAA3J,EAAAX,KAAA,GAAA,IAAAW,EAAAX,KAAA,GAAA,KAAA69C,EAAAl9C,EAAAoa,GAAApa,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAlqK,EAAA8uK,IAAA9uK,EAAA8vK,SAAA,GAAA,IAAA5yH,EAAAl9C,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAlqK,EAAA8uK,IAAA9uK,EAAA8vK,IAAA9vK,EAAA+vK,IAAA/vK,EAAAgwK,SAAA,GAAA,IAAA9yH,EAAAl9C,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAlqK,EAAA8uK,IAAA9uK,EAAA8vK,IAAA9vK,EAAA+vK,IAAA/vK,EAAAgwK,IAAAhwK,EAAAiwK,IAAAjwK,EAAAkwK,SAAA,GAAA,IAAAhzH,EAAAl9C,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAlqK,EAAA8uK,IAAA9uK,EAAA8vK,IAAA9vK,EAAA+vK,IAAA/vK,EAAAgwK,IAAAhwK,EAAAiwK,IAAAjwK,EAAAkwK,IAAAlwK,EAAAmwK,IAAAnwK,EAAAowK,QAAA,CAAA,IAAA37H,EAAAz0C,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAhtH,EAAA,EAAAA,EAAAl9C,EAAAoa,EAAA8iC,IAAAzI,GAAAz0C,EAAA,KAAAk9C,GAAAl9C,EAAA,MAAAk9C,EAAA,IAAAl9C,EAAAklB,EAAAllB,EAAA+yB,GAAA0hB,OAAA,IAAAz0C,EAAAX,KAAAW,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAiqK,IAAAjqK,EAAAulK,UAAAvlK,EAAAulK,SAAA77J,QAAA1J,EAAAklB,EAAAllB,EAAA+yB,GAAAppB,EAAA3J,EAAAiqK,IAAAjqK,EAAAA,EAAAu8J,WAAA,KAAAv8J,GAAA,IAAAA,EAAAX,KAAAW,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAA2J,EAAA3J,EAAAulK,SAAA77J,GAAA1J,EAAAA,EAAAu8J,WAAA,KAAAv8J,GAAA,CAAA,GAAA,IAAAA,EAAAX,KAAA,GAAAW,EAAA6oC,IAAA,IAAA7oC,EAAAX,KAAA,GAAAsK,EAAAnF,KAAAwrC,MAAAhwC,EAAA+9B,EAAA/9B,EAAAy0C,GAAAz0C,EAAAX,MAAA,GAAA,IAAAW,EAAAX,KAAA,CAAA,IAAA69C,EAAAl9C,EAAAoa,EAAAq6B,EAAAz0C,EAAAiqK,IAAAtgK,EAAA3J,EAAAkqK,IAAAhtH,EAAA,EAAAA,EAAAl9C,EAAAoa,EAAA8iC,IAAAzI,GAAAz0C,EAAA,KAAAk9C,GAAAl9C,EAAA,MAAAk9C,EAAA,IAAAl9C,EAAAklB,EAAAllB,EAAA+yB,GAAA0hB,QAAAz0C,EAAAklB,EAAAllB,EAAA+yB,GAAAppB,EAAA3J,EAAAiqK,SAAAjqK,EAAAklB,EAAAllB,EAAA+yB,GAAA/yB,EAAAA,OAAAA,EAAAulK,SAAA77J,GAAA1J,EAAAA,EAAAu8J,QAAAx8J,EAAA0lK,kBAAA,SAAA/7J,GAAAvK,KAAAqmK,WAAArmK,KAAAqmK,YAAAwB,GAAA7nK,KAAA8jK,QAAAjjK,GAAA,GAAAb,KAAAmvK,eAAAnvK,KAAAqmK,WAAAyH,KAAAb,KAAA1iK,GAAA,IAAAvK,KAAAmvK,eAAA,EAAA,GAAA,SAAA+B,GAAA3mK,GAAAvK,KAAA+lB,EAAA/lB,KAAA4zB,GAAA5zB,KAAAa,EAAAb,KAAAugB,KAAAkwJ,UAAAzwK,KAAAA,KAAAo9J,MAAA,MAAA,GAAAx8J,EAAA2vK,YAAA,SAAAhmK,EAAAC,EAAA8qC,GAAAyI,EAAA/9C,KAAA+8J,SAAA,IAAAlL,GAAAtnJ,EAAAC,EAAA,EAAA,EAAAxK,KAAA+8J,SAAA,GAAAh/G,EAAAl9C,EAAAy0C,EAAAyI,EAAAqoH,SAAA8K,GAAAnzH,EAAAx9B,KAAAvgB,MAAAY,EAAA6vK,UAAA,SAAAlmK,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAAxzC,IAAAC,IAAAA,EAAA43J,MAAA73J,GAAAA,EAAA6yJ,QAAA7yJ,EAAA6yJ,MAAAgF,MAAA73J,EAAA63J,OAAA73J,EAAA63J,MAAA73J,EAAA63J,MAAAhF,MAAA7yJ,EAAA6yJ,MAAAp9J,KAAA+8J,WAAAxyJ,IAAAvK,KAAA+8J,SAAAxyJ,EAAA6yJ,MAAAr/G,GAAA,GAAAzI,EAAAA,EAAA8nH,MAAA7yJ,EAAAwzC,GAAA,OAAA/9C,KAAA+8J,WAAA/8J,KAAA+8J,SAAAxyJ,GAAAA,EAAA6yJ,MAAA5yJ,EAAAD,EAAA63J,MAAA9sH,GAAA/qC,GAAA3J,EAAA8hK,MAAA,SAAAl4J,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAA/yC,EAAA,GAAAA,EAAA2mK,WAAA3mK,EAAAmqC,MAAA,CAAA,IAAAoJ,KAAAR,EAAA,GAAA/yC,EAAA+yC,EAAAQ,GAAAvzC,EAAAuzC,GAAAR,EAAA/rB,QAAA,EAAA+rB,EAAA4zH,YAAA5zH,EAAAxtB,WAAA,GAAA,OAAAvlB,EAAAoF,YAAA0lC,EAAAt1C,KAAA+vK,iBAAAlvK,EAAAy0C,EAAA+1H,SAAAxqK,EAAAuhK,MAAApiK,KAAAywK,UAAA5vK,EAAAuhK,MAAA9sH,EAAA8nH,MAAAv8J,EAAAuhK,MAAAA,OAAAvhK,IAAAb,KAAA+8J,WAAA/8J,KAAA+8J,SAAAznH,EAAA8nH,OAAA9nH,EAAA8nH,OAAAp9J,KAAAywK,UAAAn7H,EAAA8nH,MAAA9nH,EAAA8nH,MAAAA,MAAAv8J,EAAAuhK,OAAApiK,KAAA+vK,aAAA,MAAAxlK,EAAApH,UAAAu/J,MAAA1hK,KAAAhB,KAAAu9C,IAAA,IAAA6zH,GAAA,SAAA7mK,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA,GAAApgD,EAAAzJ,MAAA,IAAAD,EAAA0J,EAAA9J,QAAA,IAAAI,GAAAuwK,GAAA7mK,EAAA1J,GAAA2J,EAAA8qC,QAAA,IAAAz0C,GAAAk9C,EAAAxzC,EAAAgC,YAAA9L,QAAA,IAAAI,GAAA8pD,GAAApN,EAAAQ,EAAAl9C,IAAAX,KAAAq9C,EAAAv6B,QAAAxY,EAAAnK,KAAA0mC,EAAAwW,IAAAjI,GAAAA,EAAAj1C,KAAAk9C,IAAA,IAAAoN,GAAA,IAAAA,GAAA,KAAAA,IAAApN,EAAAhxC,WAAA9L,QAAA2wK,GAAA7zH,EAAA/yC,EAAA8qC,IAAA,OAAAqV,EAAA0mH,UAAA,SAAA9mK,EAAA+qC,EAAAyI,GAAA,IAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAgK,EAAAksB,GAAAnsB,EAAA+qC,EAAAyI,GAAAn9C,EAAA,CAAAJ,GAAA43E,EAAA,GAAAn9D,EAAA,GAAAvO,EAAA,GAAAqN,EAAAvP,EAAAmxJ,WAAA2V,cAAA,IAAA/mK,EAAA/J,EAAA+wK,UAAA/wK,EAAAX,OAAAuxK,GAAA7mK,EAAA6tE,EAAA1rE,GAAAlM,EAAAuoE,OAAAzzB,GAAA,GAAA,GAAA87H,GAAA7mK,EAAA0Q,GAAAza,EAAAuoE,OAAA,GAAA,GAAA,GAAAvoE,EAAAm8J,UAAA,GAAA97J,EAAA6L,EAAAjM,QAAA,IAAAI,GAAA,IAAA08C,EAAA90C,EAAAiE,EAAA7L,GAAAu3E,EAAAv3E,GAAAoa,EAAApa,KAAAwnK,SAAA,CAAA,IAAA19G,KAAApN,EAAAA,EAAA6qH,KAAArqH,EAAAhkC,EAAA4wC,KAAApN,EAAAoN,GAAA5M,EAAA4M,IAAA,IAAAA,KAAA3B,EAAA,GAAAzL,EAAAyL,EAAA2B,GAAAytB,EAAAv3E,GAAA8pD,GAAA/pD,EAAAP,KAAAmK,EAAAi0J,OAAA/xJ,EAAA7L,GAAAy0C,EAAA0T,EAAAzL,IAAA,OAAA38C,GAAA2J,EAAAinK,SAAA,CAAA7mH,IAAAA,IAAA,IAAArV,GAAA/qC,EAAAowJ,SAAAM,UAAA0I,OAAA,CAAAlrI,SAAA,aAAAl2B,QAAA,MAAAqhK,UAAA,EAAAC,IAAA,EAAAjhK,KAAA,SAAA2H,EAAAC,EAAA8qC,GAAA,OAAAt1C,KAAAymK,OAAAnxH,GAAA,MAAAnyC,WAAAsuK,gBAAA,WAAA,IAAA,IAAAlnK,EAAA+qC,EAAAyI,EAAAl9C,EAAAb,KAAAymK,OAAAlpH,EAAA18C,EAAAw6J,KAAAqW,WAAA9jK,KAAA/M,EAAAw6J,KAAAqW,WAAA7wK,EAAAw6J,KAAAqW,WAAAppK,MAAA,KAAAqiD,EAAApN,EAAA98C,OAAAuoD,EAAA,GAAAxoD,EAAAK,EAAA8wK,YAAAD,YAAA,IAAA/mH,GAAA3B,EAAAzL,EAAAoN,IAAA,EAAA,IAAAA,EAAApN,EAAA98C,QAAA,IAAAkqD,GAAA,IAAApgD,EAAAgzC,EAAAoN,GAAArV,EAAAz0C,EAAAk8J,SAAAznH,GAAAyI,EAAAzI,EAAA8nH,MAAA9nH,EAAAs8H,GAAAt8H,EAAAvvB,EAAA2gJ,YAAA19G,GAAA,GAAA1T,EAAAv7B,IAAAxP,IAAA,IAAA+qC,EAAAiI,GAAAjI,EAAAvvB,EAAA,SAAAxb,GAAA,KAAAA,GAAAA,EAAAgzC,GAAAhzC,EAAA+uH,OAAA/uH,EAAAm/B,EAAA,GAAAn/B,EAAAA,EAAA6yJ,MAAA5yJ,CAAA8qC,EAAAvvB,EAAAg3I,WAAA/8J,KAAA6xK,KAAAv8H,EAAAvvB,EAAAxb,EAAA+qC,EAAA1W,EAAA0W,EAAAA,GAAAyI,IAAAA,EAAAqkH,MAAA9sH,EAAA8sH,OAAA9sH,EAAA8sH,MAAA9sH,EAAA8sH,MAAAhF,MAAAr/G,EAAAl9C,EAAAk8J,WAAAznH,IAAAz0C,EAAAk8J,SAAAh/G,GAAAzI,EAAA8nH,MAAA9nH,EAAA8sH,MAAA,KAAAvhK,EAAA8wK,YAAApnK,GAAA/J,IAAA80C,EAAAyI,EAAA,OAAA,GAAAzI,EAAAu8H,KAAA,SAAAtnK,EAAAC,EAAA8qC,EAAAyI,GAAA/9C,KAAA8xK,UAAAvnK,EAAAC,EAAA8qC,EAAAA,EAAAyI,EAAAvzC,GAAA,GAAAxK,KAAAukK,gBAAAlkK,KAAAmK,IAAAmwJ,SAAAM,UAAA0I,OAAA,CAAAlrI,SAAA,OAAAorI,IAAA,EAAAthK,QAAA,QAAAK,KAAA,SAAA2H,EAAAC,EAAA8qC,GAAA,GAAA,mBAAA/qC,EAAAmD,aAAA,OAAA,EAAA,IAAA,IAAAqwC,KAAAvzC,EAAAxK,KAAA8xK,UAAAvnK,EAAA,eAAAA,EAAAkD,aAAAswC,GAAA,GAAAvzC,EAAAuzC,GAAA,GAAAA,GAAA,EAAAA,GAAA/9C,KAAAukK,gBAAAlkK,KAAA09C,GAAA,OAAA,KAAA48G,SAAAM,UAAA0I,OAAA,CAAAlrI,SAAA,sBAAAl2B,QAAA,QAAAshK,IAAA,EAAAjhK,KAAA,SAAA2H,EAAAC,EAAA8qC,GAAA,iBAAA9qC,IAAAA,EAAA,CAAAq+D,SAAAr+D,IAAAxK,KAAA+xK,OAAA,GAAA,IAAAh0H,EAAAl9C,EAAA08C,EAAAyL,EAAAxoD,EAAAI,GAAA,IAAA4J,EAAAwnK,WAAA,EAAA3sK,KAAA0uB,GAAA,IAAA,IAAAgqB,KAAAvzC,EAAA,eAAAuzC,IAAAv9C,GAAAgK,EAAAuzC,GAAA,IAAAz1C,MAAA,KAAAzH,EAAAL,EAAA,GAAA+8C,EAAAx3C,WAAA,mBAAAwE,EAAAwzC,GAAAxzC,EAAAwzC,GAAAxzC,EAAAwzC,EAAA97C,QAAA,QAAA,mBAAAsI,EAAA,MAAAwzC,EAAAi9G,OAAA,IAAAj9G,EAAA,MAAAA,EAAAi9G,OAAA,OAAArwG,EAAA3qD,KAAA+xK,OAAAh0H,GAAA,iBAAAl9C,GAAA,MAAAA,EAAAu1D,OAAA,GAAA7Y,EAAAtkB,SAAAp4B,EAAAu1D,OAAA,GAAA,IAAA,IAAA3tB,OAAA5nC,EAAAm6J,OAAA,IAAAvyH,OAAA5nC,IAAA,EAAAmoD,EAAA2B,EAAApN,EAAA/8C,EAAAC,SAAAI,EAAAL,EAAAoN,KAAA,MAAA,IAAA/M,EAAAoB,QAAA,WAAA+mD,GAAApoD,EAAAooD,IAAAA,GAAApoD,EAAA,KAAAooD,EAAAA,EAAA,EAAAA,EAAApoD,EAAAooD,EAAApoD,KAAA,IAAAC,EAAAoB,QAAA,QAAA+mD,EAAA,EAAAA,GAAAA,EAAA,WAAApoD,GAAAA,GAAAooD,EAAApoD,EAAA,GAAAA,GAAA,IAAAC,EAAAoB,QAAA,QAAA,EAAA+mD,IAAAA,GAAAA,EAAA,WAAApoD,GAAAA,GAAAooD,EAAApoD,EAAA,GAAAA,KAAA,KAAAooD,GAAAA,GAAA,QAAAhpD,KAAA8xK,UAAAvnK,EAAAwzC,EAAAR,EAAAA,EAAAyL,EAAAjL,GAAA/9C,KAAAukK,gBAAAlkK,KAAA09C,KAAA,OAAA,GAAAz9B,IAAA,SAAA/V,GAAA,IAAAC,EAAA,GAAA,IAAAD,EAAAvK,KAAA4mK,OAAAR,SAAAplK,KAAAhB,KAAAuK,QAAA,IAAAC,EAAAxK,KAAA+8J,SAAAvyJ,GAAAA,EAAA+yC,EAAA/yC,EAAAub,EAAAvb,EAAAopB,GAAA5zB,KAAA+xK,OAAAvnK,EAAAopB,IAAAppB,EAAAub,EAAAvb,EAAAopB,GAAA5zB,KAAA+xK,OAAAvnK,EAAAopB,GAAAppB,EAAAA,EAAA4yJ,SAAAuI,UAAA,EAAAhL,SAAAM,UAAA,cAAA,CAAA,eAAA,SAAA1wJ,GAAA,SAAA3J,EAAA4J,EAAA8qC,GAAA,IAAAyI,EAAAv9C,EAAA,UAAAgK,EAAA,cAAA,GAAA,OAAA3J,EAAAk9C,EAAA56C,UAAA,IAAAoH,GAAAlH,YAAA06C,EAAAl9C,EAAA68J,SAAApoH,EAAAyI,EAAA,SAAA9iC,EAAA1Q,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,OAAA08C,EAAA/8C,EAAA,UAAA+J,EAAA,CAAA0nK,QAAA,IAAAznK,EAAA0nK,OAAA,IAAA58H,EAAA68H,UAAA,IAAAp0H,IAAA,GAAAq6B,EAAA76B,EAAAhzC,GAAAgzC,EAAA,SAAA7wC,EAAAnC,EAAAC,EAAA8qC,GAAAt1C,KAAA+lB,EAAAxb,EAAAvK,KAAAuiC,EAAA/3B,EAAA8qC,MAAAt1C,KAAA6a,KAAAy6B,GAAAx6B,KAAA9a,MAAAs1C,EAAAA,EAAA/S,EAAA/3B,EAAAxK,KAAAoyK,IAAA98H,EAAAvvB,EAAAxb,GAAA,IAAAC,EAAA8qC,EAAAz0C,EAAA85J,SAAA0X,kBAAA1X,SAAAp9G,EAAA18C,EAAAovK,IAAAC,UAAAvlH,EAAA,EAAAtlD,KAAA0uB,GAAAi1B,EAAA3jD,KAAA0uB,GAAA,EAAAvzB,EAAA+8C,EAAA+0H,OAAAl6F,EAAA7tE,EAAA0V,UAAA,aAAAlG,EAAA,SAAAvP,EAAA8qC,GAAA,IAAAyI,EAAAv9C,EAAA,UAAAgK,EAAA,SAAAD,GAAAvK,KAAAuyK,IAAAhoK,GAAA,IAAAA,EAAAA,EAAA,QAAAvK,KAAAwyK,IAAA,MAAAxyK,KAAAuyK,MAAA,GAAA1xK,EAAAk9C,EAAA56C,UAAA,IAAAoH,EAAA,OAAA1J,EAAAwC,YAAA06C,EAAAl9C,EAAA68J,SAAApoH,EAAAz0C,EAAA4xK,OAAA,SAAAloK,GAAA,OAAA,IAAAwzC,EAAAxzC,IAAAwzC,GAAAuiE,EAAArlG,EAAA,OAAAlB,EAAA,UAAA,SAAAxP,GAAA,QAAAA,EAAAA,IAAAvK,KAAAuyK,IAAA,GAAAhoK,EAAAvK,KAAAuyK,KAAA,IAAAx4J,EAAA,SAAA,SAAAxP,GAAA,OAAAA,EAAAA,IAAAvK,KAAAuyK,IAAA,GAAAhoK,EAAAvK,KAAAuyK,OAAAx4J,EAAA,YAAA,SAAAxP,GAAA,OAAAA,GAAA,GAAA,EAAA,GAAAA,EAAAA,IAAAvK,KAAAwyK,IAAA,GAAAjoK,EAAAvK,KAAAwyK,KAAA,KAAAjoK,GAAA,GAAAA,IAAAvK,KAAAwyK,IAAA,GAAAjoK,EAAAvK,KAAAwyK,KAAA,MAAA5+I,EAAApzB,EAAA,gBAAA,SAAA+J,EAAAC,EAAA8qC,GAAA9qC,EAAAA,GAAA,IAAAA,EAAAA,EAAA,GAAA,MAAAD,EAAAA,EAAA,GAAA,EAAAA,IAAAA,EAAA,GAAAvK,KAAA0yK,GAAA,IAAAnoK,EAAAC,EAAA,EAAAxK,KAAAuyK,KAAA,EAAAhoK,GAAA,EAAAvK,KAAAwyK,IAAAjoK,EAAAvK,KAAA2yK,IAAA3yK,KAAAuyK,IAAAvyK,KAAAwyK,IAAAxyK,KAAAy9J,UAAA,IAAAnoH,IAAA,GAAA+C,EAAAzkB,EAAAzwB,UAAA,IAAAoH,EAAA,OAAA8tC,EAAAh1C,YAAAuwB,EAAAykB,EAAAqlH,SAAA,SAAAnzJ,GAAA,IAAAC,EAAAD,GAAA,GAAAA,GAAAvK,KAAA0yK,GAAA,OAAAnoK,EAAAvK,KAAAuyK,IAAAvyK,KAAAy9J,SAAA,GAAAlzJ,EAAA,EAAAA,EAAAvK,KAAAuyK,KAAAhoK,EAAAC,GAAAD,EAAA,EAAAA,EAAAvK,KAAAuyK,KAAAhoK,EAAAA,EAAAA,EAAAC,EAAAD,EAAAvK,KAAA2yK,IAAA3yK,KAAAy9J,SAAA,GAAAlzJ,GAAAA,EAAAvK,KAAA2yK,KAAA3yK,KAAAuyK,KAAAhoK,EAAAC,GAAAD,EAAAC,IAAAD,GAAAA,EAAAvK,KAAA2yK,KAAA3yK,KAAAuyK,KAAAhoK,EAAAA,EAAAA,EAAAvK,KAAAy9J,SAAA,EAAAjzJ,GAAAopB,EAAAovI,KAAA,IAAApvI,EAAA,GAAA,IAAAykB,EAAAo6H,OAAA7+I,EAAA6+I,OAAA,SAAAloK,EAAAC,EAAA8qC,GAAA,OAAA,IAAA1hB,EAAArpB,EAAAC,EAAA8qC,KAAA+C,GAAA7tC,EAAAhK,EAAA,qBAAA,SAAA+J,GAAAA,EAAAA,GAAA,EAAAvK,KAAAuyK,IAAA,EAAAhoK,EAAAvK,KAAAwyK,IAAAjoK,EAAA,IAAA,IAAApH,UAAA,IAAAoH,GAAAlH,YAAAmH,EAAA6tC,EAAAqlH,SAAA,SAAAnzJ,GAAA,OAAAA,EAAA,EAAAA,EAAA,EAAA,GAAAA,IAAAA,EAAA,aAAAvK,KAAAwyK,IAAAjoK,GAAA,GAAAvK,KAAAuyK,KAAAl6H,EAAAo6H,OAAAjoK,EAAAioK,OAAA,SAAAloK,GAAA,OAAA,IAAAC,EAAAD,KAAA8tC,GAAA/C,EAAA90C,EAAA,mBAAA,SAAAgK,GAAA,IAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,GAAAgK,EAAAA,GAAA,IAAAm5G,OAAA,OAAA/iH,EAAA,GAAAw3E,EAAA,EAAAn9D,EAAA,GAAAzQ,EAAA+5D,QAAA,IAAAxqD,EAAAkB,EAAAqlG,GAAA,IAAA91G,EAAAooK,UAAAh/I,GAAA,IAAAppB,EAAA2kC,MAAAkJ,EAAA7tC,EAAAqoK,oBAAAtoK,EAAAC,EAAAqoK,SAAA,KAAAnpI,EAAA,iBAAAl/B,EAAAsoK,SAAA,GAAAtoK,EAAAsoK,SAAA,IAAA,IAAA/4J,GAAAu7B,EAAAgrE,EAAAj7G,KAAAC,SAAA,EAAA2V,EAAAlB,EAAAgkC,EAAA1F,EAAAA,EAAAqlH,SAAApoH,GAAAA,EAAAz0C,EAAA,SAAAL,EAAAkpC,EAAA,QAAAlpC,GAAA+8C,EAAA,EAAAjI,GAAAiI,EAAA7T,EAAA,OAAAlpC,EAAA80C,EAAAA,EAAA5L,GAAA6T,EAAAjI,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,IAAAiI,EAAA,GAAA7T,EAAA42E,EAAAviE,GAAA14C,KAAAC,SAAAzE,EAAA,GAAAA,EAAAkZ,EAAA,EAAAgkC,GAAA,GAAAl9C,EAAAk9C,GAAA,GAAAl9C,EAAA+yB,IAAA,EAAAmqB,EAAAA,EAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAn9C,EAAAw3E,KAAA,CAAAvvC,EAAAyM,EAAA3F,EAAAoO,GAAA,IAAAn9C,EAAA2D,KAAA,SAAAgG,EAAAC,GAAA,OAAAD,EAAAs+B,EAAAr+B,EAAAq+B,IAAAmgB,EAAA,IAAAt8C,EAAA,EAAA,EAAA,MAAAqN,EAAAkB,GAAA,IAAAlB,GAAA4wC,EAAA/pD,EAAAmZ,GAAAivC,EAAA,IAAAt8C,EAAAi+C,EAAA9hB,EAAA8hB,EAAAhb,EAAAqZ,GAAAhpD,KAAAoiK,MAAA,IAAA11J,EAAA,EAAA,EAAA,IAAAs8C,EAAAjjC,EAAAijC,EAAAA,EAAAnuC,QAAA,IAAA1X,UAAA,IAAAoH,GAAAlH,YAAAiyC,EAAA+C,EAAAqlH,SAAA,SAAAnzJ,GAAA,IAAAC,EAAAxK,KAAAoiK,MAAA,GAAA73J,EAAAC,EAAAub,EAAA,CAAA,KAAAvb,EAAAqQ,MAAAtQ,GAAAC,EAAAub,GAAAvb,EAAAA,EAAAqQ,KAAArQ,EAAAA,EAAAsQ,UAAA,KAAAtQ,EAAAsQ,MAAAvQ,GAAAC,EAAAub,GAAAvb,EAAAA,EAAAsQ,KAAA,OAAA9a,KAAAoiK,MAAA53J,GAAA+3B,GAAAh4B,EAAAC,EAAAub,GAAAvb,EAAA4nK,IAAA5nK,EAAA8qC,GAAA+C,EAAAo6H,OAAA,SAAAloK,GAAA,OAAA,IAAA+qC,EAAA/qC,IAAA+qC,EAAA0tH,KAAA,IAAA1tH,EAAAr6B,EAAA,SAAAra,EAAA,YAAA,SAAA2J,GAAA,OAAAA,EAAA,EAAA,KAAA,OAAAA,EAAAA,EAAAA,EAAA,EAAA,KAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,IAAAA,EAAA,IAAA,KAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,MAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,UAAA3J,EAAA,WAAA,SAAA2J,GAAA,OAAAA,EAAA,EAAAA,GAAA,EAAA,KAAA,EAAA,OAAAA,EAAAA,EAAAA,EAAA,EAAA,KAAA,GAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,KAAAA,EAAA,IAAA,KAAA,GAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,OAAA,GAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,WAAA3J,EAAA,cAAA,SAAA2J,GAAA,IAAAC,EAAAD,EAAA,GAAA,OAAAA,GAAAA,EAAAC,EAAA,EAAA,EAAAD,EAAA,EAAAA,EAAA,GAAA,EAAA,KAAA,OAAAA,EAAAA,EAAAA,EAAA,EAAA,KAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,IAAAA,EAAA,IAAA,KAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,MAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,QAAAC,EAAA,IAAA,EAAAD,GAAA,GAAAA,EAAA,MAAA0Q,EAAA,OAAAra,EAAA,UAAA,SAAA2J,GAAA,OAAAlF,KAAA0uC,KAAA,KAAAxpC,EAAAA,KAAA3J,EAAA,SAAA,SAAA2J,GAAA,QAAAlF,KAAA0uC,KAAA,EAAAxpC,EAAAA,GAAA,KAAA3J,EAAA,YAAA,SAAA2J,GAAA,OAAAA,GAAA,GAAA,GAAA,IAAAlF,KAAA0uC,KAAA,EAAAxpC,EAAAA,GAAA,GAAA,IAAAlF,KAAA0uC,KAAA,GAAAxpC,GAAA,GAAAA,GAAA,MAAA0Q,EAAA,WAAA8iC,EAAA,SAAAvzC,EAAA8qC,EAAAyI,GAAA,IAAAl9C,EAAAL,EAAA,UAAAgK,EAAA,SAAAD,EAAAC,GAAAxK,KAAAuyK,IAAA,GAAAhoK,EAAAA,EAAA,EAAAvK,KAAAwyK,KAAAhoK,GAAAuzC,IAAAxzC,EAAA,EAAAA,EAAA,GAAAvK,KAAA2yK,IAAA3yK,KAAAwyK,IAAA7nH,GAAAtlD,KAAA27E,KAAA,EAAAhhF,KAAAuyK,MAAA,GAAAvyK,KAAAwyK,IAAA7nH,EAAA3qD,KAAAwyK,MAAA,GAAAj1H,EAAA18C,EAAAsC,UAAA,IAAAoH,EAAA,OAAAgzC,EAAAl6C,YAAAxC,EAAA08C,EAAAmgH,SAAApoH,EAAAiI,EAAAk1H,OAAA,SAAAloK,EAAAC,GAAA,OAAA,IAAA3J,EAAA0J,EAAAC,IAAA3J,IAAA,aAAA,SAAA0J,GAAA,OAAAvK,KAAAuyK,IAAAltK,KAAAsjC,IAAA,GAAA,GAAAp+B,GAAAlF,KAAAkwC,KAAAhrC,EAAAvK,KAAA2yK,KAAA3yK,KAAAwyK,KAAA,GAAA,IAAAz0H,EAAA,YAAA,SAAAxzC,GAAA,QAAAvK,KAAAuyK,IAAAltK,KAAAsjC,IAAA,EAAA,KAAAp+B,GAAAlF,KAAAkwC,KAAAhrC,EAAAvK,KAAA2yK,KAAA3yK,KAAAwyK,OAAA,IAAAz0H,EAAA,eAAA,SAAAxzC,GAAA,OAAAA,GAAA,GAAA,EAAAvK,KAAAuyK,IAAAltK,KAAAsjC,IAAA,EAAA,KAAAp+B,GAAAlF,KAAAkwC,KAAAhrC,EAAAvK,KAAA2yK,KAAA3yK,KAAAwyK,MAAA,GAAAxyK,KAAAuyK,IAAAltK,KAAAsjC,IAAA,GAAA,KAAAp+B,GAAAlF,KAAAkwC,KAAAhrC,EAAAvK,KAAA2yK,KAAA3yK,KAAAwyK,KAAA,GAAA,GAAA,MAAAv3J,EAAA,OAAAra,EAAA,UAAA,SAAA2J,GAAA,OAAA,EAAAlF,KAAAsjC,IAAA,GAAA,GAAAp+B,KAAA3J,EAAA,SAAA,SAAA2J,GAAA,OAAAlF,KAAAsjC,IAAA,EAAA,IAAAp+B,EAAA,IAAA,OAAA3J,EAAA,YAAA,SAAA2J,GAAA,OAAAA,GAAA,GAAA,EAAA,GAAAlF,KAAAsjC,IAAA,EAAA,IAAAp+B,EAAA,IAAA,IAAA,EAAAlF,KAAAsjC,IAAA,GAAA,IAAAp+B,EAAA,QAAA0Q,EAAA,OAAAra,EAAA,UAAA,SAAA2J,GAAA,OAAAlF,KAAAkwC,IAAAhrC,EAAAy+C,KAAApoD,EAAA,SAAA,SAAA2J,GAAA,OAAA,EAAAlF,KAAAyuB,IAAAvpB,EAAAy+C,KAAApoD,EAAA,YAAA,SAAA2J,GAAA,OAAA,IAAAlF,KAAAyuB,IAAAzuB,KAAA0uB,GAAAxpB,GAAA,MAAA/J,EAAA,oBAAA,CAAAwP,KAAA,SAAAxF,GAAA,OAAAD,EAAAvG,IAAAwG,MAAA,GAAA4tE,EAAAv3E,EAAAkyK,OAAA,SAAA,SAAA36F,EAAA9iC,EAAA,YAAA,SAAA8iC,EAAA5tE,EAAA,cAAA,SAAA81G,IAAA,KAAAq6C,SAAAM,WAAAN,SAAAC,SAAAnwJ,KAAAkwJ,GAAA,SAAApwJ,gBAAA,IAAAA,EAAAC,EAAA8qC,EAAA/qC,EAAA8nK,iBAAA9nK,EAAA8nK,kBAAA9nK,EAAA,IAAA+qC,EAAA09H,UAAA,CAAA,IAAAhqH,EAAAxoD,EAAA,SAAA+J,GAAA,IAAA,IAAAwzC,EAAAxzC,EAAAjC,MAAA,KAAAzH,EAAAy0C,EAAA9qC,EAAA,EAAAA,EAAAuzC,EAAAt9C,OAAA+J,IAAA3J,EAAAk9C,EAAAvzC,IAAA3J,EAAAA,EAAAk9C,EAAAvzC,KAAA,GAAA,OAAA3J,GAAAD,EAAAJ,EAAA,iBAAA43E,EAAA,MAAAn9D,EAAA,SAAA1Q,GAAA,IAAA,IAAA+qC,EAAA,GAAAyI,EAAAxzC,EAAA9J,OAAA+J,EAAA,EAAAA,IAAAuzC,EAAAzI,EAAAj1C,KAAAkK,EAAAC,OAAA,OAAA8qC,GAAA5oC,EAAA,aAAAqN,GAAAxP,EAAAlD,OAAAlE,UAAAhB,SAAAqI,EAAAD,EAAAvJ,KAAA,IAAA,SAAAs0C,GAAA,OAAA,MAAAA,IAAAA,aAAA1vC,OAAA,iBAAA0vC,KAAAA,EAAAj1C,MAAAkK,EAAAvJ,KAAAs0C,KAAA9qC,KAAA81G,EAAA,GAAA1sF,EAAA,SAAAmqB,EAAAl9C,EAAA08C,EAAAoN,GAAA3qD,KAAAizK,GAAA3yD,EAAAviE,GAAAuiE,EAAAviE,GAAAk1H,GAAA,IAAA3yD,EAAAviE,GAAA/9C,MAAAkzK,QAAA,KAAAlzK,KAAAG,KAAAo9C,EAAA,IAAAyL,EAAA,GAAAhpD,KAAAiT,MAAA,SAAArS,GAAA,IAAA,IAAAw3E,EAAAn9D,EAAAlB,EAAAs+B,EAAA3O,EAAA7oC,EAAAJ,OAAAm+B,EAAA8K,GAAA,IAAAA,IAAA0uC,EAAAkoC,EAAAz/G,EAAA6oC,KAAA,IAAA9V,EAAA/yB,EAAA6oC,GAAA,KAAAwpI,SAAAlqH,EAAAtf,GAAA0uC,EAAA86F,QAAAt0I,KAAAh+B,GAAAw3E,EAAA66F,GAAA5yK,KAAAL,MAAA,GAAA,IAAA4+B,GAAA2e,EAAA,IAAA7wC,GAAAuO,GAAA,iBAAA8iC,GAAAz1C,MAAA,MAAAmC,MAAAsP,EAAAvZ,EAAAya,EAAArN,KAAA,MAAAlB,GAAA1M,KAAAkzK,QAAA31H,EAAAx8C,MAAAw8C,EAAAyL,GAAA2B,IAAArV,EAAA5oC,GAAAqN,IAAAs+B,EAAA,oBAAAj3C,QAAAA,OAAAC,UAAA,mBAAAslC,QAAAA,OAAAC,IAAAD,QAAAp8B,EAAA4oK,iBAAA5oK,EAAA4oK,iBAAA,IAAA,IAAAp1H,EAAAz1C,MAAA,KAAAmC,MAAA,GAAA,WAAA,OAAAsP,IACA,aADAgkC,GAAA1F,IAAAj3C,OAAAC,QAAA0Y,IAAA2vB,EAAA,EAAAA,EAAA1pC,KAAAizK,GAAAxyK,OAAAipC,IAAA1pC,KAAAizK,GAAAvpI,GAAAz2B,SAAAjT,KAAAiT,OAAA,IAAAolC,EAAA9tC,EAAA0wJ,UAAA,SAAA1wJ,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAA,IAAAnqB,EAAArpB,EAAAC,EAAA8qC,EAAAyI,IAAArU,EAAA9oC,EAAA0xK,OAAA,SAAA/nK,EAAAC,EAAA8qC,GAAA,OAAA9qC,EAAAA,GAAA,aAAA6tC,EAAA9tC,EAAA,GAAA,WAAA,OAAAC,GAAA8qC,GAAA9qC,GAAA6tC,EAAA0oH,QAAAzrH,EAAA,IAAAiI,EAAA3e,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA7Y,EAAA,GAAAqnC,EAAA1jB,EAAA,cAAA,SAAAn/B,EAAAC,EAAA8qC,EAAAyI,GAAA/9C,KAAA+jK,MAAAx5J,EAAAvK,KAAAozK,MAAA99H,GAAA,EAAAt1C,KAAAqzK,OAAAt1H,GAAA,EAAA/9C,KAAAszK,QAAA9oK,EAAAo0B,EAAA58B,OAAAwI,GAAAo0B,IAAA,GAAA2D,EAAA6qB,EAAAppD,IAAA,GAAAzC,EAAA6rD,EAAAntC,SAAA,SAAA1V,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAA,IAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAgK,EAAAlC,MAAA,KAAA8vE,EAAA53E,EAAAC,OAAAwa,GAAAq6B,GAAA,4BAAAhtC,MAAA,MAAA,IAAA8vE,GAAA,IAAA76B,EAAA/8C,EAAA43E,GAAAv3E,EAAAk9C,EAAArU,EAAA,UAAA6T,EAAA,MAAA,GAAA38C,EAAA0wB,OAAAisB,IAAA,GAAAoN,EAAA1vC,EAAAxa,QAAA,IAAAkqD,GAAA3B,EAAA/tC,EAAA0vC,GAAApoB,EAAAgb,EAAA,IAAAyL,GAAAzmB,EAAAymB,EAAAzL,GAAA18C,EAAAmoD,GAAAz+C,EAAAmzJ,SAAAnzJ,EAAAA,EAAAy+C,IAAA,IAAAz+C,GAAA,KAAAgzC,EAAA6P,EAAAjqD,WAAAs6J,UAAA,EAAAlgH,EAAAmgH,SAAA,SAAAnzJ,GAAA,GAAAvK,KAAA+jK,MAAA,OAAA/jK,KAAAszK,QAAA,GAAA/oK,EAAAvK,KAAA+jK,MAAAhjK,MAAA,KAAAf,KAAAszK,SAAA,IAAA9oK,EAAAxK,KAAAozK,MAAA99H,EAAAt1C,KAAAqzK,OAAAt1H,EAAA,IAAAvzC,EAAA,EAAAD,EAAA,IAAAC,EAAAD,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,GAAA,OAAA,IAAA+qC,EAAAyI,GAAAA,EAAA,IAAAzI,EAAAyI,GAAAA,EAAAA,EAAA,IAAAzI,EAAAyI,GAAAA,EAAAA,EAAAA,EAAA,IAAAzI,IAAAyI,GAAAA,EAAAA,EAAAA,EAAAA,GAAA,IAAAvzC,EAAA,EAAAuzC,EAAA,IAAAvzC,EAAAuzC,EAAAxzC,EAAA,GAAAwzC,EAAA,EAAA,EAAAA,EAAA,GAAAl9C,GAAAk9C,EAAA,CAAA,SAAA,OAAA,QAAA,QAAA,iBAAAt9C,QAAA,IAAAI,GAAA08C,EAAAQ,EAAAl9C,GAAA,SAAAA,EAAAU,EAAA,IAAA6rD,EAAA,KAAA,KAAA,EAAAvsD,GAAA08C,EAAA,WAAA,GAAAh8C,EAAA,IAAA6rD,EAAA,KAAA,KAAA,EAAAvsD,GAAA08C,EAAA,UAAA,IAAA18C,EAAA,YAAA,KAAAU,EAAA,IAAA6rD,EAAA,KAAA,KAAA,EAAAvsD,GAAA08C,EAAA,aAAAhb,EAAA5O,OAAA/yB,EAAA0wB,OAAAiiJ,OAAArB,OAAA3vI,EAAA1O,MAAAjzB,EAAA0wB,OAAAkiJ,KAAArB,UAAA,IAAAtpI,EAAAa,EAAA,yBAAA,SAAAn/B,GAAAvK,KAAAopC,WAAA,GAAAppC,KAAAyzK,aAAAlpK,GAAAvK,QAAAu9C,EAAA1U,EAAA1lC,WAAAuM,iBAAA,SAAAnF,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAAA,EAAAA,GAAA,EAAA,IAAA08C,EAAA/8C,EAAAI,EAAAZ,KAAAopC,WAAA7+B,GAAA6tE,EAAA,EAAA,IAAA,MAAAx3E,IAAAZ,KAAAopC,WAAA7+B,GAAA3J,EAAA,IAAAJ,EAAAI,EAAAH,QAAA,IAAAD,IAAA+8C,EAAA38C,EAAAJ,IAAA80C,IAAA9qC,GAAA+yC,EAAA3e,IAAA0W,EAAA10C,EAAAF,OAAAF,EAAA,GAAA,IAAA43E,GAAA76B,EAAA0tH,GAAApqK,IAAAu3E,EAAA53E,EAAA,GAAAI,EAAAF,OAAA03E,EAAA,EAAA,CAAA9iC,EAAA9qC,EAAAo0B,EAAA0W,EAAAsO,GAAA7F,EAAAktH,GAAApqK,IAAAb,OAAA2qD,GAAA3B,GAAA2B,EAAA+oH,QAAAn2H,EAAArhC,oBAAA,SAAA3R,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAA/9C,KAAAopC,WAAA7+B,GAAA,GAAAwzC,EAAA,IAAAzI,EAAAyI,EAAAt9C,QAAA,IAAA60C,GAAA,GAAAyI,EAAAzI,GAAAA,IAAA9qC,EAAA,YAAAuzC,EAAAr9C,OAAA40C,EAAA,IAAAiI,EAAA/T,cAAA,SAAAj/B,GAAA,IAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAAb,KAAAopC,WAAA7+B,GAAA,GAAA1J,EAAA,IAAA2J,EAAA3J,EAAAJ,OAAA60C,EAAAt1C,KAAAyzK,cAAA,IAAAjpK,IAAAuzC,EAAAl9C,EAAA2J,MAAAuzC,EAAA6F,GAAA7F,EAAAzI,EAAAt0C,KAAA+8C,EAAAnf,GAAA0W,EAAA,CAAAp1C,KAAAqK,EAAA1K,OAAAy1C,IAAAyI,EAAAzI,EAAAt0C,KAAA+8C,EAAAnf,GAAA0W,KAAA,IAAA,IAAAyI,EAAApO,EAAAplC,EAAAo1G,sBAAAlpE,EAAAlsC,EAAAopK,qBAAAxQ,EAAAh7J,KAAAD,KAAA,WAAA,OAAA,IAAAC,MAAAyrK,WAAArwD,EAAA4/C,IAAAtiK,GAAAk9C,EAAA,CAAA,KAAA,MAAA,SAAA,MAAAt9C,QAAA,IAAAI,IAAA8uC,GAAAA,EAAAplC,EAAAwzC,EAAAl9C,GAAA,yBAAA41C,EAAAlsC,EAAAwzC,EAAAl9C,GAAA,yBAAA0J,EAAAwzC,EAAAl9C,GAAA,+BAAA6oC,EAAA,SAAA,SAAAn/B,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAA/8C,EAAAI,EAAAZ,KAAAib,EAAAkoJ,IAAAppJ,KAAA,IAAAvP,IAAAmlC,IAAA,OAAA2wE,EAAA,IAAA1sF,EAAA,GAAA8V,EAAA,SAAAn/B,GAAA,IAAAogD,EAAA3B,EAAAm6G,IAAA5/C,EAAAjD,EAAAt3D,IAAA/tC,GAAA+tC,EAAAp1B,GAAA2vF,GAAAv6D,EAAApoD,EAAAk3B,MAAAyrF,EAAAtoG,GAAA,IAAAzQ,EAAA5J,EAAAk3B,KAAAt3B,IAAA80C,GAAA,EAAA9qC,IAAA,IAAAD,KAAA3J,EAAA0/J,QAAA9/J,GAAAgK,GAAA+yC,GAAA/yC,EAAA,KAAA+yC,EAAA/yC,GAAAmgD,GAAA,IAAA,IAAApgD,IAAA1J,EAAAk9C,EAAArU,IAAAihB,GAAA/pD,EAAA4oC,cAAA,SAAAX,EAAA7nC,KAAAJ,GAAAA,EAAAk3B,KAAAl3B,EAAA0/J,MAAA,EAAA1/J,EAAAm0B,KAAA,WAAA2U,GAAA,IAAA9oC,EAAAs7J,aAAA,SAAA3xJ,EAAAC,GAAA81G,EAAA/1G,GAAA,KAAAqpB,EAAAvuB,KAAAykC,IAAAt/B,EAAA81G,EAAA,IAAA1/G,EAAAizK,MAAA,WAAA,MAAAhzK,KAAAkZ,GAAA08B,EAAAA,EAAAze,cAAAn3B,GAAAk9C,EAAArxC,EAAA7L,EAAA,KAAAD,IAAA+pD,IAAA3B,GAAA,KAAApoD,EAAA8yK,KAAA,SAAAnpK,GAAA,OAAA1J,EAAAD,EAAAizK,QAAAtpK,EAAA0Q,IAAAsoG,GAAAA,EAAA4/C,KAAA,GAAAviK,EAAA0/J,QAAA/8C,EAAA4/C,IAAA7iD,EAAA,GAAAviE,EAAA,IAAAzI,EAAA5oC,EAAAqN,GAAA41B,EAAAA,EAAA,SAAAplC,GAAA,OAAAgV,WAAAhV,EAAA,KAAA/J,EAAAI,EAAAk3B,MAAA,EAAA,IAAAl3B,IAAA+pD,IAAA3B,GAAA,GAAAtf,EAAA,IAAA9oC,EAAA2hI,IAAA,SAAAh4H,GAAA,OAAAtJ,UAAAR,QAAA88C,EAAA,IAAAjI,EAAA/qC,IAAA,IAAA/J,EAAAR,KAAA83B,KAAAylB,OAAA38C,EAAA8yK,QAAAp+H,GAAA10C,EAAAkzK,OAAA,SAAAvpK,GAAA,OAAAtJ,UAAAR,QAAAG,EAAAizK,QAAA95J,EAAAxP,OAAA3J,EAAA2hI,IAAAjtF,IAAAv7B,GAAAnZ,EAAA2hI,IAAAh4H,GAAAgV,WAAA,WAAA,SAAAxF,GAAAnZ,EAAA0/J,MAAA,GAAA,WAAAh/J,SAAAyyK,iBAAAnzK,EAAAkzK,QAAA,IAAA,SAAAv2H,EAAA38C,EAAAozK,OAAA7wK,UAAA,IAAAvC,EAAAd,OAAA0oC,iBAAAnlC,YAAAzC,EAAAozK,OAAA,IAAA5Q,EAAA15H,EAAA,iBAAA,SAAAn/B,EAAAC,GAAAxK,KAAAq7J,KAAA7wJ,EAAAA,GAAA,GAAAxK,KAAAi9J,UAAAj9J,KAAAs9J,eAAA/yJ,GAAA,EAAAvK,KAAA48J,OAAAn0H,OAAAj+B,EAAAqtB,QAAA,EAAA73B,KAAAqgK,WAAA,EAAArgK,KAAA89J,SAAA,IAAAtzJ,EAAAgyJ,gBAAAx8J,KAAAugB,KAAA/V,EAAA+V,KAAAvgB,KAAA29J,WAAA,IAAAnzJ,EAAAypK,SAAA3M,IAAAt+G,GAAA2B,EAAA+oH,QAAAp+H,EAAAt1C,KAAAq7J,KAAAkE,UAAAiI,EAAAF,GAAAhsJ,IAAAtb,KAAAs1C,EAAAonH,OAAA18J,KAAAq7J,KAAArmB,QAAAh1I,KAAAg1I,QAAA,MAAArqF,EAAAy4G,EAAAjH,OAAA,IAAAv7J,EAAAozK,QAAAz2H,EAAA6lH,EAAAjgK,WAAAu4J,OAAAn+G,EAAAu+G,IAAAv+G,EAAAs/G,SAAAt/G,EAAA4gH,SAAA,EAAA5gH,EAAA2/G,WAAA3/G,EAAAm/G,MAAA,EAAAn/G,EAAAggH,cAAA,EAAAhgH,EAAA6/G,MAAA7/G,EAAAokH,MAAApkH,EAAA+gH,UAAA/gH,EAAAk/G,UAAAl/G,EAAAykH,SAAA,KAAAzkH,EAAA4gH,SAAA,EAAA,IAAAiL,EAAA,WAAApgH,GAAA,IAAAm6G,IAAA5/C,GAAA54D,EAAA+oH,OAAAn0J,WAAA6pJ,EAAA,MAAAA,IAAA7rH,EAAAo/F,KAAA,SAAApyI,EAAAC,GAAA,OAAA,MAAAD,GAAAvK,KAAAw+H,KAAAj0H,EAAAC,GAAAxK,KAAAi0K,UAAA,GAAAj/B,QAAA,IAAAz3F,EAAAq/F,MAAA,SAAAryI,EAAAC,GAAA,OAAA,MAAAD,GAAAvK,KAAAw+H,KAAAj0H,EAAAC,GAAAxK,KAAAg1I,QAAA,IAAAz3F,EAAA22H,OAAA,SAAA3pK,EAAAC,GAAA,OAAA,MAAAD,GAAAvK,KAAAw+H,KAAAj0H,EAAAC,GAAAxK,KAAAg1I,QAAA,IAAAz3F,EAAAihF,KAAA,SAAAj0H,EAAAC,GAAA,OAAAxK,KAAA+/J,UAAAt3H,OAAAl+B,IAAA,IAAAC,IAAA+yC,EAAA42H,QAAA,SAAA5pK,EAAAC,GAAA,OAAAxK,KAAAi0K,UAAA,GAAAj/B,QAAA,GAAA+qB,UAAAx1J,GAAAvK,KAAA48J,OAAA,GAAA,IAAApyJ,GAAA,IAAA+yC,EAAAzhC,QAAA,SAAAvR,EAAAC,GAAA,OAAA,MAAAD,GAAAvK,KAAAw+H,KAAAj0H,GAAAvK,KAAAq9J,gBAAA7yJ,GAAAxK,KAAAi0K,UAAA,GAAAj/B,QAAA,IAAAz3F,EAAAwrB,OAAA,SAAAx+D,EAAAC,EAAA8qC,KAAAiI,EAAA6+G,WAAA,WAAA,OAAAp8J,KAAA08J,MAAA18J,KAAAk9J,WAAA,EAAAl9J,KAAA68J,SAAA78J,KAAA87J,KAAA,EAAA97J,KAAAu9J,cAAA,GAAAv9J,KAAA87J,KAAA97J,KAAAgiK,UAAAhiK,KAAA28J,UAAA,GAAA38J,MAAAu9C,EAAA+lH,SAAA,WAAA,IAAA/4J,EAAAC,EAAAxK,KAAAy8J,UAAAnnH,EAAAt1C,KAAA40I,WAAA,OAAApqI,IAAAxK,KAAA87J,MAAA97J,KAAAm+J,SAAA3zJ,EAAA84J,aAAA/4J,EAAAC,EAAAg3J,YAAAlsH,GAAA/qC,EAAA+qC,EAAAt1C,KAAAq9J,gBAAAr9J,KAAAqgK,YAAA9iH,EAAAo/G,SAAA,SAAApyJ,EAAAC,GAAA,OAAAw+C,GAAA2B,EAAA+oH,OAAA1zK,KAAA87J,KAAAvxJ,EAAAvK,KAAA89J,QAAA99J,KAAAsjK,YAAA,IAAA94J,IAAAD,IAAAvK,KAAAgiK,SAAAhiK,KAAAy8J,UAAAnhJ,IAAAtb,KAAAA,KAAA40I,WAAA50I,KAAA48J,SAAAryJ,GAAAvK,KAAAgiK,UAAAhiK,KAAAy8J,UAAA6E,QAAAthK,MAAA,KAAA,GAAAu9C,EAAAmlH,MAAA,SAAAn4J,EAAAC,GAAA,OAAAxK,KAAA28J,UAAA,GAAA,IAAAp/G,EAAAs+G,KAAA,SAAAtxJ,EAAAC,GAAA,OAAAxK,KAAA0iK,MAAAn4J,EAAAC,GAAAxK,MAAAu9C,EAAA8+G,SAAA,SAAA9xJ,GAAA,IAAA,IAAAC,EAAAD,EAAAvK,KAAAA,KAAAgiK,SAAAx3J,GAAAA,EAAAkxJ,QAAA,EAAAlxJ,EAAAA,EAAAw3J,SAAA,OAAAhiK,MAAAu9C,EAAAojH,kBAAA,SAAAp2J,GAAA,IAAA,IAAAC,EAAAD,EAAA9J,OAAA60C,EAAA/qC,EAAAvI,UAAA,IAAAwI,GAAA,WAAAD,EAAAC,KAAA8qC,EAAA9qC,GAAAxK,MAAA,OAAAs1C,GAAAiI,EAAA8gH,UAAA,SAAA9zJ,GAAA,IAAAC,EAAAxK,KAAAq7J,KAAA7wJ,EAAAD,GAAAxJ,MAAAyJ,EAAAD,EAAA,UAAAC,EAAAs0J,eAAA9+J,KAAAwK,EAAAD,EAAA,WAAAwb,IAAAw3B,EAAA62H,cAAA,SAAA7pK,EAAAC,EAAA8qC,EAAAyI,GAAA,GAAA,QAAAxzC,GAAA,IAAAywJ,OAAA,EAAA,GAAA,CAAA,IAAAn6J,EAAAb,KAAAq7J,KAAA,GAAA,IAAAp6J,UAAAR,OAAA,OAAAI,EAAA0J,GAAA,MAAAC,SAAA3J,EAAA0J,IAAA1J,EAAA0J,GAAAC,EAAA3J,EAAA0J,EAAA,UAAAwP,EAAAu7B,KAAA,IAAAA,EAAA1nC,KAAA,IAAA3L,QAAA,UAAAjC,KAAA2gK,kBAAArrH,GAAAA,EAAAz0C,EAAA0J,EAAA,SAAAwzC,GAAA,aAAAxzC,IAAAvK,KAAAs+J,UAAA9zJ,GAAA,OAAAxK,MAAAu9C,EAAA1lB,MAAA,SAAAttB,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAy8J,UAAAgE,mBAAAzgK,KAAAi1B,UAAAj1B,KAAA40I,WAAArqI,EAAAvK,KAAA48J,QAAA58J,KAAA48J,OAAAryJ,EAAAvK,MAAAA,KAAA48J,QAAAr/G,EAAA/pB,SAAA,SAAAjpB,GAAA,OAAAtJ,UAAAR,QAAAT,KAAAi9J,UAAAj9J,KAAAs9J,eAAA/yJ,EAAAvK,KAAAq8J,UAAA,GAAAr8J,KAAAy8J,UAAAgE,mBAAA,EAAAzgK,KAAA08J,OAAA18J,KAAA08J,MAAA18J,KAAAi9J,WAAA,IAAA1yJ,GAAAvK,KAAA+/J,UAAA//J,KAAAk9J,YAAA3yJ,EAAAvK,KAAAi9J,YAAA,GAAAj9J,OAAAA,KAAA07J,QAAA,EAAA17J,KAAAi9J,YAAA1/G,EAAA8/G,cAAA,SAAA9yJ,GAAA,OAAAvK,KAAA07J,QAAA,EAAAz6J,UAAAR,OAAAT,KAAAwzB,SAAAjpB,GAAAvK,KAAAs9J,gBAAA//G,EAAAzlB,KAAA,SAAAvtB,EAAAC,GAAA,OAAAvJ,UAAAR,QAAAT,KAAA07J,QAAA17J,KAAAq9J,gBAAAr9J,KAAA+/J,UAAAx1J,EAAAvK,KAAAi9J,UAAAj9J,KAAAi9J,UAAA1yJ,EAAAC,IAAAxK,KAAA08J,OAAAn/G,EAAAwiH,UAAA,SAAAx1J,EAAAC,EAAA8qC,GAAA,GAAA0T,GAAA2B,EAAA+oH,QAAAzyK,UAAAR,OAAA,OAAAT,KAAAk9J,WAAA,GAAAl9J,KAAAy8J,UAAA,CAAA,GAAAlyJ,EAAA,IAAA+qC,IAAA/qC,GAAAvK,KAAAq9J,iBAAAr9J,KAAAy8J,UAAAgE,kBAAA,CAAAzgK,KAAA07J,QAAA17J,KAAAq9J,gBAAA,IAAAt/G,EAAA/9C,KAAAs9J,eAAAz8J,EAAAb,KAAAy8J,UAAA,GAAA1+G,EAAAxzC,IAAA+qC,IAAA/qC,EAAAwzC,GAAA/9C,KAAA40I,YAAA50I,KAAAm+J,QAAAn+J,KAAAyhK,WAAA5gK,EAAA67J,QAAA18J,KAAA29J,UAAA5/G,EAAAxzC,EAAAA,GAAAvK,KAAAqgK,WAAAx/J,EAAA66J,QAAA17J,KAAAq8J,UAAA,GAAAx7J,EAAA47J,UAAA,KAAA57J,EAAA47J,WAAA57J,EAAA47J,UAAAC,SAAA77J,EAAA+zI,WAAA/zI,EAAAq8J,YAAAr8J,EAAAw/J,YAAAx/J,EAAAk/J,UAAAl/J,EAAAq8J,YAAA,GAAAr8J,EAAAA,EAAA47J,UAAAz8J,KAAA87J,KAAA97J,KAAA28J,UAAA,GAAA,GAAA38J,KAAAk9J,aAAA3yJ,GAAA,IAAAvK,KAAAi9J,YAAA8L,EAAAtoK,QAAAupK,IAAAhqK,KAAA+oE,OAAAx+D,EAAAC,GAAA,GAAAu+J,EAAAtoK,QAAAupK,KAAA,OAAAhqK,MAAAu9C,EAAAx/B,SAAAw/B,EAAAgjH,cAAA,SAAAh2J,EAAAC,GAAA,IAAA8qC,EAAAt1C,KAAAwzB,WAAA,OAAAvyB,UAAAR,OAAAT,KAAA+/J,UAAAzqH,EAAA/qC,EAAAC,GAAA8qC,EAAAt1C,KAAA08J,MAAApnH,EAAAt1C,KAAAu8J,OAAAh/G,EAAAtoB,UAAA,SAAA1qB,GAAA,OAAAtJ,UAAAR,QAAA8J,IAAAvK,KAAA40I,aAAA50I,KAAA40I,WAAArqI,EAAAvK,KAAAgiK,UAAAhiK,KAAAgiK,SAAAtB,eAAA1gK,KAAAgiK,SAAA1mJ,IAAAtb,KAAAuK,EAAAvK,KAAA48J,SAAA58J,MAAAA,KAAA40I,YAAAr3F,EAAA8jF,QAAA,SAAA92H,GAAA,OAAAvK,KAAA40I,YAAA,GAAArqI,EAAAvK,KAAAq9J,gBAAAr9J,KAAAwzB,YAAAxzB,KAAAqgK,YAAA9iH,EAAA6jF,UAAA,SAAA72H,GAAA,OAAAtJ,UAAAR,QAAA8J,EAAAA,GAAA6tE,EAAAp4E,KAAAy8J,WAAAz8J,KAAAy8J,UAAAgE,oBAAAnrH,GAAA9qC,EAAAxK,KAAAyhK,aAAA,IAAAj3J,EAAAA,EAAAxK,KAAAy8J,UAAAsD,YAAA//J,KAAA40I,WAAAt/F,GAAAA,EAAAt1C,KAAA40I,YAAA50I,KAAAqgK,WAAA91J,GAAAvK,KAAAqgK,WAAA91J,EAAAvK,KAAAq8J,UAAA,IAAAr8J,KAAAqgK,WAAA,IAAA/qH,GAAAiI,EAAA02H,SAAA,SAAA1pK,GAAA,OAAAtJ,UAAAR,QAAA8J,GAAAvK,KAAA29J,YAAA39J,KAAA29J,UAAApzJ,EAAAvK,KAAA+/J,UAAA//J,KAAAy8J,YAAAz8J,KAAAy8J,UAAAgE,kBAAAzgK,KAAAq9J,gBAAAr9J,KAAAk9J,WAAAl9J,KAAAk9J,YAAA,IAAAl9J,MAAAA,KAAA29J,WAAApgH,EAAAy3F,OAAA,SAAAzqI,GAAA,IAAAtJ,UAAAR,OAAA,OAAAT,KAAAm+J,QAAA,IAAA3zJ,EAAA8qC,EAAAyI,EAAA/9C,KAAAy8J,UAAA,OAAAlyJ,GAAAvK,KAAAm+J,SAAApgH,IAAAiL,GAAAz+C,GAAAogD,EAAA+oH,OAAAp+H,GAAA9qC,EAAAuzC,EAAAyjH,WAAAxhK,KAAAyhK,YAAAl3J,GAAAwzC,EAAA0iH,oBAAAzgK,KAAA40I,YAAAt/F,EAAAt1C,KAAAq8J,UAAA,IAAAr8J,KAAAyhK,WAAAl3J,EAAAC,EAAA,KAAAxK,KAAAm+J,QAAA5zJ,EAAAvK,KAAA89J,QAAA99J,KAAAsjK,YAAA/4J,GAAA,GAAA+qC,GAAAt1C,KAAA68J,UAAA78J,KAAAwzB,aAAAhpB,EAAAuzC,EAAA0iH,kBAAAzgK,KAAAk9J,YAAA1yJ,EAAAxK,KAAA40I,YAAA50I,KAAAqgK,WAAArgK,KAAA+oE,OAAAv+D,EAAAA,IAAAxK,KAAAk9J,YAAA,KAAAl9J,KAAA87J,MAAAvxJ,GAAAvK,KAAA28J,UAAA,GAAA,GAAA38J,MAAA,IAAAqpK,EAAA3/H,EAAA,sBAAA,SAAAn/B,GAAA64J,EAAApiK,KAAAhB,KAAA,EAAAuK,GAAAvK,KAAA49J,mBAAA59J,KAAAygK,mBAAA,KAAAljH,EAAA8rH,EAAAlmK,UAAA,IAAAigK,GAAA//J,YAAAgmK,EAAA9rH,EAAAs+G,OAAAC,KAAA,EAAAv+G,EAAAmiH,OAAAniH,EAAAokH,MAAApkH,EAAAilH,QAAA,KAAAjlH,EAAAmjH,eAAA,EAAAnjH,EAAAjiC,IAAAiiC,EAAAxwB,OAAA,SAAAxiB,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAAl9C,EAAA08C,EAAA,GAAAhzC,EAAAqqI,WAAAnsG,OAAAj+B,GAAA,GAAAD,EAAAqyJ,OAAAryJ,EAAA4zJ,SAAAn+J,OAAAuK,EAAAkyJ,YAAAlyJ,EAAAk3J,WAAAl3J,EAAAqqI,YAAA50I,KAAAwhK,UAAAj3J,EAAAqqI,YAAArqI,EAAA81J,YAAA91J,EAAAy3J,UAAAz3J,EAAAy3J,SAAAV,QAAA/2J,GAAA,GAAAA,EAAAy3J,SAAAz3J,EAAAkyJ,UAAAz8J,KAAAuK,EAAAuxJ,KAAAvxJ,EAAAoyJ,UAAA,GAAA,GAAA97J,EAAAb,KAAA2hK,MAAA3hK,KAAA0gK,cAAA,IAAAnjH,EAAAhzC,EAAAqqI,WAAA/zI,GAAAA,EAAA+zI,WAAAr3F,GAAA18C,EAAAA,EAAAuhK,MAAA,OAAAvhK,GAAA0J,EAAA6yJ,MAAAv8J,EAAAu8J,MAAAv8J,EAAAu8J,MAAA7yJ,IAAAA,EAAA6yJ,MAAAp9J,KAAA0/J,OAAA1/J,KAAA0/J,OAAAn1J,GAAAA,EAAA6yJ,MAAA7yJ,EAAA6yJ,MAAAgF,MAAA73J,EAAAvK,KAAA2hK,MAAAp3J,EAAAA,EAAA63J,MAAAvhK,EAAAb,KAAAwiK,QAAAj4J,EAAAvK,KAAAy8J,WAAAz8J,KAAAq8J,UAAA,GAAAr8J,MAAAu9C,EAAA+jH,QAAA,SAAA/2J,EAAAC,GAAA,OAAAD,EAAAy3J,WAAAhiK,OAAAwK,GAAAD,EAAAoyJ,UAAA,GAAA,GAAApyJ,EAAA63J,MAAA73J,EAAA63J,MAAAhF,MAAA7yJ,EAAA6yJ,MAAAp9J,KAAA0/J,SAAAn1J,IAAAvK,KAAA0/J,OAAAn1J,EAAA6yJ,OAAA7yJ,EAAA6yJ,MAAA7yJ,EAAA6yJ,MAAAgF,MAAA73J,EAAA63J,MAAApiK,KAAA2hK,QAAAp3J,IAAAvK,KAAA2hK,MAAAp3J,EAAA63J,OAAA73J,EAAA6yJ,MAAA7yJ,EAAA63J,MAAA73J,EAAAy3J,SAAA,KAAAz3J,IAAAvK,KAAAwiK,UAAAxiK,KAAAwiK,QAAAxiK,KAAA2hK,OAAA3hK,KAAAy8J,WAAAz8J,KAAAq8J,UAAA,IAAAr8J,MAAAu9C,EAAAwrB,OAAA,SAAAx+D,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAAb,KAAA0/J,OAAA,IAAA1/J,KAAAk9J,WAAAl9J,KAAA08J,MAAA18J,KAAAu9J,aAAAhzJ,EAAA1J,GAAAk9C,EAAAl9C,EAAAu8J,OAAAv8J,EAAAi9J,SAAAvzJ,GAAA1J,EAAA+zI,aAAA/zI,EAAAs9J,WAAAt9J,EAAA88J,UAAA98J,EAAAkoE,QAAAloE,EAAA66J,OAAA76J,EAAAw8J,gBAAAx8J,EAAAy8J,iBAAA/yJ,EAAA1J,EAAA+zI,YAAA/zI,EAAAw/J,WAAA71J,EAAA8qC,GAAAz0C,EAAAkoE,QAAAx+D,EAAA1J,EAAA+zI,YAAA/zI,EAAAw/J,WAAA71J,EAAA8qC,IAAAz0C,EAAAk9C,GAAAR,EAAAikH,QAAA,WAAA,OAAAx4G,GAAA2B,EAAA+oH,OAAA1zK,KAAAk9J,YAAA,IAAAoM,EAAA5/H,EAAA,YAAA,SAAAl/B,EAAA8qC,EAAAyI,GAAA,GAAAqlH,EAAApiK,KAAAhB,KAAAs1C,EAAAyI,GAAA/9C,KAAA+oE,OAAAugG,EAAAnmK,UAAA4lE,OAAA,MAAAv+D,EAAA,KAAA,8BAAAxK,KAAAH,OAAA2K,EAAA,iBAAAA,GAAA8+J,EAAA7mK,SAAA+H,IAAAA,EAAA,IAAA3J,EAAA08C,EAAAoN,EAAA3B,EAAAx+C,EAAApH,QAAAoH,EAAA/J,QAAA+J,IAAAD,GAAAC,EAAA,KAAAA,EAAA,KAAAD,GAAAC,EAAA,GAAAxE,UAAAwE,EAAA,GAAAwY,QAAAxY,EAAAxE,UAAAxF,EAAAR,KAAAq7J,KAAAmE,UAAA,GAAAx/J,KAAAq0K,WAAA7zK,EAAA,MAAAA,EAAA0jH,EAAAolD,EAAAgL,kBAAA,iBAAA9zK,EAAAA,GAAA,EAAA0jH,EAAA1jH,IAAAwoD,GAAAx+C,aAAA5E,OAAA4E,EAAAnK,MAAA0Z,EAAAvP,KAAA,iBAAAA,EAAA,GAAA,IAAAxK,KAAAuxK,SAAA5mH,EAAA1vC,EAAAzQ,GAAAxK,KAAA2xK,YAAA,GAAA3xK,KAAAu0K,UAAA,GAAA1zK,EAAA,EAAAA,EAAA8pD,EAAAlqD,OAAAI,KAAA08C,EAAAoN,EAAA9pD,IAAA,iBAAA08C,EAAAA,EAAA98C,QAAA88C,IAAAhzC,GAAAgzC,EAAA,KAAAA,EAAA,KAAAhzC,GAAAgzC,EAAA,GAAAv3C,UAAAu3C,EAAA,GAAAv6B,QAAAu6B,EAAAv3C,WAAA2kD,EAAAjqD,OAAAG,IAAA,GAAAb,KAAAuxK,SAAA5mH,EAAAA,EAAA3oD,OAAAiZ,EAAAsiC,MAAAv9C,KAAAu0K,UAAA1zK,GAAAopK,EAAA1sH,EAAAv9C,MAAA,GAAA,IAAAQ,GAAA,EAAAR,KAAAu0K,UAAA1zK,GAAAJ,QAAAsmC,EAAAwW,EAAAv9C,KAAA,KAAA,EAAAA,KAAAu0K,UAAA1zK,KAAA,iBAAA08C,EAAAoN,EAAA9pD,KAAAyoK,EAAA7mK,SAAA86C,KAAAoN,EAAAjqD,OAAAG,EAAA,EAAA,GAAA8pD,EAAAjqD,OAAAG,IAAA,QAAAb,KAAA2xK,YAAA,GAAA3xK,KAAAu0K,UAAAtK,EAAAz/J,EAAAxK,MAAA,GAAA,IAAAQ,GAAA,EAAAR,KAAAu0K,UAAA9zK,QAAAsmC,EAAAv8B,EAAAxK,KAAA,KAAA,EAAAA,KAAAu0K,YAAAv0K,KAAAq7J,KAAAmB,iBAAA,IAAAlnH,GAAA,IAAAt1C,KAAA48J,SAAA,IAAA58J,KAAAq7J,KAAAmB,mBAAAx8J,KAAA08J,OAAAtkF,EAAAp4E,KAAA+oE,QAAA/oE,KAAA48J,WAAA,GAAA2M,EAAA,SAAA/+J,GAAA,OAAAA,GAAAA,EAAA/J,QAAA+J,IAAAD,GAAAC,EAAA,KAAAA,EAAA,KAAAD,GAAAC,EAAA,GAAAxE,UAAAwE,EAAA,GAAAwY,QAAAxY,EAAAxE,YAAAu3C,EAAA+rH,EAAAnmK,UAAA,IAAAigK,GAAA//J,YAAAimK,EAAA/rH,EAAAs+G,OAAAC,KAAA,EAAAv+G,EAAAg/G,MAAA,EAAAh/G,EAAAw/G,SAAAx/G,EAAAg0H,SAAAh0H,EAAAi3H,kBAAAj3H,EAAA6gH,SAAA,KAAA7gH,EAAAu/G,wBAAAv/G,EAAA2gH,OAAA,EAAAoL,EAAA/mK,QAAA,SAAA+mK,EAAAmL,YAAAl3H,EAAAigH,MAAA,IAAApwG,EAAA,KAAA,KAAA,EAAA,GAAAk8G,EAAAgL,iBAAA,OAAAhL,EAAAnN,OAAAxxG,EAAA2+G,EAAAoL,UAAA,IAAApL,EAAApN,aAAA,SAAA3xJ,EAAAC,GAAAmgD,EAAAuxG,aAAA3xJ,EAAAC,IAAA8+J,EAAA7mK,SAAA8H,EAAAw8B,GAAAx8B,EAAA/H,QAAA,SAAAgI,GAAA,IAAA8qC,EAAA/qC,EAAAw8B,GAAAx8B,EAAA/H,OAAA,OAAA8yC,GAAAg0H,EAAA7mK,SAAA6yC,GAAA9qC,GAAA,oBAAAlJ,SAAAkJ,EAAAlJ,SAAAwM,iBAAAxM,SAAAwM,iBAAAtD,GAAAlJ,SAAA6L,eAAA,MAAA3C,EAAA4rD,OAAA,GAAA5rD,EAAAwwJ,OAAA,GAAAxwJ,IAAA,IAAAu+J,EAAA,GAAAU,EAAA,GAAAC,EAAA,iDAAAC,EAAA,SAAAp/J,GAAA,IAAA,IAAAC,EAAA8qC,EAAAt1C,KAAA+8J,SAAAznH,GAAA9qC,EAAA8qC,EAAAgkF,KAAA/uH,EAAAvK,KAAA4N,KAAA,IAAA5N,KAAA2T,MAAA2hC,EAAAA,EAAA/qC,EAAA+qC,EAAA1W,EAAA0W,EAAA5L,EAAAl/B,EAAAnF,KAAAwrC,MAAArmC,GAAAA,EAAA,OAAA,KAAAA,IAAAA,EAAA,GAAA8qC,EAAAiI,EAAAjI,EAAAq/H,GAAAr/H,EAAAvvB,EAAAuvB,EAAA1hB,GAAA0hB,EAAAq/H,GAAAnqK,GAAA8qC,EAAAvvB,EAAAuvB,EAAA1hB,GAAAppB,GAAA8qC,EAAAvvB,EAAAuvB,EAAA1hB,GAAAppB,EAAA8qC,EAAAA,EAAA8nH,OAAAmK,EAAA,SAAAh9J,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAAl9C,EAAA08C,EAAAyL,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAA,CAAA1Q,EAAAC,GAAAkC,EAAA,EAAAqN,EAAA,GAAAumG,EAAA,EAAA,IAAArlG,EAAAtH,MAAApJ,EAAA+qC,IAAAA,EAAAr6B,GAAA1Q,EAAA0Q,EAAA,GAAAzQ,EAAAyQ,EAAA,IAAAA,EAAAxa,OAAA,EAAAI,EAAA0J,EAAAsC,MAAA68J,IAAA,GAAAnsH,EAAA/yC,EAAAqC,MAAA68J,IAAA,GAAA3rH,IAAAA,EAAAq/G,MAAA,KAAAr/G,EAAAu7E,KAAA,EAAAr+G,EAAA8hJ,SAAAh/G,GAAAv9C,EAAA+8C,EAAA98C,OAAAuoD,EAAA,EAAAA,EAAAxoD,EAAAwoD,IAAAovB,EAAA76B,EAAAyL,GAAAjvC,IAAAnZ,EAAA4J,EAAAwwJ,OAAAtuJ,EAAAlC,EAAAvI,QAAAm2E,EAAA1rE,GAAAA,MAAAs8C,EAAApoD,EAAA,IAAA8L,GAAA9L,EAAAH,OAAA6/G,EAAAA,GAAAA,EAAA,GAAA,EAAA,UAAA1/G,EAAAo6J,QAAA,KAAA16C,EAAA,GAAAloC,IAAAv3E,EAAAmoD,IAAAnoD,EAAAJ,QAAAuoD,EAAAjvC,GAAAq+D,GAAAr+D,IAAAkB,EAAA5a,KAAA0Z,GAAAA,EAAA,IAAA4wC,EAAA5kD,WAAAlF,EAAAmoD,IAAA/tC,EAAA5a,KAAAsqD,GAAA1vC,EAAA8hJ,SAAA,CAAAK,MAAAniJ,EAAA8hJ,SAAAh3I,EAAA9K,EAAA2Y,EAAA3Y,EAAAxa,OAAA,EAAAm+B,EAAA+rB,EAAArV,GAAA,MAAA8iC,EAAAhiB,OAAA,GAAAn9B,SAAAm/C,EAAAhiB,OAAA,GAAA,IAAA,IAAArwD,WAAAqyE,EAAA4iF,OAAA,IAAAj1J,WAAAqyE,GAAAztB,IAAA,EAAApN,EAAA,EAAA7T,EAAA42E,GAAAA,EAAA,IAAA5zG,GAAA0rE,EAAA33E,OAAA,OAAAsZ,GAAAvP,EAAAwwJ,OAAAtuJ,KAAAuO,EAAA5a,KAAA0Z,GAAAkB,EAAAmrJ,SAAAuD,EAAA1uJ,GAAAqoG,EAAA,SAAA/4G,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,GAAA,IAAAovB,EAAA,QAAA9iC,EAAA/qC,EAAAC,GAAA8qC,EAAAr6B,SAAA1Q,EAAAC,GAAAkC,EAAA,iBAAAqxC,GAAA,MAAAA,EAAAqY,OAAA,GAAAr8C,EAAA,CAAAgM,EAAAxb,EAAAqpB,EAAAppB,EAAAo0B,EAAAw5C,EAAA76B,EAAA,YAAAtiC,EAAA22J,GAAA,EAAA73J,EAAAlZ,GAAA2J,EAAAk/B,EAAA6T,EAAA0tH,GAAA,EAAA31H,EAAA5oC,EAAAusB,SAAA8kB,EAAAqY,OAAA,GAAA,IAAA,IAAArwD,WAAAg4C,EAAAi9G,OAAA,IAAAj1J,WAAAg4C,GAAAq6B,GAAA,GAAA,MAAA,UAAAn9D,IAAA,YAAAA,GAAA,QAAAq6B,IAAA10C,EAAA4J,EAAAvI,QAAA,QAAA,mBAAAsI,EAAA,MAAAC,EAAAwwJ,OAAA,IAAAxwJ,EAAA,MAAAA,EAAAwwJ,OAAA,GAAAjhJ,EAAA6kB,EAAAw5C,EAAAztB,EAAApgD,EAAA3J,GAAA+pD,GAAApgD,EAAA3J,MAAA,iBAAAw3E,IAAAztB,GAAA7iC,MAAAswD,KAAAr+D,EAAA46J,GAAAhqH,EAAA5wC,EAAA,CAAAgM,EAAAwhJ,EAAAnvF,EAAAr6B,EAAAiL,GAAAsgH,EAAAqB,oBAAA5wJ,GAAA6Z,EAAA,WAAAgL,EAAA,EAAA0W,EAAA,EAAAiI,EAAA,EAAAq0H,GAAA,EAAA73J,EAAAlZ,GAAA2J,EAAAygK,GAAA,IAAAv+J,IAAAqN,EAAA6kB,EAAA74B,WAAAqyE,GAAAr+D,EAAAu7B,EAAAvvC,WAAAg4C,GAAAhkC,EAAA6kB,GAAA,IAAA7kB,EAAAu7B,IAAAv7B,EAAAqjJ,MAAAp9J,KAAA+8J,YAAAhjJ,EAAAqjJ,MAAAgF,MAAAroJ,GAAA/Z,KAAA+8J,SAAAhjJ,QAAA,GAAA6vJ,EAAAN,EAAA3N,WAAA,CAAAz2J,QAAA6U,EAAA6hJ,WAAA2N,EAAAtL,WAAA8K,EAAA6L,QAAArN,GAAAnkD,EAAAkmD,EAAAuL,SAAA,GAAAjN,EAAAgC,EAAA3J,YAAA,GAAAiH,EAAA,EAAAG,EAAAuC,EAAA0H,cAAA,CAAAtO,KAAA,EAAAnrI,MAAA,EAAA2nI,UAAA,EAAAZ,WAAA,EAAAQ,iBAAA,EAAAP,gBAAA,EAAAU,UAAA,EAAAf,aAAA,EAAA9b,QAAA,EAAAtwG,SAAA,EAAA0iI,eAAA,EAAAC,cAAA,EAAAr+C,QAAA,EAAAs+C,cAAA,EAAAC,aAAA,EAAA5V,kBAAA,EAAAC,wBAAA,EAAA4V,uBAAA,EAAA3W,SAAA,EAAA4W,eAAA,EAAAC,cAAA,EAAAC,WAAA,EAAA/Z,KAAA,EAAAkB,gBAAA,EAAAzqH,OAAA,EAAA0pH,YAAA,EAAAl7I,KAAA,EAAAy0H,OAAA,EAAAi/B,SAAA,EAAAqB,QAAA,EAAAzX,KAAA,EAAA0X,YAAA,EAAAzW,cAAA,EAAA0W,aAAA,GAAAtxD,EAAA,CAAAuxD,KAAA,EAAA7zK,IAAA,EAAA8zK,KAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAl+J,YAAA,EAAAm+J,KAAA,EAAAC,MAAA,GAAAtO,EAAApE,EAAAvD,oBAAA,IAAAwJ,EAAA/B,EAAAlE,EAAAxD,cAAA,IAAAyJ,EAAA5B,EAAA,GAAAuC,EAAAJ,EAAA9I,WAAA,WACA,IAAAv2J,EAAAC,EAAAu+J,EAAAtoK,OAAA,IAAAgpK,EAAA,IAAA,IAAAj/J,IAAAD,EAAAw+J,EAAAv+J,MAAA,IAAAD,EAAA2zJ,QAAA3zJ,EAAAw+D,OAAAx+D,EAAA2zJ,MAAA,GAAA3zJ,EAAA2zJ,MAAA,IAAA,GAAA3zJ,EAAA2zJ,OAAA,GAAA6K,EAAAtoK,OAAA,GAAA6mK,EAAA1yB,WAAAjqF,EAAA7yB,KAAA0vI,EAAA5yB,WAAAjqF,EAAA21G,MAAAgH,EAAAxJ,QAAA0J,EAAA1J,SAAA,EAAAv+I,WAAAyqJ,EAAA,GAAA5G,EAAA2S,YAAAzM,EAAAvgG,OAAA,WAAA,IAAAx+D,EAAAC,EAAA8qC,EAAA,GAAAyzH,EAAAtoK,QAAAupK,IAAA1C,EAAAv+F,QAAApe,EAAA7yB,KAAAwvI,EAAA1yB,YAAA0yB,EAAAjH,YAAA,GAAA,GAAAmH,EAAAz+F,QAAApe,EAAA21G,MAAAkH,EAAA5yB,YAAA4yB,EAAAnH,YAAA,GAAA,GAAA0I,EAAAtoK,QAAAupK,IAAAr/G,EAAA21G,OAAAmH,EAAA,CAAA,IAAAnyH,KAAAmyH,EAAA98G,EAAA21G,OAAArnI,SAAAqwI,EAAAoL,UAAA,KAAA,KAAA9M,EAAA,CAAA,IAAAr9J,GAAAC,EAAAo9J,EAAAtyH,GAAApgB,QAAAz0B,QAAA,IAAA8J,GAAAC,EAAAD,GAAAuxJ,KAAAtxJ,EAAA9J,OAAA6J,EAAA,GAAA,IAAAC,EAAA/J,eAAAmnK,EAAAtyH,GAAA,MAAAA,EAAAgyH,EAAA5H,SAAApqH,EAAA6oH,UAAAmL,EAAAoL,YAAAlN,EAAA9H,QAAA,IAAA/0G,EAAAvhB,WAAArU,KAAAt0B,OAAA,CAAA,KAAA60C,GAAAA,EAAA6oH,SAAA7oH,EAAAA,EAAA8nH,MAAA9nH,GAAAqV,EAAAkpH,WAAAlpH,EAAAj7C,iBAAA,OAAA0zJ,EAAA2S,aAAA,IAAA9L,EAAA,SAAA1/J,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAhzC,EAAAyrK,WAAA,GAAApO,EAAArqH,IAAAhzC,EAAAyrK,WAAAz4H,EAAA,IAAA2pH,QAAAU,EAAArqH,GAAA,CAAA19C,OAAA0K,EAAA2qB,OAAA,KAAA1qB,KAAAuzC,EAAA6pH,EAAArqH,GAAAroB,QAAAr0B,EAAAk9C,EAAAt9C,QAAA+J,EAAA8qC,GAAA,MAAA,IAAAz0C,GAAAk9C,EAAAl9C,KAAA2J,GAAAuzC,EAAAr9C,OAAAG,EAAA,GAAA,OAAA+mK,EAAArqH,GAAAroB,QAAAgzI,EAAA,SAAA39J,EAAAC,EAAA8qC,EAAAyI,GAAA,IAAAl9C,EAAA08C,EAAAoN,EAAApgD,EAAA8wJ,KAAAka,YAAA,OAAA5qH,IAAA9pD,EAAA8pD,EAAApgD,EAAAC,EAAA8qC,EAAAyI,KAAA4M,EAAA2+G,EAAAiM,eAAAh4H,EAAAoN,EAAApgD,EAAAC,EAAA8qC,EAAAyI,KAAA,IAAAl9C,IAAA,IAAA08C,GAAAxW,EAAA,SAAAx8B,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA8pD,EAAA3B,EAAAxoD,EAAA,GAAA,IAAAu9C,GAAA,GAAAA,EAAA,CAAA,IAAAv9C,EAAAK,EAAAJ,OAAA88C,EAAA,EAAAA,EAAA/8C,EAAA+8C,IAAA,IAAAyL,EAAAnoD,EAAA08C,MAAA/yC,EAAAw+C,EAAA8yG,KAAA9yG,EAAA05G,MAAA,KAAAn4J,EAAAC,KAAAmgD,GAAA,QAAA,GAAA,IAAA5M,EAAA,MAAA,OAAA4M,EAAA,IAAA,IAAA/pD,EAAAqa,EAAAzQ,EAAAoqI,WAAAx8D,EAAA1rE,EAAA,GAAAqN,EAAA,EAAAumG,EAAA,IAAA91G,EAAAyyJ,UAAA1/G,EAAA18C,EAAAJ,QAAA,IAAA88C,IAAAyL,EAAAnoD,EAAA08C,MAAA/yC,GAAAw+C,EAAA8yG,KAAA9yG,EAAAm1G,UAAAn1G,EAAAyzG,YAAAjyJ,EAAAiyJ,WAAA77J,EAAAA,GAAA6H,EAAA+B,EAAA,EAAA81G,GAAA,IAAA73G,EAAAugD,EAAApoD,EAAA0/G,KAAA5zG,EAAAqN,KAAAivC,IAAAA,EAAA4rF,YAAA35H,GAAA+tC,EAAA4rF,WAAA5rF,EAAAq0G,gBAAAr0G,EAAAq3G,WAAAplJ,KAAAqlG,IAAAt3D,EAAA6zG,WAAA5hJ,EAAA+tC,EAAA4rF,YAAA,QAAAloI,EAAAqN,KAAAivC,KAAA,IAAAzL,EAAAxjC,GAAA,IAAAwjC,GAAA,GAAAyL,EAAAt8C,EAAA6wC,GAAA,IAAAQ,GAAAiL,EAAA05G,MAAAptH,EAAA/qC,EAAAC,KAAAmgD,GAAA,GAAA,IAAA5M,IAAAiL,EAAA+zG,UAAA/zG,EAAA6zG,SAAA,CAAA,GAAA,IAAA9+G,IAAAmqH,EAAAl/G,EAAAx+C,GAAA,SAAAw+C,EAAA2zG,UAAA,GAAA,KAAAhyG,GAAA,GAAA,OAAAA,GAAAliD,EAAA,SAAA8B,EAAAC,EAAA8qC,GAAA,IAAA,IAAAyI,EAAAxzC,EAAAkyJ,UAAA57J,EAAAk9C,EAAAsiH,WAAA9iH,EAAAhzC,EAAAqqI,WAAA72F,EAAA0+G,WAAA,CAAA,GAAAl/G,GAAAQ,EAAA62F,WAAA/zI,GAAAk9C,EAAAsiH,WAAAtiH,EAAAogH,QAAA,OAAA,IAAApgH,EAAAA,EAAA0+G,UAAA,OAAAjyJ,GAAA+yC,GAAA18C,GAAA08C,EAAA/yC,EAAA8qC,GAAAiI,IAAA/yC,IAAAD,EAAAsyJ,UAAAt/G,EAAA/yC,EAAA,MAAA4tE,GAAA76B,GAAAhzC,EAAA8yJ,gBAAA9yJ,EAAA81J,WAAAx/J,GAAA2J,EAAA4tE,EAAA,EAAA76B,EAAA/yC,EAAA4tE,GAAA76B,EAAA4/G,MAAA,WAAA,IAAA5yJ,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAv9C,KAAAq7J,KAAA1wG,EAAA3qD,KAAAw0K,kBAAAxrH,EAAAhpD,KAAAi9J,UAAAz8J,IAAA+8C,EAAAi/G,gBAAA57J,EAAA28C,EAAAylH,KAAA,GAAAzlH,EAAAmlG,QAAA,CAAA,IAAA3kG,KAAA/9C,KAAAo+J,WAAAp+J,KAAAo+J,SAAAr1F,QAAA,GAAA,GAAA/oE,KAAAo+J,SAAAvC,QAAAh7J,EAAA,GAAA08C,EAAAmlG,QAAA7hJ,EAAAk9C,GAAAR,EAAAmlG,QAAA3kG,GAAA,GAAAl9C,EAAA2+J,WAAA,EAAA3+J,EAAA27J,iBAAA,EAAA37J,EAAAg9J,KAAAr9J,IAAA,IAAA+8C,EAAAsgH,KAAAh9J,EAAA6hJ,QAAA7hJ,EAAAg3B,MAAA,KAAA73B,KAAAo+J,SAAAkL,EAAA5yI,GAAA12B,KAAAH,OAAA,EAAAgB,GAAAL,EAAA,GAAA,EAAAR,KAAA08J,MAAA18J,KAAAo+J,SAAA,UAAA,GAAA,IAAAp1G,EAAA,YAAA,GAAAzL,EAAAihH,cAAA,IAAAx1G,EAAA,GAAAhpD,KAAAo+J,SAAAp+J,KAAAo+J,SAAAr1F,QAAA,GAAA,GAAA/oE,KAAAo+J,SAAAvC,OAAA77J,KAAAo+J,SAAA,SAAA,CAAA,IAAArgH,KAAA,IAAA/9C,KAAA08J,QAAAl8J,GAAA,GAAA80C,EAAA,GAAAiI,EAAA8pH,EAAAtpH,IAAA,YAAAA,IAAAzI,EAAAyI,GAAAR,EAAAQ,IAAA,GAAAzI,EAAAkqH,UAAA,EAAAlqH,EAAA/0B,KAAA,cAAA+0B,EAAAuoH,KAAAr9J,IAAA,IAAA+8C,EAAAsgH,KAAAvoH,EAAAknH,gBAAAh8J,EAAAR,KAAAo+J,SAAAkL,EAAA5yI,GAAA12B,KAAAH,OAAA,EAAAy1C,GAAA90C,GAAA,GAAA,IAAAR,KAAA08J,MAAA,YAAA18J,KAAAo+J,SAAAjB,QAAAn9J,KAAAo+J,SAAAzB,UAAA,GAAA38J,KAAAq7J,KAAAmB,kBAAAx8J,KAAAo+J,SAAA,MAAA,GAAAp+J,KAAAw9J,MAAA58J,EAAAA,EAAAA,aAAAwsD,EAAAxsD,EAAA,mBAAAA,EAAA,IAAAwsD,EAAAxsD,EAAA28C,EAAA83H,YAAA9yI,EAAA3hC,IAAA0oK,EAAAmL,YAAAnL,EAAAmL,YAAAl3H,EAAA83H,sBAAAzvK,OAAAhF,EAAA6xK,SAAAzyK,KAAAw9J,MAAA58J,EAAA6xK,OAAA1xK,MAAAH,EAAA28C,EAAA83H,aAAAr1K,KAAA+9J,UAAA/9J,KAAAw9J,MAAA4V,MAAApzK,KAAAg+J,WAAAh+J,KAAAw9J,MAAA6V,OAAArzK,KAAA+8J,SAAA,KAAA/8J,KAAAuxK,SAAA,IAAAhnK,EAAAvK,KAAAuxK,SAAA9wK,QAAA,IAAA8J,GAAAvK,KAAAi2K,WAAAj2K,KAAAuxK,SAAAhnK,GAAAvK,KAAA2xK,YAAApnK,GAAA,GAAAvK,KAAAu0K,UAAAhqK,GAAAogD,EAAAA,EAAApgD,GAAA,QAAAC,GAAA,QAAAA,EAAAxK,KAAAi2K,WAAAj2K,KAAAH,OAAAG,KAAA2xK,YAAA3xK,KAAAu0K,UAAA5pH,GAAA,GAAAngD,GAAA8+J,EAAAtM,eAAA,kBAAAh9J,MAAA2qD,IAAA3qD,KAAA+8J,UAAA,mBAAA/8J,KAAAH,QAAAG,KAAA28J,UAAA,GAAA,IAAAp/G,EAAAihH,aAAA,IAAAlpH,EAAAt1C,KAAA+8J,SAAAznH,GAAAA,EAAA1W,GAAA0W,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAA8nH,MAAAp9J,KAAAs+J,UAAA/gH,EAAAnL,SAAApyC,KAAA68J,UAAA,GAAAt/G,EAAA04H,WAAA,SAAAzrK,EAAA8qC,EAAAyI,EAAAl9C,GAAA,IAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAA,GAAA,MAAA5tE,EAAA,OAAA,EAAA,IAAA+yC,KAAAksH,EAAAj/J,EAAAwrK,aAAAhM,IAAAhqK,KAAAq7J,KAAAp5I,KAAAzX,EAAAwY,OAAAxY,IAAAD,GAAAC,EAAAxE,UAAAo9G,EAAAnhG,MAAA,IAAAjiB,KAAAq7J,KAAAia,SADA,SAAA/qK,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAA,GAAA,IAAAzI,KAAA/qC,EAAA88J,EAAA/xH,IAAAA,KAAA9qC,GAAA,cAAA8qC,GAAA,MAAAA,GAAA,MAAAA,GAAA,UAAAA,GAAA,WAAAA,GAAA,cAAAA,GAAA,WAAAA,MAAA8tE,EAAA9tE,IAAA8tE,EAAA9tE,IAAA8tE,EAAA9tE,GAAAqwH,YAAA5nH,EAAAzI,GAAA/qC,EAAA+qC,UAAA/qC,EAAA+qC,IAAA/qC,EAAA0X,IAAA87B,EACAyrH,CAAAxpK,KAAAq7J,KAAA7wJ,GAAAxK,KAAAq7J,KAAA,GAAAjjF,EAAAp4E,KAAAq7J,KAAA99G,GAAA8pH,EAAA9pH,GAAA66B,IAAAA,aAAAxyE,OAAAwyE,EAAA/3E,MAAA0Z,EAAAq+D,MAAA,IAAAA,EAAAxqE,KAAA,IAAA3L,QAAA,YAAAjC,KAAAq7J,KAAA99G,GAAA66B,EAAAp4E,KAAA2gK,kBAAAvoF,EAAAp4E,YAAA,GAAAojH,EAAA7lE,KAAA/8C,EAAA,IAAA4iH,EAAA7lE,IAAAipH,aAAAh8J,EAAAxK,KAAAq7J,KAAA99G,GAAAv9C,MAAA,CAAA,IAAAA,KAAA+8J,SAAAn8J,EAAA,CAAAw8J,MAAAp9J,KAAA+8J,SAAAh3I,EAAAvlB,EAAAozB,EAAA,WAAAgL,EAAA,EAAA0W,EAAA,EAAAiI,EAAA,EAAAxjC,EAAAwjC,EAAAq0H,GAAA,EAAA3G,GAAAzqK,EAAA01K,WAAAvrH,EAAAnqD,EAAA+jK,gBAAA9jK,QAAA,IAAAkqD,GAAArV,EAAA90C,EAAA+jK,gBAAA55G,IAAA3qD,KAAA+8J,UAAAv8J,EAAA01K,WAAA11K,EAAAixK,mBAAAzoH,GAAA,IAAAxoD,EAAA21K,YAAA31K,EAAA41K,aAAAp2K,KAAA88J,yBAAA,GAAAl8J,EAAAw8J,QAAAx8J,EAAAw8J,MAAAgF,MAAAxhK,QAAA00C,EAAAiI,GAAA+lE,EAAAtiH,KAAAhB,KAAAwK,EAAA+yC,EAAA,MAAA66B,EAAA76B,EAAA,EAAA,KAAAv9C,KAAAq7J,KAAAma,cAAA,OAAA30K,GAAAb,KAAA0iK,MAAA7hK,EAAA2J,GAAAxK,KAAAi2K,WAAAzrK,EAAA8qC,EAAAyI,EAAAl9C,GAAA,EAAAb,KAAAq0K,YAAAr0K,KAAA+8J,UAAA,EAAAh/G,EAAAt9C,QAAAsmC,EAAAv8B,EAAAxK,KAAAs1C,EAAAt1C,KAAAq0K,WAAAt2H,IAAA/9C,KAAA0iK,MAAAptH,EAAA9qC,GAAAxK,KAAAi2K,WAAAzrK,EAAA8qC,EAAAyI,EAAAl9C,KAAAb,KAAA+8J,YAAA,IAAA/8J,KAAAq7J,KAAAwC,MAAA79J,KAAAi9J,WAAAj9J,KAAAq7J,KAAAwC,OAAA79J,KAAAi9J,aAAAwM,EAAAj/J,EAAAwrK,aAAA,GAAAhtH,IAAAzL,EAAAwrB,OAAA,SAAAx+D,EAAAC,EAAA8qC,GAAA,IAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA1vC,EAAAvO,EAAAqN,EAAAivC,EAAAhpD,KAAA08J,MAAAl8J,EAAAR,KAAAi9J,UAAAr8J,EAAAZ,KAAAu9J,aAAA,GAAA/8J,EAAA,MAAA+J,GAAAvK,KAAAk9J,WAAAl9J,KAAA08J,MAAAl8J,EAAAR,KAAAu8J,MAAAv8J,KAAAw9J,MAAAC,SAAAz9J,KAAAw9J,MAAAE,SAAA,GAAA,EAAA19J,KAAA29J,YAAA5/G,GAAA,EAAAl9C,EAAA,aAAAy0C,EAAAA,GAAAt1C,KAAAy8J,UAAAmB,oBAAA,IAAAp9J,IAAAR,KAAA68J,UAAA78J,KAAAq7J,KAAAwC,OAAAvoH,IAAAt1C,KAAA40I,aAAA50I,KAAAy8J,UAAAQ,YAAA1yJ,EAAA,IAAA3J,EAAA,GAAA2J,GAAA,IAAA,MAAAA,GAAA3J,IAAAw3E,GAAA,YAAAp4E,KAAAugB,OAAA3f,IAAA2J,IAAA+qC,GAAA,EAAA8iC,EAAAx3E,IAAAC,EAAA,sBAAAb,KAAAu9J,aAAA5yG,GAAAngD,GAAAD,GAAA3J,IAAA2J,EAAAA,EAAA6tE,IAAA7tE,EAAA,MAAAvK,KAAAk9J,WAAAl9J,KAAA08J,MAAA,EAAA18J,KAAAu8J,MAAAv8J,KAAAw9J,MAAAC,SAAAz9J,KAAAw9J,MAAAE,SAAA,GAAA,GAAA,IAAA10G,GAAA,IAAAxoD,GAAA,EAAAI,KAAAC,EAAA,oBAAAk9C,EAAA/9C,KAAA29J,WAAApzJ,EAAA,IAAAvK,KAAA89J,SAAA,EAAA,IAAAt9J,IAAAR,KAAA68J,UAAA78J,KAAAq7J,KAAAwC,OAAAvoH,IAAA,GAAA10C,IAAAA,IAAAw3E,GAAA,YAAAp4E,KAAAugB,QAAA+0B,GAAA,GAAAt1C,KAAAu9J,aAAA5yG,GAAAngD,GAAAD,GAAA3J,IAAA2J,EAAAA,EAAA6tE,IAAAp4E,KAAA68J,WAAAvnH,GAAA,KAAAt1C,KAAAk9J,WAAAl9J,KAAA08J,MAAAnyJ,EAAAvK,KAAA+9J,WAAA9iJ,EAAA1Q,EAAA/J,GAAA,KAAAkM,EAAA1M,KAAA+9J,YAAA,IAAArxJ,GAAA,IAAAuO,KAAAA,EAAA,EAAAA,GAAA,IAAAvO,IAAAuO,GAAA,GAAA,KAAAlB,EAAA/Z,KAAAg+J,YAAA/iJ,GAAAA,EAAA,IAAAlB,EAAAkB,GAAAA,EAAAA,EAAA,IAAAlB,EAAAkB,GAAAA,EAAAA,EAAAA,EAAA,IAAAlB,IAAAkB,GAAAA,EAAAA,EAAAA,EAAAA,GAAAjb,KAAAu8J,MAAA,IAAA7vJ,EAAA,EAAAuO,EAAA,IAAAvO,EAAAuO,EAAA1Q,EAAA/J,EAAA,GAAAya,EAAA,EAAA,EAAAA,EAAA,GAAAjb,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAAnzJ,EAAA/J,IAAAR,KAAA08J,QAAA1zG,GAAA1T,EAAA,CAAA,IAAAt1C,KAAA68J,SAAA,CAAA,GAAA78J,KAAAm9J,SAAAn9J,KAAA68J,UAAA78J,KAAA87J,IAAA,OAAA,IAAAxmH,GAAAt1C,KAAA+8J,YAAA,IAAA/8J,KAAAq7J,KAAAwC,MAAA79J,KAAAi9J,WAAAj9J,KAAAq7J,KAAAwC,OAAA79J,KAAAi9J,WAAA,OAAAj9J,KAAA08J,MAAA18J,KAAAk9J,WAAAl0G,EAAAhpD,KAAAu9J,aAAA38J,EAAAmoK,EAAA1oK,KAAAL,WAAAA,KAAAk+J,MAAA,CAAA3zJ,EAAAC,IAAAxK,KAAA08J,QAAA3+G,EAAA/9C,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAA19J,KAAA08J,MAAAl8J,GAAAu9C,GAAA/9C,KAAAw9J,MAAAC,WAAAz9J,KAAAu8J,MAAAv8J,KAAAw9J,MAAAE,SAAA,IAAA19J,KAAA08J,MAAA,EAAA,IAAA,KAAA,IAAA18J,KAAAk+J,QAAAl+J,KAAAk+J,OAAA,GAAAl+J,KAAA89J,UAAA99J,KAAAm+J,SAAAn+J,KAAA08J,QAAA1zG,GAAA,GAAAz+C,IAAAvK,KAAA89J,SAAA,GAAA,IAAA90G,IAAAhpD,KAAAo+J,WAAA,GAAA7zJ,EAAAvK,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAAz0C,EAAAA,GAAA,aAAAb,KAAAq7J,KAAA3kC,SAAA,IAAA12H,KAAA08J,OAAA,IAAAl8J,IAAAgK,GAAAxK,KAAAq+J,UAAA,aAAA9gH,EAAAv9C,KAAA+8J,SAAAx/G,GAAAA,EAAAA,EAAAA,EAAAx3B,EAAAw3B,EAAA3pB,GAAA2pB,EAAAjI,EAAAt1C,KAAAu8J,MAAAh/G,EAAA3e,GAAA2e,EAAAx3B,EAAAw3B,EAAA3pB,GAAA2pB,EAAAjI,EAAAt1C,KAAAu8J,MAAAh/G,EAAA3e,EAAA2e,EAAAA,EAAA6/G,MAAAp9J,KAAAs+J,YAAA/zJ,EAAA,GAAAvK,KAAAo+J,WAAA,OAAA7zJ,GAAAvK,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAA9qC,GAAAxK,KAAA08J,QAAA1zG,IAAAjL,GAAA/9C,KAAAq+J,UAAA,cAAAx9J,GAAAb,KAAA87J,MAAAxmH,IAAA/qC,EAAA,GAAAvK,KAAAo+J,WAAAp+J,KAAAs+J,YAAA,OAAA/zJ,GAAAvK,KAAAo+J,SAAAr1F,OAAAx+D,EAAAC,EAAA8qC,GAAAyI,IAAA/9C,KAAAy8J,UAAAmB,oBAAA59J,KAAA28J,UAAA,GAAA,GAAA38J,KAAA89J,SAAA,IAAAtzJ,GAAAxK,KAAAq7J,KAAAx6J,IAAAb,KAAAq+J,UAAAx9J,GAAA,IAAAL,GAAAR,KAAAu9J,eAAAnlF,GAAAztB,IAAAytB,IAAAp4E,KAAAu9J,aAAA,MAAAhgH,EAAAmlH,MAAA,SAAAn4J,EAAAC,EAAA8qC,GAAA,GAAA,OAAA/qC,EAAA,QAAAA,EAAA,KAAAA,KAAA,MAAAC,GAAAA,IAAAxK,KAAAH,QAAA,OAAAG,KAAAk+J,OAAA,EAAAl+J,KAAA28J,UAAA,GAAA,GAAAnyJ,EAAA,iBAAAA,EAAAA,GAAAxK,KAAAuxK,UAAAvxK,KAAAH,OAAAypK,EAAA7mK,SAAA+H,IAAAA,EAAA,IAAAuzC,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAxoD,EAAAI,EAAAw3E,EAAAn9D,EAAAvO,EAAA4oC,GAAAt1C,KAAA08J,OAAApnH,EAAAs/F,aAAA50I,KAAA40I,YAAA50I,KAAAy8J,YAAAnnH,EAAAmnH,UAAA,IAAA1iJ,EAAAvP,IAAA++J,EAAA/+J,KAAA,iBAAAA,EAAA,GAAA,IAAAuzC,EAAAvzC,EAAA/J,QAAA,IAAAs9C,GAAA/9C,KAAA0iK,MAAAn4J,EAAAC,EAAAuzC,GAAAzI,KAAA90C,GAAA,OAAA,CAAA,GAAAR,KAAAuxK,UAAA,IAAAxzH,EAAA/9C,KAAAuxK,SAAA9wK,QAAA,IAAAs9C,GAAA,GAAAvzC,IAAAxK,KAAAuxK,SAAAxzH,GAAA,CAAAiL,EAAAhpD,KAAA2xK,YAAA5zH,IAAA,GAAA/9C,KAAAw0K,kBAAAx0K,KAAAw0K,mBAAA,GAAA3zK,EAAAb,KAAAw0K,kBAAAz2H,GAAAxzC,EAAAvK,KAAAw0K,kBAAAz2H,IAAA,GAAA,MAAA,WAAA,CAAA,GAAAvzC,IAAAxK,KAAAH,OAAA,OAAA,EAAAmpD,EAAAhpD,KAAA2xK,YAAA9wK,EAAAb,KAAAw0K,kBAAAjqK,EAAAvK,KAAAw0K,mBAAA,GAAA,MAAA,GAAAxrH,EAAA,CAAA,GAAApoD,EAAA2J,GAAAy+C,EAAAovB,EAAA7tE,IAAA1J,GAAA,QAAAA,GAAA0J,IAAAy+C,IAAA,iBAAAz+C,IAAAA,EAAA8rK,WAAA/gI,IAAAg0H,EAAAiM,aAAAv1K,KAAAq7J,KAAAka,aAAA,CAAA,IAAAh4H,KAAA38C,EAAAooD,EAAAzL,KAAAtiC,EAAAA,GAAA,GAAAA,EAAA5a,KAAAk9C,IAAA,IAAAtiC,IAAA1Q,KAAA29J,EAAAloK,KAAAs1C,EAAA9qC,EAAAyQ,GAAA,OAAA,EAAA,IAAAsiC,KAAA38C,GAAA+pD,EAAA3B,EAAAzL,MAAA7wC,IAAAi+C,EAAApN,EAAAoN,EAAA5kC,EAAA4kC,EAAA/2B,GAAA+2B,EAAA/rB,GAAA+rB,EAAA5kC,EAAA4kC,EAAA/2B,GAAA+2B,EAAA/rB,EAAAp+B,GAAA,GAAAmqD,EAAAinH,IAAAjnH,EAAA5kC,EAAA28I,MAAA9hK,KAAAJ,GAAA,GAAAmqD,EAAAinH,IAAA,IAAAjnH,EAAA5kC,EAAAw+I,gBAAA9jK,SAAAkqD,EAAAy3G,MAAAz3G,EAAAy3G,MAAAhF,MAAAzyG,EAAAyyG,MAAAzyG,IAAA3qD,KAAA+8J,WAAA/8J,KAAA+8J,SAAApyG,EAAAyyG,OAAAzyG,EAAAyyG,QAAAzyG,EAAAyyG,MAAAgF,MAAAz3G,EAAAy3G,OAAAz3G,EAAAyyG,MAAAzyG,EAAAy3G,MAAA,aAAAp5G,EAAAzL,IAAA66B,IAAAv3E,EAAA08C,GAAA,IAAAv9C,KAAA+8J,UAAA/8J,KAAA68J,UAAA78J,KAAA28J,UAAA,GAAA,IAAA,OAAAn8J,GAAA+8C,EAAA6+G,WAAA,WAAA,OAAAp8J,KAAA88J,yBAAAwM,EAAAtM,eAAA,aAAAh9J,MAAAA,KAAA+8J,SAAA/8J,KAAAw0K,kBAAAx0K,KAAAo+J,SAAAp+J,KAAAs+J,UAAA,KAAAt+J,KAAA88J,wBAAA98J,KAAA89J,QAAA99J,KAAAk+J,OAAA,EAAAl+J,KAAA2xK,YAAA3xK,KAAAuxK,SAAA,GAAA,GAAAnO,EAAAjgK,UAAAi5J,WAAAp7J,KAAAhB,MAAAA,KAAAq7J,KAAAmB,kBAAAx8J,KAAA08J,OAAAtkF,EAAAp4E,KAAA+oE,QAAA/oE,KAAA48J,SAAA58J,MAAAu9C,EAAAo/G,SAAA,SAAApyJ,EAAAC,GAAA,GAAAw+C,GAAA2B,EAAA+oH,OAAAnpK,GAAAvK,KAAA87J,IAAA,CAAA,IAAAxmH,EAAAyI,EAAA/9C,KAAAuxK,SAAA,GAAAxzH,EAAA,IAAAzI,EAAAyI,EAAAt9C,QAAA,IAAA60C,GAAAt1C,KAAAu0K,UAAAj/H,GAAA20H,EAAAlsH,EAAAzI,GAAAt1C,MAAA,QAAAA,KAAAu0K,UAAAtK,EAAAjqK,KAAAH,OAAAG,MAAA,GAAA,OAAAojK,EAAAjgK,UAAAw5J,SAAA37J,KAAAhB,KAAAuK,EAAAC,MAAAxK,KAAA88J,0BAAA98J,KAAA+8J,WAAAuM,EAAAtM,eAAAzyJ,EAAA,YAAA,aAAAvK,OAAAspK,EAAA5yI,GAAA,SAAAnsB,EAAAC,EAAA8qC,GAAA,OAAA,IAAAg0H,EAAA/+J,EAAAC,EAAA8qC,IAAAg0H,EAAArvC,KAAA,SAAA1vH,EAAAC,EAAA8qC,GAAA,OAAAA,EAAAkpH,cAAA,EAAAlpH,EAAAknH,gBAAA,GAAAlnH,EAAAknH,gBAAA,IAAA8M,EAAA/+J,EAAAC,EAAA8qC,IAAAg0H,EAAA7K,OAAA,SAAAl0J,EAAAC,EAAA8qC,EAAAyI,GAAA,OAAAA,EAAA2kG,QAAAptG,EAAAyI,EAAAy+G,gBAAA,GAAAz+G,EAAAy+G,iBAAA,GAAAlnH,EAAAknH,gBAAA,IAAA8M,EAAA/+J,EAAAC,EAAAuzC,IAAAurH,EAAAnK,YAAA,SAAA50J,EAAAC,EAAA8qC,EAAAyI,EAAAl9C,GAAA,OAAA,IAAAyoK,EAAA9+J,EAAA,EAAA,CAAAqtB,MAAAttB,EAAAq0J,WAAAp0J,EAAA40J,iBAAA9pH,EAAAwpH,cAAA/gH,EAAAshH,kBAAA70J,EAAA80J,wBAAAhqH,EAAAknH,iBAAA,EAAAqB,MAAA,EAAA0B,UAAA1+J,EAAA2+J,UAAA,KAAA8J,EAAAhpJ,IAAA,SAAA/V,EAAAC,GAAA,OAAA,IAAA8+J,EAAA/+J,EAAA,EAAAC,IAAA8+J,EAAArN,YAAA,SAAA1xJ,EAAAC,GAAA,GAAA,MAAAD,EAAA,MAAA,GAAA,IAAA+qC,EAAAyI,EAAAl9C,EAAA08C,EAAA,GAAAhzC,EAAA,iBAAAA,GAAA++J,EAAA7mK,SAAA8H,IAAAA,GAAAwP,EAAAxP,IAAAg/J,EAAAh/J,KAAA,iBAAAA,EAAA,GAAA,CAAA,IAAA+qC,EAAA/qC,EAAA9J,OAAAs9C,EAAA,IAAA,IAAAzI,GAAAyI,EAAAA,EAAA/7C,OAAAsnK,EAAArN,YAAA1xJ,EAAA+qC,GAAA9qC,IAAA,IAAA8qC,EAAAyI,EAAAt9C,QAAA,IAAA60C,GAAA,IAAAiI,EAAAQ,EAAAzI,GAAAz0C,EAAAy0C,GAAA,IAAAz0C,GAAA08C,IAAAQ,EAAAl9C,IAAAk9C,EAAAr9C,OAAA40C,EAAA,QAAA,IAAAA,GAAAyI,EAAAksH,EAAA1/J,GAAAvI,UAAAvB,QAAA,IAAA60C,IAAAyI,EAAAzI,GAAAwmH,KAAAtxJ,IAAAuzC,EAAAzI,GAAAguH,aAAAvlH,EAAAr9C,OAAA40C,EAAA,GAAA,OAAAyI,GAAAurH,EAAAvN,aAAAuN,EAAAtN,mBAAA,SAAAzxJ,EAAAC,EAAA8qC,GAAA,iBAAA9qC,IAAA8qC,EAAA9qC,EAAAA,GAAA,GAAA,IAAA,IAAAuzC,EAAAurH,EAAArN,YAAA1xJ,EAAAC,GAAA3J,EAAAk9C,EAAAt9C,QAAA,IAAAI,GAAAk9C,EAAAl9C,GAAA6hK,MAAAptH,EAAA/qC,IAAA,IAAAigK,GAAA9gI,EAAA,sBAAA,SAAAn/B,EAAAC,GAAAxK,KAAAukK,iBAAAh6J,GAAA,IAAAjC,MAAA,KAAAtI,KAAAs2K,UAAAt2K,KAAAukK,gBAAA,GAAAvkK,KAAAk2K,UAAA1rK,GAAA,EAAAxK,KAAA4mK,OAAA4D,GAAArnK,YAAA,GAAA,GAAAo6C,EAAAitH,GAAArnK,UAAAqnK,GAAAjoK,QAAA,SAAAioK,GAAA3G,IAAA,EAAAtmH,EAAAw/G,SAAA,KAAAx/G,EAAAu0H,UAAAxuD,EAAA/lE,EAAA6oH,SAAAuD,EAAApsH,EAAAmlH,MAAA,SAAAn4J,GAAA,IAAAC,EAAA8qC,EAAAt1C,KAAAukK,gBAAAxmH,EAAA/9C,KAAA+8J,SAAA,GAAA,MAAAxyJ,EAAAvK,KAAAs2K,WAAAt2K,KAAAukK,gBAAA,QAAA,IAAA/5J,EAAA8qC,EAAA70C,QAAA,IAAA+J,GAAA,MAAAD,EAAA+qC,EAAA9qC,KAAA8qC,EAAA50C,OAAA8J,EAAA,GAAA,KAAAuzC,GAAA,MAAAxzC,EAAAwzC,EAAAhkC,KAAAgkC,EAAAq/G,QAAAr/G,EAAAq/G,MAAAgF,MAAArkH,EAAAqkH,OAAArkH,EAAAqkH,OAAArkH,EAAAqkH,MAAAhF,MAAAr/G,EAAAq/G,MAAAr/G,EAAAqkH,MAAA,MAAApiK,KAAA+8J,WAAAh/G,IAAA/9C,KAAA+8J,SAAAh/G,EAAAq/G,QAAAr/G,EAAAA,EAAAq/G,MAAA,OAAA,GAAA7/G,EAAAmpH,YAAA,SAAAn8J,EAAAC,GAAA,IAAA,IAAA8qC,EAAAt1C,KAAA+8J,SAAAznH,IAAA/qC,EAAAvK,KAAAs2K,YAAA,MAAAhhI,EAAAv7B,GAAAxP,EAAA+qC,EAAAv7B,EAAAzR,MAAAtI,KAAAs2K,UAAA,KAAA1oK,KAAA,QAAA0nC,EAAA5L,EAAAl/B,GAAA8qC,EAAAA,EAAA8nH,OAAAkM,EAAAtM,eAAA,SAAAzyJ,EAAAC,GAAA,IAAA8qC,EAAAyI,EAAAl9C,EAAA08C,EAAAoN,EAAA3B,EAAAx+C,EAAAuyJ,SAAA,GAAA,oBAAAxyJ,EAAA,CAAA,KAAAy+C,GAAA,CAAA,IAAA2B,EAAA3B,EAAAo0G,MAAAr/G,EAAAl9C,EAAAk9C,GAAAA,EAAAktH,GAAAjiH,EAAAiiH,IAAAltH,EAAAA,EAAAq/G,OAAAp0G,EAAAo5G,MAAArkH,EAAAA,EAAAqkH,MAAA7kH,GAAAyL,EAAAo5G,MAAAhF,MAAAp0G,EAAAnoD,EAAAmoD,GAAAA,EAAAo0G,MAAAr/G,GAAAA,EAAAqkH,MAAAp5G,EAAAzL,EAAAyL,EAAAA,EAAA2B,EAAA3B,EAAAx+C,EAAAuyJ,SAAAl8J,EAAA,KAAAmoD,GAAAA,EAAA4oH,IAAA,mBAAA5oH,EAAAjjC,EAAAxb,IAAAy+C,EAAAjjC,EAAAxb,OAAA+qC,GAAA,GAAA0T,EAAAA,EAAAo0G,MAAA,OAAA9nH,GAAAk1H,GAAAgH,SAAA,SAAAjnK,GAAA,IAAA,IAAAC,EAAAD,EAAA9J,QAAA,IAAA+J,GAAAD,EAAAC,GAAAq5J,MAAA2G,GAAA3G,MAAAzgD,GAAA,IAAA74G,EAAAC,IAAA8rK,WAAA/rK,EAAAC,IAAA,OAAA,GAAA6tC,EAAAsrH,OAAA,SAAAp5J,GAAA,KAAAA,GAAAA,EAAAkuB,UAAAluB,EAAA3H,MAAA2H,EAAAs5J,KAAA,KAAA,6BAAA,IAAAr5J,EAAA8qC,EAAA/qC,EAAAkuB,SAAAslB,EAAAxzC,EAAAq5J,UAAA,EAAA/iK,EAAA0J,EAAAgsK,eAAAh5H,EAAA,CAAA36C,KAAA,eAAA0d,IAAA,WAAAu7I,KAAA,QAAAhrH,MAAA,cAAA2lI,QAAA,mBAAA7rH,EAAAjhB,EAAA,WAAA4L,EAAA8gB,OAAA,GAAAt0D,cAAAwzC,EAAA0lH,OAAA,GAAA,SAAA,WAAAwP,GAAAxpK,KAAAhB,KAAAs1C,EAAAyI,GAAA/9C,KAAAukK,gBAAA1jK,GAAA,KAAA,IAAA0J,EAAArJ,QAAA8nD,EAAA2B,EAAAxnD,UAAA,IAAAqnK,GAAAl1H,GAAA,IAAA9qC,KAAAw+C,EAAA3lD,YAAAsnD,GAAAk5G,IAAAt5J,EAAAs5J,IAAAtmH,EAAA,mBAAAhzC,EAAAC,KAAAw+C,EAAAzL,EAAA/yC,IAAAD,EAAAC,IAAA,OAAAmgD,EAAApoD,QAAAgI,EAAAhI,QAAAioK,GAAAgH,SAAA,CAAA7mH,IAAAA,GAAA5M,EAAAxzC,EAAAqwJ,SAAA,CAAA,IAAA/5J,EAAA,EAAAA,EAAAk9C,EAAAt9C,OAAAI,IAAAk9C,EAAAl9C,KAAA,IAAA08C,KAAA+iE,EAAAA,EAAA/iE,GAAAp9C,MAAAoK,EAAAwlC,QAAAe,IAAA,sDAAAyM,GAAAyL,GAAA,GADA,CACA,oBAAA5nD,QAAAA,OAAAC,SAAA,oBAAAH,OAAAA,OAAAlB,MAAAyB,QCDA8mC,MAAAkuI,cAAA,SAAAr6J,EAAAmzF,GAmGA,IAEAxqE,EAGA2xI,EACAC,EAEAC,EACAC,EA1GA72K,KAAAoc,OAAAA,EAEApc,KAAAuvG,gBAAApqG,IAAAoqG,EAAAA,EAAAjuG,SAGAtB,KAAAkV,SAAA,EAGAlV,KAAAH,OAAA,IAAA0oC,MAAAqP,QAGA53C,KAAA+mF,YAAA,EACA/mF,KAAA89I,YAAA73E,EAAAA,EAGAjmE,KAAA82K,QAAA,EACA92K,KAAA+2K,QAAA9wG,EAAAA,EAIAjmE,KAAAg3K,cAAA,EACAh3K,KAAAi3K,cAAA5xK,KAAA0uB,GAIA/zB,KAAAk3K,iBAAAjxG,EAAAA,EACAjmE,KAAAm3K,gBAAAlxG,EAAAA,EAIAjmE,KAAAo3K,eAAA,EACAp3K,KAAAq3K,cAAA,IAIAr3K,KAAAs3K,YAAA,EACAt3K,KAAAu3K,UAAA,EAGAv3K,KAAAw3K,cAAA,EACAx3K,KAAAy3K,YAAA,EAGAz3K,KAAA03K,WAAA,EACA13K,KAAA23K,YAAA,EAIA33K,KAAAokK,YAAA,EACApkK,KAAA43K,gBAAA,EAGA53K,KAAA63K,YAAA,EAGA73K,KAAAiO,KAAA,CAAAklJ,KAAA,GAAA2kB,GAAA,GAAAzkB,MAAA,GAAA0kB,OAAA,IAGA/3K,KAAAg4K,aAAA,CAAAC,MAAA1vI,MAAA2qH,MAAAC,KAAA+kB,KAAA3vI,MAAA2qH,MAAAE,OAAA+kB,IAAA5vI,MAAA2qH,MAAAG,OAGArzJ,KAAAo4K,QAAAp4K,KAAAH,OAAAgF,QACA7E,KAAAq4K,UAAAr4K,KAAAoc,OAAA0T,SAAAjrB,QACA7E,KAAAs4K,MAAAt4K,KAAAoc,OAAA+V,KAMAnyB,KAAAu4K,cAAA,WAEA,OAAAC,EAAAv4H,KAIAjgD,KAAAy4K,kBAAA,WAEA,OAAAD,EAAA34H,OAIA7/C,KAAAoW,MAAA,WAEA4+D,EAAAn1E,OAAA8E,KAAAqwE,EAAAojG,SACApjG,EAAA54D,OAAA0T,SAAAnrB,KAAAqwE,EAAAqjG,WACArjG,EAAA54D,OAAA+V,KAAA6iD,EAAAsjG,MAEAtjG,EAAA54D,OAAA26D,yBACA/B,EAAAxrC,cAAAkvI,GAEA1jG,EAAAj7B,SAEA18B,EAAAs7J,EAAAC,MAKA54K,KAAA+5C,QAEAhV,EAAA,IAAAwD,MAAAqP,QAGA8+H,GAAA,IAAAnuI,MAAAgP,YAAAqD,mBAAAx+B,EAAAwnC,GAAA,IAAArb,MAAAqP,QAAA,EAAA,EAAA,IACA++H,EAAAD,EAAA7xK,QAAAm2C,UAEA47H,EAAA,IAAAruI,MAAAqP,QACAi/H,EAAA,IAAAtuI,MAAAgP,WAEA,WAEA,IAAAznB,EAAAklD,EAAA54D,OAAA0T,SA+DA,OA7DAiV,EAAApgC,KAAAmrB,GAAAijB,IAAAiiC,EAAAn1E,QAGAklC,EAAA4Y,gBAAA+4H,GAGA8B,EAAAv3F,eAAAl8C,GAEAiwC,EAAAovF,YAAA/mJ,IAAAs7J,EAAAC,MAEAC,EAgIA,EAAAxzK,KAAA0uB,GAAA,GAAA,GAAAihD,EAAA4iG,iBA5HAY,EAAA34H,OAAAi5H,EAAAj5H,MACA24H,EAAAv4H,KAAA64H,EAAA74H,IAGAu4H,EAAA34H,MAAAx6C,KAAAorB,IAAAukD,EAAAkiG,gBAAA7xK,KAAAykC,IAAAkrC,EAAAmiG,gBAAAqB,EAAA34H,QAGA24H,EAAAv4H,IAAA56C,KAAAorB,IAAAukD,EAAAgiG,cAAA3xK,KAAAykC,IAAAkrC,EAAAiiG,cAAAuB,EAAAv4H,MAEAu4H,EAAA5uB,WAGA4uB,EAAAt4H,QAAAx9B,EAGA81J,EAAAt4H,OAAA76C,KAAAorB,IAAAukD,EAAA+R,YAAA1hF,KAAAykC,IAAAkrC,EAAA8oE,YAAA06B,EAAAt4H,SAGA80B,EAAAn1E,OAAAyb,IAAAy9J,GAEAh0I,EAAAgb,iBAAAy4H,GAGAzzI,EAAA4Y,gBAAAg5H,GAEA7mJ,EAAAnrB,KAAAqwE,EAAAn1E,QAAAyb,IAAAypB,GAEAiwC,EAAA54D,OAAAsnC,OAAAsxB,EAAAn1E,SAEA,IAAAm1E,EAAAoiG,eAEA0B,EAAAj5H,OAAA,EAAAm1B,EAAAqiG,cACAyB,EAAA74H,KAAA,EAAA+0B,EAAAqiG,eAIAyB,EAAAx4J,IAAA,EAAA,EAAA,GAIAoC,EAAA,EACAq2J,EAAAz4J,IAAA,EAAA,EAAA,MAMA04J,GACApC,EAAAtiI,kBAAA0gC,EAAA54D,OAAA0T,UAAAmpJ,GACA,GAAA,EAAApC,EAAAhjI,IAAAmhC,EAAA54D,OAAAm6B,aAAA0iI,KAEAjkG,EAAAxrC,cAAAkvI,GAEA9B,EAAAjyK,KAAAqwE,EAAA54D,OAAA0T,UACA+mJ,EAAAlyK,KAAAqwE,EAAA54D,OAAAm6B,cACAyiI,GAAA,MAYAh5K,KAAAm2C,QAAA,WAEA6+B,EAAAu6B,WAAArzF,oBAAA,cAAAg9J,GAAA,GACAlkG,EAAAu6B,WAAArzF,oBAAA,YAAAi9J,GAAA,GACAnkG,EAAAu6B,WAAArzF,oBAAA,QAAAk9J,GAAA,GAEApkG,EAAAu6B,WAAArzF,oBAAA,aAAAm9J,GAAA,GACArkG,EAAAu6B,WAAArzF,oBAAA,WAAAo9J,GAAA,GACAtkG,EAAAu6B,WAAArzF,oBAAA,YAAAq9J,GAAA,GAEAj4K,SAAA4a,oBAAA,YAAAs9J,GAAA,GACAl4K,SAAA4a,oBAAA,UAAAu9J,GAAA,GAEAh4K,OAAAya,oBAAA,UAAAw9J,GAAA,IAUA,IAAA1kG,EAAAh1E,KAEA04K,EAAA,CAAAx4K,KAAA,UACAy5K,EAAA,CAAAz5K,KAAA,SACA05K,EAAA,CAAA15K,KAAA,OAEAy4K,EAAA,CAAAC,MAAA,EAAAiB,OAAA,EAAAC,MAAA,EAAA3B,IAAA,EAAA4B,aAAA,EAAAC,YAAA,EAAAC,UAAA,GAEA58J,EAAAs7J,EAAAC,KAEAK,EAAA,KAGAT,EAAA,IAAAjwI,MAAAiuG,UACAsiC,EAAA,IAAAvwI,MAAAiuG,UAEA9zH,EAAA,EACAq2J,EAAA,IAAAxwI,MAAAqP,QACAohI,GAAA,EAEAkB,EAAA,IAAA3xI,MAAA0I,QACAkpI,EAAA,IAAA5xI,MAAA0I,QACAmpI,EAAA,IAAA7xI,MAAA0I,QAEAopI,EAAA,IAAA9xI,MAAA0I,QACAqpI,EAAA,IAAA/xI,MAAA0I,QACAspI,EAAA,IAAAhyI,MAAA0I,QAEAupI,EAAA,IAAAjyI,MAAA0I,QACAwpI,EAAA,IAAAlyI,MAAA0I,QACAypI,EAAA,IAAAnyI,MAAA0I,QAQA,SAAA0pI,IAEA,OAAAt1K,KAAAsjC,IAAA,IAAAqsC,EAAAuiG,WAIA,SAAAsB,EAAA1kI,GAEA2kI,EAAAj5H,OAAA1L,EAIA,SAAAymI,EAAAzmI,GAEA2kI,EAAA74H,KAAA9L,EAIA,IAEA5R,EAeAA,EAgBAwC,EAjCA81I,GAEAt4I,EAAA,IAAAgG,MAAAqP,QAEA,SAAA+rB,EAAAm3G,GAEAv4I,EAAA6d,oBAAA06H,EAAA,GACAv4I,EAAA4Q,gBAAAwwB,GAEAo1G,EAAAz9J,IAAAinB,KAMAw4I,GAEAx4I,EAAA,IAAAgG,MAAAqP,QAEA,SAAA+rB,EAAAm3G,GAEAv4I,EAAA6d,oBAAA06H,EAAA,GACAv4I,EAAA4Q,eAAAwwB,GAEAo1G,EAAAz9J,IAAAinB,KAOAy4I,GAEAj2I,EAAA,IAAAwD,MAAAqP,QAEA,SAAAqjI,EAAAC,GAEA,IAOAC,EAPApzI,EAAAitC,EAAAu6B,aAAAjuG,SAAA0zE,EAAAu6B,WAAAhnF,KAAAysD,EAAAu6B,WAEAv6B,EAAA54D,kBAAAmsB,MAAA+nD,mBAGAxgE,EAAAklD,EAAA54D,OAAA0T,SACAiV,EAAApgC,KAAAmrB,GAAAijB,IAAAiiC,EAAAn1E,QACAs7K,EAAAp2I,EAAAtkC,SAGA06K,GAAA91K,KAAAsjD,IAAAqsB,EAAA54D,OAAAosC,IAAA,EAAAnjD,KAAA0uB,GAAA,KAGA8mJ,EAAA,EAAAI,EAAAE,EAAApzI,EAAAqiI,aAAAp1F,EAAA54D,OAAAk6B,QACAykI,EAAA,EAAAG,EAAAC,EAAApzI,EAAAqiI,aAAAp1F,EAAA54D,OAAAk6B,SAEA0+B,EAAA54D,kBAAAmsB,MAAAkoD,oBAGAoqF,EAAAI,GAAAjmG,EAAA54D,OAAA+rC,MAAA6sB,EAAA54D,OAAAqW,MAAAuiD,EAAA54D,OAAA+V,KAAA4V,EAAAoiI,YAAAn1F,EAAA54D,OAAAk6B,QACAykI,EAAAG,GAAAlmG,EAAA54D,OAAA3M,IAAAulE,EAAA54D,OAAAgsC,QAAA4sB,EAAA54D,OAAA+V,KAAA4V,EAAAqiI,aAAAp1F,EAAA54D,OAAAk6B,UAKAvG,QAAAC,KAAA,gFACAglC,EAAA0iG,WAAA,KAQA,SAAA0D,EAAAC,GAEArmG,EAAA54D,kBAAAmsB,MAAA+nD,kBAEA5tE,GAAA24J,EAEArmG,EAAA54D,kBAAAmsB,MAAAkoD,oBAEAzb,EAAA54D,OAAA+V,KAAA9sB,KAAAorB,IAAAukD,EAAA8hG,QAAAzxK,KAAAykC,IAAAkrC,EAAA+hG,QAAA/hG,EAAA54D,OAAA+V,KAAAkpJ,IACArmG,EAAA54D,OAAA26D,yBACAiiG,GAAA,IAIAjpI,QAAAC,KAAA,uFACAglC,EAAAsiG,YAAA,GAMA,SAAAgE,EAAAD,GAEArmG,EAAA54D,kBAAAmsB,MAAA+nD,kBAEA5tE,GAAA24J,EAEArmG,EAAA54D,kBAAAmsB,MAAAkoD,oBAEAzb,EAAA54D,OAAA+V,KAAA9sB,KAAAorB,IAAAukD,EAAA8hG,QAAAzxK,KAAAykC,IAAAkrC,EAAA+hG,QAAA/hG,EAAA54D,OAAA+V,KAAAkpJ,IACArmG,EAAA54D,OAAA26D,yBACAiiG,GAAA,IAIAjpI,QAAAC,KAAA,uFACAglC,EAAAsiG,YAAA,GA8PA,SAAA6B,EAAAvzJ,GAEA,IAAA,IAAAovD,EAAA9/D,QAAA,CAIA,GAFA0Q,EAAA8B,iBAEA9B,EAAApQ,SAAAw/D,EAAAgjG,aAAAC,MAAA,CAEA,IAAA,IAAAjjG,EAAAwiG,aAAA,OA5PA5xJ,EA8PAA,EA1PAs0J,EAAA55J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SA4PAzL,EAAAs7J,EAAAkB,YAEA,GAAAj0J,EAAApQ,SAAAw/D,EAAAgjG,aAAAE,KAAA,CAEA,IAAA,IAAAljG,EAAAsiG,WAAA,OA5PA1xJ,EA8PAA,EA1PA40J,EAAAl6J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SA4PAzL,EAAAs7J,EAAAmB,WAEA,GAAAl0J,EAAApQ,SAAAw/D,EAAAgjG,aAAAG,IAAA,CAEA,IAAA,IAAAnjG,EAAA0iG,UAAA,OA5PA9xJ,EA8PAA,EA1PAy0J,EAAA/5J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SA4PAzL,EAAAs7J,EAAAR,IAhQA,IAhBAvyJ,EAoRAvI,IAAAs7J,EAAAC,OAEAt3K,SAAAoO,iBAAA,YAAA8pK,GAAA,GACAl4K,SAAAoO,iBAAA,UAAA+pK,GAAA,GAEAzkG,EAAAxrC,cAAAmwI,KAMA,SAAAH,EAAA5zJ,GAEA,IAzQAA,GAyQA,IAAAovD,EAAA9/D,UAEA0Q,EAAA8B,iBAEArK,IAAAs7J,EAAAkB,QAEA,IAAA7kG,EAAAwiG,eA/QA5xJ,EAiRAA,EA7QAu0J,EAAA75J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SACAsxJ,EAAApnI,WAAAmnI,EAAAD,GAEAnyI,EAAAitC,EAAAu6B,aAAAjuG,SAAA0zE,EAAAu6B,WAAAhnF,KAAAysD,EAAAu6B,WAGAspE,EAAA,EAAAxzK,KAAA0uB,GAAAqmJ,EAAAvxI,EAAAd,EAAAoiI,YAAAn1F,EAAAyiG,aAGAmD,EAAA,EAAAv1K,KAAA0uB,GAAAqmJ,EAAAzqI,EAAA5H,EAAAqiI,aAAAp1F,EAAAyiG,aAEAyC,EAAAv1K,KAAAw1K,GAEAnlG,EAAAj7B,UAkQA18B,IAAAs7J,EAAAmB,OAEA,IAAA9kG,EAAAsiG,aAhQA1xJ,EAkQAA,EA9PA60J,EAAAn6J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SAEA4xJ,EAAA1nI,WAAAynI,EAAAD,GAEA,EAAAE,EAAA/qI,EAEAyrI,EAAAT,KAEAD,EAAA/qI,EAAA,GAEA2rI,EAAAX,KAIAH,EAAA71K,KAAA81K,GAEAzlG,EAAAj7B,UAgPA18B,IAAAs7J,EAAAR,MAEA,IAAAnjG,EAAA0iG,YA9OA9xJ,EAgPAA,EA5OA00J,EAAAh6J,IAAAsF,EAAA6C,QAAA7C,EAAAkD,SAEAyxJ,EAAAvnI,WAAAsnI,EAAAD,GAEAW,EAAAT,EAAA1xI,EAAA0xI,EAAA5qI,GAEA0qI,EAAA11K,KAAA21K,GAEAtlG,EAAAj7B,WA0OA,SAAA0/H,EAAA7zJ,IAEA,IAAAovD,EAAA9/D,UAIA5T,SAAA4a,oBAAA,YAAAs9J,GAAA,GACAl4K,SAAA4a,oBAAA,UAAAu9J,GAAA,GAEAzkG,EAAAxrC,cAAAowI,GAEAv8J,EAAAs7J,EAAAC,MAIA,SAAAQ,EAAAxzJ,IAEA,IAAAovD,EAAA9/D,UAAA,IAAA8/D,EAAAsiG,YAAAj6J,IAAAs7J,EAAAC,MAAAv7J,IAAAs7J,EAAAkB,SAEAj0J,EAAA8B,iBACA9B,EAAA+B,mBApPA/B,EAsPAA,GAlPAs1J,OAAA,EAEAI,EAAAX,KAEA,EAAA/0J,EAAAs1J,QAEAE,EAAAT,KAIA3lG,EAAAj7B,SA0OAi7B,EAAAxrC,cAAAmwI,GACA3kG,EAAAxrC,cAAAowI,IAIA,SAAAF,EAAA9zJ,IAEA,IAAAovD,EAAA9/D,UAAA,IAAA8/D,EAAA6iG,aAAA,IAAA7iG,EAAA0iG,WA7OA,WAIA,OA2OA9xJ,EA3OAyC,SAEA,KAAA2sD,EAAA/mE,KAAA6pK,GACAkD,EAAA,EAAAhmG,EAAA2iG,aACA3iG,EAAAj7B,SACA,MAEA,KAAAi7B,EAAA/mE,KAAA8pK,OACAiD,EAAA,GAAAhmG,EAAA2iG,aACA3iG,EAAAj7B,SACA,MAEA,KAAAi7B,EAAA/mE,KAAAklJ,KACA6nB,EAAAhmG,EAAA2iG,YAAA,GACA3iG,EAAAj7B,SACA,MAEA,KAAAi7B,EAAA/mE,KAAAolJ,MACA2nB,GAAAhmG,EAAA2iG,YAAA,GACA3iG,EAAAj7B,UAwNAwhI,GAIA,SAAAlC,EAAAzzJ,GAEA,IAAA,IAAAovD,EAAA9/D,QAAA,CAEA,OAAA0Q,EAAA41J,QAAA/6K,QAEA,KAAA,EAEA,IAAA,IAAAu0E,EAAAwiG,aAAA,OA7NA5xJ,EA+NAA,EA3NAs0J,EAAA55J,IAAAsF,EAAA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAA3yJ,OA6NAxL,EAAAs7J,EAAAoB,aAEA,MAEA,KAAA,EAEA,IAAA,IAAA/kG,EAAAsiG,WAAA,OA3NA/iI,GAJA3uB,EAiOAA,GA7NA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAAhzJ,MACAgsB,EAAA5uB,EAAA41J,QAAA,GAAA3yJ,MAAAjD,EAAA41J,QAAA,GAAA3yJ,MAEA86C,EAAAt+D,KAAA0uC,KAAAQ,EAAAA,EAAAC,EAAAA,GAEAgmI,EAAAl6J,IAAA,EAAAqjD,GA0NAtmD,EAAAs7J,EAAAqB,YAEA,MAEA,KAAA,EAEA,IAAA,IAAAhlG,EAAA0iG,UAAA,OA5NA9xJ,EA8NAA,EA1NAy0J,EAAA/5J,IAAAsF,EAAA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAA3yJ,OA4NAxL,EAAAs7J,EAAAsB,UAEA,MAEA,QAEA58J,EAAAs7J,EAAAC,KAtOA,IAbAhzJ,EARAA,EA+PAvI,IAAAs7J,EAAAC,MAEA5jG,EAAAxrC,cAAAmwI,IAMA,SAAAJ,EAAA3zJ,GAxLA,IA7BAA,EArBAA,EA4OA,IAAA,IAAAovD,EAAA9/D,QAKA,OAHA0Q,EAAA8B,iBACA9B,EAAA+B,kBAEA/B,EAAA41J,QAAA/6K,QAEA,KAAA,EAEA,IAAA,IAAAu0E,EAAAwiG,aAAA,OACA,GAAAn6J,IAAAs7J,EAAAoB,aAAA,OAtPAn0J,EAwPAA,EApPAu0J,EAAA75J,IAAAsF,EAAA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAA3yJ,OACAuxJ,EAAApnI,WAAAmnI,EAAAD,GAEAnyI,EAAAitC,EAAAu6B,aAAAjuG,SAAA0zE,EAAAu6B,WAAAhnF,KAAAysD,EAAAu6B,WAGAspE,EAAA,EAAAxzK,KAAA0uB,GAAAqmJ,EAAAvxI,EAAAd,EAAAoiI,YAAAn1F,EAAAyiG,aAGAmD,EAAA,EAAAv1K,KAAA0uB,GAAAqmJ,EAAAzqI,EAAA5H,EAAAqiI,aAAAp1F,EAAAyiG,aAEAyC,EAAAv1K,KAAAw1K,GAEAnlG,EAAAj7B,SAyOA,MAEA,KAAA,EAEA,IAAA,IAAAi7B,EAAAsiG,WAAA,OACA,GAAAj6J,IAAAs7J,EAAAqB,YAAA,OAtOAzlI,GAJA3uB,EA4OAA,GAxOA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAAhzJ,MACAgsB,EAAA5uB,EAAA41J,QAAA,GAAA3yJ,MAAAjD,EAAA41J,QAAA,GAAA3yJ,MAEA86C,EAAAt+D,KAAA0uC,KAAAQ,EAAAA,EAAAC,EAAAA,GAEAimI,EAAAn6J,IAAA,EAAAqjD,GAEA+2G,EAAA1nI,WAAAynI,EAAAD,GAEA,EAAAE,EAAA/qI,EAEA2rI,EAAAX,KAEAD,EAAA/qI,EAAA,GAEAyrI,EAAAT,KAIAH,EAAA71K,KAAA81K,GAEAzlG,EAAAj7B,SAqNA,MAEA,KAAA,EAEA,IAAA,IAAAi7B,EAAA0iG,UAAA,OACA,GAAAr6J,IAAAs7J,EAAAsB,UAAA,OAtNAr0J,EAwNAA,EApNA00J,EAAAh6J,IAAAsF,EAAA41J,QAAA,GAAAhzJ,MAAA5C,EAAA41J,QAAA,GAAA3yJ,OAEA0xJ,EAAAvnI,WAAAsnI,EAAAD,GAEAW,EAAAT,EAAA1xI,EAAA0xI,EAAA5qI,GAEA0qI,EAAA11K,KAAA21K,GAEAtlG,EAAAj7B,SA8MA,MAEA,QAEA18B,EAAAs7J,EAAAC,MAMA,SAAAU,EAAA1zJ,IAEA,IAAAovD,EAAA9/D,UAIA8/D,EAAAxrC,cAAAowI,GAEAv8J,EAAAs7J,EAAAC,MAIA,SAAAM,EAAAtzJ,GAEAA,EAAA8B,iBAMAstD,EAAAu6B,WAAA7/F,iBAAA,cAAAwpK,GAAA,GAEAlkG,EAAAu6B,WAAA7/F,iBAAA,YAAAypK,GAAA,GACAnkG,EAAAu6B,WAAA7/F,iBAAA,QAAA0pK,GAAA,GAEApkG,EAAAu6B,WAAA7/F,iBAAA,aAAA2pK,GAAA,GACArkG,EAAAu6B,WAAA7/F,iBAAA,WAAA4pK,GAAA,GACAtkG,EAAAu6B,WAAA7/F,iBAAA,YAAA6pK,GAAA,GAEA93K,OAAAiO,iBAAA,UAAAgqK,GAAA,GAIA15K,KAAA+5C,UAIAxR,MAAAkuI,cAAAtzK,UAAAkE,OAAAqyC,OAAAnR,MAAAC,gBAAArlC,WACAolC,MAAAkuI,cAAAtzK,UAAAE,YAAAklC,MAAAkuI,cAEApvK,OAAAmyE,iBAAAjxC,MAAAkuI,cAAAtzK,UAAA,CAEAkyC,OAAA,CAEA9xC,IAAA,WAGA,OADAwsC,QAAAC,KAAA,4DACAhwC,KAAAH,SAQA47K,OAAA,CAEAl4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,+EACAhwC,KAAAs3K,YAIAh3J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,8EACAhwC,KAAAs3K,YAAAzvK,IAMA6zK,SAAA,CAEAn4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,mFACAhwC,KAAAw3K,cAIAl3J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,kFACAhwC,KAAAw3K,cAAA3vK,IAMA8zK,MAAA,CAEAp4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,6EACAhwC,KAAA03K,WAIAp3J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,4EACAhwC,KAAA03K,WAAA7vK,IAMA+zK,OAAA,CAEAr4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,+EACAhwC,KAAA63K,YAIAv3J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,8EACAhwC,KAAA63K,YAAAhwK,IAMAg0K,aAAA,CAEAt4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,wFACAhwC,KAAAo3K,eAIA92J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,uFACAhwC,KAAAo3K,eAAAvvK,IAMAi0K,qBAAA,CAEAv4K,IAAA,WAGA,OADAwsC,QAAAC,KAAA,4FACAhwC,KAAAq3K,eAIA/2J,IAAA,SAAAzY,GAEAkoC,QAAAC,KAAA,4FACAhwC,KAAAq3K,cAAAxvK,MC1+BA0gC,MAAAwzI,0BAAA,SAAA3/J,GAEA,IAAA44D,EAAAh1E,KAEAA,KAAAoc,OAAAA,EACApc,KAAAoc,OAAAysD,SAAAqY,QAAA,OAEAlhF,KAAAkV,SAAA,EAEAlV,KAAAg8K,kBAAA,GACAh8K,KAAAi8K,kBAAA,EAEAj8K,KAAA20C,MAAA,EACA30C,KAAAk8K,iBAAA,EAGA,SAAAC,EAAAv2J,GAEAovD,EAAAgnG,kBAAAp2J,EAIA,SAAAw2J,IAEApnG,EAAAinG,kBAAAx6K,OAAA6rI,aAAA,EARA,IAgBA+uC,EAEAviI,EAEAwiI,EAEAprG,EARAqrG,GAEAF,EAAA,IAAA9zI,MAAAqP,QAAA,EAAA,EAAA,GAEAkC,EAAA,IAAAvR,MAAAywC,MAEAsjG,EAAA,IAAA/zI,MAAAgP,WAEA25B,EAAA,IAAA3oC,MAAAgP,YAAAlyC,KAAA0uC,KAAA,IAAA,EAAA,EAAA1uC,KAAA0uC,KAAA,KAEA,SAAAwC,EAAA5B,EAAA6nI,EAAAC,EAAAC,GAEA5iI,EAAAx5B,IAAAk8J,EAAA7nI,GAAA8nI,EAAA,OAEAlmI,EAAAsD,aAAAC,GAEAvD,EAAArD,SAAAg+B,GAEA36B,EAAArD,SAAAopI,EAAA/hI,iBAAA8hI,GAAAK,MAMA18K,KAAAwwI,QAAA,WAEA4rC,IAEA36K,OAAAiO,iBAAA,oBAAA0sK,GAAA,GACA36K,OAAAiO,iBAAA,oBAAAysK,GAAA,GAEAnnG,EAAA9/D,SAAA,GAIAlV,KAAAk8I,WAAA,WAEAz6I,OAAAya,oBAAA,oBAAAkgK,GAAA,GACA36K,OAAAya,oBAAA,oBAAAigK,GAAA,GAEAnnG,EAAA9/D,SAAA,GAIAlV,KAAA+5C,OAAA,WAEA,IAEApF,EACA6nI,EACAC,EACAC,GALA,IAAA1nG,EAAA9/D,UAEAy/B,EAAAqgC,EAAAgnG,kBAAArnI,MAAApM,MAAAljC,KAAAkrC,SAAAykC,EAAAgnG,kBAAArnI,OAAA30C,KAAAk8K,iBAAA,EACAM,EAAAxnG,EAAAgnG,kBAAAQ,KAAAj0I,MAAAljC,KAAAkrC,SAAAykC,EAAAgnG,kBAAAQ,MAAA,EACAC,EAAAznG,EAAAgnG,kBAAAS,MAAAl0I,MAAAljC,KAAAkrC,SAAAykC,EAAAgnG,kBAAAS,OAAA,EACAC,EAAA1nG,EAAAinG,kBAAA1zI,MAAAljC,KAAAkrC,SAAAykC,EAAAinG,mBAAA,EAEAM,EAAAvnG,EAAA54D,OAAAm6B,WAAA5B,EAAA6nI,EAAAC,EAAAC,GACA18K,KAAA20C,MAAAA,IAIA30C,KAAA28K,uBAAA,SAAAxoI,GAEAn0C,KAAAk8K,iBAAA/nI,EACAn0C,KAAA+5C,UAIA/5C,KAAAm2C,QAAA,WAEAn2C,KAAAk8I,cAIAl8I,KAAAwwI,WCvGAjoG,MAAAq0I,WAAA,SAAAxgK,EAAAk6G,GAEA,IAEAumD,EAAAC,EAFA9nG,EAAAh1E,KAIA+8K,EAAA,IAAAx0I,MAAAsP,QAEAmlI,EAAA,KACA,gBAAAv7K,SACAu7K,EAAA,IAAAC,aAmBAnT,UAAAoT,eAEApT,UAAAoT,gBAAAx/J,KAlBA,SAAAy/J,GAIA,GAFAL,EAAAK,GAEA18K,OAEAo8K,EAAAM,EAAA,GAIA7mD,GAAAA,EAAA,6BAgBAt2H,KAAA0iB,MAAA,EAIA1iB,KAAAo9K,UAAA,EAIAp9K,KAAAq9K,WAAA,IAEAr9K,KAAAs9K,aAAA,WAEA,OAAAT,GAIA78K,KAAAk9K,cAAA,WAEA,OAAAJ,GAIA98K,KAAAu9K,kBAAA,WAEA,OAAAR,GAIA/8K,KAAA+5C,OAAA,WAEA,IAEAorE,EAFA03D,IAIAA,EAAAW,cAEAX,EAAAW,aAAAR,GACA73D,EAAA63D,EAAA73D,MAEA03D,EAAAY,UAEAt4D,EAAA03D,EAAAY,WAIA,OAAAt4D,EAAAmoB,aAEAlxH,EAAAm6B,WAAAvB,UAAAmwE,EAAAmoB,aAIA,OAAAnoB,EAAAr1F,SAEA1T,EAAA0T,SAAAklB,UAAAmwE,EAAAr1F,UAIA1T,EAAA0T,SAAAxP,IAAA,EAAA,EAAA,GAIAtgB,KAAAo9K,WAEAP,EAAAa,iBAEAthK,EAAA8mE,eAEA65F,EAAA/nI,UAAA6nI,EAAAa,gBAAAC,4BACAvhK,EAAAolE,YAAAu7F,IAIA3gK,EAAA0T,SAAA2iB,KAAAr2B,EAAA0T,SAAA6f,EAAA3vC,KAAAq9K,aAMAjhK,EAAA0T,SAAAqjB,eAAA6hC,EAAAtyD,SAMA1iB,KAAA49K,UAAA,WAEAf,GAEAA,EAAAe,aAMA59K,KAAA69K,YAAA,WAEA9tI,QAAAC,KAAA,yDACAhwC,KAAA49K,aAIA59K,KAAA89K,WAAA,WAEA/tI,QAAAC,KAAA,wDACAhwC,KAAA49K,aAIA59K,KAAAm2C,QAAA,WAEA0mI,EAAA,OCrJAt0I,MAAAw1I,eAAA,SAAA3wK,GAEAm7B,MAAA6wC,SAAAp4E,KAAAhB,MAEA,IACAg+K,EADAhpG,EAAAh1E,KAGAi+K,EAAA,CAAA,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAyBAr+K,KAAA25E,kBAAA,EACA35E,KAAA+8K,eAAA,IAAAx0I,MAAAsP,QAEA73C,KAAAs+K,WAAA,WAEA,OAAAN,GAIAh+K,KAAAu+K,eAAA,SAAA/oK,GAEA,MAAA,aAAAA,EAAA0oK,EACA,YAAA1oK,EAAA2oK,EACA,UAAA3oK,EAAA4oK,EACA,SAAA5oK,EAAA6oK,OAAA,GAIAr+K,KAAA+5C,OAAA,WAIA,IAMAorE,OANAhgH,KAFA64K,EA3CA,SAAA5wK,GAOA,IAFA,IAAAoxK,EAAA1U,UAAA2U,cAEAj+K,EAAA,EAAAI,EAAA,EAAAJ,EAAA,EAAAA,IAAA,CAEA,IAAAw9K,EAAAQ,EAAAh+K,GAEA,GAAAw9K,GAAA,mBAAAA,EAAA5wK,GAAA,CAEA,GAAAxM,IAAAwM,EAAA,OAAA4wK,EAEAp9K,MA4BA89K,CAAAtxK,UAEAjI,IAAA64K,EAAA74D,KAEA,OAAA64D,EAAA74D,OAMA,QAFAA,EAAA64D,EAAA74D,MAEAr1F,UAAAklD,EAAAllD,SAAAklB,UAAAmwE,EAAAr1F,UACA,OAAAq1F,EAAAmoB,aAAAt4D,EAAAz+B,WAAAvB,UAAAmwE,EAAAmoB,aACAt4D,EAAA1+B,OAAAuR,QAAAmtB,EAAAllD,SAAAklD,EAAAz+B,WAAAy+B,EAAAtyD,OACAsyD,EAAA1+B,OAAAoI,iBAAAs2B,EAAA+nG,eAAA/nG,EAAA1+B,QACA0+B,EAAA6E,wBAAA,EACA7E,EAAAlzC,SAAA,EAIAm8I,EAAA,KAAAD,EAAAC,KAAA,IAAAA,EAAA,KAAAD,EAAAC,KAAA,KAEAA,EAAA,GAAAD,EAAAC,KAAA,GACAA,EAAA,GAAAD,EAAAC,KAAA,GACAjpG,EAAAxrC,cAAA,CAAAtpC,KAAA,cAAA+9K,KAAAA,KAIAC,IAAAF,EAAAW,QAAA,GAAAC,UAEAV,EAAAF,EAAAW,QAAA,GAAAC,QACA5pG,EAAAxrC,cAAA,CAAAtpC,KAAAg+K,EAAA,eAAA,gBAIAC,IAAAH,EAAAW,QAAA,GAAAC,UAEAT,EAAAH,EAAAW,QAAA,GAAAC,QACA5pG,EAAAxrC,cAAA,CAAAtpC,KAAAi+K,EAAA,cAAA,eAIAC,IAAAJ,EAAAW,QAAA,GAAAC,UAEAR,EAAAJ,EAAAW,QAAA,GAAAC,QACA5pG,EAAAxrC,cAAA,CAAAtpC,KAAAk+K,EAAA,YAAA,aAIAC,IAAAL,EAAAW,QAAA,GAAAC,UAEAP,EAAAL,EAAAW,QAAA,GAAAC,QACA5pG,EAAAxrC,cAAA,CAAAtpC,KAAAm+K,EAAA,WAAA,aAMArpG,EAAAlzC,SAAA,IAQAyG,MAAAw1I,eAAA56K,UAAAkE,OAAAqyC,OAAAnR,MAAA6wC,SAAAj2E,WACAolC,MAAAw1I,eAAA56K,UAAAE,YAAAklC,MAAAw1I,eC/HA,IAAAc,GAAA,WAEA,IAAAC,EAOAC,EAqHA,SAAAhlI,KAOA,SAAAilI,KA0BA,MAAA,CACAp8K,KArJA,WAKA9C,OAAAG,GAAA,SAAA85C,GACAj6C,OAAAG,GAAA,SAAA++K,GAGAF,EAAA,IAAAv2I,MAAA6wC,SACA6lG,WAAAC,WAAA5jK,IAAAwjK,GAIAK,QAAAC,OAAAC,WAFA,KAIAN,EAAAx2I,MAAAi8B,UAAA,MACA9V,SAAA,MAAA7mD,MAAAs3K,QAEA,IAAAG,EAAA,IAAA/2I,MAAA6oC,eAAA,CACAzM,eAAAo6G,EAAAp6G,eACAD,aAAAq6G,EAAAr6G,aACAhW,SAAAqwH,EAAArwH,SACAoe,YAAA,EACAG,KAAA1kC,MAAA8B,WAGA,IAAA9B,MAAA8kD,KACA,IAAA9kD,MAAA8tH,aAAA,KAAA,KAAA,MACAipB,IAyHAvlI,OAAAA,EACAilI,OAAAA,EACAO,UARA,SAAAJ,GACAJ,EAAArwH,SAAA,MAAA7mD,MAAAs3K,IA5JA,GCAAK,MAAA,WACA,IAAAV,EAGAW,EAGA9yG,EADA+yG,EAAA,GAEAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAxqI,EAAA,IAAA9M,MAAAqP,QACAkoI,EAAA,IAAAv3I,MAAAqP,QACAmoI,GAAA,EAmCA,SAAAC,EAAAp6J,GACA,IACAq6J,EADA,IAAAr6J,EAAA41J,QAAA/6K,UACAw/K,EAAA,IAAA13I,MAAA0I,SACApI,EAAAjjB,EAAA41J,QAAA,GAAAhzJ,MAAA/mB,OAAAy+K,WAAA,EAAA,EACAD,EAAAtwI,EAAA,IAAA/pB,EAAA41J,QAAA,GAAA3yJ,MAAApnB,OAAA0+K,aAAA,EACAC,EAAAH,IAGA,SAAAI,EAAAz6J,GACA,IAAAq6J,EAAA,IAAA13I,MAAA0I,QACAgvI,EAAAp3I,EAAAjjB,EAAA6C,QAAAhnB,OAAAy+K,WAAA,EAAA,EACAD,EAAAtwI,EAAA,IAAA/pB,EAAAkD,QAAArnB,OAAA0+K,aAAA,EACAC,EAAAH,GAGA,SAAAG,EAAAH,GACA,IAAAryF,EAAA,IAAArlD,MAAAwtG,UACAnoD,EAAAy7D,cAAA42B,EAAAhB,WAAAqB,aACAxsF,EAAAlG,EAAAsoD,gBAAAqqC,UAAA,GAEAzsF,EAAA,KACAisF,GAAA,EAEAnsJ,EAAAkgE,EAAA,GAAA9kB,MAAA77B,eAAA,IAEAguH,SAAAzqI,GAAA2e,EAAA,GAAAA,EAAAhB,WAAAzgB,GAAA,CAAAiV,EAAA,GAAAjV,EAAAiV,EAAA4N,EAAA,GAAA7iB,EAAA6iB,EAAAusH,KAAAuQ,OAAAiN,SAAA5hB,WAAA,WACAmhB,GAAA,MAkJA,SAAAhmI,IAEA,IAeA0mI,EAfA3oJ,EAAA,KAAA3vB,KAAAD,MAcA63K,IACAU,EAAA,IAAAl4I,MAAAqP,QAAAn2C,OAAAy+K,WAAAz+K,OAAA0+K,YAAA,GAAA96K,KAAAkwC,IAJA,EAIA,EAAAzd,GAAAzyB,KAAAkwC,IAJA,EAIA,IAAAzd,GAAA,EAAA,EAAA,GAAAzyB,KAAAkwC,IAJA,EAIAzd,GAAAzyB,KAAAkwC,IAJA,EAIA,IAAAzd,GAAA,GACAqpI,SAAAzqI,GAAA2e,EAAA,GAAAA,EAAAhB,WAAAosI,GAAA,CACA53I,EAAA43I,EAAA53I,EACA4N,EAAAgqI,EAAAhqI,EACAusH,KAAAuQ,OAAAiN,YAGArf,SAAAzqI,GAAA2e,EAAA,EAAA,CACA1F,EAAA,EAAAtqC,KAAAkwC,IAZA,EAYA,GAAAzd,GAAAkrI,KAAAuQ,OAAAiN,WAIArf,SAAAzqI,GAAAopJ,EAAAY,EAAA,CAAA73I,EAAAwM,EAAAxM,EAAA8G,EAAA0F,EAAA1F,EAAA8G,EAAApB,EAAAoB,EAAAusH,KAAAuQ,OAAAiN,WAEA,IAAA,IAAA5/K,EAAA,EAAAA,EAAA++K,EAAA/+K,IAAA,CACA,IAKA8oC,EALAshD,EAAA21F,OAAA//K,IAEA,GAAAg/K,EAAAh/K,GAAAioC,GAAAxjC,KAAAC,SAAA,MAAA,GAAAs6K,EAAAh/K,GAAAyzC,WAAAgB,KAAA8rH,SAAA1B,WAAAogB,EAAAj/K,OAGA8oC,EAAA,EAAArkC,KAAA0uB,IAAAnzB,EAAA++K,EAAAt6K,KAAAC,SAAA,IAEAs6K,EAAAh/K,GAAAioC,EAAAwM,EAAAxM,EAAA,GAAAxjC,KAAAkwC,IAAA7L,GACAk2I,EAAAh/K,GAAA+uC,EAAA,EACAiwI,EAAAh/K,GAAA61C,EAAApB,EAAAoB,EAAA,GAAApxC,KAAAyuB,IAAA4V,GACAk2I,EAAAh/K,GAAAggL,UAAAj8K,KAAA0wC,GAGA8rH,SAAApF,aAAA8jB,EAAAj/K,IACAugK,SAAAzqI,GAAAmpJ,EAAAj/K,GAAA8/K,GAAA,CAAA73I,EAAA+2I,EAAAh/K,GAAAioC,EAAA4N,EAAAmpI,EAAAh/K,GAAA61C,IACA0qH,SAAAzqI,GAAAmpJ,EAAAj/K,GAhCA,GAgCA,CAAA+uC,EAAA,IACAwxH,SAAAzqI,GAAAmpJ,EAAAj/K,GAjCA,GAiCA,CAAAi3B,MAjCA,GAiCA8X,EAAAiwI,EAAAh/K,GAAA+uC,KAIAq7C,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAnrB,KAAAm7K,GACA90F,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAxU,IAAAwkK,EAAAj7K,QAAAsuC,eAAA,KACA63C,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAxP,IAAAu/J,EAAAj/K,GAAAioC,EAAA,EAAA,EAAAg3I,EAAAj/K,GAAA+uC,EAAA,EAAAkwI,EAAAj/K,GAAA61C,EAAA,GACAu0C,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAijB,IAAA+sI,EAAAj7K,QAAAsuC,eAAA,KACA63C,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAxP,IAAAu/J,EAAAj/K,GAAAioC,GAAA,GAAAg3I,EAAAj/K,GAAA+uC,EAAAkwI,EAAAj/K,GAAA61C,GACAu0C,EAAAmR,SAAAG,MAAA,GAAAxsE,SAAAijB,IAAA+sI,EAAAj7K,QAAAsuC,eAAA,IAEA0tI,gBAAAjgL,GAAAm5C,UAaA,SAAAilI,KA8BA,MAAA,CACAp8K,KArTA,WAGA9C,OAAAG,GAAA,SAAA85C,GACAj6C,OAAAG,GAAA,SAAA++K,GACAF,EAAA,IAAAv2I,MAAA6wC,SACA6lG,WAAAC,WAAA5jK,IAAAwjK,GA2DA,WACAW,IACAX,EAAA/hK,OAAA0iK,GACAA,EAAApqG,SAAAl/B,UACAspI,EAAA,MAGAl3I,MAAAiC,cAAA,IACAs2I,EAAA1B,OAAAC,WAAA,IACAyB,EAAAtvI,OAAAjJ,MAAAoF,UAGA,IAAApF,MAAAotB,MAAA,EAAA,EAAA,GACAgX,EAAA,IAAApkC,MAAA+yD,qBAAA,CACAjrB,UAAA,EACAtO,UARA,KASA35B,MAAA,SACA+8B,UANA,EAQAD,UATA,EAUAgI,QAAA3kC,MAAAgC,YACA02B,OAAA6/G,EACA7zG,KAAA1kC,MAAA+B,aASA,WACAq2I,OAAA,GACAE,gBAAA,GAcA,IAZA,IAKAE,EAAA,CACA3xF,cANA,EAOA4xF,aANA,EAOAzsJ,OANA66D,GAOAshC,WANAn8F,GASA/zB,EAAA,EAAAA,EAAAm/K,EAAAn/K,IAAA,CAEA,IAAA60E,EAgBA,SAAA0rG,GAWA,IATA,IAAA1rG,EAAA,IAAA9sC,MAAA6oF,iBACA,EACA,EACA2vD,EAAAxsJ,OACA,EACA,EAAAwsJ,EAAAC,cACA,GAGAxgL,EAAA,EAAAA,EAAA60E,EAAA5O,SAAAhmE,OAAAD,IAAA,CAEA,IAAAioE,EAAA4M,EAAA5O,SAAAjmE,GACAmvC,EAAA84B,EAAA94B,EAAAoxI,EAAArwD,WAEAuwD,EAAA57K,KAAA8qC,MAAAR,EAAAoxI,EAAA3xF,eACAm2B,EAAA51E,EAAAoxI,EAAA3xF,cAAA2xF,EAAA3xF,cAEA3mB,EAAA5/B,GAAA,GAAA,GAAAxjC,KAAAC,UACAmjE,EAAAhyB,GAAA,GAAA,GAAApxC,KAAAC,UACAmjE,EAAA94B,IAAAoxI,EAAA3xF,gBACA3mB,EAAA5/B,EAAA4/B,EAAAhyB,EAAA,GAGA4+B,EAAA4P,YAAA5kF,KAAA,IAAAkoC,MAAAoO,QAAAsqI,EAAAA,EAAA,EAAA,EAAA,IACA5rG,EAAA2P,YAAA3kF,KAAA,IAAAkoC,MAAAoO,QAAA,EAAA4uE,EAAAA,EAAA,EAAA,IAIA,OAAAlwC,EA9CA22D,CAAA+0C,GACAzkF,EAiDA,SAAAykF,GAEAzkF,MAAA,GAEA,IAAA4kF,EAAA,IAAA34I,MAAAi2E,KACAliB,MAAAj8F,KAAA6gL,GACAA,EAAApxJ,SAAA6f,GAAAoxI,EAAArwD,WAEA,IAAA,IAAAlwH,EAAA,EAAAA,EAAAugL,EAAAC,aAAAxgL,IAAA,CAEA,IAAAs+G,EAAA,IAAAv2E,MAAAi2E,KACAM,EAAAhvF,SAAA6f,EAAAoxI,EAAA3xF,cACAkN,MAAAj8F,KAAAy+G,GACAoiE,EAAA5lK,IAAAwjG,GACAoiE,EAAApiE,EAIA,OAAAxiB,MAnEA6kF,CAAAJ,IACA/1F,EAsEA,SAAA3V,EAAAinB,GAEA,IAAAtR,EAAA,IAAAziD,MAAAm2E,YAAArpC,EAAA1I,GACAwvB,EAAA,IAAA5zD,MAAAw1E,SAAAzhB,GACAtR,EAAAjT,YAAA,EACAiT,EAAAhT,eAAA,EAGAgT,EAAA1vE,IAAAghF,EAAA,IACAtR,EAAA3kD,KAAA81D,GAEAilF,EAAA,IAAA74I,MAAAgvG,eAAAvsD,GAKA,OAJAo2F,EAAAz0G,SAAA2E,UAAA,EAEAuvG,gBAAAxgL,KAAA+gL,GAEAp2F,EAtFAq2F,CAAAhsG,EAAAinB,IACA55E,MAAApC,IAAA,IAAA,IAAA,KAEAw+J,EAAAxjK,IAAA0vE,GACA21F,OAAAtgL,KAAA2qF,GAEA7vE,EAAA,IAAAotB,MAAAqP,QACAz8B,EAAAylK,UAAA,IAAAr4I,MAAAqP,QACAgoI,EAAAv/K,KAAA8a,GACA0kK,EAAAx/K,KAAA8a,EAAAtW,UAhCAy8K,GArFAC,GAEA,IAAAC,GAAA,IAAAj5I,MAAAiwF,eAAApvG,KAAA,8BACAo4J,EAAApwI,MAAA7I,MAAAsE,eACA20I,EAAAnwI,MAAA9I,MAAAsE,eACA20I,EAAAzvI,OAAAzxB,IAAA,IAAA,KAEAmhK,aAAA,IAAAl5I,MAAA8yD,kBAAA,CACAjzD,MAAA,SACA28B,SAAA,EACAC,UAAA,GACAoI,aAAA,EACAtL,QAAA0/G,EACAz/G,UAAA,IAGAw+G,SAAA,IAAAh4I,MAAA8kD,KAAA,IAAA9kD,MAAA4mF,cAAA,IAAA,KAAAsyD,cACAlB,SAAA13G,SAAAhgC,GAAAxjC,KAAA0uB,GAAA,EACAwsJ,SAAAzwJ,SAAA6f,GAAA,IAEA4wI,SAAAzmG,eAAA,EACAglG,EAAAxjK,IAAAilK,UAEAj/K,SAAAoO,iBAAA,YAAA2wK,GACA/+K,SAAAoO,iBAAA,YAAAswK,GAAA,IAsRAjmI,OAAAA,EACAilI,OAAAA,EAGA0C,UArBA,aAsBAC,WAlBA,aAmBApC,UAfA,SAAAJ,GACAxyG,EAAA1L,OAAAk+G,GAeAyC,aAbA,WACA,OAAAlC,EAAAr6K,KAAA8qC,MAAA9qC,KAAAC,SAAAo6K,EAAAj/K,WA/TA,GCAAohL,OAAA,WACA,IAKAC,EAWAn1G,EAuCA,SAAA40G,IACAO,IACA7C,WAAAC,WAAAniK,OAAA+kK,GACAA,EAAAzsG,SAAAl/B,UACA2rI,EAAA,MAMA,IAHA,IAAAC,EAAA,IAAAx5I,MAAAmpF,YAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GACAp5C,EAAA,IAAA/vC,MAAA6wC,SAEAx4E,EAAA,EAAAA,EAAA,IAAAA,IAAA,CACA,IAAA8oC,EAAA,GACAs4I,EAAA,IAAAz5I,MAAAqP,QACA,GAAAh3C,GACAohL,EAAA1hK,KAAAjb,KAAAC,SAAA,IAAAokC,GAAArkC,KAAAC,SAAA,IAAAokC,GAAArkC,KAAAC,SAAA,IAAAokC,GAEA,IADA,IAAAu4I,EAAA,EAAA58K,KAAAC,SACA9E,EAAA,EAAAA,EAAAyhL,EAAAzhL,IAAA,CACA,IAAAilE,EAAA,IAAAl9B,MAAA8kD,KAAA00F,EAAAp1G,GACAjjC,EAAA,GAAA,GAAArkC,KAAAC,SACAmgE,EAAA31C,SAAAxP,KAAAjb,KAAAC,SAAA,IAAAokC,GAAArkC,KAAAC,SAAA,IAAAokC,GAAArkC,KAAAC,SAAA,IAAAokC,GACA+7B,EAAA31C,SAAAxU,IAAA0mK,GACA,IAAAE,EAAA78K,KAAAC,SACA68K,EAAA98K,KAAAC,SACA88K,EAAA/8K,KAAAC,SACAmgE,EAAA/iD,MAAApC,IAAA4hK,EAAAC,EAAAC,GACA9pG,EAAAh9D,IAAAmqD,GACAA,EAAAsS,YAAA,EACAtS,EAAAqU,eAAA,GAMA,IADA,IAAAuoG,EAAA,IAAA95I,MAAAq8C,SACApkF,EAAA,EAAAA,EAAA83E,EAAA39D,SAAAla,OAAAD,IACA83E,EAAA39D,SAAAna,GAAA0iF,eACAm/F,EAAAz+K,MAAA00E,EAAA39D,SAAAna,GAAA60E,SAAAiD,EAAA39D,SAAAna,GAAA81C,QAIA,IAAA91C,EAAA,EAAAA,EAAA6hL,EAAA57G,SAAAhmE,OAAAD,IAAA,CACA,IAAA+hC,EAAA8/I,EAAA57G,SAAAjmE,GACA+hC,EAAAsG,GAHA,IAGAxjC,KAAAC,SAAA,IACAi9B,EAAAoN,GAJA,IAIAtqC,KAAAC,SAAA,IACAi9B,EAAAkU,GALA,IAKApxC,KAAAC,SAAA,IAGA+8K,EAAAz5F,qBACAy5F,EAAAl5F,wBAEA24F,EAAA,IAAAv5I,MAAA8kD,KAAAg1F,EAAA11G,IACAoL,YAAA,EACA+pG,EAAAhoG,eAAA,EACAmlG,WAAAC,WAAA5jK,IAAAwmK,GAEA7C,WAAAqD,cAAArrG,UAAAxhC,aAAA,EAGA,SAAAsE,KAGA,SAAAilI,KAMA,MAAA,CACAp8K,KAxGA,WAGA9C,OAAAG,GAAA,SAAA85C,GACAj6C,OAAAG,GAAA,SAAA++K,GAGAz2I,MAAAiC,cAAA,IACAs2I,EAAA1B,OAAAC,WAAA,IACAyB,EAAAtvI,OAAAjJ,MAAAoF,UAIAg/B,EAAA,IAAApkC,MAAA+yD,qBAAA,CACAv5B,UAPA,KAQAoD,UAJA,EAKAxC,KAAA,EACAuC,UAPA,EAQAgI,QAAA3kC,MAAAgC,YACA02B,OAAA6/G,IAeAS,KAuEAxnI,OAAAA,EACAilI,OAAAA,EACAuD,SAPA,aAQAhB,OAAAA,GA/HA,GCAAnC,OAAA,WAEA,IACAoD,EAAA,GAgEA,SAAAC,EAAAz3F,EAAA03F,GAGA,IAEAC,EAJA33F,EAAA3V,UACA2V,EAAA3V,SAAAl/B,UACA60C,EAAAre,YAIAg2G,IAFAA,EAAA33F,EAAAre,SAAA3oE,MACAgnF,EAAAre,SAAAwL,UACA6S,EAAAre,SAAAwL,UAAA,GAAAn0E,IAEA2+K,IAAAD,IACAC,EAAAltI,aAAA,EACAktI,EAAAxsI,UACAwsI,EAAA1sK,MAAA,KACA0sK,EAAA,MAEA33F,EAAAre,SAAAwL,YACA6S,EAAAre,SAAAwL,UAAA,GAAAhiC,UACA60C,EAAAre,SAAAwL,UAAA,GAAAhiC,UACA60C,EAAAre,SAAAwL,UAAA,GAAA,KACA6S,EAAAre,SAAAwL,UAAA,GAAA,MAEA6S,EAAAre,SAAAx2B,SACA60C,EAAAre,SAAAx2B,UAEA60C,EAAAre,SAAA,KAEAg2G,EADA33F,EAAA3V,SAAA,MAIA,MAAA,CACAzyE,KA5FA,aA6FAggL,YAAA,aAGA/nF,QA5FA,SAAAz+E,EAAAsmK,GACA,IACA9wE,EADA,EAAAx1F,EAAAzB,SAAAla,QACAmxG,EAAA,CAAAx1F,EAAAzB,SAAA,GAAAyB,EAAAzB,SAAA,IAEAyB,EAAAW,OAAA60F,EAAA,IACAx1F,EAAAW,OAAA60F,EAAA,IAEA6wE,EAAA7wE,EAAA,GAAA8wE,GACAD,EAAA7wE,EAAA,GAAA8wE,IAEAD,EAAArmK,EAAAsmK,IAmFArD,WA/EA,SAAA7+K,GAEA,GAAAgiL,EADA,GAEA,OAAAA,EAFA,GAIA,IAAArD,EAAA,IAAA52I,MAAA2I,QAAA,IACAiuI,EAAA3tI,OAAAjJ,MAAAoF,UACAwxI,EAAAjtI,OAAA,EAEA,IAAA2wI,EAAA,CACA,CAAA9sK,KAAA,uBAAA0wB,KAAA,KAAAq8I,KAAA,KAGAhrD,EAAA,IAAAvvF,MAAA+vF,YACAviH,EAAA8sK,EAbA,GAaA9sK,KACA0wB,EAAAo8I,EAdA,GAcAp8I,KA0BA,OAzBAqxF,EAAA1uG,KAAArT,EAAA,SAAAE,GACA,SAAA8sK,EAAAl6I,EAAA8G,GAEA,IAAAzI,EAAA5lC,SAAAmF,cAAA,UAOA,OANAygC,EAAAxY,MAAA+X,EACAS,EAAA3S,OAAAkS,EAEAS,EAAAI,WAAA,MACA4O,UAAAjgC,GAAA4yB,EAAApC,GAAAkJ,EAAAlJ,GAEAS,EAIAi4I,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAAlpK,MAAA,GAAA8sK,EAAA,EAAA,GACA5D,EAAA1pI,aAAA,IAIA+sI,EAvCA,GAuCArD,IA/DA,GCAAr/K,OAAA,IAAAF,OACAojL,aAAA,IAAAzrB,aAEA0rB,KAAA,WA0BA,SAAAlpI,IACA4lE,sBAAA5lE,GACAj6C,OAAAa,KAAA,UAGA,SAAAuiL,IACAjE,WAAAiE,WACAC,UAAAD,WAGA,MAAA,CACAtgL,KAnCA,WAEAqkC,SAAAG,OACAH,SAAAoB,qBAIA5mC,OAAAiO,iBAAA,SAAAwzK,GAAA,GAGAE,gBAAAxgL,OACAq8K,WAAAr8K,OACAugL,UAAAvgL,OAEAsgL,IAEAE,gBAAAC,UAAAC,cACAv8I,EAAA,aAAA5V,OAGA4oB,MAtBA,GA0CAhT,EAAAtlC,QAAAxB,GAAA,OAAA,WACA8mC,EAAA,WAAAzP,UACAyP,EAAA,cAAAlP,MAAA,KAAAP,QAAA,UAGAyP,EAAAzlC,UAAAiZ,MAAA,WACAgF,WAAA0jK,KAAArgL,KAAA,OCnDA,IAAAwgL,gBAAA,WAEA,IAEAG,EAAA,CACAzrJ,KAAA,KACA49I,MAAA,EACA8N,WAAA,WACAliL,SAAA8N,gBAAAq0K,wBAAAC,QAAAC,sBACAV,KAAAW,kBAEAC,aAAA,WACAC,SAAAvB,SAAA,EAAA,IAEAwB,cAAA,WACAD,SAAAvB,SAAA,EAAA,KAeAyB,EAAA,CACAC,KAAA,EACAC,MAAA,EACAC,MAAA,EACAC,IAAA,EACAC,cAAA,EACAC,kBAAA,EACAC,KAAA,EACAt0G,WAAA,EACAu0G,MAAA,EACAC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,OAAA,EACAC,OAAA,EACA5sH,OAAA,EACA6sH,UAAA,EACAC,cAAA,EACAC,eAAA,EACAC,cAAA,GACAC,WAAA,EACApC,KAAA,IAoBA,SAAA3xJ,EAAA7H,EAAA67J,EAAAC,EAAAv9K,GACAw9K,EACA,iBAAAx9K,GACAA,EAEA07K,EAAAzrJ,KAAAqtJ,GAAA5B,EAAAzrJ,MAAAstJ,IACApB,EAAA16J,GAAA+7J,GAaA,SAAAtrI,IAGAwpI,EAAA7N,OACA6N,EAAAzrJ,MAAA,EAAA,EAAA,GAAA,GAAA,GACA,EAAAyrJ,EAAAzrJ,OACAyrJ,EAAAzrJ,KAAA,GACAyrJ,EAAAzrJ,KAAA,IACAyrJ,EAAAzrJ,KAAA,IAGA,IAAAjzB,EAAA,GACA,IAAA4M,KAAAuyK,EACAA,EAAA3hL,eAAAoP,KACA5M,EAAA4M,GAAAuyK,EAAAvyK,IAGA,GAAA8xK,EAAA7N,KAAA,CACA,IAAA,IAAAjkK,KAAAuyK,EACAA,EAAA3hL,eAAAoP,KACA,IAAAuyK,EAAAvyK,KACAuyK,EAAAvyK,IAAA,GAIAuyK,EAAAiB,cAAA5/K,KAAAkwC,IAAA,IAAA,EAAAguI,EAAAzrJ,MAAA,EAAA,GACAksJ,EAAAe,cAAAxB,EAAAzrJ,KACAksJ,EAAAgB,eAAAzB,EAAAzrJ,KAGA3G,EAAA,QAAA,IAAA,KACAA,EAAA,aAAA,EAAA,GAAA,GACAA,EAAA,aAAA,GAAA,EAAA,GAEAA,EAAA,eAAA,EAAA,KAAA,GACAA,EAAA,eAAA,IAAA,IAAA,GACAA,EAAA,eAAA,IAAA,IAAA,GACAA,EAAA,eAAA,IAAA,IAAA,GAEAA,EAAA,QAAA,EAAA,KACAA,EAAA,QAAA,IAAA,GACAA,EAAA,QAAA,GAAA,IACAA,EAAA,iBAAA,GAAA,EAAA,GAEAA,EAAA,eAAA,IAAA,IAAA,GACAA,EAAA,eAAA,GAAA,IAAA,GACAA,EAAA,eAAA,IAAA,IAAA,GACAA,EAAA,eAAA,IAAA,IAAA,GAEAA,EAAA,QAAA,IAAA,GAEAA,EAAA,YAAA,IAAA,IAAA,GACAA,EAAA,YAAA,GAAA,IAAA,GACAA,EAAA,YAAA,IAAA,IAAA,IACAA,EAAA,YAAA,IAAA,KAAA,GACAA,EAAA,YAAA,IAAA,IAAA,GACAA,EAAA,YAAA,IAAA,KAAA,GACAA,EAAA,YAAA,IAAA,IAAA,GACAA,EAAA,YAAA,IAAA,IAAA,GACAA,EAAA,YAAA,IAAA,GAAA,IAEAA,EAAA,eAAA,GAAA,IAAA,GACAA,EAAA,eAAA,GAAA,IAAA,GACAA,EAAA,eAAA,IAAA,GAAA,GACAA,EAAA,eAAA,GAAA,IAAA,GAEAA,EAAA,OAAA,IAAA,KACAA,EAAA,YAAA,IAAA,KACAA,EAAA,OAAA,IAAA,GAEAA,EAAA,MAAA,GAAA,IACAA,EAAA,MAAA,GAAA,GAEAA,EAAA,KAAA,IAAA,GAEAA,EAAA,mBAAA,IAAA,GAWA,IAAAm0J,GAAA,EAEA,IAAA7zK,KAAAuyK,EACAn/K,EAAA4M,IAAAuyK,EAAAvyK,IAAA,kBAAAuyK,EAAAvyK,IAAA,UAAAA,GAAA,cAAAA,GAAA,UAAAA,GAAA,UAAAA,GAAA,kBAAAA,GAAA,mBAAAA,GAAA,eAAAA,IACA6zK,GAAA,EACAv1I,QAAAe,IAAAr/B,EAAAuyK,EAAAvyK,KAKA6zK,GACAnC,UAAAhwJ,SAIA,MAAA,CACAvwB,KA7HA,WACA,OAAA9C,OAAAG,GAAA,SAAA85C,IA6HAwrI,YA9KA,CACAC,QAAA,EACAC,WAAA,EACAC,WAAA,EACAC,QAAA,EACAC,aAAA,GACAC,cAAA,IACAC,SAAA,EACAC,QAAA,GAuKA/B,SAAAA,EACAX,UA7IA,CACA2C,UAAA,EACA1C,cAAA,EACA2C,YAAA,IAzDA,GCAA9C,UAAA,WAEA,IAkBAtuG,EAAAqxG,EAEAl9G,EAAAnf,EAAApL,EACA0nI,EAVAC,EAAA,KAYA,IAAA79I,MAAAi3E,MAeA,SAAA34F,IAEA,IAAA0hB,MAAAq0I,WAAAn+H,GACA2+H,UAAA,EA8DA,SAAA4B,IACAz/J,WAAA8mK,EAAA,KAGA,SAAAA,KAOA,SAAAnD,IACA,IAAAx0J,EAAAjtB,OAAAy+K,WACA3rJ,EAAA9yB,OAAA0+K,YAEAmG,EAAAz8H,EAAAkuD,gBACAwuE,EAAAlhL,KAAA8qC,MAAAzhB,EAAA43J,IAAA,EACAE,EAAAnhL,KAAA8qC,MAAA5b,EAAA+xJ,IAAA,EACAF,GACAA,EAAA3sI,QAAA8sI,EAAAC,GAIA,SAAAzsI,EAAAh0B,GAEAogK,IAGAt8H,EAAAkf,OAAAC,EAAAvqB,GACAoL,EAAAotB,UAAA/hE,SAAA,EACA20C,EAAAotB,UAAAxhC,aAAA,EAEAuzB,EAAAwqC,iBAAA3+B,EACAhrB,EAAAkf,OAAAC,EAAAvqB,EAAAynI,GAAA,GACAl9G,EAAAwqC,iBAAA,KAEA4yE,GAEAA,EAAAr9G,UAMA,MAAA,CACAnmE,KA3HA,WACAq8K,WAAAwH,cACAz9G,EAAAi2G,WAAAC,WACAr1H,EAAAo1H,WAAAqD,cACA7jI,EAAAwgI,WAAAqB,YAGAxgL,OAAAG,GAAA,SAAA85C,GACAj6C,OAAAG,GAAA,SAAA++K,GAEAn4J,KAkHAkzB,OAAAA,EACA5mB,OAxCA,WACAtM,KAwCAm4J,OAAAA,EACAkE,SAAAA,GA1JA,GCEAjE,WAAA,WAEA,IACAxgI,EAAAuqB,EAAAnf,EAAA68H,EAIAC,EAGAC,EAPApD,GAAA,EASAqD,EAAAplL,OAAAy+K,WACA4G,EAAArlL,OAAA0+K,YA2GA,SAAA4G,IACAl9H,EAAAotB,UAAAxhC,aAAA,EA4CA,SAAAsE,IACA2sI,EAAA3sI,SAEA4sI,IACAloI,EAAA3uB,SAAAxP,IAAA,EAAA,EAAA,GACAm+B,EAAA2jC,WAAA,MA8BA,MAAA,CACAx/E,KA1LA,WAEA,IAEAwK,GAFAA,EAAA6rB,SAAAx3B,OAAAkT,SAAAD,KAAAsmJ,OAAA,MAEA,EACAooB,gBAAAY,SAAAC,KAAA72K,EAGAtN,OAAAG,GAAA,SAAA85C,GAKAhsB,UAAAzsB,SAAAmF,cAAA,OACAnF,SAAAinB,KAAA3hB,YAAAmnB,YAGA87B,EAAA,IAAAthB,MAAAimE,cAAA,CACAO,WAAA,KAEAt1D,QAAAotI,EAAAC,GACAj9H,EAAAgvB,cA3BA,UA4BAhvB,EAAAotB,UAAA/hE,SAAA,EACA20C,EAAAotB,UAAAZ,YAAA,EAKAxsB,EAAAgzC,YAAA,EACAhzC,EAAA+yC,aAAA,EAEA7uE,UAAAnnB,YAAAijD,EAAA0lD,YAEAvmC,EAAA,IAAAzgC,MAAAi1E,OAEA/+D,EAAA,IAAAlW,MAAA+nD,kBAAA,GAAA7uF,OAAAy+K,WAAAz+K,OAAA0+K,YAAA,GAAA,MACArwJ,SAAA+Y,GAAA,EACA4V,EAAA3uB,SAAA6f,EAAA,IACA8O,EAAA3uB,SAAA2mB,EAAA,EAGAuyB,EAAArG,IAAA,IAAAp6B,MAAAg1E,IA/CA,SA+CA,EAAA,KAGAmpE,EAAA,IAAAn+I,MAAAkuI,cAAAh4H,IACA5+C,OAAAygB,IAAA,EAAA,EAAA,GACAomK,EAAA3sI,SACA2sI,EAAAtiB,YAAA,EACAsiB,EAAAhP,WAAA,EACAgP,EAAApP,YAAA,EACAoP,EAAAlP,cAAA,EACAkP,EAAAtP,eAAA,EACAsP,EAAArP,cAAA,IACAqP,EAAAjP,YAAA,IAEAiP,EAAA3/F,YAAA,EACA2/F,EAAA5oC,YAAA,EACA4oC,EAAAzP,cAAA5xK,KAAA0uB,GAAA,IACA2yJ,EAAA1P,cAAA3xK,KAAA0uB,GAAA,EAEAqrJ,OAAAx8K,QAEAgkL,EAAA,IAAAr+I,MAAA0wF,iBAAA,SAAA,KACAnpG,SAAA+Y,EAAA,GACA+9I,EAAA92J,SAAA2mB,GAAA,GACAmwI,EAAA92J,SAAA6f,EAAA,GACAi3I,EAAA7uG,YAAA,EAEA6uG,EAAAxjH,OAAA3kB,OAAA4J,MAAA,GACAu+H,EAAAxjH,OAAA3kB,OAAA6J,IAAA0+H,GACAJ,EAAAxjH,OAAA3kB,OAAAhsB,MAHA,EAIAm0J,EAAAxjH,OAAA3kB,OAAA0J,MAJA,EAKAy+H,EAAAxjH,OAAA3kB,OAAAhvC,IALA,EAMAm3K,EAAAxjH,OAAA3kB,OAAA2J,QANA,EAOAw+H,EAAAxjH,OAAAyT,QAAAnoD,MAAA,KACAk4J,EAAAxjH,OAAAyT,QAAAtiD,OAAA,KACAqyJ,EAAAxjH,OAAAi5C,KAAA,KAEArzC,EAAA1tD,IAAAsrK,GAIA59G,EAAA1tD,IAAA,IAAAitB,MAAA2wF,aAAA,SAAA,KAWA+tD,UAAA,CAAAzH,OAEA0H,eAAAD,UAAAxmL,OACA,IAAA,IAAAG,EAAA,EAAAA,EAAAsmL,eAAAtmL,IACAqmL,UAAArmL,GAAAgC,OAKAu+J,SAAAhC,YAAA,GAAA4nB,IAqFAhtI,OAAAA,EACAumI,UAAA,WACA,OAAA7hI,GAEAygI,SAAA,WACA,OAAAl2G,GAEAm+G,SAAA,WACA,OAAAP,GAEAtE,YAAA,WACA,OAAAz4H,GAEAu9H,eAAA,WACA,MAAA,MApNAC,OAAAC,IAsNAb,YAAA,WACA,OAAAC,GAEAxD,SA9CA,WAEA,IAAAqE,EAAA,KACAC,EAAA,KAEApE,gBAAAC,UAAA2C,UACAuB,EAAA9lL,OAAAy+K,WACAsH,EAAA/lL,OAAA0+K,YAEAiD,gBAAAC,UAAAC,eACAiE,GAAA,KAEAxgJ,EAAA,QAAA9kB,IAAA,CAAA6N,SAAA,WAAArgB,IAAA,KAIAs3B,EAAA,QAAA9kB,IAAA,CAAA6N,SAAA,WAAArgB,IAAAhO,OAAA0+K,YAAA,EAAAsH,aAAA,IAGAhpI,EAAAgK,OAAA8+H,EAAAC,EACA/oI,EAAAs4B,yBACAltB,EAAApQ,QAAA8tI,EAAAC,IA0BAE,aAAA,WACA,OAAAlE,GAEAmE,SAAA,WACA,OAAAhB,IAlOA","file":"build.js","sourcesContent":["function Events(target){\n  var events = {}, empty = [];\n  target = target || this\n  /**\n   *  On: listen to events\n   */\n  target.on = function(type, func, ctx){\n    (events[type] = events[type] || []).push([func, ctx])\n    return target\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function(type, func){\n    type || (events = {})\n    var list = events[type] || empty,\n        i = list.length = func ? list.length : 0;\n    while(i--) func == list[i][0] && list.splice(i,1)\n    return target\n  }\n  /** \n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function(type){\n    var e = events[type] || empty, list = e.length > 0 ? e.slice(0, e.length) : e, i=0, j;\n    while(j=list[i++]) j[0].apply(j[1], empty.slice.call(arguments, 1))\n    return target\n  };\n};","/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nvar Detector = {\n\n\tcanvas: !! window.CanvasRenderingContext2D,\n\twebgl: ( function () { try { return !! window.WebGLRenderingContext && !! document.createElement( 'canvas' ).getContext( 'experimental-webgl' ); } catch( e ) { return false; } } )(),\n\tworkers: !! window.Worker,\n\tfileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n\tgetWebGLErrorMessage: function () {\n\n\t\tvar element = document.createElement( 'div' );\n\t\telement.id = 'webgl-error-message';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( ! this.webgl ) {\n\n\t\t\telement.innerHTML = window.WebGLRenderingContext ? [\n\t\t\t\t'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' ) : [\n\t\t\t\t'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' );\n\n\t\t}\n\n\t\treturn element;\n\n\t},\n\n\taddGetWebGLMessage: function ( parameters ) {\n\n\t\tvar parent, id, element;\n\n\t\tparameters = parameters || {};\n\n\t\tparent = parameters.parent !== undefined ? parameters.parent : document.body;\n\t\tid = parameters.id !== undefined ? parameters.id : 'oldie';\n\n\t\telement = Detector.getWebGLErrorMessage();\n\t\telement.id = id;\n\n\t\tparent.appendChild( element );\n\n\t}\n\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE9-11.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = [], i = 0;\n\t\t\t\tvar length = listenerArray.length;\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '82';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar BlendingMode = {\n\t\tNoBlending: NoBlending,\n\t\tNormalBlending: NormalBlending,\n\t\tAdditiveBlending: AdditiveBlending,\n\t\tSubtractiveBlending: SubtractiveBlending,\n\t\tMultiplyBlending: MultiplyBlending,\n\t\tCustomBlending: CustomBlending\n\t};\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar TextureMapping = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar TextureWrapping = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar TextureFilter = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tVector2.prototype = {\n\n\t\tconstructor: Vector2,\n\n\t\tisVector2: true,\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t},\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t},\n\n\t\t//\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector2();\n\t\t\t\t\tmax = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.sourceFile = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping )  return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype );\n\n\tvar count = 0;\n\tfunction TextureIdCount() { return count++; }\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tVector4.prototype = {\n\n\t\tconstructor: Vector4,\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t\tthis.w = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\t\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tQuaternion.prototype = {\n\n\t\tconstructor: Quaternion,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget w () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset w ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\t\tvar order = euler.order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1, r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function(\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tVector3.prototype = {\n\n\t\tconstructor: Vector3,\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyProjection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 projection matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector3();\n\t\t\t\t\tmax = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1;\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\tif ( typeof m === 'number' ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\t\tvar temp = m;\n\t\t\t\tm = index;\n\t\t\t\tindex = temp;\n\n\t\t\t}\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix4.prototype = {\n\n\t\tconstructor: Matrix4,\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tthis.elements.set( m.elements );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x, y, z;\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tif ( x === undefined ) {\n\n\t\t\t\t\tx = new Vector3();\n\t\t\t\t\ty = new Vector3();\n\t\t\t\t\tz = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z += 0.0001;\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\ty.crossVectors( z, x );\n\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyToArray: function ( a, b, r ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tthis.multiplyMatrices( a, b );\n\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector, matrix;\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t\tmatrix = new Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) {\n\n\t\t\t\t\tsx = - sx;\n\n\t\t\t\t}\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\t\tvar ymax = near * Math.tan( _Math.DEG2RAD * fov * 0.5 );\n\t\t\tvar ymin = - ymax;\n\t\t\tvar xmin = ymin * aspect;\n\t\t\tvar xmax = ymax * aspect;\n\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor (; ;) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined ||\n\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map,\n\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n\tvar normal_vert = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_flip: normal_flip,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tColor.prototype = {\n\n\t\tconstructor: Color,\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( (value && value.isColor) ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t};\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\tspecularMap: { value: null },\n\t\t\talphaMap: { value: null },\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular : { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0 },\n\t\t\t\t\tenvMapIntensity : { value: 1 }, // temporary\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\n\t\t\t\t{\n\t\t\t\t\tscale    : { value: 1 },\n\t\t\t\t\tdashSize : { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: {\n\n\t\t\t\topacity : { value: 1.0 }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t\ttFlip: { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: {\n\n\t\t\t\tlightPos: { value: new Vector3() }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\tShaderLib.standard.uniforms,\n\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tBox2.prototype = {\n\n\t\tconstructor: Box2,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlarePlugin( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.setDepthWrite( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.setDepthWrite( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpritePlugin( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( (fog && fog.isFog) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( (fog && fog.isFogExp2) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis._needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tget needsUpdate() {\n\n\t\t\treturn this._needsUpdate;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.update();\n\t\t\tthis._needsUpdate = value;\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( (currentValue && currentValue.isColor) ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\n\t\t\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\t\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( (this.normalMap && this.normalMap.isTexture) ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.envMap && this.envMap.isTexture) ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tdata.skinning = this.skinning;\n\t\t\tdata.morphTargets = this.morphTargets;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t};\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype );\n\n\tvar count$1 = 0;\n\tfunction MaterialIdCount() { return count$1++; }\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tBox3.prototype = {\n\n\t\tconstructor: Box3,\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tthis.makeEmpty();\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar array, offset, stride;\n\n\t\t\t\t\t\t\t\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.data.array;\n\t\t\t\t\t\t\t\t\toffset = attribute.offset;\n\t\t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.array;\n\t\t\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t\t\tstride = 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromArray( array, i );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint;\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new Vector3();\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tSphere.prototype = {\n\n\t\tconstructor: Sphere,\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix3.prototype = {\n\n\t\tconstructor: Matrix3,\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( (matrix && matrix.isMatrix4) ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tPlane.prototype = {\n\n\t\tconstructor: Plane,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tFrustum.prototype = {\n\n\t\tconstructor: Frustum,\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_renderList = [],\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.setDepthTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount, isPointLight;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( (light && light.isPointLight) ) {\n\n\t\t\t\t\tfaceCount = 6;\n\t\t\t\t\tisPointLight = true;\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\t\t\t\t\tisPointLight = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( (shadow && shadow.isSpotLightShadow) ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\t_renderList.length = 0;\n\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t\t// render shadow map\n\t\t\t\t\t// render regular objects\n\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( (material && material.isMultiMaterial) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor(),\n\t\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tRay.prototype = {\n\n\t\tconstructor: Ray,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.sub( this.origin );\n\t\t\tthis.direction.normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tEuler.prototype = {\n\n\t\tconstructor: Euler,\n\n\t\tisEuler: true,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget order () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset order ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1;\n\n\t}\n\n\tLayers.prototype = {\n\n\t\tconstructor: Layers,\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t\tthis.onBeforeRender = function(){}; \n\t\tthis.onAfterRender = function(){};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( (object && object.isObject3D) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = this.material.uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar count$2 = 0;\n\tfunction Object3DIdCount() { return count$2++; }\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tLine3.prototype = {\n\n\t\tconstructor: Line3,\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tTriangle.normal = function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}();\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tTriangle.barycoordFromPoint = function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}();\n\n\tTriangle.containsPoint = function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}();\n\n\tTriangle.prototype = {\n\n\t\tconstructor: Triangle,\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tif ( plane === undefined ) {\n\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tedgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\t\t\tprojectedPoint = new Vector3();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = (color && color.isColor) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tFace3.prototype = {\n\n\t\tconstructor: Face3,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tBufferAttribute.prototype = {\n\n\t\tconstructor: BufferAttribute,\n\n\t\tisBufferAttribute: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int16Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint16Array( array ), itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int32Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float64Array( array ), itemSize );\n\n\t}\n\n\t// Deprecated\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( (geometry && geometry.isGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( (mesh && mesh.isMesh) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\tvar dupIndex = - 1;\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tdupIndex = n;\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [ [] ];\n\t\t\tthis.colors = [];\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar count$3 = 0;\n\tfunction GeometryIdCount() { return count$3++; }\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'DirectGeometry';\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\n\t\tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tthis.index = index;\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isPoints) || (object && object.isLine) ) {\n\n\t\t\t\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( (object && object.isMesh) ) {\n\n\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isMesh) ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar positions = this.attributes.position;\n\n\t\t\t\tif ( positions ) {\n\n\t\t\t\t\tvar array = positions.array;\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromArray( array );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvector.fromArray( array, i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC,\n\n\t\t\t\tpA = new Vector3(),\n\t\t\t\tpB = new Vector3(),\n\t\t\t\tpC = new Vector3(),\n\n\t\t\t\tcb = new Vector3(),\n\t\t\t\tab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( (geometry && geometry.isBufferGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\t\tx = normals[ i ];\n\t\t\t\ty = normals[ i + 1 ];\n\t\t\t\tz = normals[ i + 2 ];\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals[ i ] *= n;\n\t\t\t\tnormals[ i + 1 ] *= n;\n\t\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar morphTargets = this.geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar uvs, intersection;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isFaceMaterial = (material && material.isMultiMaterial);\n\t\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\t\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\t\tvar numberOfVertices = 0;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount( w, h, d ) {\n\n\t\t\tvar vertices = 0;\n\n\t\t\t// calculate the amount of vertices for each side (plane)\n\t\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\t\treturn vertices;\n\n\t\t}\n\n\t\tfunction calculateIndexCount( w, h, d ) {\n\n\t\t\tvar index = 0;\n\n\t\t\t// calculate the amount of squares for each side\n\t\t\tindex += w * h * 2; // xy\n\t\t\tindex += w * d * 2; // xz\n\t\t\tindex += d * h * 2; // zy\n\n\t\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t\t}\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth\t= width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// uvs\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\t\tuvBufferOffset += 2;\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tindexBufferOffset += 6;\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\t\tvar offset = 0;\n\t\tvar offset2 = 0;\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices[ offset ] = x;\n\t\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\toffset += 3;\n\t\t\t\toffset2 += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices[ offset ] = a;\n\t\t\t\tindices[ offset + 1 ] = b;\n\t\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\t\tindices[ offset + 3 ] = b;\n\t\t\t\tindices[ offset + 4 ] = c;\n\t\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\t\toffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.create( Object3D.prototype );\n\tCamera.prototype.constructor = Camera;\n\n\tCamera.prototype.isCamera = true;\n\n\tCamera.prototype.getWorldDirection = function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.lookAt = function () {\n\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\tCamera.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, size;\n\n\t\tfunction setIndex( index ) {\n\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t\tsize = 4;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\tsize = 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * size );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetMode: setMode,\n\t\t\tsetIndex: setIndex,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tvar count = 0;\n\n\t\t\tif ( (position && position.isInterleavedBufferAttribute) ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\tcount = position.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetMode: setMode,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLLights() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, code, material, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\t\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\n\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( (map && map.isTexture) ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( (map && map.isWebGLRenderTarget) ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = allocateBones( object );\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: (fog && fog.isFogExp2),\n\n\t\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, code, material, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, properties, info ) {\n\n\t\tvar geometries = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe ) {\n\n\t\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( geometry );\n\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( buffergeometry );\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction deleteAttribute( attribute ) {\n\n\t\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\t\tif ( buffer !== undefined ) {\n\n\t\t\t\tgl.deleteBuffer( buffer );\n\t\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction deleteAttributes( attributes ) {\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tproperties.delete( attribute.data );\n\n\t\t\t} else {\n\n\t\t\t\tproperties.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\t\t\treturn geometries[ geometry.id ];\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\t\tvar buffergeometry;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t\t}\n\n\t\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\t\tinfo.memory.geometries ++;\n\n\t\t\t\treturn buffergeometry;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, properties, info ) {\n\n\t\tvar geometries = new WebGLGeometries( gl, properties, info );\n\n\t\t//\n\n\t\tfunction update( object ) {\n\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\t\tvar geometry = geometries.get( object );\n\n\t\t\tif ( object.geometry.isGeometry ) {\n\n\t\t\t\tgeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\t\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\t\tvar attributeProperties = properties.get( data );\n\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tif ( data.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, data.array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( data.updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t\t}\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\t\treturn property.wireframe;\n\n\t\t\t}\n\n\t\t\tvar indices = [];\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar position = attributes.position;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar edges = {};\n\t\t\t\tvar array = index.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\tproperty.wireframe = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetAttributeBuffer: getAttributeBuffer,\n\t\t\tgetWireframeAttribute: getWireframeAttribute,\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n\t\tvar _infoMemory = info.memory;\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\t_infoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\t_infoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.delete( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.delete( renderTarget.texture );\n\t\t\tproperties.delete( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = (texture && texture.isCompressedTexture);\n\t\t\t\t\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( (texture && texture.isDepthTexture) ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( (texture && texture.isDataTexture) ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( (texture && texture.isCompressedTexture) ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== LinearFilter ) {\n\n\t\t\t\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar uuid = object.uuid;\n\t\t\t\tvar map = properties[ uuid ];\n\n\t\t\t\tif ( map === undefined ) {\n\n\t\t\t\t\tmap = {};\n\t\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\n\t\t\t},\n\n\t\t\tdelete: function ( object ) {\n\n\t\t\t\tdelete properties[ object.uuid ];\n\n\t\t\t},\n\n\t\t\tclear: function () {\n\n\t\t\t\tproperties = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4();\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a ) {\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail  = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tfunction init() {\n\n\t\t\tclearColor( 0, 0, 0, 1 );\n\t\t\tclearDepth( 1 );\n\t\t\tclearStencil( 0 );\n\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tsetDepthFunc( LessEqualDepth );\n\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction setColorWrite( colorWrite ) {\n\n\t\t\tcolorBuffer.setMask( colorWrite );\n\n\t\t}\n\n\t\tfunction setDepthTest( depthTest ) {\n\n\t\t\tdepthBuffer.setTest( depthTest );\n\n\t\t}\n\n\t\tfunction setDepthWrite( depthWrite ) {\n\n\t\t\tdepthBuffer.setMask( depthWrite );\n\n\t\t}\n\n\t\tfunction setDepthFunc( depthFunc ) {\n\n\t\t\tdepthBuffer.setFunc( depthFunc );\n\n\t\t}\n\n\t\tfunction setStencilTest( stencilTest ) {\n\n\t\t\tstencilBuffer.setTest( stencilTest );\n\n\t\t}\n\n\t\tfunction setStencilWrite( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( stencilWrite );\n\n\t\t}\n\n\t\tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t}\n\n\t\tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tgl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getScissorTest() {\n\n\t\t\treturn currentScissorTest;\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction clearColor( r, g, b, a ) {\n\n\t\t\tcolorBuffer.setClear( r, g, b, a );\n\n\t\t}\n\n\t\tfunction clearDepth( depth ) {\n\n\t\t\tdepthBuffer.setClear( depth );\n\n\t\t}\n\n\t\tfunction clearStencil( stencil ) {\n\n\t\t\tstencilBuffer.setClear( stencil );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinit: init,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tsetBlending: setBlending,\n\n\t\t\tsetColorWrite: setColorWrite,\n\t\t\tsetDepthTest: setDepthTest,\n\t\t\tsetDepthWrite: setDepthWrite,\n\t\t\tsetDepthFunc: setDepthFunc,\n\t\t\tsetStencilTest: setStencilTest,\n\t\t\tsetStencilWrite: setStencilWrite,\n\t\t\tsetStencilFunc: setStencilFunc,\n\t\t\tsetStencilOp: setStencilOp,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tgetScissorTest: getScissorTest,\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tclearColor: clearColor,\n\t\t\tclearDepth: clearDepth,\n\t\t\tclearStencil: clearStencil,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar opaqueObjects = [];\n\t\tvar opaqueObjectsLastIndex = - 1;\n\t\tvar transparentObjects = [];\n\t\tvar transparentObjectsLastIndex = - 1;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\t\t_currentCamera = null,\n\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_clearColor = new Color( 0x000000 ),\n\t\t_clearAlpha = 0,\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t_sphere = new Sphere(),\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoRender = {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: {\n\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\n\t\t\t},\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar attributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\t\tvar properties = new WebGLProperties();\n\t\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n\t\tvar objects = new WebGLObjects( _gl, properties, this.info );\n\t\tvar programCache = new WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new WebGLLights();\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tvar backgroundCamera2 = new PerspectiveCamera();\n\t\tvar backgroundPlaneMesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t);\n\t\tvar backgroundBoxShader = ShaderLib[ 'cube' ];\n\t\tvar backgroundBoxMesh = new Mesh(\n\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\tnew ShaderMaterial( {\n\t\t\t\tuniforms: backgroundBoxShader.uniforms,\n\t\t\t\tvertexShader: backgroundBoxShader.vertexShader,\n\t\t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tfog: false\n\t\t\t} )\n\t\t);\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction glClearColor( r, g, b, a ) {\n\n\t\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t}\n\n\t\t\tstate.clearColor( r, g, b, a );\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.state = state;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t\t_clearAlpha = alpha;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function() {\n\n\t\t\ttransparentObjects = [];\n\t\t\ttransparentObjectsLastIndex = -1;\n\t\t\topaqueObjects = [];\n\t\t\topaqueObjectsLastIndex = -1;\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.delete( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t     ! material.isMeshStandardMaterial &&\n\t\t\t\t       material.shading === FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tsetMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar renderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( index );\n\n\t\t\t} else {\n\n\t\t\t\trenderer = bufferRenderer;\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"Unsupported data buffer format: Float64Array\" );\n\n\t\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Sorting\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n\t\t\t\treturn a.material.program.id - b.material.program.id;\n\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\t\treturn a.material.id - b.material.id;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn a.z - b.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reversePainterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\n\t\t\topaqueObjectsLastIndex = - 1;\n\t\t\ttransparentObjectsLastIndex = - 1;\n\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tprojectObject( scene, camera );\n\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tglClearColor( background.r, background.g, background.b, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n\t\t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( backgroundBoxMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tbackgroundPlaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( backgroundPlaneMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\trenderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\trenderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tstate.setBlending( NoBlending );\n\t\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\trenderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.setDepthTest( true );\n\t\t\tstate.setDepthWrite( true );\n\t\t\tstate.setColorWrite( true );\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparentObjects;\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaqueObjects;\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem !== undefined ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.z = _vector3.z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tz: _vector3.z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\t\tif ( material.isMultiMaterial ) {\n\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tsetMaterial( material );\n\n\t\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t     ! material.isRawShaderMaterial ||\n\t\t\t       material.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? state.disable( _gl.CULL_FACE )\n\t\t\t\t: state.enable( _gl.CULL_FACE );\n\n\t\t\tstate.setFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: state.setBlending( NoBlending );\n\n\t\t\tstate.setDepthFunc( material.depthFunc );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\t\t\tstate.setColorWrite( material.colorWrite );\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes || \n\t \t\t\t\t  materialProperties.numIntersection  !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isShaderMaterial ||\n\t\t\t\t     material.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights( lights, camera ) {\n\n\t\t\tvar l, ll, light,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getCurrentRenderTarget = function() {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return _gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\t p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.create( Object3D.prototype );\n\n\tScene.prototype.constructor = Scene;\n\n\tScene.prototype.copy = function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t};\n\n\tScene.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\t\tpoint: this.position,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps  = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses, useVertexTexture ) {\n\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\t\tthis.identityMatrix = new Matrix4();\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\n\t\t// create a bone texture or an array of floats\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tthis.boneTextureWidth = size;\n\t\t\tthis.boneTextureHeight = size;\n\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\t\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t\t}\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone( skin ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t\tthis.skin = skin;\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.skin = source.skin;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material, useVertexTexture ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = \"attached\";\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\t// init bones\n\n\t\t// TODO: remove bone creation as there is no reason (other than\n\t\t// convenience) for THREE.SkinnedMesh to do this.\n\n\t\tvar bones = [];\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\tvar bone, gbone;\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tbone = new Bone( this );\n\t\t\t\tbones.push( bone );\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.normalizeSkinWeights();\n\n\t\tthis.updateMatrixWorld( true );\n\t\tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n\t}\n\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tbind: function( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tif ( (this.geometry && this.geometry.isGeometry) ) {\n\n\t\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function() {\n\n\t\t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t\t}\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.type = type !== undefined ? type : UnsignedShortType;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar numEdges = 0;\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// Indexed BufferGeometry\n\n\t\t\t\tvar indices = geometry.index.array;\n\t\t\t\tvar vertices = geometry.attributes.position;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar numEdges = 0;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\t// allocate maximal size\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\t\tvar numEdges = vertices.length / 3;\n\t\t\t\tvar numTris = numEdges / 3;\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// generate vertices and uvs\n\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\tvar i, j, p;\n\t\tvar u, v;\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tv = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tu = j / slices;\n\n\t\t\t\tp = func( u, v );\n\t\t\t\tvertices.push( p.x, p.y, p.z );\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tvar indices = [];\n\t\tvar a, b, c, d;\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\ta = i * sliceCount + j;\n\t\t\t\tb = i * sliceCount + j + 1;\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', Float32Attribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvBuffer, 2 ) );\n\t\tthis.normalizeNormals();\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0 ; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols ; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth  ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] =  uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction OctahedronBufferGeometry( radius,detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t */\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t *\n\t */\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t */\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * see: http://www.blackpawn.com/texts/pqtorus/\n\t */\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar i, j, index = 0, indexOffset = 0;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t */\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\n\t\t// helper variables\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t\t// this vector is used to calculate the normal\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t\t// uv\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t\t// update offsets\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offset\n\t\t\t\tindexBufferOffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n\t */\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\t// Bezier Curves formulas obtained from\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t\t// Quad Bezier Functions\n\n\t\tb2: ( function () {\n\n\t\t\tfunction b2p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p1( t, p ) {\n\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p2( t, p ) {\n\n\t\t\t\treturn t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b2( t, p0, p1, p2 ) {\n\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\t// Cubic Bezier Functions\n\n\t\tb3: ( function () {\n\n\t\t\tfunction b3p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p1( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * k * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p2( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * t * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p3( t, p ) {\n\n\t\t\t\treturn t * t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\t\tshapes = [];\n\t\t\treturn;\n\n\t\t}\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapesOffset = this.vertices.length;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn\tnew Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tscope.vertices.push( new Vector3( x, y, z ) );\n\n\t\t}\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\n\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\t\t\td += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\n\t\t\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\n\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a.x, a.y ),\n\t\t\t\tnew Vector2( b.x, b.y ),\n\t\t\t\tnew Vector2( c.x, c.y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\t\t\tvar d = vertices[ indexD ];\n\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.x, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.x, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.x, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.x, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.y, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.y, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.y, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.y, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( (font && font.isFont) === false ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n\tTextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry\n\t */\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\t\tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\tvar index = 0, vertices = [], normal = new Vector3();\n\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\t\tvar u = x / widthSegments;\n\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\tverticesRow.push( index );\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvertices.push( verticesRow );\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', positions );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// some helper variables\n\t\tvar index = 0, indexOffset = 0, segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\t// values are generate from the inside of the ring to the outside\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t */\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t // points - to create a closed torus, one must use a set of points\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\n\t // segments - the number of circumference segments to create\n\t // phiStart - the starting radian\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\n\t //    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\n\t\tvar indexCount = segments * points.length * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar index = 0, indexOffset = 0, base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t} // next row\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t */\n\n\t// points - to create a closed torus, one must use a set of points\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\n\t// segments - the number of circumference segments to create\n\t// phiStart - the starting radian\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\n\t//    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ShapeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t/**\n\t * Add an array of shapes to THREE.ShapeGeometry.\n\t */\n\tShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tthis.addShape( shapes[ i ], options );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n\t */\n\tShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tif ( options === undefined ) options = {};\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar material = options.material;\n\t\tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t\t//\n\n\t\tvar i, l, hole;\n\n\t\tvar shapesOffset = this.vertices.length;\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\t\thole = holes[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false;\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t// Vertices\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\t\t\tvertices = vertices.concat( hole );\n\n\t\t}\n\n\t\t//\n\n\t\tvar vert, vlen = vertices.length;\n\t\tvar face, flen = faces.length;\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = vertices[ i ];\n\n\t\t\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\n\n\t\t}\n\n\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + shapesOffset;\n\t\t\tvar b = face[ 1 ] + shapesOffset;\n\t\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\t\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tvar geometry2;\n\n\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar vertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = [];\n\n\t\tfor ( var key in hash ) {\n\n\t\t\tvar h = hash[ key ];\n\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// used to calculate buffer length\n\n\t\tvar nbCap = 0;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t\t}\n\n\t\tvar vertexCount = calculateVertexCount();\n\t\tvar indexCount = calculateIndexCount();\n\n\t\t// buffers\n\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\n\t\tvar index = 0,\n\t\t    indexOffset = 0,\n\t\t    indexArray = [],\n\t\t    halfHeight = height / 2;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount() {\n\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction calculateIndexCount() {\n\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\t\t\t\t\tindexRow.push( index );\n\n\t\t\t\t\t// increase index\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// update counters\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = 0.5;\n\t\t\t\tuv.y = 0.5;\n\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t/**\n\t * @author: abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tvar vertices = segments + 2;\n\n\t\tvar positions = new Float32Array( vertices * 3 );\n\t\tvar normals = new Float32Array( vertices * 3 );\n\t\tvar uvs = new Float32Array( vertices * 2 );\n\n\t\t// center data is already zero, but need to set a few extras\n\t\tnormals[ 2 ] = 1.0;\n\t\tuvs[ 0 ] = 0.5;\n\t\tuvs[ 1 ] = 0.5;\n\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\t/**\n\t * @author hughes\n\t */\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n\t */\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry,\n\t\tBoxGeometry: BoxGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ShadowMaterial() {\n\n\t\tShaderMaterial.call( this, {\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib[ \"lights\" ],\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'MultiMaterial';\n\n\t\tthis.materials = materials instanceof Array ? materials : [];\n\n\t\tthis.visible = true;\n\n\t}\n\n\tMultiMaterial.prototype = {\n\n\t\tconstructor: MultiMaterial,\n\n\t\tisMultiMaterial: true,\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.2,\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\ttype: this.type,\n\t\t\t\tmaterials: []\n\t\t\t};\n\n\t\t\tvar materials = this.materials;\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\t\tdelete material.metadata;\n\n\t\t\t\toutput.materials.push( material );\n\n\t\t\t}\n\n\t\t\toutput.visible = this.visible;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar material = new this.constructor();\n\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tmaterial.visible = this.visible;\n\n\t\t\treturn material;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this, parameters );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( Material.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMultiMaterial: MultiMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction XHRLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( XHRLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[1];\n\t\t\t\tvar isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tvar data = dataUriRegexResult[3];\n\n\t\t\t\tdata = window.decodeURIComponent(data);\n\n\t\t\t\tif( isBase64 ) {\n\t\t\t\t\tdata = window.atob(data);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { \"type\" : mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tvar DataTextureLoader = BinaryTextureLoader;\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( BinaryTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\t\timage.onload = function () {\n\n\t\t\t\timage.onload = null;\n\n\t\t\t\tURL.revokeObjectURL( image.src );\n\n\t\t\t\tif ( onLoad ) onLoad( image );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\t\t\timage.onerror = onError;\n\n\t\t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\timage.src = url;\n\n\t\t\t} else {\n\n\t\t\t\tvar loader = new XHRLoader();\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'blob' );\n\t\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\t\tloader.load( url, function ( blob ) {\n\n\t\t\t\t\timage.src = URL.createObjectURL( blob );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || 500;\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( light ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true,\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tInterpolant.prototype = {\n\n\t\tconstructor: Interpolant,\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t//- See http://jsperf.com/comparison-to-undefined/3\n\t//- slower code:\n\t//-\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t//- slower code:\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t};\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_,\n\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function( timeOffset ) {\n\n\t\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function( timeScale ) {\n\n\t\t\tif( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function() {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( \"track is empty\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function() {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number',\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tAnimationClip.prototype = {\n\n\t\tconstructor: AnimationClip,\n\n\t\tresetDuration: function() {\n\n\t\t\tvar tracks = this.tracks,\n\t\t\t\tduration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max(\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\n\t\ttoJSON: function( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, -1, tracks );\n\n\t\t},\n\n\t\tfindByName: function( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function(\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON(\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets in a way exactly compatible\n\t\t\t\t// with AnimationHandler.init( animation )\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\t// MultiMaterial\n\n\t\t\tif ( json.materials !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tvar TYPED_ARRAYS = {\n\t\t\t\t'Int8Array': Int8Array,\n\t\t\t\t'Uint8Array': Uint8Array,\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t\t'Int16Array': Int16Array,\n\t\t\t\t'Uint16Array': Uint16Array,\n\t\t\t\t'Int32Array': Int32Array,\n\t\t\t\t'Uint32Array': Uint32Array,\n\t\t\t\t'Float32Array': Float32Array,\n\t\t\t\t'Float64Array': Float64Array\n\t\t\t};\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.prototype = {\n\n\t\tconstructor: Loader,\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar color, textureLoader, materialLoader;\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\tif ( color === undefined ) color = new Color();\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {}\n\n\tCurve.prototype = {\n\n\t\tconstructor: Curve,\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\t\tif ( this.cacheArcLengths\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t//var time = Date.now();\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\tvar t = i / ( il - 1 );\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t// TODO: Transformation for Curves?\n\n\t/**************************************************************\n\t *\t3D Curves\n\t **************************************************************/\n\n\t// A Factory method for creating new curve subclasses\n\n\tCurve.create = function ( constructor, getPointFunc ) {\n\n\t\tconstructor.prototype = Object.create( Curve.prototype );\n\t\tconstructor.prototype.constructor = constructor;\n\t\tconstructor.prototype.getPoint = getPointFunc;\n\n\t\treturn constructor;\n\n\t};\n\n\t/**************************************************************\n\t *\tLine\n\t **************************************************************/\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**************************************************************\n\t *\tEllipse curve\n\t **************************************************************/\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar CurveUtils = {\n\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t\t},\n\n\t\t// Puay Bing, thanks for helping with this derivative!\n\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t\t3 * t * t * p3;\n\n\t\t},\n\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\t// To check if my formulas are correct\n\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\t\treturn h00 + h10 + h01 + h11;\n\n\t\t},\n\n\t\t// Catmull-Rom\n\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t/**************************************************************\n\t *\tSpline curve\n\t **************************************************************/\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\treturn new Vector2(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t\t);\n\n\t};\n\n\t/**************************************************************\n\t *\tCubic Bezier curve\n\t **************************************************************/\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b3 = ShapeUtils.b3;\n\n\t\treturn new Vector2(\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t);\n\n\t};\n\n\tCubicBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentCubicBezier = CurveUtils.tangentCubicBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t).normalize();\n\n\t};\n\n\t/**************************************************************\n\t *\tQuadratic Bezier curve\n\t **************************************************************/\n\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b2 = ShapeUtils.b2;\n\n\t\treturn new Vector2(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t);\n\n\t};\n\n\n\tQuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentQuadraticBezier = CurveUtils.tangentQuadraticBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t).normalize();\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\n\t// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\tfunction ShapePath() {\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tShapePath.prototype = {\n\t\tmoveTo: function ( x, y ) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo( x, y );\n\t\t},\n\t\tlineTo: function ( x, y ) {\n\t\t\tthis.currentPath.lineTo( x, y );\n\t\t},\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\t},\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\t},\n\t\tsplineThru: function ( pts ) {\n\t\t\tthis.currentPath.splineThru( pts );\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar offset = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\t\toffset += ret.offset;\n\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [], b2 = ShapeUtils.b2, b3 = ShapeUtils.b3;\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tfunction getAudioContext() {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t}\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = getAudioContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\tvar eyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = getAudioContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\t\tthis.source = this.context.createBufferSource();\n\t\tthis.source.onended = this.onEnded.bind( this );\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.source.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.source.buffer;\n\t\t\tsource.loop = this.source.loop;\n\t\t\tsource.onended = this.source.onended;\n\t\t\tsource.start( 0, this.startTime );\n\t\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.source.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.loop = value;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tPropertyMixer.prototype = {\n\n\t\tconstructor: PropertyMixer,\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function() {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function() {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode(\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tPropertyBinding.prototype = {\n\n\t\tconstructor: PropertyBinding,\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function() {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t \t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t};\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function() {},\n\t\t_setValue_unavailable: function() {},\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t]\n\n\t} );\n\n\tPropertyBinding.Composite =\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t};\n\n\tPropertyBinding.Composite.prototype = {\n\n\t\tconstructor: PropertyBinding.Composite,\n\n\t\tgetValue: function( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.create = function( root, path, parsedPath ) {\n\n\t\tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.parseTrackName = function( trackName ) {\n\n\t\t// matches strings in the form of:\n\t\t//    nodeName.property\n\t\t//    nodeName.property[accessor]\n\t\t//    nodeName.material.property[accessor]\n\t\t//    uuid.property[accessor]\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t\t//    parentName/nodeName.property\n\t\t//    parentName/parentName/nodeName.property[index]\n\t\t//    .bone[Armature.DEF_cog].position\n\t\t//    scene:helium_balloon_model:helium_balloon_model.position\n\t\t// created and tested via https://regex101.com/#javascript\n\n\t\tvar re = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\n\t\tvar matches = re.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ], \t// allowed to be null, specified root node.\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ],\n\t\t\tpropertyIndex: matches[ 6 ]\t// allowed to be null, specifies that the whole property is set.\n\t\t};\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t};\n\n\tPropertyBinding.findNode = function( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tAnimationObjectGroup.prototype = {\n\n\t\tconstructor: AnimationObjectGroup,\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function( path, parsedPath ) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects,\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\t\tnew PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function( path ) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tAnimationAction.prototype = {\n\n\t\tconstructor: AnimationAction,\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the weight stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t\t// called by the mixer\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis.loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function() {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\tif ( action.enabled ) {\n\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function() {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// Implementation details:\n\n\tObject.assign( AnimationMixer.prototype, {\n\n\t\t_bindAction: function( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function() {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tInstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tInstancedBufferGeometry.prototype.addGroup = function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t};\n\n\tInstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\n\tInterleavedBufferAttribute.prototype = {\n\n\t\tconstructor: InterleavedBufferAttribute,\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t},\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tInterleavedBuffer.prototype = {\n\n\t\tconstructor: InterleavedBuffer,\n\n\t\tisInterleavedBuffer: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\n\tInstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tInstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tInstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tRaycaster.prototype = {\n\n\t\tconstructor: Raycaster,\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( (camera && camera.isPerspectiveCamera) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( (camera && camera.isOrthographicCamera) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tClock.prototype = {\n\n\t\tconstructor: Clock,\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( performance || Date ).now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Spline( points ) {\n\n\t\tthis.points = points;\n\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tthis.initFromArray = function ( a ) {\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPoint = function ( k ) {\n\n\t\t\tpoint = ( this.points.length - 1 ) * k;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\t\tpa = this.points[ c[ 0 ] ];\n\t\t\tpb = this.points[ c[ 1 ] ];\n\t\t\tpc = this.points[ c[ 2 ] ];\n\t\t\tpd = this.points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tthis.getControlPointsArray = function () {\n\n\t\t\tvar i, p, l = this.points.length,\n\t\t\t\tcoords = [];\n\n\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\tp = this.points[ i ];\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t\t}\n\n\t\t\treturn coords;\n\n\t\t};\n\n\t\t// approximate length by summing linear segments\n\n\t\tthis.getLength = function ( nSubDivisions ) {\n\n\t\t\tvar i, index, nSamples, position,\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\t\toldPosition = new Vector3(),\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tchunkLengths = [],\n\t\t\t\ttotalLength = 0;\n\n\t\t\t// first point has 0 length\n\n\t\t\tchunkLengths[ 0 ] = 0;\n\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\t\tindex = i / nSamples;\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\ttmpVec.copy( position );\n\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\t\toldPosition.copy( position );\n\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\t\tintPoint = Math.floor( point );\n\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// last point ends with total length\n\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t\t};\n\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\t\tvar i, j,\n\t\t\t\tindex, indexCurrent, indexNext,\n\t\t\t\trealDistance,\n\t\t\t\tsampling, position,\n\t\t\t\tnewpoints = [],\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tsl = this.getLength();\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\t\tposition = this.getPoint( index );\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tthis.points = newpoints;\n\n\t\t};\n\n\t\t// Catmull-Rom\n\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tSpherical.prototype = {\n\n\t\tconstructor: Spherical,\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction MorphBlendMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.animationsMap = {};\n\t\tthis.animationsList = [];\n\n\t\t// prepare default animation\n\t\t// (all frames played together in 1 second)\n\n\t\tvar numFrames = this.geometry.morphTargets.length;\n\n\t\tvar name = \"__default\";\n\n\t\tvar startFrame = 0;\n\t\tvar endFrame = numFrames - 1;\n\n\t\tvar fps = numFrames / 1;\n\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\n\t\tthis.setAnimationWeight( name, 1 );\n\n\t}\n\n\tMorphBlendMesh.prototype = Object.create( Mesh.prototype );\n\tMorphBlendMesh.prototype.constructor = MorphBlendMesh;\n\n\tMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\t\tvar animation = {\n\n\t\t\tstart: start,\n\t\t\tend: end,\n\n\t\t\tlength: end - start + 1,\n\n\t\t\tfps: fps,\n\t\t\tduration: ( end - start ) / fps,\n\n\t\t\tlastFrame: 0,\n\t\t\tcurrentFrame: 0,\n\n\t\t\tactive: false,\n\n\t\t\ttime: 0,\n\t\t\tdirection: 1,\n\t\t\tweight: 1,\n\n\t\t\tdirectionBackwards: false,\n\t\t\tmirroredLoop: false\n\n\t\t};\n\n\t\tthis.animationsMap[ name ] = animation;\n\t\tthis.animationsList.push( animation );\n\n\t};\n\n\tMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\t\tvar firstAnimation, frameRanges = {};\n\n\t\tvar geometry = this.geometry;\n\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morph = geometry.morphTargets[ i ];\n\t\t\tvar chunks = morph.name.match( pattern );\n\n\t\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\t\tvar name = chunks[ 1 ];\n\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\t\tvar range = frameRanges[ name ];\n\n\t\t\t\tif ( i < range.start ) range.start = i;\n\t\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var name in frameRanges ) {\n\n\t\t\tvar range = frameRanges[ name ];\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t\t}\n\n\t\tthis.firstAnimation = firstAnimation;\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = 1;\n\t\t\tanimation.directionBackwards = false;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = - 1;\n\t\t\tanimation.directionBackwards = true;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.fps = fps;\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.duration = duration;\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.weight = weight;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = time;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\t\tvar time = 0;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\ttime = animation.time;\n\n\t\t}\n\n\t\treturn time;\n\n\t};\n\n\tMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\t\tvar duration = - 1;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tduration = animation.duration;\n\n\t\t}\n\n\t\treturn duration;\n\n\t};\n\n\tMorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = 0;\n\t\t\tanimation.active = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.active = false;\n\n\t\t}\n\n\t};\n\n\tMorphBlendMesh.prototype.update = function ( delta ) {\n\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\t\tvar animation = this.animationsList[ i ];\n\n\t\t\tif ( ! animation.active ) continue;\n\n\t\t\tvar frameTime = animation.duration / animation.length;\n\n\t\t\tanimation.time += animation.direction * delta;\n\n\t\t\tif ( animation.mirroredLoop ) {\n\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t\t}\n\n\t\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\t\tvar weight = animation.weight;\n\n\t\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\t\tanimation.currentFrame = keyframe;\n\n\t\t\t}\n\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t\t} else {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction SpotLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tthis.bones = this.getBoneList( object );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.colors.push( new Color( 0, 0, 1 ) );\n\t\t\t\tgeometry.colors.push( new Color( 0, 1, 0 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.dynamic = true;\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.getBoneList = function( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( (object && object.isBone) ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\n\n\t\tvar boneMatrix = new Matrix4();\n\n\t\tvar j = 0;\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tgeometry.computeBoundingSphere();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction HemisphereLightHelper( light, sphereSize ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.colors = [ new Color(), new Color() ];\n\n\t\tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tgeometry.rotateX( - Math.PI / 2 );\n\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t\t}\n\n\t\tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\n\n\t\tthis.lightSphere = new Mesh( geometry, material );\n\t\tthis.add( this.lightSphere );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightSphere.geometry.dispose();\n\t\tthis.lightSphere.material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tdivisions = divisions || 1;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = ( size * 2 ) / divisions;\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - size, 0, k, size, 0, k );\n\t\t\tvertices.push( k, 0, - size, k, 0, size );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new Line( geometry, material ));\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new Geometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar hexFrustum = 0xffaa00;\n\t\tvar hexCone = 0xff0000;\n\t\tvar hexUp = 0x00aaff;\n\t\tvar hexTarget = 0xffffff;\n\t\tvar hexCross = 0x333333;\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", hexCone );\n\t\taddLine( \"p\", \"n2\", hexCone );\n\t\taddLine( \"p\", \"n3\", hexCone );\n\t\taddLine( \"p\", \"n4\", hexCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", hexUp );\n\t\taddLine( \"u2\", \"u3\", hexUp );\n\t\taddLine( \"u3\", \"u1\", hexUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", hexTarget );\n\t\taddLine( \"p\", \"c\", hexCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\t\tfunction addLine( a, b, hex ) {\n\n\t\t\taddPoint( a, hex );\n\t\t\taddPoint( b, hex );\n\n\t\t}\n\n\t\tfunction addPoint( id, hex ) {\n\n\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\tgeometry.colors.push( new Color( hex ) );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t\t}\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\t// a helper to show the world-axis-aligned bounding box for an object\n\n\tfunction BoundingBoxHelper( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\t\tthis.object = object;\n\n\t\tthis.box = new Box3();\n\n\t\tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n\t}\n\n\tBoundingBoxHelper.prototype = Object.create( Mesh.prototype );\n\tBoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\n\n\tBoundingBoxHelper.prototype.update = function () {\n\n\t\tthis.box.setFromObject( this.object );\n\n\t\tthis.box.getSize( this.scale );\n\n\t\tthis.box.getCenter( this.position );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tthis.update( object );\n\n\t\t}\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( (object && object.isBox3) ) {\n\n\t\t\t\tbox.copy( object );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromObject( object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry = new BufferGeometry();\n\tlineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\tvar coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t] );\n\n\t\tvar colors = new Float32Array( [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t] );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\tvar CatmullRomCurve3 = ( function() {\n\n\t\tvar\n\t\t\ttmp = new Vector3(),\n\t\t\tpx = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\n\t\tfunction CubicPoly() {}\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\t\tthis.c0 = x0;\n\t\t\tthis.c1 = t0;\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t};\n\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\t// initCubicPoly\n\t\t\tthis.init( x1, x2, t1, t2 );\n\n\t\t};\n\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t};\n\n\t\tCubicPoly.prototype.calc = function( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t\t};\n\n\t\t// Subclass Three.js curve\n\t\treturn Curve.create(\n\n\t\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\t\tthis.points = p || [];\n\t\t\t\tthis.closed = false;\n\n\t\t\t},\n\n\t\t\tfunction ( t ) {\n\n\t\t\t\tvar points = this.points,\n\t\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\t\tl = points.length;\n\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\t\tintPoint = Math.floor( point );\n\t\t\t\tweight = point - intPoint;\n\n\t\t\t\tif ( this.closed ) {\n\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\t\tintPoint = l - 2;\n\t\t\t\t\tweight = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate first point\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\t\tp0 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tp1 = points[ intPoint % l ];\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate last point\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\t\tp3 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t\t// safety check for repeated points\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t\t}\n\n\t\t\t\tvar v = new Vector3(\n\t\t\t\t\tpx.calc( weight ),\n\t\t\t\t\tpy.calc( weight ),\n\t\t\t\t\tpz.calc( weight )\n\t\t\t\t);\n\n\t\t\t\treturn v;\n\n\t\t\t}\n\n\t\t);\n\n\t} )();\n\n\t/**************************************************************\n\t *\tClosed Spline 3D curve\n\t **************************************************************/\n\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t/**************************************************************\n\t *\tSpline 3D curve\n\t **************************************************************/\n\n\n\tvar SplineCurve3 = Curve.create(\n\n\t\tfunction ( points /* array of Vector3 */ ) {\n\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\t\treturn new Vector3(\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tCubic Bezier 3D curve\n\t **************************************************************/\n\n\tvar CubicBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2, v3 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b3 = ShapeUtils.b3;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t **************************************************************/\n\n\tvar QuadraticBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b2 = ShapeUtils.b2;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tLine3D\n\t **************************************************************/\n\n\tvar LineCurve3 = Curve.create(\n\n\t\tfunction ( v1, v2 ) {\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\treturn this.v2.clone();\n\n\t\t\t}\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\n\t\t\treturn vector;\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tArc curve\n\t **************************************************************/\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tvar matrixWorldInverse = new Matrix4();\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4 ( a, b, c, d, normal, color, materialIndex ) {\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction PointCloud ( geometry, material ) {\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction ParticleSystem ( geometry, material ) {\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction PointCloudMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleBasicMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleSystemMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction Vertex ( x, y, z ) {\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\t}\n\n\t//\n\n\tfunction EdgesHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\tfunction WireframeHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Line3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\t\textractPosition: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\t\treturn vector.applyProjection( this );\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t},\n\t\trotateAxis: function ( v ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\ttranslate: function ( v ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\t},\n\t\trotateX: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\t},\n\t\trotateY: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\t},\n\t\trotateZ: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\t},\n\t\trotateByAxis: function ( axis, angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.assign( Plane.prototype, {\n\t\tisIntersectionLine: function ( line ) {\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\t}\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\t}\n\t} );\n\n\tObject.assign( Ray.prototype, {\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\t\textrude: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\t\t}\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Object3D.prototype, {\n\t\tgetChildByName: function ( name ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\t\t},\n\t\trenderDepth: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\t\t}\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\t\taddIndex: function ( index ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\t\tif ( indexOffset !== undefined ) {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\t\t},\n\t\tclearDrawCalls: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeTangents: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\t},\n\t\tcomputeOffsets: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tEventDispatcher.prototype = Object.assign( Object.create( {\n\n\t\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\t\tconstructor: EventDispatcher,\n\n\t\tapply: function ( target ) {\n\n\t\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\t\tObject.assign( target, this );\n\n\t\t}\n\n\t} ), EventDispatcher.prototype );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\t\tdynamic: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\t\tsupportsFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\t\t},\n\t\tinitMaterial: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\t},\n\t\taddPrePlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\t},\n\t\taddPostPlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\t},\n\t\tupdateShadowMap: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.cullFace;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Audio.prototype, {\n\t\tload: function ( file ) {\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\t\tscope.setBuffer( buffer );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\tObject.assign( AudioAnalyser.prototype, {\n\t\tgetData: function ( file ) {\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\t}\n\t} );\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector () {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer () {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.TextureIdCount = TextureIdCount;\n\texports.Texture = Texture;\n\texports.MaterialIdCount = MaterialIdCount;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.XHRLoader = XHRLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.getAudioContext = getAudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3DIdCount = Object3DIdCount;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Spline = Spline;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.ColorKeywords = ColorKeywords;\n\texports.Color = Color;\n\texports.MorphBlendMesh = MorphBlendMesh;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.ShapePath = ShapePath;\n\texports.Path = Path;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.CurveUtils = CurveUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.BlendingMode = BlendingMode;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.TextureMapping = TextureMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.TextureWrapping = TextureWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.TextureFilter = TextureFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Sprite;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n\tObject.defineProperty( exports, 'AudioContext', {\n\t\tget: function () {\n\t\t\treturn exports.getAudioContext();\n\t\t}\n\t});\n\n})));\n","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Read Stefan's excellent paper for details on how this code works.\n//\n// Sean McCullough banksean@gmail.com\n//\n// Added 4D noise\n// Joshua Koo zz85nus@gmail.com \n\n/**\n * You can pass in a random number generator object if you like.\n * It is assumed to have a random() method.\n */\nvar SimplexNoise = function(r) {\n\tif (r == undefined) r = Math;\n  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], \n                                 [1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1], \n                                 [0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]; \n\n  this.grad4 = [[0,1,1,1], [0,1,1,-1], [0,1,-1,1], [0,1,-1,-1],\n\t     [0,-1,1,1], [0,-1,1,-1], [0,-1,-1,1], [0,-1,-1,-1],\n\t     [1,0,1,1], [1,0,1,-1], [1,0,-1,1], [1,0,-1,-1],\n\t     [-1,0,1,1], [-1,0,1,-1], [-1,0,-1,1], [-1,0,-1,-1],\n\t     [1,1,0,1], [1,1,0,-1], [1,-1,0,1], [1,-1,0,-1],\n\t     [-1,1,0,1], [-1,1,0,-1], [-1,-1,0,1], [-1,-1,0,-1],\n\t     [1,1,1,0], [1,1,-1,0], [1,-1,1,0], [1,-1,-1,0],\n\t     [-1,1,1,0], [-1,1,-1,0], [-1,-1,1,0], [-1,-1,-1,0]];\n\n  this.p = [];\n  for (var i=0; i<256; i++) {\n\t  this.p[i] = Math.floor(r.random()*256);\n  }\n  // To remove the need for index wrapping, double the permutation table length \n  this.perm = []; \n  for(var i=0; i<512; i++) {\n\t\tthis.perm[i]=this.p[i & 255];\n\t} \n\n  // A lookup table to traverse the simplex around a given point in 4D. \n  // Details can be found where this table is used, in the 4D noise method. \n  this.simplex = [ \n    [0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0], \n    [0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0], \n    [1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0], \n    [2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]; \n};\n\nSimplexNoise.prototype.dot = function(g, x, y) { \n\treturn g[0]*x + g[1]*y;\n};\n\nSimplexNoise.prototype.dot3 = function(g, x, y, z) {\n  return g[0]*x + g[1]*y + g[2]*z; \n}\n\nSimplexNoise.prototype.dot4 = function(g, x, y, z, w) {\n  return g[0]*x + g[1]*y + g[2]*z + g[3]*w;\n};\n\nSimplexNoise.prototype.noise = function(xin, yin) { \n  var n0, n1, n2; // Noise contributions from the three corners \n  // Skew the input space to determine which simplex cell we're in \n  var F2 = 0.5*(Math.sqrt(3.0)-1.0); \n  var s = (xin+yin)*F2; // Hairy factor for 2D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var G2 = (3.0-Math.sqrt(3.0))/6.0; \n  var t = (i+j)*G2; \n  var X0 = i-t; // Unskew the cell origin back to (x,y) space \n  var Y0 = j-t; \n  var x0 = xin-X0; // The x,y distances from the cell origin \n  var y0 = yin-Y0; \n  // For the 2D case, the simplex shape is an equilateral triangle. \n  // Determine which simplex we are in. \n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords \n  if(x0>y0) {i1=1; j1=0;} // lower triangle, XY order: (0,0)->(1,0)->(1,1) \n  else {i1=0; j1=1;}      // upper triangle, YX order: (0,0)->(0,1)->(1,1) \n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and \n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where \n  // c = (3-sqrt(3))/6 \n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords \n  var y1 = y0 - j1 + G2; \n  var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords \n  var y2 = y0 - 1.0 + 2.0 * G2; \n  // Work out the hashed gradient indices of the three simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var gi0 = this.perm[ii+this.perm[jj]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1]] % 12; \n  var gi2 = this.perm[ii+1+this.perm[jj+1]] % 12; \n  // Calculate the contribution from the three corners \n  var t0 = 0.5 - x0*x0-y0*y0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);  // (x,y) of grad3 used for 2D gradient \n  } \n  var t1 = 0.5 - x1*x1-y1*y1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1); \n  }\n  var t2 = 0.5 - x2*x2-y2*y2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to return values in the interval [-1,1]. \n  return 70.0 * (n0 + n1 + n2); \n};\n\n// 3D simplex noise \nSimplexNoise.prototype.noise3d = function(xin, yin, zin) { \n  var n0, n1, n2, n3; // Noise contributions from the four corners \n  // Skew the input space to determine which simplex cell we're in \n  var F3 = 1.0/3.0; \n  var s = (xin+yin+zin)*F3; // Very nice and simple skew factor for 3D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var k = Math.floor(zin+s); \n  var G3 = 1.0/6.0; // Very nice and simple unskew factor, too \n  var t = (i+j+k)*G3; \n  var X0 = i-t; // Unskew the cell origin back to (x,y,z) space \n  var Y0 = j-t; \n  var Z0 = k-t; \n  var x0 = xin-X0; // The x,y,z distances from the cell origin \n  var y0 = yin-Y0; \n  var z0 = zin-Z0; \n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron. \n  // Determine which simplex we are in. \n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords \n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords \n  if(x0>=y0) { \n    if(y0>=z0) \n      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } // X Y Z order \n      else if(x0>=z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } // X Z Y order \n      else { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; } // Z X Y order \n    } \n  else { // x0<y0 \n    if(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } // Z Y X order \n    else if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } // Y Z X order \n    else { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } // Y X Z order \n  } \n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z), \n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and \n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where \n  // c = 1/6.\n  var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords \n  var y1 = y0 - j1 + G3; \n  var z1 = z0 - k1 + G3; \n  var x2 = x0 - i2 + 2.0*G3; // Offsets for third corner in (x,y,z) coords \n  var y2 = y0 - j2 + 2.0*G3; \n  var z2 = z0 - k2 + 2.0*G3; \n  var x3 = x0 - 1.0 + 3.0*G3; // Offsets for last corner in (x,y,z) coords \n  var y3 = y0 - 1.0 + 3.0*G3; \n  var z3 = z0 - 1.0 + 3.0*G3; \n  // Work out the hashed gradient indices of the four simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var kk = k & 255; \n  var gi0 = this.perm[ii+this.perm[jj+this.perm[kk]]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1+this.perm[kk+k1]]] % 12; \n  var gi2 = this.perm[ii+i2+this.perm[jj+j2+this.perm[kk+k2]]] % 12; \n  var gi3 = this.perm[ii+1+this.perm[jj+1+this.perm[kk+1]]] % 12; \n  // Calculate the contribution from the four corners \n  var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0); \n  }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1); \n  } \n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2); \n  } \n  var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3; \n  if(t3<0) n3 = 0.0; \n  else { \n    t3 *= t3; \n    n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to stay just inside [-1,1] \n  return 32.0*(n0 + n1 + n2 + n3); \n};\n\n// 4D simplex noise\nSimplexNoise.prototype.noise4d = function( x, y, z, w ) {\n\t// For faster and easier lookups\n\tvar grad4 = this.grad4;\n\tvar simplex = this.simplex;\n\tvar perm = this.perm;\n\t\n   // The skewing and unskewing factors are hairy again for the 4D case\n   var F4 = (Math.sqrt(5.0)-1.0)/4.0;\n   var G4 = (5.0-Math.sqrt(5.0))/20.0;\n   var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n   // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n   var s = (x + y + z + w) * F4; // Factor for 4D skewing\n   var i = Math.floor(x + s);\n   var j = Math.floor(y + s);\n   var k = Math.floor(z + s);\n   var l = Math.floor(w + s);\n   var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n   var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n   var Y0 = j - t;\n   var Z0 = k - t;\n   var W0 = l - t;\n   var x0 = x - X0;  // The x,y,z,w distances from the cell origin\n   var y0 = y - Y0;\n   var z0 = z - Z0;\n   var w0 = w - W0;\n\n   // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n   // To find out which of the 24 possible simplices we're in, we need to\n   // determine the magnitude ordering of x0, y0, z0 and w0.\n   // The method below is a good way of finding the ordering of x,y,z,w and\n   // then find the correct traversal order for the simplex we’re in.\n   // First, six pair-wise comparisons are performed between each possible pair\n   // of the four coordinates, and the results are used to add up binary bits\n   // for an integer index.\n   var c1 = (x0 > y0) ? 32 : 0;\n   var c2 = (x0 > z0) ? 16 : 0;\n   var c3 = (y0 > z0) ? 8 : 0;\n   var c4 = (x0 > w0) ? 4 : 0;\n   var c5 = (y0 > w0) ? 2 : 0;\n   var c6 = (z0 > w0) ? 1 : 0;\n   var c = c1 + c2 + c3 + c4 + c5 + c6;\n   var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n   var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n   var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n   // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n   // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n   // impossible. Only the 24 indices which have non-zero entries make any sense.\n   // We use a thresholding to set the coordinates in turn from the largest magnitude.\n   // The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n   i1 = simplex[c][0]>=3 ? 1 : 0;\n   j1 = simplex[c][1]>=3 ? 1 : 0;\n   k1 = simplex[c][2]>=3 ? 1 : 0;\n   l1 = simplex[c][3]>=3 ? 1 : 0;\n   // The number 2 in the \"simplex\" array is at the second largest coordinate.\n   i2 = simplex[c][0]>=2 ? 1 : 0;\n   j2 = simplex[c][1]>=2 ? 1 : 0;    k2 = simplex[c][2]>=2 ? 1 : 0;\n   l2 = simplex[c][3]>=2 ? 1 : 0;\n   // The number 1 in the \"simplex\" array is at the second smallest coordinate.\n   i3 = simplex[c][0]>=1 ? 1 : 0;\n   j3 = simplex[c][1]>=1 ? 1 : 0;\n   k3 = simplex[c][2]>=1 ? 1 : 0;\n   l3 = simplex[c][3]>=1 ? 1 : 0;\n   // The fifth corner has all coordinate offsets = 1, so no need to look that up.\n   var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n   var y1 = y0 - j1 + G4;\n   var z1 = z0 - k1 + G4;\n   var w1 = w0 - l1 + G4;\n   var x2 = x0 - i2 + 2.0*G4; // Offsets for third corner in (x,y,z,w) coords\n   var y2 = y0 - j2 + 2.0*G4;\n   var z2 = z0 - k2 + 2.0*G4;\n   var w2 = w0 - l2 + 2.0*G4;\n   var x3 = x0 - i3 + 3.0*G4; // Offsets for fourth corner in (x,y,z,w) coords\n   var y3 = y0 - j3 + 3.0*G4;\n   var z3 = z0 - k3 + 3.0*G4;\n   var w3 = w0 - l3 + 3.0*G4;\n   var x4 = x0 - 1.0 + 4.0*G4; // Offsets for last corner in (x,y,z,w) coords\n   var y4 = y0 - 1.0 + 4.0*G4;\n   var z4 = z0 - 1.0 + 4.0*G4;\n   var w4 = w0 - 1.0 + 4.0*G4;\n   // Work out the hashed gradient indices of the five simplex corners\n   var ii = i & 255;\n   var jj = j & 255;\n   var kk = k & 255;\n   var ll = l & 255;\n   var gi0 = perm[ii+perm[jj+perm[kk+perm[ll]]]] % 32;\n   var gi1 = perm[ii+i1+perm[jj+j1+perm[kk+k1+perm[ll+l1]]]] % 32;\n   var gi2 = perm[ii+i2+perm[jj+j2+perm[kk+k2+perm[ll+l2]]]] % 32;\n   var gi3 = perm[ii+i3+perm[jj+j3+perm[kk+k3+perm[ll+l3]]]] % 32;\n   var gi4 = perm[ii+1+perm[jj+1+perm[kk+1+perm[ll+1]]]] % 32;\n   // Calculate the contribution from the five corners\n   var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n   if(t0<0) n0 = 0.0;\n   else {\n     t0 *= t0;\n     n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n   }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n   if(t1<0) n1 = 0.0;\n   else {\n     t1 *= t1;\n     n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n   }\n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n   if(t2<0) n2 = 0.0;\n   else {\n     t2 *= t2;\n     n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n   }   var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n   if(t3<0) n3 = 0.0;\n   else {\n     t3 *= t3;\n     n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n   }\n  var t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n   if(t4<0) n4 = 0.0;\n   else {\n     t4 *= t4;\n     n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n   }\n   // Sum up and scale the result to cover the range [-1,1]\n   return 27.0 * (n0 + n1 + n2 + n3 + n4);\n};\n","ATUtil = {\n\trandomRange : function(min, max) {\n\t\treturn min + Math.random() * (max - min);\n\t},\n\trandomInt : function(min,max){\n\t\treturn Math.floor(min + Math.random() * (max - min + 1));\n\t},\n\tmap : function(value, min1, max1, min2, max2) {\n\t\treturn ATUtil.lerp(min2, max2, ATUtil.norm(value, min1, max1));\n\t},\n\tlerp : function(amt, min, max){\n\t\treturn min + (max -min) * amt;\n\t},\n\tnorm : function(value , min, max){\n\t\treturn (value - min) / (max - min);\n\t},\n\tshuffle : function(o) {\n\t\tfor(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\t\treturn o;\n\t}\n};","/*!\n * VERSION: 1.18.2\n * DATE: 2015-12-22\n * UPDATES AND DOCS AT: http://greensock.com\n * \n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n *\n * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\nvar _gsScope=\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){\"use strict\";_gsScope._gsDefine(\"TweenMax\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},e=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},f=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=f.prototype.render},g=1e-10,h=c._internals,i=h.isSelector,j=h.isArray,k=f.prototype=c.to({},.1,{}),l=[];f.version=\"1.18.2\",k.constructor=f,k.kill()._gc=!1,f.killTweensOf=f.killDelayedCallsTo=c.killTweensOf,f.getTweensOf=c.getTweensOf,f.lagSmoothing=c.lagSmoothing,f.ticker=c.ticker,f.render=c.render,k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),c.prototype.invalidate.call(this)},k.updateTo=function(a,b){var d,e=this.ratio,f=this.vars.immediateRender||a.immediateRender;b&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted||f)if(b)this._initted=!1,f&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent(\"_onDisable\",this),this._time/this._duration>.998){var g=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(g,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||f)for(var h,i=1/(1-e),j=this._firstPT;j;)h=j.s+j.c,j.c*=i,j.s=h-j.c,j=j._next;return this},k.render=function(a,b,c){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var d,e,f,i,j,k,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._totalTime,q=this._cycle,r=this._duration,s=this._rawPrevTime;if(a>=n-1e-7?(this._totalTime=n,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=r,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===r&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>s||0>=a&&a>=-1e-7||s===g&&\"isPause\"!==this.data)&&s!==a&&(c=!0,s>g&&(e=\"onReverseComplete\")),this._rawPrevTime=m=!b||a||s===a?a:g)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==p||0===r&&s>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===r&&(this._initted||!this.vars.lazy||c)&&(s>=0&&(c=!0),this._rawPrevTime=m=!b||a||s===a?a:g)),this._initted||(c=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(i=r+this._repeatDelay,this._cycle=this._totalTime/i>>0,0!==this._cycle&&this._cycle===this._totalTime/i&&this._cycle--,this._time=this._totalTime-this._cycle*i,this._yoyo&&0!==(1&this._cycle)&&(this._time=r-this._time),this._time>r?this._time=r:this._time<0&&(this._time=0)),this._easeType?(j=this._time/r,k=this._easeType,l=this._easePower,(1===k||3===k&&j>=.5)&&(j=1-j),3===k&&(j*=2),1===l?j*=j:2===l?j*=j*j:3===l?j*=j*j*j:4===l&&(j*=j*j*j*j),1===k?this.ratio=1-j:2===k?this.ratio=j:this._time/r<.5?this.ratio=j/2:this.ratio=1-j/2):this.ratio=this._ease.getRatio(this._time/r)),o===this._time&&!c&&q===this._cycle)return void(p!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=o,this._totalTime=p,this._rawPrevTime=s,this._cycle=q,h.lazyTweens.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/r):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&a>=0&&(this._active=!0),0===p&&(2===this._initted&&a>0&&this._init(),this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._totalTime||0===r)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||(this._totalTime!==p||d)&&this._callback(\"onUpdate\")),this._cycle!==q&&(b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===r&&this._rawPrevTime===g&&m!==g&&(this._rawPrevTime=0))},f.to=function(a,b,c){return new f(a,b,c)},f.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new f(a,b,c)},f.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new f(a,b,d)},f.staggerTo=f.allTo=function(a,b,g,h,k,m,n){h=h||0;var o,p,q,r,s=0,t=[],u=function(){g.onComplete&&g.onComplete.apply(g.onCompleteScope||this,arguments),k.apply(n||g.callbackScope||this,m||l)},v=g.cycle,w=g.startAt&&g.startAt.cycle;for(j(a)||(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a))),a=a||[],0>h&&(a=d(a),a.reverse(),h*=-1),o=a.length-1,q=0;o>=q;q++){p={};for(r in g)p[r]=g[r];if(v&&e(p,a,q),w){w=p.startAt={};for(r in g.startAt)w[r]=g.startAt[r];e(p.startAt,a,q)}p.delay=s+(p.delay||0),q===o&&k&&(p.onComplete=u),t[q]=new f(a[q],b,p),s+=h}return t},f.staggerFrom=f.allFrom=function(a,b,c,d,e,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,f.staggerTo(a,b,c,d,e,g,h)},f.staggerFromTo=f.allFromTo=function(a,b,c,d,e,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,f.staggerTo(a,b,d,e,g,h,i)},f.delayedCall=function(a,b,c,d,e){return new f(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,useFrames:e,overwrite:0})},f.set=function(a,b){return new f(a,0,b)},f.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var m=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(m(f,b)),e=d.length),f=f._next;return d},n=f.getAllTweens=function(b){return m(a._rootTimeline,b).concat(m(a._rootFramesTimeline,b))};f.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=n(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g._reversed?0:g.totalDuration()):g._enabled(!1,!1))},f.killChildTweensOf=function(a,b){if(null!=a){var e,g,k,l,m,n=h.tweenLookup;if(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a)),j(a))for(l=a.length;--l>-1;)f.killChildTweensOf(a[l],b);else{e=[];for(k in n)for(g=n[k].target.parentNode;g;)g===a&&(e=e.concat(n[k].tweens)),g=g.parentNode;for(m=e.length,l=0;m>l;l++)b&&e[l].totalTime(e[l].totalDuration()),e[l]._enabled(!1,!1)}}};var o=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=n(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return f.pauseAll=function(a,b,c){o(!0,a,b,c)},f.resumeAll=function(a,b,c){o(!1,a,b,c)},f.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||g,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},k.progress=function(a){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},k.totalProgress=function(a){return arguments.length?this.totalTime(this.totalDuration()*a,!1):this._totalTime/this.totalDuration()},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},k.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},f},!0),_gsScope._gsDefine(\"TimelineLite\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],i(c)&&-1!==c.join(\"\").indexOf(\"{self}\")&&(e[d]=this._swapSelfInParams(c));i(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals,g=d._internals={},h=f.isSelector,i=f.isArray,j=f.lazyTweens,k=f.lazyRender,l=_gsScope._gsDefine.globals,m=function(a){var b,c={};for(b in a)c[b]=a[b];return c},n=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},o=g.pauseCallback=function(){},p=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},q=d.prototype=new b;return d.version=\"1.18.2\",q.constructor=d,q.kill()._gc=q._forcingPlayhead=q._hasPause=!1,q.to=function(a,b,d,e){var f=d.repeat&&l.TweenMax||c;return b?this.add(new f(a,b,d),e):this.set(a,d,e)},q.from=function(a,b,d,e){return this.add((d.repeat&&l.TweenMax||c).from(a,b,d),e)},q.fromTo=function(a,b,d,e,f){var g=e.repeat&&l.TweenMax||c;return b?this.add(g.fromTo(a,b,d,e),f):this.set(a,e,f)},q.staggerTo=function(a,b,e,f,g,i,j,k){var l,o,q=new d({onComplete:i,onCompleteParams:j,callbackScope:k,smoothChildTiming:this.smoothChildTiming}),r=e.cycle;for(\"string\"==typeof a&&(a=c.selector(a)||a),a=a||[],h(a)&&(a=p(a)),f=f||0,0>f&&(a=p(a),a.reverse(),f*=-1),o=0;o<a.length;o++)l=m(e),l.startAt&&(l.startAt=m(l.startAt),l.startAt.cycle&&n(l.startAt,a,o)),r&&n(l,a,o),q.to(a[o],b,l,o*f);return this.add(q,g)},q.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},q.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},q.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},q.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g=new d(a),h=g._timeline;for(null==b&&(b=!0),h._remove(g,!0),g._startTime=0,g._rawPrevTime=g._time=g._totalTime=h._time,e=h._first;e;)f=e._next,b&&e instanceof c&&e.target===e.vars.onComplete||g.add(e,e._startTime-e._delay),e=f;return h.add(g,0),g},q.add=function(e,f,g,h){var j,k,l,m,n,o;if(\"number\"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&i(e)){for(g=g||\"normal\",h=h||0,j=f,k=e.length,l=0;k>l;l++)i(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),\"string\"!=typeof m&&\"function\"!=typeof m&&(\"sequence\"===g?j=m._startTime+m.totalDuration()/m._timeScale:\"start\"===g&&(m._startTime-=m.delay())),j+=h;return this._uncache(!0)}if(\"string\"==typeof e)return this.addLabel(e,f);if(\"function\"!=typeof e)throw\"Cannot add \"+e+\" into the timeline; it is not a tween, timeline, function, or string.\";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._timeline;)o&&n._timeline.smoothChildTiming?n.totalTime(n._totalTime,!0):n._gc&&n._enabled(!0,!1),n=n._timeline;return this},q.remove=function(b){if(b instanceof a){this._remove(b,!1);var c=b._timeline=b.vars.useFrames?a._rootFramesTimeline:a._rootTimeline;return b._startTime=(b._paused?b._pauseTime:c._time)-(b._reversed?b.totalDuration()-b._totalTime:b._totalTime)/b._timeScale,this}if(b instanceof Array||b&&b.push&&i(b)){for(var d=b.length;--d>-1;)this.remove(b[d]);return this}return\"string\"==typeof b?this.removeLabel(b):this.kill(null,b)},q._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>d._startTime+d._totalDuration/d._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},q.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},q.insert=q.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},q.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},q.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},q.addPause=function(a,b,d,e){var f=c.delayedCall(0,o,d,e||this);return f.vars.onComplete=f.vars.onReverseComplete=b,f.data=\"isPause\",this._hasPause=!0,this.add(f,a)},q.removeLabel=function(a){return delete this._labels[a],this},q.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},q._parseTimeOrLabel=function(b,c,d,e){var f;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&i(e)))for(f=e.length;--f>-1;)e[f]instanceof a&&e[f].timeline===this&&this.remove(e[f]);if(\"string\"==typeof c)return this._parseTimeOrLabel(c,d&&\"number\"==typeof b&&null==this._labels[c]?b-this.duration():0,d);if(c=c||0,\"string\"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=this.duration());else{if(f=b.indexOf(\"=\"),-1===f)return null==this._labels[b]?d?this._labels[b]=this.duration()+c:c:this._labels[b]+c;c=parseInt(b.charAt(f-1)+\"1\",10)*Number(b.substr(f+1)),b=f>1?this._parseTimeOrLabel(b.substr(0,f-1),0,d):this.duration()}return Number(b)+c},q.seek=function(a,b){return this.totalTime(\"number\"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)},q.stop=function(){return this.paused(!0)},q.gotoAndPlay=function(a,b){return this.play(a,b)},q.gotoAndStop=function(a,b){return this.pause(a,b)},q.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,h,i,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._startTime,q=this._timeScale,r=this._paused;if(a>=n-1e-7)this._totalTime=this._time=n,this._reversed||this._hasPausedChild()||(f=!0,h=\"onComplete\",i=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(i=!0,this._rawPrevTime>e&&(h=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,a=n+1e-4;else if(1e-7>a)if(this._totalTime=this._time=0,(0!==o||0===this._duration&&this._rawPrevTime!==e&&(this._rawPrevTime>0||0>a&&this._rawPrevTime>=0))&&(h=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(i=f=!0,h=\"onReverseComplete\"):this._rawPrevTime>=0&&this._first&&(i=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(i=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!b){if(a>=o)for(d=this._first;d&&d._startTime<=a&&!l;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(l=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!l;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(l=d),d=d._prev;l&&(this._time=a=l._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=a}if(this._time!==o&&this._first||c||i||l){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==o&&a>0&&(this._active=!0),0===o&&this.vars.onStart&&0!==this._time&&(b||this._callback(\"onStart\")),m=this._time,m>=o)for(d=this._first;d&&(g=d._next,m===this._time&&(!this._paused||r));)(d._active||d._startTime<=m&&!d._paused&&!d._gc)&&(l===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,m===this._time&&(!this._paused||r));){if(d._active||d._startTime<=o&&!d._paused&&!d._gc){if(l===d){for(l=d._prev;l&&l.endTime()>this._time;)l.render(l._reversed?l.totalDuration()-(a-l._startTime)*l._timeScale:(a-l._startTime)*l._timeScale,b,c),l=l._prev;l=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=g}this._onUpdate&&(b||(j.length&&k(),this._callback(\"onUpdate\"))),h&&(this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||n>=this.totalDuration())&&(f&&(j.length&&k(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[h]&&this._callback(h)))}},q._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},q.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},q.getTweensOf=function(a,b){var d,e,f=this._gc,g=[],h=0;for(f&&this._enabled(!0,!0),d=c.getTweensOf(a),e=d.length;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(g[h++]=d[e]);return f&&this._enabled(!1,!0),g},q.recent=function(){return this._recent},q._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},q.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},q._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},q.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},q.invalidate=function(){for(var b=this._first;b;)b.invalidate(),b=b._next;return a.prototype.invalidate.call(this)},q._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},q.totalTime=function(b,c,d){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},q.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},q.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused?this.add(e,e._startTime-e._delay):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return a&&this.totalDuration()?this.timeScale(this._totalDuration/a):this},q.paused=function(b){if(!b)for(var c=this._first,d=this._time;c;)c._startTime===d&&\"isPause\"===c.data&&(c._rawPrevTime=0),c=c._next;return a.prototype.paused.apply(this,arguments)},q.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},q.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},d},!0),_gsScope._gsDefine(\"TimelineMax\",[\"TimelineLite\",\"TweenLite\",\"easing.Ease\"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=b._internals,g=f.lazyTweens,h=f.lazyRender,i=new c(null,null,1,0),j=d.prototype=new a;return j.constructor=d,j.kill()._gc=!1,d.version=\"1.18.2\",j.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},j.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},j.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},j.removePause=function(b){return this.removeCallback(a._internals.pauseCallback,b)},j.tweenTo=function(a,c){c=c||{};var d,e,f,g={ease:i,useFrames:this.usesFrames(),immediateRender:!1};for(e in c)g[e]=c[e];return g.time=this._parseTimeOrLabel(a),d=Math.abs(Number(g.time)-this._time)/this._timeScale||.001,f=new b(this,d,g),g.onStart=function(){f.target.paused(!0),f.vars.time!==f.target.time()&&d===f.duration()&&f.duration(Math.abs(f.vars.time-f.target.time())/f.target._timeScale),c.onStart&&f._callback(\"onStart\")},f},j.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],callbackScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},j.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,i,j,k,l,m,n,o=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,q=this._time,r=this._totalTime,s=this._startTime,t=this._timeScale,u=this._rawPrevTime,v=this._paused,w=this._cycle;if(a>=o-1e-7)this._locked||(this._totalTime=o,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(f=!0,j=\"onComplete\",k=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||0>u||u===e)&&u!==a&&this._first&&(k=!0,u>e&&(j=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=p,a=p+1e-4);else if(1e-7>a)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==q||0===p&&u!==e&&(u>0||0>a&&u>=0)&&!this._locked)&&(j=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(k=f=!0,j=\"onReverseComplete\"):u>=0&&this._first&&(k=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=p||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(k=!0)}else if(0===p&&0>u&&(k=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(l=p+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,a=p+1e-4):this._time<0?this._time=a=0:a=this._time)),this._hasPause&&!this._forcingPlayhead&&!b){if(a=this._time,a>=q)for(d=this._first;d&&d._startTime<=a&&!m;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(m=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!m;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(m=d),d=d._prev;m&&(this._time=a=m._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var x=this._yoyo&&0!==(1&w),y=x===(this._yoyo&&0!==(1&this._cycle)),z=this._totalTime,A=this._cycle,B=this._rawPrevTime,C=this._time;if(this._totalTime=w*p,this._cycle<w?x=!x:this._totalTime+=p,this._time=q,this._rawPrevTime=0===p?u-1e-4:u,this._cycle=w,this._locked=!0,q=x?0:p,this.render(q,b,0===p),b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\"),q!==this._time)return;if(y&&(q=x?p+1e-4:-1e-4,this.render(q,!0,!1)),this._locked=!1,this._paused&&!v)return;this._time=C,this._totalTime=z,this._cycle=A,this._rawPrevTime=B}if(!(this._time!==q&&this._first||c||k||m))return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==r&&a>0&&(this._active=!0),0===r&&this.vars.onStart&&0!==this._totalTime&&(b||this._callback(\"onStart\")),n=this._time,n>=q)for(d=this._first;d&&(i=d._next,n===this._time&&(!this._paused||v));)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(m===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=i;else for(d=this._last;d&&(i=d._prev,n===this._time&&(!this._paused||v));){if(d._active||d._startTime<=q&&!d._paused&&!d._gc){if(m===d){for(m=d._prev;m&&m.endTime()>this._time;)m.render(m._reversed?m.totalDuration()-(a-m._startTime)*m._timeScale:(a-m._startTime)*m._timeScale,b,c),m=m._prev;m=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=i}this._onUpdate&&(b||(g.length&&h(),this._callback(\"onUpdate\"))),j&&(this._locked||this._gc||(s===this._startTime||t!==this._timeScale)&&(0===this._time||o>=this.totalDuration())&&(f&&(g.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[j]&&this._callback(j)))},j.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},j.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},j.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},j.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},j.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},j.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},j.totalDuration=function(b){return arguments.length?-1!==this._repeat&&b?this.timeScale(this.totalDuration()/b):this:(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},j.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},j.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},j.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},j.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},j.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=_gsScope._gsDefine.globals,g=function(a,b,c,d){this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},h=\",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",i=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},j=function(a,e,f,g,h){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,h?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,0!==j?n.b=y:n.b=y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=i(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=i(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},k=function(a,d,e,f){var h,i,j,k,l,m,n=[];if(f)for(a=[f].concat(a),i=a.length;--i>-1;)\"string\"==typeof(m=a[i][d])&&\"=\"===m.charAt(1)&&(a[i][d]=f[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new g(a[0][d],0,0,a[-1>h?0:1][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new g(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new g(a[i][d],0,0,a[i+1][d]),n},l=function(a,f,g,i,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l=\"string\"==typeof l?\",\"+l+\",\":h,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(\",\"+o+\",\"),v[o]=k(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),c[n]=Math.sqrt(c[n]);if(!i){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q],d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=g?4:1;--n>-1;)o=w[n],p=v[o],j(p,f,g,i,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},m=function(a,b,c){b=b||\"soft\";var d,e,f,h,i,j,k,l,m,n,o,p={},q=\"cubic\"===b?3:2,r=\"soft\"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw\"invalid Bezier data\";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:\"string\"==typeof(o=a[k][m])&&\"=\"===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],f=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new g(d,e,f,h):new g(d,(2*e+d)/3,(2*e+f)/3,f);i.length=n}return p},n=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},o=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],m=[];for(c in a)n(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,m[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=m,h[f]=j,i=0,m=[]);return{length:j,lengths:h,segments:l}},p=_gsScope._gsDefine.plugin({propName:\"bezier\",priority:-1,version:\"1.3.4\",API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._round={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);\nvar d,e,f,g,h,i=b.values||[],j={},k=i[0],n=b.autoRotate||c.vars.orientToBezier;this._autoRotate=n?n instanceof Array?n:[[\"x\",\"y\",\"rotation\",n===!0?0:Number(n)||0]]:null;for(d in k)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]=\"function\"==typeof a[d],j[d]=e?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers=\"cubic\"!==b.type&&\"quadratic\"!==b.type&&\"soft\"!==b.type?l(i,isNaN(b.curviness)?1:b.curviness,!1,\"thruBasic\"===b.type,b.correlate,h):m(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=o(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(n=this._autoRotate)for(this._initialRotations=[],n[0]instanceof Array||(this._autoRotate=n=[n]),f=n.length;--f>-1;){for(g=0;3>g;g++)d=n[f][g],this._func[d]=\"function\"==typeof a[d]?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]:!1;d=n[f][2],this._initialRotations[f]=this._func[d]?this._func[d].call(this._target):this._target[d]}return this._startRatio=c.vars.runBackwards?1:0,!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target,p=b!==this._startRatio;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._round[f]&&(i=Math.round(i)),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var q,r,s,t,u,v,w,x=this._autoRotate;for(e=x.length;--e>-1;)f=x[e][2],v=x[e][3]||0,w=x[e][4]===!0?1:a,g=this._beziers[x[e][0]],q=this._beziers[x[e][1]],g&&q&&(g=g[c],q=q[c],r=g.a+(g.b-g.a)*h,t=g.b+(g.c-g.b)*h,r+=(t-r)*h,t+=(g.c+(g.d-g.c)*h-t)*h,s=q.a+(q.b-q.a)*h,u=q.b+(q.c-q.b)*h,s+=(u-s)*h,u+=(q.c+(q.d-q.c)*h-u)*h,i=p?Math.atan2(u-s,t-r)*w+v:this._initialRotations[e],n[f]?o[f](i):o[f]=i)}}}),q=p.prototype;p.bezierThrough=l,p.cubicToQuadratic=i,p._autoCSS=!0,p.quadraticToCubic=function(a,b,c){return new g(a,(2*b+a)/3,(2*b+c)/3,c)},p._cssRegister=function(){var a=f.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp(\"bezier\",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new p;var j,k,l,m=b.values,n=m.length-1,o=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),o[j]=l.end;for(k in b)q[k]=b[k];return q.values=o,h=new e(a,\"bezier\",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[[\"left\",\"top\",\"rotation\",j,!1]]:null!=l.end.x?[[\"x\",\"y\",\"rotation\",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform),i._onInitTween(l.proxy,q,g._tween),h}})}},q._roundProps=function(a,b){for(var c=this._overwriteProps,d=c.length;--d>-1;)(a[c[d]]||a.bezier||a.bezierThrough)&&(this._round[c[d]]=b)},q._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);return this._super._kill.call(this,a)}}(),_gsScope._gsDefine(\"plugins.CSSPlugin\",[\"plugins.TweenPlugin\",\"TweenLite\"],function(a,b){var c,d,e,f,g=function(){a.call(this,\"css\"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h=_gsScope._gsDefine.globals,i={},j=g.prototype=new a(\"css\");j.constructor=g,g.version=\"1.18.2\",g.API=2,g.defaultTransformPerspective=0,g.defaultSkewType=\"compensated\",g.defaultSmoothOrigin=!0,j=\"px\",g.suffixMap={top:j,right:j,bottom:j,left:j,width:j,height:j,fontSize:j,padding:j,margin:j,perspective:j,lineHeight:\"\"};var k,l,m,n,o,p,q=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d)+/g,r=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,s=/(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi,t=/(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g,u=/(?:\\d|\\-|\\+|=|#|\\.)*/g,v=/opacity *= *([^)]*)/i,w=/opacity:([^;]*)/i,x=/alpha\\(opacity *=.+?\\)/i,y=/^(rgb|hsl)/,z=/([A-Z])/g,A=/-([a-z])/gi,B=/(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi,C=function(a,b){return b.toUpperCase()},D=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,F=/progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,G=/,(?=[^\\)]*(?:\\(|$))/gi,H=Math.PI/180,I=180/Math.PI,J={},K=document,L=function(a){return K.createElementNS?K.createElementNS(\"http://www.w3.org/1999/xhtml\",a):K.createElement(a)},M=L(\"div\"),N=L(\"img\"),O=g._internals={_specialProps:i},P=navigator.userAgent,Q=function(){var a=P.indexOf(\"Android\"),b=L(\"a\");return m=-1!==P.indexOf(\"Safari\")&&-1===P.indexOf(\"Chrome\")&&(-1===a||Number(P.substr(a+8,1))>3),o=m&&Number(P.substr(P.indexOf(\"Version/\")+8,1))<6,n=-1!==P.indexOf(\"Firefox\"),(/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(P)||/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(P))&&(p=parseFloat(RegExp.$1)),b?(b.style.cssText=\"top:1px;opacity:.55;\",/^0.55/.test(b.style.opacity)):!1}(),R=function(a){return v.test(\"string\"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?parseFloat(RegExp.$1)/100:1},S=function(a){window.console&&console.log(a)},T=\"\",U=\"\",V=function(a,b){b=b||M;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=[\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(U=3===d?\"ms\":c[d],T=\"-\"+U.toLowerCase()+\"-\",U+a):null},W=K.defaultView?K.defaultView.getComputedStyle:function(){},X=g.getStyle=function(a,b,c,d,e){var f;return Q||\"opacity\"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||W(a))?f=c[b]||c.getPropertyValue(b)||c.getPropertyValue(b.replace(z,\"-$1\").toLowerCase()):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&\"none\"!==f&&\"auto\"!==f&&\"auto auto\"!==f?f:e):R(a)},Y=O.convertToPixels=function(a,c,d,e,f){if(\"px\"===e||!e)return d;if(\"auto\"===e||!d)return 0;var h,i,j,k=D.test(c),l=a,m=M.style,n=0>d;if(n&&(d=-d),\"%\"===e&&-1!==c.indexOf(\"border\"))h=d/100*(k?a.clientWidth:a.clientHeight);else{if(m.cssText=\"border:0 solid red;position:\"+X(a,\"position\")+\";line-height:0;\",\"%\"!==e&&l.appendChild&&\"v\"!==e.charAt(0)&&\"rem\"!==e)m[k?\"borderLeftWidth\":\"borderTopWidth\"]=d+e;else{if(l=a.parentNode||K.body,i=l._gsCache,j=b.ticker.frame,i&&k&&i.time===j)return i.width*d/100;m[k?\"width\":\"height\"]=d+e}l.appendChild(M),h=parseFloat(M[k?\"offsetWidth\":\"offsetHeight\"]),l.removeChild(M),k&&\"%\"===e&&g.cacheWidths!==!1&&(i=l._gsCache=l._gsCache||{},i.time=j,i.width=h/d*100),0!==h||f||(h=Y(a,c,d,e,!0))}return n?-h:h},Z=O.calculateOffset=function(a,b,c){if(\"absolute\"!==X(a,\"position\",c))return 0;var d=\"left\"===b?\"Left\":\"Top\",e=X(a,\"margin\"+d,c);return a[\"offset\"+d]-(Y(a,b,parseFloat(e),e.replace(u,\"\"))||0)},$=function(a,b){var c,d,e,f={};if(b=b||W(a,null))if(c=b.length)for(;--c>-1;)e=b[c],(-1===e.indexOf(\"-transform\")||za===e)&&(f[e.replace(A,C)]=b.getPropertyValue(e));else for(c in b)(-1===c.indexOf(\"Transform\")||ya===c)&&(f[c]=b[c]);else if(b=a.currentStyle||a.style)for(c in b)\"string\"==typeof c&&void 0===f[c]&&(f[c.replace(A,C)]=b[c]);return Q||(f.opacity=R(a)),d=La(a,b,!1),f.rotation=d.rotation,f.skewX=d.skewX,f.scaleX=d.scaleX,f.scaleY=d.scaleY,f.x=d.x,f.y=d.y,Ba&&(f.z=d.z,f.rotationX=d.rotationX,f.rotationY=d.rotationY,f.scaleZ=d.scaleZ),f.filters&&delete f.filters,f},_=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)\"cssText\"!==g&&\"length\"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf(\"Origin\")&&(\"number\"==typeof f||\"string\"==typeof f)&&(i[g]=\"auto\"!==f||\"left\"!==g&&\"top\"!==g?\"\"!==f&&\"auto\"!==f&&\"none\"!==f||\"string\"!=typeof b[g]||\"\"===b[g].replace(t,\"\")?f:0:Z(a,g),void 0!==j[g]&&(h=new oa(j,g,j[g],h)));if(d)for(g in d)\"className\"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},aa={width:[\"Left\",\"Right\"],height:[\"Top\",\"Bottom\"]},ba=[\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],ca=function(a,b,c){var d=parseFloat(\"width\"===b?a.offsetWidth:a.offsetHeight),e=aa[b],f=e.length;for(c=c||W(a,null);--f>-1;)d-=parseFloat(X(a,\"padding\"+e[f],c,!0))||0,d-=parseFloat(X(a,\"border\"+e[f]+\"Width\",c,!0))||0;return d},da=function(a,b){if(\"contain\"===a||\"auto\"===a||\"auto auto\"===a)return a+\" \";(null==a||\"\"===a)&&(a=\"0 0\");var c=a.split(\" \"),d=-1!==a.indexOf(\"left\")?\"0%\":-1!==a.indexOf(\"right\")?\"100%\":c[0],e=-1!==a.indexOf(\"top\")?\"0%\":-1!==a.indexOf(\"bottom\")?\"100%\":c[1];return null==e?e=\"center\"===d?\"50%\":\"0\":\"center\"===e&&(e=\"50%\"),(\"center\"===d||isNaN(parseFloat(d))&&-1===(d+\"\").indexOf(\"=\"))&&(d=\"50%\"),a=d+\" \"+e+(c.length>2?\" \"+c[2]:\"\"),b&&(b.oxp=-1!==d.indexOf(\"%\"),b.oyp=-1!==e.indexOf(\"%\"),b.oxr=\"=\"===d.charAt(1),b.oyr=\"=\"===e.charAt(1),b.ox=parseFloat(d.replace(t,\"\")),b.oy=parseFloat(e.replace(t,\"\")),b.v=a),b||a},ea=function(a,b){return\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)},fa=function(a,b){return null==a?b:\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2))+b:parseFloat(a)},ga=function(a,b,c,d){var e,f,g,h,i,j=1e-6;return null==a?h=b:\"number\"==typeof a?h=a:(e=360,f=a.split(\"_\"),i=\"=\"===a.charAt(1),g=(i?parseInt(a.charAt(0)+\"1\",10)*parseFloat(f[0].substr(2)):parseFloat(f[0]))*(-1===a.indexOf(\"rad\")?1:I)-(i?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf(\"short\")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf(\"_cw\")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf(\"ccw\")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),j>h&&h>-j&&(h=0),h},ha={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ia=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},ja=g.parseColor=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a)if(\"number\"==typeof a)c=[a>>16,a>>8&255,255&a];else{if(\",\"===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),ha[a])c=ha[a];else if(\"#\"===a.charAt(0))4===a.length&&(d=a.charAt(1),e=a.charAt(2),f=a.charAt(3),a=\"#\"+d+d+e+e+f+f),a=parseInt(a.substr(1),16),c=[a>>16,a>>8&255,255&a];else if(\"hsl\"===a.substr(0,3))if(c=m=a.match(q),b){if(-1!==a.indexOf(\"=\"))return a.match(r)}else g=Number(c[0])%360/360,h=Number(c[1])/100,i=Number(c[2])/100,e=.5>=i?i*(h+1):i+h-i*h,d=2*i-e,c.length>3&&(c[3]=Number(a[3])),c[0]=ia(g+1/3,d,e),c[1]=ia(g,d,e),c[2]=ia(g-1/3,d,e);else c=a.match(q)||ha.transparent;c[0]=Number(c[0]),c[1]=Number(c[1]),c[2]=Number(c[2]),c.length>3&&(c[3]=Number(c[3]))}else c=ha.black;return b&&!m&&(d=c[0]/255,e=c[1]/255,f=c[2]/255,j=Math.max(d,e,f),k=Math.min(d,e,f),i=(j+k)/2,j===k?g=h=0:(l=j-k,h=i>.5?l/(2-j-k):l/(j+k),g=j===d?(e-f)/l+(f>e?6:0):j===e?(f-d)/l+2:(d-e)/l+4,g*=60),c[0]=g+.5|0,c[1]=100*h+.5|0,c[2]=100*i+.5|0),c},ka=function(a,b){var c,d,e,f=a.match(la)||[],g=0,h=f.length?\"\":a;for(c=0;c<f.length;c++)d=f[c],e=a.substr(g,a.indexOf(d,g)-g),g+=e.length+d.length,d=ja(d,b),3===d.length&&d.push(1),h+=e+(b?\"hsla(\"+d[0]+\",\"+d[1]+\"%,\"+d[2]+\"%,\"+d[3]:\"rgba(\"+d.join(\",\"))+\")\";return h},la=\"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";for(j in ha)la+=\"|\"+j+\"\\\\b\";la=new RegExp(la+\")\",\"gi\"),g.colorStringFilter=function(a){var b,c=a[0]+a[1];la.lastIndex=0,la.test(c)&&(b=-1!==c.indexOf(\"hsl(\")||-1!==c.indexOf(\"hsla(\"),a[0]=ka(a[0],b),a[1]=ka(a[1],b))},b.defaultStringFilter||(b.defaultStringFilter=g.colorStringFilter);var ma=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(la)||[\"\"])[0]:\"\",g=a.split(f).join(\"\").match(s)||[],h=a.substr(0,a.indexOf(g[0])),i=\")\"===a.charAt(a.length-1)?\")\":\"\",j=-1!==a.indexOf(\" \")?\" \":\",\",k=g.length,l=k>0?g[0].replace(q,\"\"):\"\";return k?e=b?function(a){var b,m,n,o;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(o=a.replace(G,\"|\").split(\"|\"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(\",\")}if(b=(a.match(la)||[f])[0],m=a.split(b).join(\"\").match(s)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf(\"inset\")?\" inset\":\"\")}:function(a){var b,f,m;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(f=a.replace(G,\"|\").split(\"|\"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(\",\")}if(b=a.match(s)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},na=function(a){return a=a.split(\",\"),function(b,c,d,e,f,g,h){var i,j=(c+\"\").split(\" \");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},oa=(O._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f,g=this.data,h=g.proxy,i=g.firstMPT,j=1e-6;i;)b=h[i.v],i.r?b=Math.round(b):j>b&&b>-j&&(b=0),i.t[i.p]=b,i=i._next;if(g.autoRotate&&(g.autoRotate.rotation=h.rotation),1===a||0===a)for(i=g.firstMPT,f=1===a?\"e\":\"b\";i;){if(c=i.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c[\"xn\"+d]+c[\"xs\"+(d+1)];c[f]=e}}else c[f]=c.s+c.xs0;i=i._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),pa=(O._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=J;for(c._transform=null,J=b,d=k=c.parse(a,b,d,e),J=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new oa(d,\"s\",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i=\"xn\"+g,h=d.p+\"_\"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new oa(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},O.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof pa||f.push(this.n),this.r=j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),qa=function(a,b,c,d,e,f){var g=new pa(a,b,c,d-c,e,-1,f);return g.b=c,g.e=g.xs0=d,g},ra=g.parseComplex=function(a,b,c,d,e,f,g,h,i,j){c=c||f||\"\",g=new pa(a,b,0,0,g,j?2:1,null,!1,h,c,d),d+=\"\";var l,m,n,o,p,s,t,u,v,w,x,y,z,A=c.split(\", \").join(\",\").split(\" \"),B=d.split(\", \").join(\",\").split(\" \"),C=A.length,D=k!==!1;for((-1!==d.indexOf(\",\")||-1!==c.indexOf(\",\"))&&(A=A.join(\" \").replace(G,\", \").split(\" \"),B=B.join(\" \").replace(G,\", \").split(\" \"),C=A.length),C!==B.length&&(A=(f||\"\").split(\" \"),C=A.length),g.plugin=i,g.setRatio=j,la.lastIndex=0,l=0;C>l;l++)if(o=A[l],p=B[l],u=parseFloat(o),u||0===u)g.appendXtra(\"\",u,ea(p,u),p.replace(r,\"\"),D&&-1!==p.indexOf(\"px\"),!0);else if(e&&la.test(o))y=\",\"===p.charAt(p.length-1)?\"),\":\")\",z=-1!==p.indexOf(\"hsl\")&&Q,o=ja(o,z),p=ja(p,z),v=o.length+p.length>6,v&&!Q&&0===p[3]?(g[\"xs\"+g.l]+=g.l?\" transparent\":\"transparent\",g.e=g.e.split(B[l]).join(\"transparent\")):(Q||(v=!1),z?g.appendXtra(v?\"hsla(\":\"hsl(\",o[0],ea(p[0],o[0]),\",\",!1,!0).appendXtra(\"\",o[1],ea(p[1],o[1]),\"%,\",!1).appendXtra(\"\",o[2],ea(p[2],o[2]),v?\"%,\":\"%\"+y,!1):g.appendXtra(v?\"rgba(\":\"rgb(\",o[0],p[0]-o[0],\",\",!0,!0).appendXtra(\"\",o[1],p[1]-o[1],\",\",!0).appendXtra(\"\",o[2],p[2]-o[2],v?\",\":y,!0),v&&(o=o.length<4?1:o[3],g.appendXtra(\"\",o,(p.length<4?1:p[3])-o,y,!1))),la.lastIndex=0;else if(s=o.match(q)){if(t=p.match(r),!t||t.length!==s.length)return g;for(n=0,m=0;m<s.length;m++)x=s[m],w=o.indexOf(x,n),g.appendXtra(o.substr(n,w-n),Number(x),ea(t[m],x),\"\",D&&\"px\"===o.substr(w+x.length,2),0===m),n=w+x.length;g[\"xs\"+g.l]+=o.substr(n)}else g[\"xs\"+g.l]+=g.l?\" \"+p:p;if(-1!==d.indexOf(\"=\")&&g.data){for(y=g.xs0+g.data.s,l=1;l<g.l;l++)y+=g[\"xs\"+l]+g.data[\"xn\"+l];g.e=y+g[\"xs\"+l]}return g.l||(g.type=-1,g.xs0=g.e),g.xfirst||g},sa=9;for(j=pa.prototype,j.l=j.pr=0;--sa>0;)j[\"xn\"+sa]=0,j[\"xs\"+sa]=\"\";j.xs0=\"\",j._next=j._prev=j.xfirst=j.data=j.plugin=j.setRatio=j.rxp=null,j.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g[\"xs\"+h]+=f&&h?\" \"+a:a||\"\",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g[\"xs\"+g.l]=d||\"\",h>0?(g.data[\"xn\"+h]=b+c,g.rxp[\"xn\"+h]=e,g[\"xn\"+h]=b,g.plugin||(g.xfirst=new pa(g,\"xn\"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g[\"xs\"+h]+=b+(d||\"\"),g)};var ta=function(a,b){b=b||{},this.p=b.prefix?V(a)||a:a,i[a]=i[this.p]=this,this.format=b.formatter||ma(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},ua=O._registerComplexSpecialProp=function(a,b,c){\"object\"!=typeof b&&(b={parser:c});var d,e,f=a.split(\",\"),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new ta(f[d],b)},va=function(a){if(!i[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+\"Plugin\";ua(a,{parser:function(a,c,d,e,f,g,j){var k=h.com.greensock.plugins[b];return k?(k._cssRegister(),i[d].parse(a,c,d,e,f,g,j)):(S(\"Error: \"+b+\" js file not loaded.\"),f)}})}};j=ta.prototype,j.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(G.test(c)||G.test(b)?(h=b.replace(G,\"|\").split(\"|\"),i=c.replace(G,\"|\").split(\"|\")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(-1===l?h[g]=h[g].split(m).join(\"\"):-1===k&&(h[g]+=\" \"+m)));b=h.join(\", \"),c=i.join(\", \")}return ra(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},j.parse=function(a,b,c,d,f,g,h){return this.parseComplex(a.style,this.format(X(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){ua(a,{parser:function(a,d,e,f,g,h,i){var j=new pa(a,e,0,0,g,2,e,!1,c);return j.plugin=h,j.setRatio=b(a,d,f._tween,e),j},priority:c})},g.useSVGTransformAttr=m||n;var wa,xa=\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"),ya=V(\"transform\"),za=T+\"transform\",Aa=V(\"transformOrigin\"),Ba=null!==V(\"perspective\"),Ca=O.Transform=function(){this.perspective=parseFloat(g.defaultTransformPerspective)||0,this.force3D=g.defaultForce3D!==!1&&Ba?g.defaultForce3D||\"auto\":!1},Da=window.SVGElement,Ea=function(a,b,c){var d,e=K.createElementNS(\"http://www.w3.org/2000/svg\",a),f=/([a-z])([A-Z])/g;for(d in c)e.setAttributeNS(null,d.replace(f,\"$1-$2\").toLowerCase(),c[d]);return b.appendChild(e),e},Fa=K.documentElement,Ga=function(){var a,b,c,d=p||/Android/i.test(P)&&!window.chrome;return K.createElementNS&&!d&&(a=Ea(\"svg\",Fa),b=Ea(\"rect\",a,{width:100,height:50,x:100}),c=b.getBoundingClientRect().width,b.style[Aa]=\"50% 50%\",b.style[ya]=\"scaleX(0.5)\",d=c===b.getBoundingClientRect().width&&!(n&&Ba),Fa.removeChild(a)),d}(),Ha=function(a,b,c,d,e){var f,h,i,j,k,l,m,n,o,p,q,r,s,t,u=a._gsTransform,v=Ka(a,!0);u&&(s=u.xOrigin,t=u.yOrigin),(!d||(f=d.split(\" \")).length<2)&&(m=a.getBBox(),b=da(b).split(\" \"),f=[(-1!==b[0].indexOf(\"%\")?parseFloat(b[0])/100*m.width:parseFloat(b[0]))+m.x,(-1!==b[1].indexOf(\"%\")?parseFloat(b[1])/100*m.height:parseFloat(b[1]))+m.y]),c.xOrigin=j=parseFloat(f[0]),c.yOrigin=k=parseFloat(f[1]),d&&v!==Ja&&(l=v[0],m=v[1],n=v[2],o=v[3],p=v[4],q=v[5],r=l*o-m*n,h=j*(o/r)+k*(-n/r)+(n*q-o*p)/r,i=j*(-m/r)+k*(l/r)-(l*q-m*p)/r,j=c.xOrigin=f[0]=h,k=c.yOrigin=f[1]=i),u&&(e||e!==!1&&g.defaultSmoothOrigin!==!1?(h=j-s,i=k-t,u.xOffset+=h*v[0]+i*v[2]-h,u.yOffset+=h*v[1]+i*v[3]-i):u.xOffset=u.yOffset=0),a.setAttribute(\"data-svg-origin\",f.join(\" \"))},Ia=function(a){return!!(Da&&\"function\"==typeof a.getBBox&&a.getCTM&&(!a.parentNode||a.parentNode.getBBox&&a.parentNode.getCTM))},Ja=[1,0,0,1,0,0],Ka=function(a,b){var c,d,e,f,g,h=a._gsTransform||new Ca,i=1e5;if(ya?d=X(a,za,null,!0):a.currentStyle&&(d=a.currentStyle.filter.match(E),d=d&&4===d.length?[d[0].substr(4),Number(d[2].substr(4)),Number(d[1].substr(4)),d[3].substr(4),h.x||0,h.y||0].join(\",\"):\"\"),c=!d||\"none\"===d||\"matrix(1, 0, 0, 1, 0, 0)\"===d,(h.svg||a.getBBox&&Ia(a))&&(c&&-1!==(a.style[ya]+\"\").indexOf(\"matrix\")&&(d=a.style[ya],c=0),e=a.getAttribute(\"transform\"),c&&e&&(-1!==e.indexOf(\"matrix\")?(d=e,c=0):-1!==e.indexOf(\"translate\")&&(d=\"matrix(1,0,0,1,\"+e.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\")+\")\",c=0))),c)return Ja;for(e=(d||\"\").match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi)||[],sa=e.length;--sa>-1;)f=Number(e[sa]),e[sa]=(g=f-(f|=0))?(g*i+(0>g?-.5:.5)|0)/i+f:f;return b&&e.length>6?[e[0],e[1],e[4],e[5],e[12],e[13]]:e},La=O.getTransform=function(a,c,d,f){if(a._gsTransform&&d&&!f)return a._gsTransform;var h,i,j,k,l,m,n=d?a._gsTransform||new Ca:new Ca,o=n.scaleX<0,p=2e-5,q=1e5,r=Ba?parseFloat(X(a,Aa,c,!1,\"0 0 0\").split(\" \")[2])||n.zOrigin||0:0,s=parseFloat(g.defaultTransformPerspective)||0;if(n.svg=!(!a.getBBox||!Ia(a)),n.svg&&(Ha(a,X(a,Aa,e,!1,\"50% 50%\")+\"\",n,a.getAttribute(\"data-svg-origin\")),wa=g.useSVGTransformAttr||Ga),h=Ka(a),h!==Ja){if(16===h.length){var t,u,v,w,x,y=h[0],z=h[1],A=h[2],B=h[3],C=h[4],D=h[5],E=h[6],F=h[7],G=h[8],H=h[9],J=h[10],K=h[12],L=h[13],M=h[14],N=h[11],O=Math.atan2(E,J);n.zOrigin&&(M=-n.zOrigin,K=G*M-h[12],L=H*M-h[13],M=J*M+n.zOrigin-h[14]),n.rotationX=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=C*w+G*x,u=D*w+H*x,v=E*w+J*x,G=C*-x+G*w,H=D*-x+H*w,J=E*-x+J*w,N=F*-x+N*w,C=t,D=u,E=v),O=Math.atan2(-A,J),n.rotationY=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=y*w-G*x,u=z*w-H*x,v=A*w-J*x,H=z*x+H*w,J=A*x+J*w,N=B*x+N*w,y=t,z=u,A=v),O=Math.atan2(z,y),n.rotation=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),y=y*w+C*x,u=z*w+D*x,D=z*-x+D*w,E=A*-x+E*w,z=u),n.rotationX&&Math.abs(n.rotationX)+Math.abs(n.rotation)>359.9&&(n.rotationX=n.rotation=0,n.rotationY=180-n.rotationY),n.scaleX=(Math.sqrt(y*y+z*z)*q+.5|0)/q,n.scaleY=(Math.sqrt(D*D+H*H)*q+.5|0)/q,n.scaleZ=(Math.sqrt(E*E+J*J)*q+.5|0)/q,n.skewX=0,n.perspective=N?1/(0>N?-N:N):0,n.x=K,n.y=L,n.z=M,n.svg&&(n.x-=n.xOrigin-(n.xOrigin*y-n.yOrigin*C),n.y-=n.yOrigin-(n.yOrigin*z-n.xOrigin*D))}else if((!Ba||f||!h.length||n.x!==h[4]||n.y!==h[5]||!n.rotationX&&!n.rotationY)&&(void 0===n.x||\"none\"!==X(a,\"display\",c))){var P=h.length>=6,Q=P?h[0]:1,R=h[1]||0,S=h[2]||0,T=P?h[3]:1;n.x=h[4]||0,n.y=h[5]||0,j=Math.sqrt(Q*Q+R*R),k=Math.sqrt(T*T+S*S),l=Q||R?Math.atan2(R,Q)*I:n.rotation||0,m=S||T?Math.atan2(S,T)*I+l:n.skewX||0,Math.abs(m)>90&&Math.abs(m)<270&&(o?(j*=-1,m+=0>=l?180:-180,l+=0>=l?180:-180):(k*=-1,m+=0>=m?180:-180)),n.scaleX=j,n.scaleY=k,n.rotation=l,n.skewX=m,Ba&&(n.rotationX=n.rotationY=n.z=0,n.perspective=s,n.scaleZ=1),n.svg&&(n.x-=n.xOrigin-(n.xOrigin*Q+n.yOrigin*S),n.y-=n.yOrigin-(n.xOrigin*R+n.yOrigin*T))}n.zOrigin=r;for(i in n)n[i]<p&&n[i]>-p&&(n[i]=0)}return d&&(a._gsTransform=n,n.svg&&(wa&&a.style[ya]?b.delayedCall(.001,function(){Pa(a.style,ya)}):!wa&&a.getAttribute(\"transform\")&&b.delayedCall(.001,function(){a.removeAttribute(\"transform\")}))),n},Ma=function(a){var b,c,d=this.data,e=-d.rotation*H,f=e+d.skewX*H,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter=\"\";var n,o,q=this.t.offsetWidth,r=this.t.offsetHeight,s=\"absolute\"!==m.position,t=\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+h+\", M12=\"+i+\", M21=\"+j+\", M22=\"+k,w=d.x+q*d.xPercent/100,x=d.y+r*d.yPercent/100;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,o=(d.oyp?r*d.oy*.01:d.oy)-r/2,w+=n-(n*h+o*i),x+=o-(n*j+o*k)),s?(n=q/2,o=r/2,t+=\", Dx=\"+(n-(n*h+o*i)+w)+\", Dy=\"+(o-(n*j+o*k)+x)+\")\"):t+=\", sizingMethod='auto expand')\",-1!==b.indexOf(\"DXImageTransform.Microsoft.Matrix(\")?l.filter=b.replace(F,t):l.filter=t+\" \"+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===t.indexOf(\"Dx=0, Dy=0\")||v.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf(b.indexOf(\"Alpha\"))&&l.removeAttribute(\"filter\")),!s){var y,z,A,B=8>p?1:-1;for(n=d.ieOffsetX||0,o=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+w),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+x),sa=0;4>sa;sa++)z=ba[sa],y=m[z],c=-1!==y.indexOf(\"px\")?parseFloat(y):Y(this.t,z,parseFloat(y),y.replace(u,\"\"))||0,A=c!==d[z]?2>sa?-d.ieOffsetX:-d.ieOffsetY:2>sa?n-d.ieOffsetX:o-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===sa||2===sa?1:B)))+\"px\"}}},Na=O.set3DTransformRatio=O.setTransformRatio=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z=this.data,A=this.t.style,B=z.rotation,C=z.rotationX,D=z.rotationY,E=z.scaleX,F=z.scaleY,G=z.scaleZ,I=z.x,J=z.y,K=z.z,L=z.svg,M=z.perspective,N=z.force3D;if(((1===a||0===a)&&\"auto\"===N&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!N)&&!K&&!M&&!D&&!C&&1===G||wa&&L||!Ba)return void(B||z.skewX||L?(B*=H,x=z.skewX*H,y=1e5,b=Math.cos(B)*E,e=Math.sin(B)*E,c=Math.sin(B-x)*-F,f=Math.cos(B-x)*F,x&&\"simple\"===z.skewType&&(s=Math.tan(x),s=Math.sqrt(1+s*s),c*=s,f*=s,z.skewY&&(b*=s,e*=s)),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset,wa&&(z.xPercent||z.yPercent)&&(p=this.t.getBBox(),I+=.01*z.xPercent*p.width,J+=.01*z.yPercent*p.height),p=1e-6,p>I&&I>-p&&(I=0),p>J&&J>-p&&(J=0)),u=(b*y|0)/y+\",\"+(e*y|0)/y+\",\"+(c*y|0)/y+\",\"+(f*y|0)/y+\",\"+I+\",\"+J+\")\",L&&wa?this.t.setAttribute(\"transform\",\"matrix(\"+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+E+\",0,0,\"+F+\",\"+I+\",\"+J+\")\");if(n&&(p=1e-4,p>E&&E>-p&&(E=G=2e-5),p>F&&F>-p&&(F=G=2e-5),!M||z.z||z.rotationX||z.rotationY||(M=0)),B||z.skewX)B*=H,q=b=Math.cos(B),r=e=Math.sin(B),z.skewX&&(B-=z.skewX*H,q=Math.cos(B),r=Math.sin(B),\"simple\"===z.skewType&&(s=Math.tan(z.skewX*H),s=Math.sqrt(1+s*s),q*=s,r*=s,z.skewY&&(b*=s,e*=s))),c=-r,f=q;else{if(!(D||C||1!==G||M||L))return void(A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) translate3d(\":\"translate3d(\")+I+\"px,\"+J+\"px,\"+K+\"px)\"+(1!==E||1!==F?\" scale(\"+E+\",\"+F+\")\":\"\"));b=f=1,c=e=0}j=1,d=g=h=i=k=l=0,m=M?-1/M:0,o=z.zOrigin,p=1e-6,v=\",\",w=\"0\",B=D*H,B&&(q=Math.cos(B),r=Math.sin(B),h=-r,k=m*-r,d=b*r,g=e*r,j=q,m*=q,b*=q,e*=q),B=C*H,B&&(q=Math.cos(B),r=Math.sin(B),s=c*q+d*r,t=f*q+g*r,i=j*r,l=m*r,d=c*-r+d*q,g=f*-r+g*q,j*=q,m*=q,c=s,f=t),1!==G&&(d*=G,g*=G,j*=G,m*=G),1!==F&&(c*=F,f*=F,i*=F,l*=F),1!==E&&(b*=E,e*=E,h*=E,k*=E),(o||L)&&(o&&(I+=d*-o,J+=g*-o,K+=j*-o+o),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset),p>I&&I>-p&&(I=w),p>J&&J>-p&&(J=w),p>K&&K>-p&&(K=0)),u=z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix3d(\":\"matrix3d(\",u+=(p>b&&b>-p?w:b)+v+(p>e&&e>-p?w:e)+v+(p>h&&h>-p?w:h),u+=v+(p>k&&k>-p?w:k)+v+(p>c&&c>-p?w:c)+v+(p>f&&f>-p?w:f),C||D||1!==G?(u+=v+(p>i&&i>-p?w:i)+v+(p>l&&l>-p?w:l)+v+(p>d&&d>-p?w:d),u+=v+(p>g&&g>-p?w:g)+v+(p>j&&j>-p?w:j)+v+(p>m&&m>-p?w:m)+v):u+=\",0,0,0,0,1,0,\",u+=I+v+J+v+K+v+(M?1+-K/M:1)+\")\",A[ya]=u};j=Ca.prototype,j.x=j.y=j.z=j.skewX=j.skewY=j.rotation=j.rotationX=j.rotationY=j.zOrigin=j.xPercent=j.yPercent=j.xOffset=j.yOffset=0,j.scaleX=j.scaleY=j.scaleZ=1,ua(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\",{parser:function(a,b,c,d,f,h,i){if(d._lastParsedTransform===i)return f;d._lastParsedTransform=i;var j,k,l,m,n,o,p,q,r,s,t=a._gsTransform,u=a.style,v=1e-6,w=xa.length,x=i,y={},z=\"transformOrigin\";if(i.display?(m=X(a,\"display\"),u.display=\"block\",j=La(a,e,!0,i.parseTransform),u.display=m):j=La(a,e,!0,i.parseTransform),d._transform=j,\"string\"==typeof x.transform&&ya)m=M.style,m[ya]=x.transform,m.display=\"block\",m.position=\"absolute\",K.body.appendChild(M),k=La(M,null,!1),K.body.removeChild(M),k.perspective||(k.perspective=j.perspective),null!=x.xPercent&&(k.xPercent=fa(x.xPercent,j.xPercent)),null!=x.yPercent&&(k.yPercent=fa(x.yPercent,j.yPercent));else if(\"object\"==typeof x){if(k={scaleX:fa(null!=x.scaleX?x.scaleX:x.scale,j.scaleX),scaleY:fa(null!=x.scaleY?x.scaleY:x.scale,j.scaleY),scaleZ:fa(x.scaleZ,j.scaleZ),x:fa(x.x,j.x),y:fa(x.y,j.y),z:fa(x.z,j.z),xPercent:fa(x.xPercent,j.xPercent),yPercent:fa(x.yPercent,j.yPercent),perspective:fa(x.transformPerspective,j.perspective)},q=x.directionalRotation,null!=q)if(\"object\"==typeof q)for(m in q)x[m]=q[m];else x.rotation=q;\"string\"==typeof x.x&&-1!==x.x.indexOf(\"%\")&&(k.x=0,k.xPercent=fa(x.x,j.xPercent)),\"string\"==typeof x.y&&-1!==x.y.indexOf(\"%\")&&(k.y=0,k.yPercent=fa(x.y,j.yPercent)),k.rotation=ga(\"rotation\"in x?x.rotation:\"shortRotation\"in x?x.shortRotation+\"_short\":\"rotationZ\"in x?x.rotationZ:j.rotation,j.rotation,\"rotation\",y),Ba&&(k.rotationX=ga(\"rotationX\"in x?x.rotationX:\"shortRotationX\"in x?x.shortRotationX+\"_short\":j.rotationX||0,j.rotationX,\"rotationX\",y),k.rotationY=ga(\"rotationY\"in x?x.rotationY:\"shortRotationY\"in x?x.shortRotationY+\"_short\":j.rotationY||0,j.rotationY,\"rotationY\",y)),k.skewX=null==x.skewX?j.skewX:ga(x.skewX,j.skewX),k.skewY=null==x.skewY?j.skewY:ga(x.skewY,j.skewY),(l=k.skewY-j.skewY)&&(k.skewX+=l,k.rotation+=l)}for(Ba&&null!=x.force3D&&(j.force3D=x.force3D,p=!0),j.skewType=x.skewType||j.skewType||g.defaultSkewType,o=j.force3D||j.z||j.rotationX||j.rotationY||k.z||k.rotationX||k.rotationY||k.perspective,o||null==x.scale||(k.scaleZ=1);--w>-1;)c=xa[w],n=k[c]-j[c],(n>v||-v>n||null!=x[c]||null!=J[c])&&(p=!0,f=new pa(j,c,j[c],n,f),c in y&&(f.e=y[c]),f.xs0=0,f.plugin=h,d._overwriteProps.push(f.n));return n=x.transformOrigin,j.svg&&(n||x.svgOrigin)&&(r=j.xOffset,s=j.yOffset,Ha(a,da(n),k,x.svgOrigin,x.smoothOrigin),f=qa(j,\"xOrigin\",(t?j:k).xOrigin,k.xOrigin,f,z),f=qa(j,\"yOrigin\",(t?j:k).yOrigin,k.yOrigin,f,z),(r!==j.xOffset||s!==j.yOffset)&&(f=qa(j,\"xOffset\",t?r:j.xOffset,j.xOffset,f,z),f=qa(j,\"yOffset\",t?s:j.yOffset,j.yOffset,f,z)),n=wa?null:\"0px 0px\"),(n||Ba&&o&&j.zOrigin)&&(ya?(p=!0,c=Aa,n=(n||X(a,c,e,!1,\"50% 50%\"))+\"\",f=new pa(u,c,0,0,f,-1,z),f.b=u[c],f.plugin=h,Ba?(m=j.zOrigin,n=n.split(\" \"),j.zOrigin=(n.length>2&&(0===m||\"0px\"!==n[2])?parseFloat(n[2]):m)||0,f.xs0=f.e=n[0]+\" \"+(n[1]||\"50%\")+\" 0px\",f=new pa(j,\"zOrigin\",0,0,f,-1,f.n),f.b=m,f.xs0=f.e=j.zOrigin):f.xs0=f.e=n):da(n+\"\",j)),p&&(d._transformType=j.svg&&wa||!o&&3!==this._transformType?2:3),f},prefix:!0}),ua(\"boxShadow\",{defaultValue:\"0px 0px 0px 0px #999\",prefix:!0,color:!0,multi:!0,keyword:\"inset\"}),ua(\"borderRadius\",{defaultValue:\"0px\",parser:function(a,b,c,f,g,h){b=this.format(b);var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],z=a.style;for(q=parseFloat(a.offsetWidth),r=parseFloat(a.offsetHeight),i=b.split(\" \"),j=0;j<y.length;j++)this.p.indexOf(\"border\")&&(y[j]=V(y[j])),m=l=X(a,y[j],e,!1,\"0px\"),-1!==m.indexOf(\" \")&&(l=m.split(\" \"),m=l[0],l=l[1]),n=k=i[j],o=parseFloat(m),t=m.substr((o+\"\").length),u=\"=\"===n.charAt(1),u?(p=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),p*=parseFloat(n),s=n.substr((p+\"\").length-(0>p?1:0))||\"\"):(p=parseFloat(n),s=n.substr((p+\"\").length)),\"\"===s&&(s=d[c]||t),s!==t&&(v=Y(a,\"borderLeft\",o,t),w=Y(a,\"borderTop\",o,t),\"%\"===s?(m=v/q*100+\"%\",l=w/r*100+\"%\"):\"em\"===s?(x=Y(a,\"borderLeft\",1,\"em\"),m=v/x+\"em\",l=w/x+\"em\"):(m=v+\"px\",l=w+\"px\"),u&&(n=parseFloat(m)+p+s,k=parseFloat(l)+p+s)),g=ra(z,y[j],m+\" \"+l,n+\" \"+k,!1,\"0px\",g);return g},prefix:!0,formatter:ma(\"0px 0px 0px 0px\",!1,!0)}),ua(\"backgroundPosition\",{\ndefaultValue:\"0 0\",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n=\"background-position\",o=e||W(a,null),q=this.format((o?p?o.getPropertyValue(n+\"-x\")+\" \"+o.getPropertyValue(n+\"-y\"):o.getPropertyValue(n):a.currentStyle.backgroundPositionX+\" \"+a.currentStyle.backgroundPositionY)||\"0 0\"),r=this.format(b);if(-1!==q.indexOf(\"%\")!=(-1!==r.indexOf(\"%\"))&&(m=X(a,\"backgroundImage\").replace(B,\"\"),m&&\"none\"!==m)){for(h=q.split(\" \"),i=r.split(\" \"),N.setAttribute(\"src\",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf(\"%\"),k!==(-1!==i[j].indexOf(\"%\"))&&(l=0===j?a.offsetWidth-N.width:a.offsetHeight-N.height,h[j]=k?parseFloat(q)/100*l+\"px\":parseFloat(q)/l*100+\"%\");q=h.join(\" \")}return this.parseComplex(a.style,q,r,f,g)},formatter:da}),ua(\"backgroundSize\",{defaultValue:\"0 0\",formatter:da}),ua(\"perspective\",{defaultValue:\"0px\",prefix:!0}),ua(\"perspectiveOrigin\",{defaultValue:\"50% 50%\",prefix:!0}),ua(\"transformStyle\",{prefix:!0}),ua(\"backfaceVisibility\",{prefix:!0}),ua(\"userSelect\",{prefix:!0}),ua(\"margin\",{parser:na(\"marginTop,marginRight,marginBottom,marginLeft\")}),ua(\"padding\",{parser:na(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")}),ua(\"clip\",{defaultValue:\"rect(0px,0px,0px,0px)\",parser:function(a,b,c,d,f,g){var h,i,j;return 9>p?(i=a.currentStyle,j=8>p?\" \":\",\",h=\"rect(\"+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+\")\",b=this.format(b).split(\",\").join(j)):(h=this.format(X(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),ua(\"textShadow\",{defaultValue:\"0px 0px 0px #999\",color:!0,multi:!0}),ua(\"autoRound,strictUnits\",{parser:function(a,b,c,d,e){return e}}),ua(\"border\",{defaultValue:\"0px solid #000\",parser:function(a,b,c,d,f,g){return this.parseComplex(a.style,this.format(X(a,\"borderTopWidth\",e,!1,\"0px\")+\" \"+X(a,\"borderTopStyle\",e,!1,\"solid\")+\" \"+X(a,\"borderTopColor\",e,!1,\"#000\")),this.format(b),f,g)},color:!0,formatter:function(a){var b=a.split(\" \");return b[0]+\" \"+(b[1]||\"solid\")+\" \"+(a.match(la)||[\"#000\"])[0]}}),ua(\"borderWidth\",{parser:na(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}),ua(\"float,cssFloat,styleFloat\",{parser:function(a,b,c,d,e,f){var g=a.style,h=\"cssFloat\"in g?\"cssFloat\":\"styleFloat\";return new pa(g,h,0,0,e,-1,c,!1,0,g[h],b)}});var Oa=function(a){var b,c=this.t,d=c.filter||X(this.data,\"filter\")||\"\",e=this.s+this.c*a|0;100===e&&(-1===d.indexOf(\"atrix(\")&&-1===d.indexOf(\"radient(\")&&-1===d.indexOf(\"oader(\")?(c.removeAttribute(\"filter\"),b=!X(this.data,\"filter\")):(c.filter=d.replace(x,\"\"),b=!0)),b||(this.xn1&&(c.filter=d=d||\"alpha(opacity=\"+e+\")\"),-1===d.indexOf(\"pacity\")?0===e&&this.xn1||(c.filter=d+\" alpha(opacity=\"+e+\")\"):c.filter=d.replace(v,\"opacity=\"+e))};ua(\"opacity,alpha,autoAlpha\",{defaultValue:\"1\",parser:function(a,b,c,d,f,g){var h=parseFloat(X(a,\"opacity\",e,!1,\"1\")),i=a.style,j=\"autoAlpha\"===c;return\"string\"==typeof b&&\"=\"===b.charAt(1)&&(b=(\"-\"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&\"hidden\"===X(a,\"visibility\",e)&&0!==b&&(h=0),Q?f=new pa(i,\"opacity\",h,b-h,f):(f=new pa(i,\"opacity\",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b=\"alpha(opacity=\"+f.s+\")\",f.e=\"alpha(opacity=\"+(f.s+f.c)+\")\",f.data=a,f.plugin=g,f.setRatio=Oa),j&&(f=new pa(i,\"visibility\",0,0,f,-1,null,!1,0,0!==h?\"inherit\":\"hidden\",0===b?\"hidden\":\"inherit\"),f.xs0=\"inherit\",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Pa=function(a,b){b&&(a.removeProperty?((\"ms\"===b.substr(0,2)||\"webkit\"===b.substr(0,6))&&(b=\"-\"+b),a.removeProperty(b.replace(z,\"-$1\").toLowerCase())):a.removeAttribute(b))},Qa=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.setAttribute(\"class\",0===a?this.b:this.e);for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Pa(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute(\"class\")!==this.e&&this.t.setAttribute(\"class\",this.e)};ua(\"className\",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.getAttribute(\"class\")||\"\",p=a.style.cssText;if(g=f._classNamePT=new pa(a,d,0,0,g,2),g.setRatio=Qa,g.pr=-11,c=!0,g.b=o,k=$(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e=\"=\"!==b.charAt(1)?b:o.replace(new RegExp(\"\\\\s*\\\\b\"+b.substr(2)+\"\\\\b\"),\"\")+(\"+\"===b.charAt(0)?\" \"+b.substr(2):\"\"),a.setAttribute(\"class\",g.e),j=_(a,k,$(a),i,m),a.setAttribute(\"class\",o),g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)}});var Ra=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&\"isFromStart\"!==this.data.data){var b,c,d,e,f,g=this.t.style,h=i.transform.parse;if(\"all\"===this.e)g.cssText=\"\",e=!0;else for(b=this.e.split(\" \").join(\"\").split(\",\"),d=b.length;--d>-1;)c=b[d],i[c]&&(i[c].parse===h?e=!0:c=\"transformOrigin\"===c?Aa:i[c].p),Pa(g,c);e&&(Pa(g,ya),f=this.t._gsTransform,f&&(f.svg&&(this.t.removeAttribute(\"data-svg-origin\"),this.t.removeAttribute(\"transform\")),delete this.t._gsTransform))}};for(ua(\"clearProps\",{parser:function(a,b,d,e,f){return f=new pa(a,d,0,0,f,2),f.setRatio=Ra,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),j=\"bezier,throwProps,physicsProps,physics2D\".split(\",\"),sa=j.length;sa--;)va(j[sa]);j=g.prototype,j._firstPT=j._lastParsedTransform=j._transform=null,j._onInitTween=function(a,b,h){if(!a.nodeType)return!1;this._target=a,this._tween=h,this._vars=b,k=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=W(a,\"\"),f=this._overwriteProps;var j,n,p,q,r,s,t,u,v,x=a.style;if(l&&\"\"===x.zIndex&&(j=X(a,\"zIndex\",e),(\"auto\"===j||\"\"===j)&&this._addLazySet(x,\"zIndex\",0)),\"string\"==typeof b&&(q=x.cssText,j=$(a,e),x.cssText=q+\";\"+b,j=_(a,j,$(a)).difs,!Q&&w.test(b)&&(j.opacity=parseFloat(RegExp.$1)),b=j,x.cssText=q),b.className?this._firstPT=n=i.className.parse(a,b.className,\"className\",this,null,null,b):this._firstPT=n=this.parse(a,b,null),this._transformType){for(v=3===this._transformType,ya?m&&(l=!0,\"\"===x.zIndex&&(t=X(a,\"zIndex\",e),(\"auto\"===t||\"\"===t)&&this._addLazySet(x,\"zIndex\",0)),o&&this._addLazySet(x,\"WebkitBackfaceVisibility\",this._vars.WebkitBackfaceVisibility||(v?\"visible\":\"hidden\"))):x.zoom=1,p=n;p&&p._next;)p=p._next;u=new pa(a,\"transform\",0,0,null,2),this._linkCSSP(u,null,p),u.setRatio=ya?Na:Ma,u.data=this._transform||La(a,e,!0),u.tween=h,u.pr=-1,f.pop()}if(c){for(;n;){for(s=n._next,p=q;p&&p.pr>n.pr;)p=p._next;(n._prev=p?p._prev:r)?n._prev._next=n:q=n,(n._next=p)?p._prev=n:r=n,n=s}this._firstPT=q}return!0},j.parse=function(a,b,c,f){var g,h,j,l,m,n,o,p,q,r,s=a.style;for(g in b)n=b[g],h=i[g],h?c=h.parse(a,n,g,this,c,f,b):(m=X(a,g,e)+\"\",q=\"string\"==typeof n,\"color\"===g||\"fill\"===g||\"stroke\"===g||-1!==g.indexOf(\"Color\")||q&&y.test(n)?(q||(n=ja(n),n=(n.length>3?\"rgba(\":\"rgb(\")+n.join(\",\")+\")\"),c=ra(s,g,m,n,!0,\"transparent\",c,0,f)):!q||-1===n.indexOf(\" \")&&-1===n.indexOf(\",\")?(j=parseFloat(m),o=j||0===j?m.substr((j+\"\").length):\"\",(\"\"===m||\"auto\"===m)&&(\"width\"===g||\"height\"===g?(j=ca(a,g,e),o=\"px\"):\"left\"===g||\"top\"===g?(j=Z(a,g,e),o=\"px\"):(j=\"opacity\"!==g?0:1,o=\"\")),r=q&&\"=\"===n.charAt(1),r?(l=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(u,\"\")):(l=parseFloat(n),p=q?n.replace(u,\"\"):\"\"),\"\"===p&&(p=g in d?d[g]:o),n=l||0===l?(r?l+j:l)+p:b[g],o!==p&&\"\"!==p&&(l||0===l)&&j&&(j=Y(a,g,j,o),\"%\"===p?(j/=Y(a,g,100,\"%\")/100,b.strictUnits!==!0&&(m=j+\"%\")):\"em\"===p||\"rem\"===p||\"vw\"===p||\"vh\"===p?j/=Y(a,g,1,p):\"px\"!==p&&(l=Y(a,g,l,p),p=\"px\"),r&&(l||0===l)&&(n=l+j+p)),r&&(l+=j),!j&&0!==j||!l&&0!==l?void 0!==s[g]&&(n||n+\"\"!=\"NaN\"&&null!=n)?(c=new pa(s,g,l||j||0,0,c,-1,g,!1,0,m,n),c.xs0=\"none\"!==n||\"display\"!==g&&-1===g.indexOf(\"Style\")?n:m):S(\"invalid \"+g+\" tween value: \"+b[g]):(c=new pa(s,g,j,l-j,c,0,g,k!==!1&&(\"px\"===p||\"zIndex\"===g),0,m,n),c.xs0=p)):c=ra(s,g,m,n,!0,null,c,0,f)),f&&c&&!c.plugin&&(c.plugin=f);return c},j.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=Math.round(b):f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;){if(2!==e.type)if(e.r&&-1!==e.type)if(b=Math.round(e.s+e.c),e.type){if(1===e.type){for(d=e.l,c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}}else e.t[e.p]=b+e.xs0;else e.t[e.p]=e.e;else e.setRatio(a);e=e._next}},j._enableTransforms=function(a){this._transform=this._transform||La(this._target,e,!0),this._transformType=this._transform.svg&&wa||!a&&3!==this._transformType?2:3};var Sa=function(a){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};j._addLazySet=function(a,b,c){var d=this._firstPT=new pa(a,b,0,0,this._firstPT,2);d.e=c,d.setRatio=Sa,d.data=this},j._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},j._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}return b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),a.prototype._kill.call(this,f)};var Ta=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Ta(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push($(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Ta(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h,i=b.to(a,c,d),j=[i],k=[],l=[],m=[],n=b._internals.reservedProps;for(a=i._targets||i.target,Ta(a,k,m),i.render(c,!0,!0),Ta(a,l),i.render(0,!0,!0),i._enabled(!0),e=m.length;--e>-1;)if(f=_(m[e],k[e],l[e]),f.firstMPT){f=f.difs;for(g in d)n[g]&&(f[g]=d[g]);h={};for(g in f)h[g]=k[e][g];j.push(b.fromTo(m[e],c,h,f))}return j},a.activate([g]),g},!0),function(){var a=_gsScope._gsDefine.plugin({propName:\"roundProps\",version:\"1.5\",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=function(a){for(;a;)a.f||a.blob||(a.r=1),a=a._next},c=a.prototype;c._onInitAllProps=function(){for(var a,c,d,e=this._tween,f=e.vars.roundProps.join?e.vars.roundProps:e.vars.roundProps.split(\",\"),g=f.length,h={},i=e._propLookup.roundProps;--g>-1;)h[f[g]]=1;for(g=f.length;--g>-1;)for(a=f[g],c=e._firstPT;c;)d=c._next,c.pg?c.t._roundProps(h,!0):c.n===a&&(2===c.f&&c.t?b(c.t._firstPT):(this._add(c.t,a,c.s,c.c),d&&(d._prev=c._prev),c._prev?c._prev._next=d:e._firstPT===c&&(e._firstPT=d),c._next=c._prev=null,e._propLookup[a]=i)),c=d;return!1},c._add=function(a,b,c,d){this._addTween(a,b,c,c+d,b,!0),this._overwriteProps.push(b)}}(),function(){_gsScope._gsDefine.plugin({propName:\"attr\",API:2,version:\"0.5.0\",init:function(a,b,c){var d;if(\"function\"!=typeof a.setAttribute)return!1;for(d in b)this._addTween(a,\"setAttribute\",a.getAttribute(d)+\"\",b[d]+\"\",d,!1,d),this._overwriteProps.push(d);return!0}})}(),_gsScope._gsDefine.plugin({propName:\"directionalRotation\",version:\"0.2.1\",API:2,init:function(a,b,c){\"object\"!=typeof b&&(b={rotation:b}),this.finals={};var d,e,f,g,h,i,j=b.useRadians===!0?2*Math.PI:360,k=1e-6;for(d in b)\"useRadians\"!==d&&(i=(b[d]+\"\").split(\"_\"),e=i[0],f=parseFloat(\"function\"!=typeof a[d]?a[d]:a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]()),g=this.finals[d]=\"string\"==typeof e&&\"=\"===e.charAt(1)?f+parseInt(e.charAt(0)+\"1\",10)*Number(e.substr(2)):Number(e)||0,h=g-f,i.length&&(e=i.join(\"_\"),-1!==e.indexOf(\"short\")&&(h%=j,h!==h%(j/2)&&(h=0>h?h+j:h-j)),-1!==e.indexOf(\"_cw\")&&0>h?h=(h+9999999999*j)%j-(h/j|0)*j:-1!==e.indexOf(\"ccw\")&&h>0&&(h=(h-9999999999*j)%j-(h/j|0)*j)),(h>k||-k>h)&&(this._addTween(a,d,f,f+h,d),this._overwriteProps.push(d)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,_gsScope._gsDefine(\"easing.Back\",[\"easing.Ease\"],function(a){var b,c,d,e=_gsScope.GreenSockGlobals||_gsScope,f=e.com.greensock,g=2*Math.PI,h=Math.PI/2,i=f._class,j=function(b,c){var d=i(\"easing.\"+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},k=a.register||function(){},l=function(a,b,c,d,e){var f=i(\"easing.\"+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return k(f,a),f},m=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},n=function(b,c){var d=i(\"easing.\"+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},o=l(\"Back\",n(\"BackOut\",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),n(\"BackIn\",function(a){return a*a*((this._p1+1)*a-this._p1)}),n(\"BackInOut\",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),p=i(\"easing.SlowMo\",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),q=p.prototype=new a;return q.constructor=p,q.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},p.ease=new p(.7,.7),q.config=p.config=function(a,b,c){return new p(a,b,c)},b=i(\"easing.SteppedEase\",function(a){a=a||1,this._p1=1/a,this._p2=a+1},!0),q=b.prototype=new a,q.constructor=b,q.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),(this._p2*a>>0)*this._p1},q.config=b.config=function(a){return new b(a)},c=i(\"easing.RoughEase\",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||\"none\",j=[],k=0,l=0|(b.points||20),n=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r=\"number\"==typeof b.strength?.4*b.strength:.4;--n>-1;)c=o?Math.random():1/l*n,d=q?q.getRatio(c):c,\"none\"===i?e=r:\"out\"===i?(f=1-c,e=f*f*r):\"in\"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:n%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new m(1,1,null),n=l;--n>-1;)g=j[n],h=new m(g.x,g.y,h);this._prev=new m(0,0,0!==h.t?h:h.next)},!0),q=c.prototype=new a,q.constructor=c,q.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},q.config=function(a){return new c(a)},c.ease=new c,l(\"Bounce\",j(\"BounceOut\",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),j(\"BounceIn\",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),j(\"BounceInOut\",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),l(\"Circ\",j(\"CircOut\",function(a){return Math.sqrt(1-(a-=1)*a)}),j(\"CircIn\",function(a){return-(Math.sqrt(1-a*a)-1)}),j(\"CircInOut\",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),d=function(b,c,d){var e=i(\"easing.\"+b,function(a,b){this._p1=a>=1?a:1,this._p2=(b||d)/(1>a?a:1),this._p3=this._p2/g*(Math.asin(1/this._p1)||0),this._p2=g/this._p2},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},l(\"Elastic\",d(\"ElasticOut\",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*this._p2)+1},.3),d(\"ElasticIn\",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2))},.3),d(\"ElasticInOut\",function(a){return(a*=2)<1?-.5*(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*this._p2)*.5+1},.45)),l(\"Expo\",j(\"ExpoOut\",function(a){return 1-Math.pow(2,-10*a)}),j(\"ExpoIn\",function(a){return Math.pow(2,10*(a-1))-.001}),j(\"ExpoInOut\",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),l(\"Sine\",j(\"SineOut\",function(a){return Math.sin(a*h)}),j(\"SineIn\",function(a){return-Math.cos(a*h)+1}),j(\"SineInOut\",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),i(\"easing.EaseLookup\",{find:function(b){return a.map[b]}},!0),k(e.SlowMo,\"SlowMo\",\"ease,\"),k(c,\"RoughEase\",\"ease,\"),k(b,\"SteppedEase\",\"ease,\"),o},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a,b){\"use strict\";var c=a.GreenSockGlobals=a.GreenSockGlobals||a;if(!c.TweenLite){var d,e,f,g,h,i=function(a){var b,d=a.split(\".\"),e=c;for(b=0;b<d.length;b++)e[d[b]]=e=e[d[b]]||{};return e},j=i(\"com.greensock\"),k=1e-10,l=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},m=function(){},n=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return null!=c&&(c instanceof Array||\"object\"==typeof c&&!!c.push&&a.call(c)===b)}}(),o={},p=function(d,e,f,g){this.sc=o[d]?o[d].sc:[],o[d]=this,this.gsClass=null,this.func=f;var h=[];this.check=function(j){for(var k,l,m,n,q,r=e.length,s=r;--r>-1;)(k=o[e[r]]||new p(e[r],[])).gsClass?(h[r]=k.gsClass,s--):j&&k.sc.push(this);if(0===s&&f)for(l=(\"com.greensock.\"+d).split(\".\"),m=l.pop(),n=i(l.join(\".\"))[m]=this.gsClass=f.apply(f,h),g&&(c[m]=n,q=\"undefined\"!=typeof module&&module.exports,!q&&\"function\"==typeof define&&define.amd?define((a.GreenSockAMDPath?a.GreenSockAMDPath+\"/\":\"\")+d.split(\".\").pop(),[],function(){return n}):d===b&&q&&(module.exports=n)),r=0;r<this.sc.length;r++)this.sc[r].check()},this.check(!0)},q=a._gsDefine=function(a,b,c,d){return new p(a,b,c,d)},r=j._class=function(a,b,c){return b=b||function(){},q(a,[],function(){return b},c),b};q.globals=c;var s=[0,0,1,1],t=[],u=r(\"easing.Ease\",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?s.concat(b):s},!0),v=u.map={},w=u.register=function(a,b,c,d){for(var e,f,g,h,i=b.split(\",\"),k=i.length,l=(c||\"easeIn,easeOut,easeInOut\").split(\",\");--k>-1;)for(f=i[k],e=d?r(\"easing.\"+f,null,!0):j.easing[f]||{},g=l.length;--g>-1;)h=l[g],v[f+\".\"+h]=v[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(f=u.prototype,f._calcEnd=!1,f.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},d=[\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"],e=d.length;--e>-1;)f=d[e]+\",Power\"+e,w(new u(null,null,1,e),f,\"easeOut\",!0),w(new u(null,null,2,e),f,\"easeIn\"+(0===e?\",easeNone\":\"\")),w(new u(null,null,3,e),f,\"easeInOut\");v.linear=j.easing.Linear.easeIn,v.swing=j.easing.Quad.easeInOut;var x=r(\"events.EventDispatcher\",function(a){this._listeners={},this._eventTarget=a||this});f=x.prototype,f.addEventListener=function(a,b,c,d,e){e=e||0;var f,i,j=this._listeners[a],k=0;for(null==j&&(this._listeners[a]=j=[]),i=j.length;--i>-1;)f=j[i],f.c===b&&f.s===c?j.splice(i,1):0===k&&f.pr<e&&(k=i+1);j.splice(k,0,{c:b,s:c,up:d,pr:e}),this!==g||h||g.wake()},f.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return void d.splice(c,1)},f.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,c=this._eventTarget;--b>-1;)d=e[b],d&&(d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c))};var y=a.requestAnimationFrame,z=a.cancelAnimationFrame,A=Date.now||function(){return(new Date).getTime()},B=A();for(d=[\"ms\",\"moz\",\"webkit\",\"o\"],e=d.length;--e>-1&&!y;)y=a[d[e]+\"RequestAnimationFrame\"],z=a[d[e]+\"CancelAnimationFrame\"]||a[d[e]+\"CancelRequestAnimationFrame\"];r(\"Ticker\",function(a,b){var c,d,e,f,i,j=this,l=A(),n=b!==!1&&y?\"auto\":!1,o=500,p=33,q=\"tick\",r=function(a){var b,g,h=A()-B;h>o&&(l+=h-p),B+=h,j.time=(B-l)/1e3,b=j.time-i,(!c||b>0||a===!0)&&(j.frame++,i+=b+(b>=f?.004:f-b),g=!0),a!==!0&&(e=d(r)),g&&j.dispatchEvent(q)};x.call(j),j.time=j.frame=0,j.tick=function(){r(!0)},j.lagSmoothing=function(a,b){o=a||1/k,p=Math.min(b,o,0)},j.sleep=function(){null!=e&&(n&&z?z(e):clearTimeout(e),d=m,e=null,j===g&&(h=!1))},j.wake=function(a){null!==e?j.sleep():a?l+=-B+(B=A()):j.frame>10&&(B=A()-o+5),d=0===c?m:n&&y?y:function(a){return setTimeout(a,1e3*(i-j.time)+1|0)},j===g&&(h=!0),r(2)},j.fps=function(a){return arguments.length?(c=a,f=1/(c||60),i=this.time+f,void j.wake()):c},j.useRAF=function(a){return arguments.length?(j.sleep(),n=a,void j.fps(c)):n},j.fps(a),setTimeout(function(){\"auto\"===n&&j.frame<5&&\"hidden\"!==document.visibilityState&&j.useRAF(!1)},1500)}),f=j.Ticker.prototype=new j.events.EventDispatcher,f.constructor=j.Ticker;var C=r(\"core.Animation\",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,V){h||g.wake();var c=this.vars.useFrames?U:V;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});g=C.ticker=new j.Ticker,f=C.prototype,f._dirty=f._gc=f._initted=f._paused=!1,f._totalTime=f._time=0,f._rawPrevTime=-1,f._next=f._last=f._onUpdate=f._timeline=f.timeline=null,f._paused=!1;var D=function(){h&&A()-B>2e3&&g.wake(),setTimeout(D,2e3)};D(),f.play=function(a,b){return null!=a&&this.seek(a,b),this.reversed(!1).paused(!1)},f.pause=function(a,b){return null!=a&&this.seek(a,b),this.paused(!0)},f.resume=function(a,b){return null!=a&&this.seek(a,b),this.paused(!1)},f.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},f.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},f.reverse=function(a,b){return null!=a&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},f.render=function(a,b,c){},f.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},f.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime())>=c&&a<c+this.totalDuration()/this._timeScale},f._enabled=function(a,b){return h||g.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},f._kill=function(a,b){return this._enabled(!1,!1)},f.kill=function(a,b){return this._kill(a,b),this},f._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},f._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)\"{self}\"===a[b]&&(c[b]=this);return c},f._callback=function(a){var b=this.vars;b[a].apply(b[a+\"Scope\"]||b.callbackScope||this,b[a+\"Params\"]||t)},f.eventCallback=function(a,b,c,d){if(\"on\"===(a||\"\").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+\"Params\"]=n(c)&&-1!==c.join(\"\").indexOf(\"{self}\")?this._swapSelfInParams(c):c,e[a+\"Scope\"]=d),\"onUpdate\"===a&&(this._onUpdate=b)}return this},f.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},f.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},f.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},f.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},f.totalTime=function(a,b,c){if(h||g.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&(I.length&&X(),this.render(a,b,!1),I.length&&X())}return this},f.progress=f.totalProgress=function(a,b){var c=this.duration();return arguments.length?this.totalTime(c*a,b):c?this._time/c:this.ratio},f.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},f.endTime=function(a){return this._startTime+(0!=a?this.totalDuration():this.duration())/this._timeScale},f.timeScale=function(a){if(!arguments.length)return this._timeScale;if(a=a||k,this._timeline&&this._timeline.smoothChildTiming){var b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime();this._startTime=c-(c-this._startTime)*this._timeScale/a}return this._timeScale=a,this._uncache(!1)},f.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},f.paused=function(a){if(!arguments.length)return this._paused;var b,c,d=this._timeline;return a!=this._paused&&d&&(h||a||g.wake(),b=d.rawTime(),c=b-this._pauseTime,!a&&d.smoothChildTiming&&(this._startTime+=c,this._uncache(!1)),this._pauseTime=a?b:null,this._paused=a,this._active=this.isActive(),!a&&0!==c&&this._initted&&this.duration()&&(b=d.smoothChildTiming?this._totalTime:(b-this._startTime)/this._timeScale,this.render(b,b===this._totalTime,!0))),this._gc&&!a&&this._enabled(!0,!1),this};var E=r(\"core.SimpleTimeline\",function(a){C.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});f=E.prototype=new C,f.constructor=E,f.kill()._gc=!1,f._first=f._last=f._recent=null,f._sortChildren=!1,f.add=f.insert=function(a,b,c,d){var e,f;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=a._startTime+(this.rawTime()-a._startTime)/a._timeScale),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),e=this._last,this._sortChildren)for(f=a._startTime;e&&e._startTime>f;)e=e._prev;return e?(a._next=e._next,e._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=e,this._recent=a,this._timeline&&this._uncache(!0),this},f._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),a._next=a._prev=a.timeline=null,a===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},f.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},f.rawTime=function(){return h||g.wake(),this._totalTime};var F=r(\"TweenLite\",function(b,c,d){if(C.call(this,c,d),this.render=F.prototype.render,null==b)throw\"Cannot tween a null target.\";this.target=b=\"string\"!=typeof b?b:F.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?T[F.defaultOverwrite]:\"number\"==typeof i?i>>0:T[i],(h||b instanceof Array||b.push&&n(b))&&\"number\"!=typeof b[0])for(this._targets=g=l(b),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?\"string\"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(l(f))):(this._siblings[e]=Y(f,this,!1),1===i&&this._siblings[e].length>1&&$(f,this,null,1,this._siblings[e])):(f=g[e--]=F.selector(f),\"string\"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=Y(b,this,!1),1===i&&this._siblings.length>1&&$(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-k,this.render(-this._delay))},!0),G=function(b){return b&&b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},H=function(a,b){var c,d={};for(c in a)S[c]||c in b&&\"transform\"!==c&&\"x\"!==c&&\"y\"!==c&&\"width\"!==c&&\"height\"!==c&&\"className\"!==c&&\"border\"!==c||!(!P[c]||P[c]&&P[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};f=F.prototype=new C,f.constructor=F,f.kill()._gc=!1,f.ratio=0,f._firstPT=f._targets=f._overwrittenProps=f._startAt=null,f._notifyPluginsOfEnabled=f._lazy=!1,F.version=\"1.18.2\",F.defaultEase=f._ease=new u(null,null,1,1),F.defaultOverwrite=\"auto\",F.ticker=g,F.autoSleep=120,F.lagSmoothing=function(a,b){g.lagSmoothing(a,b)},F.selector=a.$||a.jQuery||function(b){var c=a.$||a.jQuery;return c?(F.selector=c,c(b)):\"undefined\"==typeof document?b:document.querySelectorAll?document.querySelectorAll(b):document.getElementById(\"#\"===b.charAt(0)?b.substr(1):b)};var I=[],J={},K=/(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi,L=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.blob?a?this.join(\"\"):this.start:c.c*a+c.s,c.r?b=Math.round(b):d>b&&b>-d&&(b=0),c.f?c.fp?c.t[c.p](c.fp,b):c.t[c.p](b):c.t[c.p]=b,c=c._next},M=function(a,b,c,d){var e,f,g,h,i,j,k,l=[a,b],m=0,n=\"\",o=0;for(l.start=a,c&&(c(l),a=l[0],b=l[1]),l.length=0,e=a.match(K)||[],f=b.match(K)||[],d&&(d._next=null,d.blob=1,l._firstPT=d),i=f.length,h=0;i>h;h++)k=f[h],j=b.substr(m,b.indexOf(k,m)-m),n+=j||!h?j:\",\",m+=j.length,o?o=(o+1)%5:\"rgba(\"===j.substr(-5)&&(o=1),k===e[h]||e.length<=h?n+=k:(n&&(l.push(n),n=\"\"),g=parseFloat(e[h]),l.push(g),l._firstPT={_next:l._firstPT,t:l,p:l.length-1,s:g,c:(\"=\"===k.charAt(1)?parseInt(k.charAt(0)+\"1\",10)*parseFloat(k.substr(2)):parseFloat(k)-g)||0,f:0,r:o&&4>o}),m+=k.length;return n+=b.substr(m),n&&l.push(n),l.setRatio=L,l},N=function(a,b,c,d,e,f,g,h){var i,j,k=\"get\"===c?a[b]:c,l=typeof a[b],m=\"string\"==typeof d&&\"=\"===d.charAt(1),n={t:a,p:b,s:k,f:\"function\"===l,pg:0,n:e||b,r:f,pr:0,c:m?parseInt(d.charAt(0)+\"1\",10)*parseFloat(d.substr(2)):parseFloat(d)-k||0};return\"number\"!==l&&(\"function\"===l&&\"get\"===c&&(j=b.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+b.substr(3)]?b:\"get\"+b.substr(3),n.s=k=g?a[j](g):a[j]()),\"string\"==typeof k&&(g||isNaN(k))?(n.fp=g,i=M(k,d,h||F.defaultStringFilter,n),n={t:i,p:\"setRatio\",s:0,c:1,f:2,pg:0,n:e||b,pr:0}):m||(n.s=parseFloat(k),n.c=parseFloat(d)-n.s||0)),n.c?((n._next=this._firstPT)&&(n._next._prev=n),this._firstPT=n,n):void 0},O=F._internals={isArray:n,isSelector:G,lazyTweens:I,blobDif:M},P=F._plugins={},Q=O.tweenLookup={},R=0,S=O.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1},T={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,\"true\":1,\"false\":0},U=C._rootFramesTimeline=new E,V=C._rootTimeline=new E,W=30,X=O.lazyRender=function(){\nvar a,b=I.length;for(J={};--b>-1;)a=I[b],a&&a._lazy!==!1&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);I.length=0};V._startTime=g.time,U._startTime=g.frame,V._active=U._active=!0,setTimeout(X,1),C._updateRoot=F.render=function(){var a,b,c;if(I.length&&X(),V.render((g.time-V._startTime)*V._timeScale,!1,!1),U.render((g.frame-U._startTime)*U._timeScale,!1,!1),I.length&&X(),g.frame>=W){W=g.frame+(parseInt(F.autoSleep,10)||120);for(c in Q){for(b=Q[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete Q[c]}if(c=V._first,(!c||c._paused)&&F.autoSleep&&!U._first&&1===g._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||g.sleep()}}},g.addEventListener(\"tick\",C._updateRoot);var Y=function(a,b,c){var d,e,f=a._gsTweenID;if(Q[f||(a._gsTweenID=f=\"t\"+R++)]||(Q[f]={target:a,tweens:[]}),b&&(d=Q[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return Q[f].tweens},Z=function(a,b,c,d){var e,f,g=a.vars.onOverwrite;return g&&(e=g(a,b,c,d)),g=F.onOverwrite,g&&(f=g(a,b,c,d)),e!==!1&&f!==!1},$=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._kill(null,a,b)&&(g=!0);else if(5===d)break;return g}var j,l=b._startTime+k,m=[],n=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(j=j||_(b,0,o),0===_(h,j,o)&&(m[n++]=h)):h._startTime<=l&&h._startTime+h.totalDuration()/h._timeScale>l&&((o||!h._initted)&&l-h._startTime<=2e-10||(m[n++]=h)));for(f=n;--f>-1;)if(h=m[f],2===d&&h._kill(c,a,b)&&(g=!0),2!==d||!h._firstPT&&h._initted){if(2!==d&&!Z(h,b))continue;h._enabled(!1,!1)&&(g=!0)}return g},_=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*k>f-b?k:(f+=a.totalDuration()/a._timeScale/e)>b+k?0:f-b-k};f._init=function(){var a,b,c,d,e,f=this.vars,g=this._overwrittenProps,h=this._duration,i=!!f.immediateRender,j=f.ease;if(f.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),e={};for(d in f.startAt)e[d]=f.startAt[d];if(e.overwrite=!1,e.immediateRender=!0,e.lazy=i&&f.lazy!==!1,e.startAt=e.delay=null,this._startAt=F.to(this.target,0,e),i)if(this._time>0)this._startAt=null;else if(0!==h)return}else if(f.runBackwards&&0!==h)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(i=!1),c={};for(d in f)S[d]&&\"autoCSS\"!==d||(c[d]=f[d]);if(c.overwrite=0,c.data=\"isFromStart\",c.lazy=i&&f.lazy!==!1,c.immediateRender=i,this._startAt=F.to(this.target,0,c),i){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=j=j?j instanceof u?j:\"function\"==typeof j?new u(j,f.easeParams):v[j]||F.defaultEase:F.defaultEase,f.easeParams instanceof Array&&j.config&&(this._ease=j.config.apply(j,f.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length;--a>-1;)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],g?g[a]:null)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,g);if(b&&F._onPluginEvent(\"_onInitAllProps\",this),g&&(this._firstPT||\"function\"!=typeof this.target&&this._enabled(!1,!1)),f.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=f.onUpdate,this._initted=!0},f._initProps=function(b,c,d,e){var f,g,h,i,j,k;if(null==b)return!1;J[b._gsTweenID]&&X(),this.vars.css||b.style&&b!==a&&b.nodeType&&P.css&&this.vars.autoCSS!==!1&&H(this.vars,b);for(f in this.vars)if(k=this.vars[f],S[f])k&&(k instanceof Array||k.push&&n(k))&&-1!==k.join(\"\").indexOf(\"{self}\")&&(this.vars[f]=k=this._swapSelfInParams(k,this));else if(P[f]&&(i=new P[f])._onInitTween(b,this.vars[f],this)){for(this._firstPT=j={_next:this._firstPT,t:i,p:\"setRatio\",s:0,c:1,f:1,n:f,pg:1,pr:i._priority},g=i._overwriteProps.length;--g>-1;)c[i._overwriteProps[g]]=this._firstPT;(i._priority||i._onInitAllProps)&&(h=!0),(i._onDisable||i._onEnable)&&(this._notifyPluginsOfEnabled=!0),j._next&&(j._next._prev=j)}else c[f]=N.call(this,b,f,\"get\",k,f,0,null,this.vars.stringFilter);return e&&this._kill(e,b)?this._initProps(b,c,d,e):this._overwrite>1&&this._firstPT&&d.length>1&&$(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(J[b._gsTweenID]=!0),h)},f.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration,j=this._rawPrevTime;if(a>=i-1e-7)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===i&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>j||0>=a&&a>=-1e-7||j===k&&\"isPause\"!==this.data)&&j!==a&&(c=!0,j>k&&(e=\"onReverseComplete\")),this._rawPrevTime=g=!b||a||j===a?a:k);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&j>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===i&&(this._initted||!this.vars.lazy||c)&&(j>=0&&(j!==k||\"isPause\"!==this.data)&&(c=!0),this._rawPrevTime=g=!b||a||j===a?a:k)),this._initted||(c=!0);else if(this._totalTime=this._time=a,this._easeType){var l=a/i,m=this._easeType,n=this._easePower;(1===m||3===m&&l>=.5)&&(l=1-l),3===m&&(l*=2),1===n?l*=l:2===n?l*=l*l:3===n?l*=l*l*l:4===n&&(l*=l*l*l*l),1===m?this.ratio=1-l:2===m?this.ratio=l:.5>a/i?this.ratio=l/2:this.ratio=1-l/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=h,this._rawPrevTime=j,I.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&a!==-1e-4&&this._startAt.render(a,b,c),b||(this._time!==h||d)&&this._callback(\"onUpdate\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&a!==-1e-4&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===i&&this._rawPrevTime===k&&g!==k&&(this._rawPrevTime=0))}},f._kill=function(a,b,c){if(\"all\"===a&&(a=null),null==a&&(null==b||b===this.target))return this._lazy=!1,this._enabled(!1,!1);b=\"string\"!=typeof b?b||this._targets||this.target:F.selector(b)||b;var d,e,f,g,h,i,j,k,l,m=c&&this._time&&c._startTime===this._startTime&&this._timeline===c._timeline;if((n(b)||G(b))&&\"number\"!=typeof b[0])for(d=b.length;--d>-1;)this._kill(a,b[d],c)&&(i=!0);else{if(this._targets){for(d=this._targets.length;--d>-1;)if(b===this._targets[d]){h=this._propLookup[d]||{},this._overwrittenProps=this._overwrittenProps||[],e=this._overwrittenProps[d]=a?this._overwrittenProps[d]||{}:\"all\";break}}else{if(b!==this.target)return!1;h=this._propLookup,e=this._overwrittenProps=a?this._overwrittenProps||{}:\"all\"}if(h){if(j=a||h,k=a!==e&&\"all\"!==e&&a!==h&&(\"object\"!=typeof a||!a._tempKill),c&&(F.onOverwrite||this.vars.onOverwrite)){for(f in j)h[f]&&(l||(l=[]),l.push(f));if((l||!a)&&!Z(this,c,b,l))return!1}for(f in j)(g=h[f])&&(m&&(g.f?g.t[g.p](g.s):g.t[g.p]=g.s,i=!0),g.pg&&g.t._kill(j)&&(i=!0),g.pg&&0!==g.t._overwriteProps.length||(g._prev?g._prev._next=g._next:g===this._firstPT&&(this._firstPT=g._next),g._next&&(g._next._prev=g._prev),g._next=g._prev=null),delete h[f]),k&&(e[f]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return i},f.invalidate=function(){return this._notifyPluginsOfEnabled&&F._onPluginEvent(\"_onDisable\",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],C.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-k,this.render(-this._delay)),this},f._enabled=function(a,b){if(h||g.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=Y(d[c],this,!0);else this._siblings=Y(this.target,this,!0)}return C.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?F._onPluginEvent(a?\"_onEnable\":\"_onDisable\",this):!1},F.to=function(a,b,c){return new F(a,b,c)},F.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new F(a,b,c)},F.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new F(a,b,d)},F.delayedCall=function(a,b,c,d,e){return new F(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,lazy:!1,useFrames:e,overwrite:0})},F.set=function(a,b){return new F(a,0,b)},F.getTweensOf=function(a,b){if(null==a)return[];a=\"string\"!=typeof a?a:F.selector(a)||a;var c,d,e,f;if((n(a)||G(a))&&\"number\"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(F.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else for(d=Y(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d},F.killTweensOf=F.killDelayedCallsTo=function(a,b,c){\"object\"==typeof b&&(c=b,b=!1);for(var d=F.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var aa=r(\"plugins.TweenPlugin\",function(a,b){this._overwriteProps=(a||\"\").split(\",\"),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=aa.prototype},!0);if(f=aa.prototype,aa.version=\"1.18.0\",aa.API=2,f._firstPT=null,f._addTween=N,f.setRatio=L,f._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},f._roundProps=function(a,b){for(var c=this._firstPT;c;)(a[this._propName]||null!=c.n&&a[c.n.split(this._propName+\"_\").join(\"\")])&&(c.r=b),c=c._next},F._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if(\"_onInitAllProps\"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&\"function\"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},aa.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===aa.API&&(P[(new a[b])._propName]=a[b]);return!0},q.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw\"illegal plugin definition.\";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:\"_onInitTween\",set:\"setRatio\",kill:\"_kill\",round:\"_roundProps\",initAll:\"_onInitAllProps\"},g=r(\"plugins.\"+c.charAt(0).toUpperCase()+c.substr(1)+\"Plugin\",function(){aa.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new aa(c);h.constructor=g,g.API=a.API;for(b in f)\"function\"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,aa.activate([g]),g},d=a._gsQueue){for(e=0;e<d.length;e++)d[e]();for(f in o)o[f].func||a.console.log(\"GSAP encountered missing dependency: com.greensock.\"+f)}h=!1}}(\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window,\"TweenMax\");","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update () {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function() {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t//console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t//console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseDownRotate( event );\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseDownDolly( event );\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseDownPan( event );\n\n\t\t\tstate = STATE.PAN;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseMoveRotate( event );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseMoveDolly( event );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseMovePan( event );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n","/**\n * @author dmarcos / https://github.com/dmarcos\n * @author mrdoob / http://mrdoob.com\n */\n\nTHREE.VRControls = function ( object, onError ) {\n\n\tvar scope = this;\n\n\tvar vrDisplay, vrDisplays;\n\n\tvar standingMatrix = new THREE.Matrix4();\n\n\tvar frameData = null;\n\tif ( 'VRFrameData' in window ) {\n\t\tframeData = new VRFrameData();\n\t}\n\n\tfunction gotVRDisplays( displays ) {\n\n\t\tvrDisplays = displays;\n\n\t\tif ( displays.length > 0 ) {\n\n\t\t\tvrDisplay = displays[ 0 ];\n\n\t\t} else {\n\n\t\t\tif ( onError ) onError( 'VR input not available.' );\n\n\t\t}\n\n\t}\n\n\tif ( navigator.getVRDisplays ) {\n\n\t\tnavigator.getVRDisplays().then( gotVRDisplays );\n\n\t}\n\n\t// the Rift SDK returns the position in meters\n\t// this scale factor allows the user to define how meters\n\t// are converted to scene units.\n\n\tthis.scale = 1;\n\n\t// If true will use \"standing space\" coordinate system where y=0 is the\n\t// floor and x=0, z=0 is the center of the room.\n\tthis.standing = false;\n\n\t// Distance from the users eyes to the floor in meters. Used when\n\t// standing=true but the VRDisplay doesn't provide stageParameters.\n\tthis.userHeight = 1.6;\n\n\tthis.getVRDisplay = function () {\n\n\t\treturn vrDisplay;\n\n\t};\n\n\tthis.getVRDisplays = function () {\n\n\t\treturn vrDisplays;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvar pose;\n\n\t\t\tif ( vrDisplay.getFrameData ) {\n\n\t\t\t\tvrDisplay.getFrameData( frameData );\n\t\t\t\tpose = frameData.pose;\n\n\t\t\t} else if ( vrDisplay.getPose ) {\n\n\t\t\t\tpose = vrDisplay.getPose();\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tobject.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tobject.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( this.standing ) {\n\n\t\t\t\tif ( vrDisplay.stageParameters ) {\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tstandingMatrix.fromArray( vrDisplay.stageParameters.sittingToStandingTransform );\n\t\t\t\t\tobject.applyMatrix( standingMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.position.setY( object.position.y + this.userHeight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.position.multiplyScalar( scope.scale );\n\n\t\t}\n\n\t};\n\n\tthis.resetPose = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvrDisplay.resetPose();\n\n\t\t}\n\n\t};\n\n\tthis.resetSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .resetSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.zeroSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .zeroSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tvrDisplay = null;\n\n\t};\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com\n * @author stewdio / http://stewd.io\n */\n\nTHREE.ViveController = function ( id ) {\n\n\tTHREE.Object3D.call( this );\n\n\tvar scope = this;\n\tvar gamepad;\n\n\tvar axes = [ 0, 0 ];\n\tvar thumbpadIsPressed = false;\n\tvar triggerIsPressed = false;\n\tvar gripsArePressed = false;\n\tvar menuIsPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\t// Iterate across gamepads as Vive Controllers may not be\n\t\t// in position 0 and 1.\n\n\t\tvar gamepads = navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0; i < 4; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && gamepad.id === 'OpenVR Gamepad' ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.matrixAutoUpdate = false;\n\tthis.standingMatrix = new THREE.Matrix4();\n\n\tthis.getGamepad = function () {\n\n\t\treturn gamepad;\n\n\t};\n\n\tthis.getButtonState = function ( button ) {\n\n\t\tif ( button === 'thumbpad' ) return thumbpadIsPressed;\n\t\tif ( button === 'trigger' ) return triggerIsPressed;\n\t\tif ( button === 'grips' ) return gripsArePressed;\n\t\tif ( button === 'menu' ) return menuIsPressed;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tgamepad = findGamepad( id );\n\n\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\tif ( gamepad.pose === null ) return; // No user action yet\n\n\t\t\t//  Position and orientation.\n\n\t\t\tvar pose = gamepad.pose;\n\n\t\t\tif ( pose.position !== null ) scope.position.fromArray( pose.position );\n\t\t\tif ( pose.orientation !== null ) scope.quaternion.fromArray( pose.orientation );\n\t\t\tscope.matrix.compose( scope.position, scope.quaternion, scope.scale );\n\t\t\tscope.matrix.multiplyMatrices( scope.standingMatrix, scope.matrix );\n\t\t\tscope.matrixWorldNeedsUpdate = true;\n\t\t\tscope.visible = true;\n\n\t\t\t//  Thumbpad and Buttons.\n\n\t\t\tif ( axes[ 0 ] !== gamepad.axes[ 0 ] || axes[ 1 ] !== gamepad.axes[ 1 ] ) {\n\n\t\t\t\taxes[ 0 ] = gamepad.axes[ 0 ]; //  X axis: -1 = Left, +1 = Right.\n\t\t\t\taxes[ 1 ] = gamepad.axes[ 1 ]; //  Y axis: -1 = Bottom, +1 = Top.\n\t\t\t\tscope.dispatchEvent( { type: 'axischanged', axes: axes } );\n\n\t\t\t}\n\n\t\t\tif ( thumbpadIsPressed !== gamepad.buttons[ 0 ].pressed ) {\n\n\t\t\t\tthumbpadIsPressed = gamepad.buttons[ 0 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: thumbpadIsPressed ? 'thumbpaddown' : 'thumbpadup' } );\n\n\t\t\t}\n\n\t\t\tif ( triggerIsPressed !== gamepad.buttons[ 1 ].pressed ) {\n\n\t\t\t\ttriggerIsPressed = gamepad.buttons[ 1 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: triggerIsPressed ? 'triggerdown' : 'triggerup' } );\n\n\t\t\t}\n\n\t\t\tif ( gripsArePressed !== gamepad.buttons[ 2 ].pressed ) {\n\n\t\t\t\tgripsArePressed = gamepad.buttons[ 2 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: gripsArePressed ? 'gripsdown' : 'gripsup' } );\n\n\t\t\t}\n\n\t\t\tif ( menuIsPressed !== gamepad.buttons[ 3 ].pressed ) {\n\n\t\t\t\tmenuIsPressed = gamepad.buttons[ 3 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: menuIsPressed ? 'menudown' : 'menuup' } );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tscope.visible = false;\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.ViveController.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ViveController.prototype.constructor = THREE.ViveController;\n","var BG = function () {\r\n\r\n    var groupHolder;\r\n    var material;\r\n    var planeMaterial;\r\n    var spd = 0;\r\n\r\n    var shapes = [];\r\n\r\n    var cubeMesh, cubeShader;\r\n\r\n    function init() {\r\n\r\n        //console.log(\"BG\")\r\n\r\n        //init event listeners\r\n        events.on(\"update\", update);\r\n        events.on(\"onBeat\", onBeat);\r\n\r\n\r\n        groupHolder = new THREE.Object3D();\r\n        VizHandler.getScene().add(groupHolder);\r\n\r\n        var cubeMapId = 23//4//28//23//20//16//7;//9\r\n        //4,,23,16,9,,28,20\r\n        cubeMap = Assets.getCubeMap(cubeMapId)\r\n\r\n        cubeShader = THREE.ShaderLib['cube'];\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n\r\n        var skyBoxMaterial = new THREE.ShaderMaterial({\r\n            fragmentShader: cubeShader.fragmentShader,\r\n            vertexShader: cubeShader.vertexShader,\r\n            uniforms: cubeShader.uniforms,\r\n            depthWrite: true,\r\n            side: THREE.BackSide\r\n        });\r\n\r\n        var skyBox = new THREE.Mesh(\r\n                new THREE.CubeGeometry(1500, 1500, 1500),\r\n                skyBoxMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        //groupHolder.add(skyBox);\r\n        /*\r\n        cubeMaterial = new THREE.MeshStandardMaterial({\r\n            //shading: THREE.FlatShading,\r\n            envMap: reflectionCube,\r\n            roughness: 0.5,\r\n            //side: THREE.DoubleSide,\r\n            //depthWrite:false,\r\n            //depthTest:false,\r\n            //blendEquation:THREE.MinEquation\r\n        })\r\n\r\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(10, 10), cubeMaterial);\r\n        cubeMesh.rotation.x = -Math.PI / 2\r\n        cubeMesh.position.y = -.25;\r\n        cubeMesh.castShadow = true;\r\n        cubeMesh.receiveShadow = false;\r\n        groupHolder.add(cubeMesh);\r\n\r\n        var test = new THREE.Mesh(\r\n                new THREE.CubeGeometry(.2, .2, .2),\r\n                cubeMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        test.castShadow = true;\r\n        test.receiveShadow = true;\r\n        //groupHolder.add(test);\r\n        */\r\n\r\n        /*\r\n        planeMaterial = new THREE.MeshPhongMaterial({\r\n         envMap: Assets.textureCube(),\r\n         reflectivity: 1,\r\n         //opacity:.3,//.75,\r\n         color: 0xffffff,\r\n         //transparent:true,\r\n         shading: THREE.FlatShading,\r\n         //blending: THREE.AdditiveBlending,\r\n         side: THREE.DoubleSide//BackSide\r\n         });\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         var vert = groundGeometry.vertices\r\n         for (var i = 0; i < vert.length; i++) {\r\n         vert[i].z += Math.random() * 1000\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground.position.x = -2000;\r\n         ground.position.y = -1500;\r\n         ground.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground );\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         for (var i = 0; i < vert.length; i++) {\r\n         groundGeometry.vertices[i].x = -vert[i].x\r\n         groundGeometry.vertices[i].y = vert[i].y\r\n         groundGeometry.vertices[i].z = vert[i].z\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground2 = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground2.position.x = 2000;\r\n         ground2.position.y = -1500;\r\n         ground2.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground2 );\r\n         */\r\n         \r\n\r\n\r\n    }\r\n\r\n    function update() {\r\n\r\n        //cubeMesh.rotation.x += spd * .001\r\n        //cubeMesh.scale.x = cubeMesh.scale.y = cubeMesh.scale.z = 16 - ControlsHandler.fxParams.bgProgress * 8\r\n        //groupHolder.rotation.z+=.001\r\n    }\r\n\r\n    function onBeat() {\r\n        /*if (Math.random() < .05)\r\n         spd = (Math.random() - .5)\r\n         \r\n         if (ControlsHandler.fxParams.wireframe) {\r\n         cubeMesh.material.wireframe = true;\r\n         planeMaterial.wireframe = true;\r\n         } else {\r\n         cubeMesh.material.wireframe = false;\r\n         planeMaterial.wireframe = false;\r\n         }\r\n         \r\n         \r\n         var basic = [ControlsHandler.fxParams.colorProgress * .75, ControlsHandler.fxParams.colorProgress * .75, (1 - ControlsHandler.fxParams.colorProgress) * .5]\r\n         cubeMesh.material.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         planeMaterial.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         if (ControlsHandler.fxParams.black) {\r\n         cubeMesh.material.color.setRGB(.2, .2, .2);\r\n         planeMaterial.color.setRGB(.2, .2, .2);\r\n         }*/\r\n    }\r\n\r\n    function setEnvMap(cubeMap) {\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        update: update,\r\n        onBeat: onBeat,\r\n        setEnvMap: setEnvMap\r\n    };\r\n\r\n}();","var Mecha = function () {\n    var groupHolder;\n    var multiMaterial\n    var scene\n    var dae;\n    var timeout\n    var flotilla = []\n    var material\n    var bonesCount = 10;\n    var bonesPositions = []\n    var bonesPositionsTween = []\n    var center = new THREE.Vector3()\n    var centerTween = new THREE.Vector3()\n    var mouseControl = false;\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n        groupHolder = new THREE.Object3D();\n        VizHandler.getScene().add(groupHolder);\n\n        reload()\n\n        var groundBump = new THREE.TextureLoader().load(\"assets/img/ground_bump.jpg\");\n        groundBump.wrapS = THREE.RepeatWrapping;\n        groundBump.wrapT = THREE.RepeatWrapping;\n        groundBump.repeat.set(100, 100);\n\n        cubeMaterial = new THREE.MeshPhongMaterial({\n            color: 0xc9c9c9,\n            specular: 0x000000,\n            shininess: 70,\n            transparent: true,\n            bumpMap: groundBump,\n            bumpScale: 1\n        })\n\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), cubeMaterial);\n        cubeMesh.rotation.x = -Math.PI / 2\n        cubeMesh.position.y = -.25;\n        //cubeMesh.castShadow = true;\n        cubeMesh.receiveShadow = true;\n        groupHolder.add(cubeMesh);\n\n        document.addEventListener(\"mousemove\", onDocumentMouseDown);\n        document.addEventListener(\"touchmove\", onDocumentTouchStart, false);\n    }\n    function onDocumentTouchStart(event) {\n        if (event.touches.length === 1) {\n            var mouse = new THREE.Vector2();\n            mouse.x = (event.touches[ 0 ].pageX / window.innerWidth) * 2 - 1;\n            mouse.y = -(event.touches[ 0 ].pageY / window.innerHeight) * 2 + 1;\n            boom(mouse)\n        }\n    }\n    function onDocumentMouseDown(event) {\n        var mouse = new THREE.Vector2();\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        boom(mouse)\n\n    }\n    function boom(mouse) {\n        var raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(mouse, VizHandler.getCamera());\n        var intersects = raycaster.intersectObject(cubeMesh, true);\n        //console.log(intersects, mouse)\n        if (intersects[ 0 ]) {\n            mouseControl = true\n            //console.log(intersects[ 0 ])\n            var p = intersects[ 0 ].point.multiplyScalar(1 / .05)\n            //center.copy()\n            TweenMax.to(center, center.distanceTo(p) * .1, {x: p.x * .6, z: p.z * .6, ease: Linear.easeNone, onComplete: function () {\n                    mouseControl = false\n                }});\n        }\n    }\n\n    function reload() {\n        if (dae) {\n            groupHolder.remove(dae);\n            dae.geometry.dispose();\n            dae = null;\n        }\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            skinning: true,\n            bumpScale: bumpScale,\n            color: 0xFFFFFF,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        initBones();\n    }\n\n    function initBones() {\n        meshes = []\n        skeletonHelpers = [];\n\n        var segmentHeight = 5;\n        var segmentCount = 2;\n        var height = segmentHeight * segmentCount;\n        var halfHeight = height * 0.5;\n\n        var sizing = {\n            segmentHeight: segmentHeight,\n            segmentCount: segmentCount,\n            height: height,\n            halfHeight: halfHeight\n        };\n\n        for (var i = 0; i < bonesCount; i++) {\n            var mesh\n            var geometry = createGeometry(sizing);\n            var bones = createBones(sizing);\n            mesh = createMesh(geometry, bones);\n            mesh.scale.set(.05, .05, .05)\n\n            groupHolder.add(mesh);\n            meshes.push(mesh)\n\n            var pos = new THREE.Vector3();\n            pos.oldCenter = new THREE.Vector3();\n            bonesPositions.push(pos)\n            bonesPositionsTween.push(pos.clone())\n        }\n\n    }\n\n    function createGeometry(sizing) {\n\n        var geometry = new THREE.CylinderGeometry(\n                0, // radiusTop\n                3, // radiusBottom\n                sizing.height, // height\n                7, // radiusSegments\n                sizing.segmentCount * 3, // heightSegments\n                true                     // openEnded\n                );\n\n        for (var i = 0; i < geometry.vertices.length; i++) {\n\n            var vertex = geometry.vertices[ i ];\n            var y = (vertex.y + sizing.halfHeight);\n\n            var skinIndex = Math.floor(y / sizing.segmentHeight);\n            var skinWeight = (y % sizing.segmentHeight) / sizing.segmentHeight;\n\n            vertex.x -= (.5 - Math.random()) * 2\n            vertex.z -= (.5 - Math.random()) * 2\n            if (vertex.y == -sizing.segmentHeight) {\n                vertex.x = vertex.z = 0;\n            }\n\n            geometry.skinIndices.push(new THREE.Vector4(skinIndex, skinIndex + 1, 0, 0));\n            geometry.skinWeights.push(new THREE.Vector4(1 - skinWeight, skinWeight, 0, 0));\n\n        }\n\n        return geometry;\n\n    }\n\n    function createBones(sizing) {\n\n        bones = [];\n\n        var prevBone = new THREE.Bone();\n        bones.push(prevBone);\n        prevBone.position.y = -sizing.halfHeight;\n\n        for (var i = 0; i < sizing.segmentCount; i++) {\n\n            var bone = new THREE.Bone();\n            bone.position.y = sizing.segmentHeight;\n            bones.push(bone);\n            prevBone.add(bone);\n            prevBone = bone;\n\n        }\n\n        return bones;\n\n    }\n\n    function createMesh(geometry, bones) {\n\n        var mesh = new THREE.SkinnedMesh(geometry, material);\n        var skeleton = new THREE.Skeleton(bones);\n        mesh.castShadow = true;\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n\n        mesh.add(bones[ 0 ]);\n        mesh.bind(skeleton);\n\n        var skeletonHelper = new THREE.SkeletonHelper(mesh);\n        skeletonHelper.material.linewidth = 2;\n        //groupHolder.add(skeletonHelper);\n        skeletonHelpers.push(skeletonHelper)\n\n        return mesh;\n\n    }\n\n    function update() {\n\n        var time = Date.now() * 0.00010;\n        //var bone = mesh;\n\n        //Wiggle the bones\n        /*if (state.animateBones) {\n         for (var i = 0; i < mesh.skeleton.bones.length; i++) {\n         mesh.skeleton.bones[ i ].position.x = 20*Math.sin(i+3*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.z = 20*Math.sin(i+2*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.y = 10*Math.sin(i+time) * 2 / mesh.skeleton.bones.length;\n         }\n         }*/\n        var i = 0\n\n        var spd = .2\n        if (!mouseControl) {\n            var des = new THREE.Vector3(window.innerWidth / window.innerHeight * 10 * Math.sin(i + 2 * time) * Math.sin(i + 3.5 * time) * 1, 0, 15 * Math.sin(i + 1 * time) * Math.sin(i + 4.5 * time) * 1)\n            TweenMax.to(center, center.distanceTo(des) * .2, {\n                x: des.x,\n                z: des.z,\n                ease: Linear.easeNone\n            })\n        }\n        TweenMax.to(center, 0, {\n            y: 2 * Math.sin(i + time * 10), ease: Linear.easeNone\n        });\n        //var centerSpd = centerTween.distanceTo(center) / 2.5\n        //console.log(centerSpd)\n        TweenMax.to(centerTween, spd * 5, {x: center.x, y: center.y, z: center.z, ease: Linear.easeNone});\n\n        for (var j = 0; j < bonesCount; j++) {\n            var mesh = meshes[j]\n\n            if (bonesPositions[j].x == 0 || Math.random() < .003 || bonesPositions[j].distanceTo(center) > 13 && !TweenMax.isTweening(bonesPositionsTween[j])) {\n                //var i = Math.floor(Math.random() * bonesCount)\n\n                var r = 2 * Math.PI * (j / bonesCount + Math.random() / 10)\n\n                bonesPositions[j].x = center.x + Math.sin(r) * 10\n                bonesPositions[j].y = 0\n                bonesPositions[j].z = center.z + Math.cos(r) * 10\n                bonesPositions[j].oldCenter.copy(center)\n\n                //if (!TweenMax.isTweening(bonesPositionsTween[j])) {\n                TweenMax.killTweensOf(bonesPositionsTween[j])\n                TweenMax.to(bonesPositionsTween[j], spd * 2, {x: bonesPositions[j].x, z: bonesPositions[j].z})\n                TweenMax.to(bonesPositionsTween[j], spd, {y: 5})\n                TweenMax.to(bonesPositionsTween[j], spd, {delay: spd, y: bonesPositions[j].y})\n                //}\n            }\n\n            mesh.skeleton.bones[ 0 ].position.copy(centerTween)\n            mesh.skeleton.bones[ 0 ].position.add(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 1 ].position.set(bonesPositionsTween[j].x / 2, 5 + bonesPositionsTween[j].y / 2, bonesPositionsTween[j].z / 2)\n            mesh.skeleton.bones[ 1 ].position.sub(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 2 ].position.set(bonesPositionsTween[j].x, -10 + bonesPositionsTween[j].y, bonesPositionsTween[j].z)\n            mesh.skeleton.bones[ 2 ].position.sub(centerTween.clone().multiplyScalar(1))\n\n            skeletonHelpers[j].update();\n        }\n\n        //console.log(bonesPositionsTween[0].x)\n\n        /*mesh.skeleton.bones[1].position.x=0;\n         mesh.skeleton.bones[1].position.y=0;\n         mesh.skeleton.bones[1].position.z=0;\n         mesh.skeleton.bones[2].position.x=10;\n         mesh.skeleton.bones[2].position.y=10;\n         mesh.skeleton.bones[2].position.z=10;*/\n    }\n\n    function onBeat() {\n        /*if (Math.random() < .2) {\n         goBack();\n         return;\n         }\n         var point = new THREE.Vector3()\n         var s = Math.random() * Math.PI\n         var t = Math.random() * Math.PI\n         var r = 4;\n         point.x = r * Math.cos(s) * Math.sin(t)\n         point.y = r * Math.sin(s) * Math.sin(t)\n         point.z = r * Math.cos(t)\n         animate(point)*/\n    }\n\n    function prerender() {\n        //plane.visible = false;\n    }\n\n    function postrender() {\n        //plane.visible = true;\n    }\n\n    function setEnvMap(cubeMap) {\n        material.envMap = cubeMap;\n    }\n    function getRandomOne() {\n        return flotilla[Math.floor(Math.random() * flotilla.length)]\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        //generate: generate,\n        //generateArmy: generateArmy,\n        prerender: prerender,\n        postrender: postrender,\n        setEnvMap: setEnvMap,\n        getRandomOne: getRandomOne,\n    }\n\n}\n();","var Shards = function () {\n    var groupHolder;\n    var multiMaterial\n\n    var drewNewShape = false;\n    var scl = 0;\n    var full;\n    var spd = 0;\n    var mod = 0;\n    var speed = .035;\n    var back = false;\n    var main;\n    var timeout\n    var flotilla = []\n    var isMobile = {any: false};\n    var plane;\n    var rings = []\n    var material\n    var time = 0\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        //var diffuseColor = new THREE.Color(.1,.1,.1);\n        material = new THREE.MeshStandardMaterial({\n            bumpScale: bumpScale,\n            metalness: metalness,\n            fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            //side: THREE.DoubleSide,\n            //map: new THREE.TextureLoader().load(\"2708diffuse.jpg\"),\n            //alphaMap: new THREE.TextureLoader().load(\"textures/op.png\"),\n            //transparent:true,\n            //normalMap: new THREE.TextureLoader().load(\"2708normal.jpg\"),\n            //bumpMap: texture,\n            //emissive: 0x111111,\n            //metalnessMap:texture,\n            //lightMap:texture,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n        \n        reload()\n    }\n\n    function reload() {\n        if (full) {\n            VizHandler.getScene().remove(full);\n            full.geometry.dispose();\n            full = null;\n        }\n\n        var geo = new THREE.BoxGeometry(.1, .1, .1, 1, 1, 1)\n        var group = new THREE.Object3D();\n        \n        for (var j = 0; j < 400; j++) {\n            var r = 15\n            var tpos = new THREE.Vector3()\n            if (j != 0)\n                tpos.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n            var ran=Math.random()*5\n            for (var i = 0; i < ran; i++) {\n                var cube = new THREE.Mesh(geo, material)\n                var r = .2 + .4 * Math.random()\n                cube.position.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n                cube.position.add(tpos)\n                var scr0 = Math.random()\n                var scr1 = Math.random()\n                var scr2 = Math.random()\n                cube.scale.set(scr0, scr1, scr2)\n                group.add(cube)\n                cube.castShadow = true;\n                cube.receiveShadow = true;\n            }\n        }\n\n\n        var geom = new THREE.Geometry()\n        for (var i = 0; i < group.children.length; i++) {\n            group.children[i].updateMatrix();\n            geom.merge(group.children[i].geometry, group.children[i].matrix);\n        }\n\n        var mod = .1\n        for (var i = 0; i < geom.vertices.length; i++) {\n            var v = geom.vertices[i]\n            v.x += (Math.random() - .5) * mod\n            v.y += (Math.random() - .5) * mod\n            v.z += (Math.random() - .5) * mod\n        }\n\n        geom.computeFaceNormals();\n        geom.computeVertexNormals();\n\n        full = new THREE.Mesh(geom, material)\n        full.castShadow = true;\n        full.receiveShadow = true;\n        VizHandler.getScene().add(full)\n\n        VizHandler.getRenderer().shadowMap.needsUpdate = true;\n    }\n\n    function update() {\n    }\n\n    function onBeat() {\n    }\n\n    function generate() {\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        generate: generate,\n        reload: reload,\n    }\n\n}\n();","var Assets = function () {\n\n    var textureCube;\n    var cubeMaps=[]\n\n    function init() {\n\n    }\n\n    function destroy(object, textureToo) {\n        if (object.children.length > 0) {\n            var objects = [object.children[1], object.children[0]]\n\n            object.remove(objects[0]);\n            object.remove(objects[1]);\n\n            destroyMesh(objects[0], textureToo)\n            destroyMesh(objects[1], textureToo)\n        } else {\n            destroyMesh(object, textureToo)\n        }\n    }\n    \n    function getCubeMap(i) {\n        i=0\n        if(cubeMaps[i])\n            return cubeMaps[i]\n        \n        var cubeMap = new THREE.Texture([]);\n        cubeMap.format = THREE.RGBFormat;\n        cubeMap.flipY = false;\n\n        var envMaps = [\n            {file: \"/assets/img/skin.jpg\", size: 1024, glow: 0.2},\n        ];\n\n        var loader = new THREE.ImageLoader();\n        var file = envMaps[i].file;\n        var size = envMaps[i].size;\n        loader.load(file, function (image) {\n            var getSide = function (x, y) {\n\n                var canvas = document.createElement('canvas');\n                canvas.width = size;\n                canvas.height = size;\n\n                var context = canvas.getContext('2d');\n                context.drawImage(image, -x * size, -y * size);\n\n                return canvas;\n\n            };\n\n            cubeMap.image[ 0 ] = getSide(2, 1); // px\n            cubeMap.image[ 1 ] = getSide(0, 1); // nx\n            cubeMap.image[ 2 ] = getSide(1, 0); // py\n            cubeMap.image[ 3 ] = getSide(1, 2); // ny\n            cubeMap.image[ 4 ] = getSide(1, 1); // pz\n            cubeMap.image[ 5 ] = getSide(3, 1); // nz\n            cubeMap.needsUpdate = true;\n\n        });\n\n        cubeMaps[i]=cubeMap\n        return cubeMap;\n    }\n\n    function destroyMesh(mesh, textureToo) {\n        if (mesh.geometry)\n            mesh.geometry.dispose();\n        if (!mesh.material)\n            return;\n        var tex = mesh.material.map\n        if (!tex && mesh.material.materials)\n            tex = mesh.material.materials[1].map\n        //console.log(mesh.material.map)\n        if (tex && textureToo) {\n            tex.needsUpdate = false;\n            tex.dispose();\n            tex.image = null\n            tex = null;\n        }\n        if (mesh.material.materials) {\n            mesh.material.materials[1].dispose();\n            mesh.material.materials[0].dispose();\n            mesh.material.materials[1] = null;\n            mesh.material.materials[0] = null;\n        }\n        if (mesh.material.dispose)\n            mesh.material.dispose();\n\n        mesh.material = null;\n        mesh.geometry = null;\n        tex = null;\n    }\n\n    return {\n        init: init,\n        textureCube: function () {\n            return textureCube;\n        },\n        destroy: destroy,\n        getCubeMap: getCubeMap\n    };\n\n}();","var events = new Events();\nvar simplexNoise = new SimplexNoise();\n\nvar Main = function () {\n\n    function init() {\n\n        if (!Detector.webgl) {\n            Detector.addGetWebGLMessage();\n        }\n\n        //INIT DOCUMENT\n        window.addEventListener('resize', onResize, false);\n\n        //INIT HANDLERS\n        ControlsHandler.init();\n        VizHandler.init();\n        FXHandler.init();\n\n        onResize();\n\n        if (ControlsHandler.vizParams.showControls) {\n            $('#controls').show();\n        }\n\n        update();\n\n    }\n\n    function update() {\n        requestAnimationFrame(update);\n        events.emit(\"update\");\n    }\n\n    function onResize() {\n        VizHandler.onResize();\n        FXHandler.onResize();\n    }\n\n    return {\n        init: init\n    };\n\n}();\n\n$(window).on('load', function() {\n  $('#status').fadeOut();\n  $('#preloader').delay(300).fadeOut('slow');\n})\n\n$(document).ready(function () {\n    setTimeout(Main.init, 100);\n});\n","var ControlsHandler = function () {\n\n    var t = 0;\n\n    var mainParams = {\n        time: 0.0001,\n        auto: false,\n        fullscreen: function () {\n            document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            Main.toggleControls()\n        },\n        generate_one: function () {\n            Asteroid.generate(0,0)\n        },\n        generate_grid: function () {\n            Asteroid.generate(8,8)\n        }\n    }\n\n    var audioParams = {\n        useMic: false,\n        useSample: false,\n        showDebug: true,\n        volSens: 1,//1,\n        beatHoldTime: 40,\n        beatDecayRate: 0.97,\n        bpmMode: false,\n        bpmRate: 0\n    };\n\n    var fxParams = {\n        song: 0,\n        nuts: false,\n        tilt: true,\n        tv: false,\n        kaleidoscope: -1,\n        kaleidoscopeJump: false,\n        rgb: true,\n        wireframe: false,\n        dots: false,\n        person: false,\n        ssao:true,\n        ssaoOnly:false,\n        heart: true,\n        items: true,\n        black: true,\n        animSpeed: 1.0,\n        colorProgress: 0.0,\n        spreadProgress: 0.0,\n        waterProgress: 0.3,\n        bgProgress: 0.0,\n        glow: 0.3\n    };\n\n    var vizParams = {\n        fullSize: true,\n        showControls: false,\n        fakeKinect: false,\n        // useBars: false,\n        // useGoldShapes: true,\n        // useNebula:true,\n        // useNeonShapes:true,\n        // useStripes:true,\n        // useTunnel:true,\n        // useWaveform:true,\n    };\n\n    function init() {\n        return events.on(\"update\", update);\n    }\n\n    function show(trigger, percStart, percFinish, value) {\n        var changedValue = true;\n        if (typeof value === 'number') {\n            changedValue = value\n        }\n        if (mainParams.time > percStart && mainParams.time <= percFinish) {\n            fxParams[trigger] = changedValue;\n        }\n    }\n\n    function autoChange() {\n        mainParams.auto = true;\n    }\n\n    function manualChange() {\n        mainParams.auto = false;\n        FXHandler.toggle();\n    }\n\n    function update() {\n\n\n        if (mainParams.auto) {\n            mainParams.time += 1 / 3/*hours*/ / 60/*minutes*/ / 60/*seconds*/ / 60/*fps*/;//*60*4;\n            if (mainParams.time > 1)\n                mainParams.time = 1;\n            if (mainParams.time < 0)\n                mainParams.time = 0;\n        }\n\n        var clone = {};\n        for (var attr in fxParams) {\n            if (fxParams.hasOwnProperty(attr)) {\n                clone[attr] = fxParams[attr];\n            }\n        }\n        if (mainParams.auto) {\n            for (var attr in fxParams) {\n                if (fxParams.hasOwnProperty(attr)) {\n                    if (fxParams[attr] === true)\n                        fxParams[attr] = false;\n                }\n            }\n\n            fxParams.waterProgress = Math.sin(3.5 + mainParams.time * 6) / 2 + .5\n            fxParams.colorProgress = mainParams.time\n            fxParams.spreadProgress = mainParams.time\n            //fxParams.bgProgress=mainParams.time\n\n            show('black', 0.07, 0.25)\n            show('bgProgress', 0.00, 0.50, 0)\n            show('bgProgress', 0.50, 1.00, 1)\n\n            show('kaleidoscope', 0.00, 0.09, -1)\n            show('kaleidoscope', 0.13, 0.16, 0)\n            show('kaleidoscope', 0.16, 0.19, 1)\n            show('kaleidoscope', 0.19, 0.24, 4)\n\n            show('heart', 0.00, 0.37)\n            show('heart', 0.43, 1)\n            show('black', 0.30, 0.40)\n            show('spreadProgress', 0.30, 1, 1)\n\n            show('kaleidoscope', 0.24, 0.30, -1)\n            show('kaleidoscope', 0.30, 0.33, 0)\n            show('kaleidoscope', 0.33, 0.36, 1)\n            show('kaleidoscope', 0.36, 0.43, 2)\n\n            show('items', 0.15, 1.00)\n\n            show('animSpeed', 0.17, 0.20, -3)\n            show('animSpeed', 0.20, 0.23, 4)\n            show('animSpeed', 0.23, 0.30, -10)\n            show('animSpeed', 0.53, 0.61, -3)\n            show('animSpeed', 0.61, 0.67, 4)\n            show('animSpeed', 0.67, 0.73, -6)\n            show('animSpeed', 0.73, 0.81, 7)\n            show('animSpeed', 0.81, 0.87, 0)\n            show('animSpeed', 0.91, 1, -10)\n\n            show('kaleidoscope', 0.40, 0.60, -1)\n            show('kaleidoscope', 0.60, 0.65, 0)\n            show('kaleidoscope', 0.65, 0.70, 1)\n            show('kaleidoscope', 0.70, 0.75, 2)\n\n            show('nuts', 0.43, 0.47)\n            show('wireframe', 0.47, 0.57)\n            show('nuts', 0.57, 1.00)\n\n            show('rgb', 0.30, 0.40)\n            show('rgb', 0.70, 1.00)\n\n            show('tv', .65, 1)\n\n            show('kaleidoscopeJump', .75, 1)\n\n        }\n\n        /*show('nuts',.5,1)\n         show('tv',.5,1)\n         show('wireframe',.16,.20)\n         show('wireframe',.33,.38)\n         show('dots',.9,1)\n         show('black',.3,.7)*/\n\n        var changed = false;\n\n        for (var attr in fxParams) {\n            if (clone[attr] != fxParams[attr] && (typeof fxParams[attr] === 'boolean') && attr !== \"heart\" && attr !== \"wireframe\" && attr !== \"items\" && attr !== \"black\" && attr !== \"waterProgress\" && attr !== \"spreadProgress\" && attr !== \"bgProgress\") {\n                changed = true;\n                console.log(attr, fxParams[attr])\n            }\n        }\n        //if(changed)console.log(fxParams.nuts, changed)\n        //if(changed)alert('hi')\n        if (changed)\n            FXHandler.toggle();\n\n    }\n\n    return {\n        init: init,\n        audioParams: audioParams,\n        fxParams: fxParams,\n        vizParams: vizParams\n    };\n}();","var FXHandler = function () {\n\n    var shaderTime = 0;\n    var screenW = 1920;\n    var screenH = 1080;\n    var blurriness = 3;\n    var nuts = false;\n    var bloomPass;\n    var hblurPass = null;\n    var vblurPass = null;\n    var copyPass = null;\n    var renderTarget2 = null;\n    var glowComposer = null;\n    var composer = null;\n    var blendPass = null;\n    var badTVPass = null;\n    var mirrorPass = null;\n    var dotScreenPass = null;\n    var rgbPass = null;\n    var smaaPass = null;\n    var depthMaterial, depthRenderTarget;\n    var msaaPass = null\n    var scene, renderer, camera, controls, vrControls\n    var vr, controller2, material, geom, bubbles = []\n    var material, geoms = []\n    var group = new THREE.Group()\n\n    function init() {\n        controls = VizHandler.getControls();\n        scene = VizHandler.getScene();\n        renderer = VizHandler.getRenderer();\n        camera = VizHandler.getCamera();\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n        setup()\n    }\n\n    function setup() {\n\n        vrControls = new THREE.VRControls(camera);\n        vrControls.standing = true;\n        //vrControls.scale = .5;\n    }\n\n    function switchControls() {\n\n        controls.autoRotate = false;\n        controls.enabled = false;\n\n        scene.add(group)\n        group.position.y = -1.5\n\n        vr = true\n        \n        Shards.init()\n\n        /*var roz = 4\n         var directionalLight=VizHandler.getLight()\n         directionalLight.shadow.camera.near = -roz\n         directionalLight.shadow.camera.far = roz * 5\n         directionalLight.shadow.camera.left = -roz\n         directionalLight.shadow.camera.right = roz\n         directionalLight.shadow.camera.top = roz\n         directionalLight.shadow.camera.bottom = -roz\n         directionalLight.shadow.mapSize.width = 2048;\n         directionalLight.shadow.mapSize.height = 2048;\n         directionalLight.shadow.bias = 0//.001\n         VizHandler.getRenderer().shadowMap.autoUpdate = true;*/\n\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        geom = new THREE.BoxGeometry(.2, .2, .2, 1, 1, 1)\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = .4;\n        var metalness = .9;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            //skinning: true,\n            bumpScale: bumpScale,\n            color: diffuseColor,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        onResize();\n        mobile = false;\n    }\n\n    function removeBubble(bubble) {\n        scene.remove(bubble)\n    }\n\n    function onBeat() {\n        setTimeout(onBeatEnd, 300);\n    }\n\n    function onBeatEnd() {\n    }\n\n    function toggle() {\n        setup()\n    }\n\n    function onResize() {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n\n        var pixelRatio = renderer.getPixelRatio();\n        var newWidth = Math.floor(width / pixelRatio) || 1;\n        var newHeight = Math.floor(height / pixelRatio) || 1;\n        if (composer)\n            composer.setSize(newWidth, newHeight);\n\n    }\n\n    function update(t) {\n\n        if (vr)\n            return;\n\n        renderer.render(scene, camera);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.needsUpdate = true;\n\n        scene.overrideMaterial = depthMaterial;\n        renderer.render(scene, camera, depthRenderTarget, true);\n        scene.overrideMaterial = null;\n\n        if (composer) {\n            //renderer.clear();\n            composer.render();\n        }\n\n        return;\n    }\n\n    return {\n        init: init,\n        update: update,\n        toggle: toggle,\n        onBeat: onBeat,\n        onResize: onResize\n    };\n\n}();","//VizHandler\n//Handle 3D world\nvar VizHandler = function () {\n\n    var rendertime = 0; //constantly incrementing value public\n    var camera, scene, renderer, controls, fullscreen = false;\n    var cubeCameraRead, cubeCameraWrite;\n    var debugCube;\n    var renderToggle = true;\n    var mobile\n\n    var BG_COLOR = 0xffffff;\n    var directionalLight;\n\n    var WIDTH = window.innerWidth;\n    var HEIGHT = window.innerHeight;\n\n    function init() {\n\n        var id = parseInt(window.location.hash.substr(1))\n        if (!id)\n            id = 1\n        ControlsHandler.fxParams.song = id;\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n\n        // var container = document.getElementById('viz')\n        //document.body.appendChild(container);\n\n        container = document.createElement('div');\n        document.body.appendChild(container);\n\n        //RENDERER\n        renderer = new THREE.WebGLRenderer({\n            antialias: true\n        });\n        renderer.setSize(WIDTH, HEIGHT);\n        renderer.setClearColor(BG_COLOR);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.autoUpdate = true;\n        //renderer.shadowMap.needsUpdate = true;\n        //renderer.autoClear = false;\n\n        //renderer.shadowMap.type = THREE.PCFShadowMap;\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true;\n        //renderer.sortObjects = false;\n        container.appendChild(renderer.domElement);\n\n        scene = new THREE.Scene();\n        //3D SCENE\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, .1, 1000);\n        camera.position.x = -2;\n        camera.position.y = 2.5;\n        camera.position.z = 2;\n        //scene.add(camera);\n\n        scene.fog = new THREE.Fog(BG_COLOR, 2, 10);\n\n        //controls = new THREE.TrackballControls(camera);\n        controls = new THREE.OrbitControls(camera);\n        controls.target.set(0, 0, 0);\n        controls.update();\n        controls.autoRotate = false;\n        controls.enablePan = false;\n        controls.enableZoom = true;\n        controls.enableRotate = true;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n        controls.rotateSpeed = .05;\n        //controls.autoRotateSpeed = (Math.random() * .5 - .25) / 7;\n        controls.minDistance = 2;\n        controls.maxDistance = 4;\n        controls.maxPolarAngle = Math.PI / 2.5;\n        controls.minPolarAngle = Math.PI / 5;\n\n        Assets.init();\n\n        directionalLight = new THREE.DirectionalLight(0xffffff, 0.4);\n        directionalLight.position.x = .1\n        directionalLight.position.z = -.9\n        directionalLight.position.y = .4\n        directionalLight.castShadow = true\n        var roz = 6\n        directionalLight.shadow.camera.near = -roz * 2\n        directionalLight.shadow.camera.far = roz * 2\n        directionalLight.shadow.camera.left = -roz\n        directionalLight.shadow.camera.right = roz\n        directionalLight.shadow.camera.top = roz\n        directionalLight.shadow.camera.bottom = -roz\n        directionalLight.shadow.mapSize.width = 1024\n        directionalLight.shadow.mapSize.height = 1024\n        directionalLight.shadow.bias = 0.0001\n\n        scene.add(directionalLight);\n        //scene.add(new THREE.CameraHelper(directionalLight.shadow.camera));\n        //scene.add(new THREE.CameraHelper(directionalLight2.shadow.camera));\n\n        scene.add(new THREE.AmbientLight(0xffffff, 0.9));\n\n        /*hemiLight = new THREE.HemisphereLight(0xffffff, 0x666666, 0.6);\n        hemiLight.color.setHSL(0.6, 1, 0.8);\n        hemiLight.groundColor.setHSL(0.095, 1, 0.9);\n        hemiLight.position.set(0, 10, 0);\n        scene.add(hemiLight);*/\n\n        //var helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n        //scene.add(helper);\n\n        activeViz = [Mecha];\n\n        activeVizCount = activeViz.length;\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].init();\n        }\n\n        //window.addEventListener('deviceorientation', setOrientationControls, true);\n\n        TweenMax.delayedCall(.1, updateShadow)\n    }\n\n    function updateShadow() {\n        renderer.shadowMap.needsUpdate = true;\n    }\n\n    function remake() {\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].reload();\n        }\n        controls.autoRotateSpeed = Math.random() * .5 - .25\n        TweenMax.delayedCall(5, remake)\n    }\n\n    function setOrientationControls(e) {\n        if (!e.alpha) {\n            return;\n        }\n\n        controls.enabled = false\n        controls = new THREE.DeviceOrientationControls(camera, true);\n        controls.connect();\n        controls.update();\n\n        window.removeEventListener('deviceorientation', setOrientationControls, true);\n\n        if (renderer.domElement) {\n            renderer.domElement.addEventListener('click', function () {\n\n                if (this.requestFullscreen) {\n                    this.requestFullscreen();\n                } else if (this.msRequestFullscreen) {\n                    this.msRequestFullscreen();\n                } else if (this.mozRequestFullScreen) {\n                    this.mozRequestFullScreen();\n                } else if (this.webkitRequestFullscreen) {\n                    this.webkitRequestFullscreen();\n                }\n                fullscreen = true;\n\n            });\n\n            mobile = true;\n\n        }\n    }\n\n    function update() {\n        controls.update();\n\n        if (mobile) {\n            camera.position.set(0, 0, 0)\n            camera.translateZ(1.8);\n        }\n    }\n\n\n    function onResize() {\n\n        var renderW = 1920;\n        var renderH = 1080;\n\n        if (ControlsHandler.vizParams.fullSize) {\n            var renderW = window.innerWidth;\n            var renderH = window.innerHeight;\n\n            if (ControlsHandler.vizParams.showControls) {\n                renderW -= 250;\n            }\n            $('#viz').css({position: 'relative', top: 0});\n\n        } else {\n            //vertically center viz output\n            $('#viz').css({position: 'relative', top: window.innerHeight / 2 - FIXED_SIZE_H / 2});\n        }\n\n        camera.aspect = renderW / renderH;\n        camera.updateProjectionMatrix();\n        renderer.setSize(renderW, renderH);\n\n    }\n\n    return {\n        init: init,\n        update: update,\n        getCamera: function () {\n            return camera;\n        },\n        getScene: function () {\n            return scene;\n        },\n        getLight: function () {\n            return directionalLight;\n        },\n        getRenderer: function () {\n            return renderer;\n        },\n        getCubeCameras: function () {\n            return [cubeCameraRead, cubeCameraWrite]\n        },\n        getControls: function () {\n            return controls;\n        },\n        onResize: onResize,\n        isFullscreen: function () {\n            return fullscreen;\n        },\n        isMobile: function () {\n            return mobile;\n        }\n    };\n\n}();"]}