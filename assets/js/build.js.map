{"version":3,"sources":["minivents.js","jquery-2.2.4.js","Detector.js","three.js","SimplexNoise.js","atutil.js","TweenMax.min.js","OrbitControls.js","DeviceOrientationControls.js","VRControls.js","ViveController.js","BG.js","Mecha.js","Shards.js","Assets.js","Main.js","ControlsHandler.js","FXHandler.js","VizHandler.js"],"names":["Events","target","events","empty","this","on","type","func","ctx","push","off","list","i","length","splice","emit","j","e","slice","apply","call","arguments","global","factory","module","exports","document","w","Error","window","noGlobal","fcamelCase","all","letter","toUpperCase","arr","concat","indexOf","class2type","toString","hasOwn","hasOwnProperty","support","version","jQuery","selector","context","fn","init","rtrim","rmsPrefix","rdashAlpha","isArrayLike","obj","isWindow","prototype","jquery","constructor","toArray","get","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","first","eq","last","len","end","sort","extend","options","name","src","copy","copyIsArray","clone","deep","isFunction","isPlainObject","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","Array","isNumeric","realStringObj","parseFloat","key","nodeType","isEmptyObject","globalEval","code","script","indirect","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","camelCase","string","nodeName","toLowerCase","makeArray","results","Object","inArray","second","grep","invert","matches","callbackExpect","arg","value","guid","proxy","tmp","args","now","Date","Symbol","iterator","split","Sizzle","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","setDocument","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","rescape","runescape","childNodes","els","seed","m","nid","nidselect","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","assert","div","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","documentElement","node","hasCompare","parent","doc","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","find","filter","attrId","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">","dir"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","root","focus","activeElement","hasFocus","href","tabIndex","enabled","disabled","checked","selected","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","addCombinator","combinator","base","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","matcherFromGroupMatchers","elementMatchers","setMatchers","superMatcher","outermost","matchedCount","setMatched","contextBackup","byElement","dirrunsUnique","bySet","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","defaultValue","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","rsingleTag","risSimple","winnow","qualifier","self","rootjQuery","ready","parseHTML","rparentsprev","guaranteedUnique","children","contents","next","prev","sibling","targets","l","closest","pos","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","readyList","rnotwhite","completed","removeEventListener","Callbacks","object","flag","fire","locked","once","fired","firing","queue","firingIndex","memory","stopOnFalse","remove","disable","lock","fireWith","Deferred","tuples","state","promise","always","deferred","fail","then","fns","newDefer","tuple","returned","progress","notify","resolve","reject","pipe","stateString","when","subordinate","updateFunc","values","progressValues","notifyWith","remaining","resolveWith","progressContexts","resolveContexts","resolveValues","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","setTimeout","acceptData","owner","access","chainable","emptyGet","raw","bulk","Data","uid","register","initial","defineProperty","writable","configurable","set","data","prop","stored","camel","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","parseJSON","removeData","_data","_removeData","camelKey","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","isHidden","el","css","pnum","source","rcssNum","cssExpand","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","style","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","types","one","origFn","event","handleObjIn","eventHandle","t","handleObj","special","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","props","fixHooks","keyHooks","original","which","charCode","keyCode","mouseHooks","eventDoc","body","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","relatedTarget","rxhtmlTag","rnoInnerhtml","rchecked","rscriptTypeMasked","rcleanScript","manipulationTarget","content","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","domManip","collection","hasScripts","iNoClone","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","insert","iframe","elemdisplay","HTML","BODY","actualDisplay","display","defaultDisplay","write","close","swap","old","pixelPositionVal","boxSizingReliableVal","pixelMarginRightVal","reliableMarginLeftVal","container","rmargin","rnumnonpx","getStyles","view","opener","getComputedStyle","computeStyleTests","cssText","divStyle","marginLeft","width","marginRight","curCSS","computed","minWidth","maxWidth","getPropertyValue","pixelMarginRight","addGetHookIf","conditionFn","hookFn","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","vendorPropName","capName","setPositiveNumber","subtract","max","augmentWidthOrHeight","extra","isBorderBox","styles","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","showHide","show","hidden","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","hide","toggle","propHooks","run","percent","eased","duration","step","fx","linear","p","swing","cos","PI","fxNow","timerId","opt","rfxtypes","rrun","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","tick","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","rejectWith","propFilter","timer","anim","complete","*","tweener","oldfire","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","fadeTo","to","animate","doAnimation","optall","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","getClass","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","s","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","mimeType","status","abort","statusText","finalText","success","method","crossDomain","host","param","traditional","hasContent","ifModified","headers","beforeSend","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","getClientRects","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","v","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","getWindow","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","Detector","canvas","CanvasRenderingContext2D","webgl","WebGLRenderingContext","getContext","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","fontFamily","fontSize","textAlign","background","color","addGetWebGLMessage","parameters","THREE","EventDispatcher","Number","EPSILON","pow","sign","x","Function","assign","TypeError","output","nextKey","listener","_listeners","listeners","hasEventListener","listenerArray","dispatchEvent","array","r","chars","uuid","rnd","min","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","BlendingMode","AddEquation","SrcAlphaFactor","OneMinusSrcAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","TextureMapping","UVMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","TextureWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapLinearFilter","TextureFilter","LinearMipMapNearestFilter","UnsignedByteType","FloatType","HalfFloatType","RGBFormat","RGBAFormat","RGBEFormat","DepthFormat","DepthStencilFormat","InterpolateDiscrete","InterpolateLinear","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","RAD2DEG","generateUUID","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","random16","console","warn","randInt","low","floor","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","round","log","LN2","nextPowerOfTwo","Vector2","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","dot","lengthSq","sqrt","lengthManhattan","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","fromAttribute","attribute","itemSize","rotateAround","center","c","sin","isTexture","needsUpdate","toJSON","meta","textures","metadata","generator","images","toDataURL","createElementNS","drawImage","dispose","transformUv","uv","matrix","quaternion","vector","z","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","Float32Array","CubeTexture","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","isWebGLRenderTarget","setSize","create","isWebGLRenderTargetCube","onChangeCallback","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","crossVectors","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","f","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","copyPosition","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","applyToVector3Array","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","transpose","flattenToArrayOffset","getPosition","setPosition","throwOnDegenerate","t11","t12","t13","t14","det","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","right","bottom","near","far","makePerspective","fov","aspect","ymax","tan","ymin","xmin","xmax","makeOrthographic","h","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","u","RePathPart","addUniform","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","UniformsUtils","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isColor","isMatrix3","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","Color","setRGB","hue2rgb","setHex","setStyle","hex","setHSL","handleAlpha","components","charAt","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","UniformsLib","diffuse","offsetRepeat","specularMap","alphaMap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","points","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","Box2","Infinity","LensFlarePlugin","flares","vertexBuffer","elementBuffer","shader","tempTexture","occlusionTexture","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","createShader","FRAGMENT_SHADER","VERTEX_SHADER","getPrecision","shaderSource","compileShader","attachShader","linkProgram","vertex","getAttribLocation","renderType","occlusionMap","rotation","screenPosition","render","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","CULL_FACE","setDepthWrite","flare","matrixWorldInverse","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","alphaTest","fillStyle","fillRect","painterSortStable","renderOrder","oldFogType","sceneFogType","isFog","isFogExp2","density","material","setDepthTest","depthTest","depthWrite","Material","MaterialIdCount","side","shading","vertexColors","transparent","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipIntersection","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","physical","clearCoat","clearCoatRoughness","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","intersect","union","translate","isMaterial","setValues","newValue","isRoot","extractFromCache","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","srcPlanes","dstPlanes","closestPoint","m1","p1","p2","sphere","edge1","edge2","segCenter","segDir","q1","count$1","ShaderMaterial","defines","linewidth","clipping","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","MeshDepthMaterial","depthPacking","Box3","Sphere","Matrix3","Plane","constant","Frustum","p0","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","_gl","_state","_frustum","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","USE_SHADOWMAP","scope","getDepthMaterial","isPointLight","lightPositionWorld","geometry","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","projectObject","shadowCamera","layers","mask","isMesh","isLine","isPoints","castShadow","frustumCulled","intersectsObject","autoUpdate","faceCount","clearColor","setScissorTest","light","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","setRenderTarget","clear","face","vpDimensions","updateMatrixWorld","setFromMatrix","isMultiMaterial","materials","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","getClearColor","clearAlpha","getClearAlpha","setClearColor","Ray","origin","Euler","_order","DefaultOrder","Layers","Object3D","Object3DIdCount","DefaultUp","setFromQuaternion","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","onBeforeRender","onAfterRender","isShaderMaterial","isMeshDepthMaterial","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","traverse","stride","isInterleavedBufferAttribute","intersectsSphere","intersectsPlane","plane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","line","denominator","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","isRootObject","geometries","stringify","recursive","child","startP","startEnd","edgeList","projectedPoint","count$2","Line3","Triangle","Face3","vertexNormals","MeshBasicMaterial","combine","BufferAttribute","normalized","dynamic","updateRange","Uint16Attribute","Uint32Attribute","Uint32Array","Float32Attribute","Geometry","GeometryIdCount","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","minDistance","isMeshBasicMaterial","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","computeBoundingBox","fromBufferGeometry","positions","normals","uvs","uvs2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","changes","faceIndicesToRemove","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","uvsCopy","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","count$3","DirectGeometry","BufferGeometry","drawRange","Mesh","drawMode","updateMorphTargets","uvIntersection","uv1","uv3","checkIntersection","raycaster","pA","pB","pC","checkBufferGeometryIntersection","intersection","faceIndex","BoxBufferGeometry","widthSegments","heightSegments","depthSegments","vertexCount","indexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","Camera","PerspectiveCamera","filmGauge","filmOffset","OrthographicCamera","WebGLIndexedBufferRenderer","infoRender","mode","setMode","UNSIGNED_INT","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLLights","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","lines","addLineNumbers","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","getIndex","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","MaxIndex","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","intersects","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","uvs_f","isCamera","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isOrthographicCamera","cx","cy","zoomW","zoomH","scaleW","scaleH","matrixPosition","offsetMatrix","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","__webglShader","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","rendererExtensions","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","envMapCubeUV","flatShading","logarithmicDepthBuffer","customDefines","chunks","generateDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","useFog","fogExp","numClipIntersection","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","floatVertexTextures","skeleton","nVertexUniforms","maxVertexUniforms","bones","allocateBones","getMaxPrecision","currentRenderTarget","getCurrentRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","directional","spot","hemi","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLGeometries","onGeometryDispose","buffergeometry","deleteAttribute","deleteAttributes","property","delete","bufferproperty","__webglBuffer","deleteBuffer","_bufferGeometry","WebGLObjects","updateAttribute","bufferType","attributeProperties","usage","DYNAMIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","updateBuffer","getAttributeBuffer","getWireframeAttribute","WebGLTextures","paramThreeToGL","_infoMemory","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","filterFallback","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","__version","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","HTMLCanvasElement","makePowerOfTwo","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","isDataTexture","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","uploadTexture","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","colorBuffer","currentColorMask","currentColorClear","setMask","colorMask","setLocked","setClear","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","Uint8Array","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","maxTextures","MAX_TEXTURE_IMAGE_UNITS","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setDepthFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","webglSlot","buffers","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setColorWrite","setStencilTest","setStencilWrite","stencilWrite","setStencilFunc","setStencilOp","setLineWidth","lineWidth","setPolygonOffset","factor","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglType","boundTexture","WebGLCapabilities","maxAnisotropy","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_clipping","_clippingEnabled","_localClippingEnabled","_sphere","_vector3","ambient","_infoRender","rangeMin","rangeMax","onContextLost","objects","programCache","lightCache","bufferRenderer","indexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","backgroundBoxShader","backgroundBoxMesh","getTargetPixelRatio","glClearColor","setDefaultGLState","warned","spritePlugin","lensFlarePlugin","onMaterialDispose","releaseMaterialProgramReference","absNumericalSort","reversePainterSortStable","pushRenderItem","renderItem","isObjectViewable","isSphereViewable","isSpriteViewable","negRad","renderObjects","renderList","overrideMaterial","isImmediateRenderObject","setMaterial","setProgram","renderBufferImmediate","materialProperties","lightsHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","initMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","emissiveIntensity","uvScaleMap","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsStandard","isMeshNormalMaterial","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","getContextAttributes","forceContextLoss","loseContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","setScissor","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","updateBuffers","geometryProgram","activeInfluences","rangeFactor","startIndex","isInstancedBufferGeometry","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","Float64Array","Int16Array","Int8Array","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","LINE_STRIP","POINTS","forceClear","isLight","isSprite","isLensFlare","lightShadowsLength","setupShadows","ll","intensity","directionalLength","pointLength","spotLength","hemiLength","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isHemisphereLight","setupLights","setFaceCulling","frontFaceDirection","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","DataTexture","Skeleton","boneInverses","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","Bone","skin","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bone","gbone","rotq","scl","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","Points","Group","VideoTexture","video","requestAnimationFrame","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge","sortFunction","numEdges","edges","coords","o","ol","numTris","ParametricBufferGeometry","slices","stacks","sliceCount","ParametricGeometry","PolyhedronBufferGeometry","detail","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronBufferGeometry","TetrahedronGeometry","OctahedronBufferGeometry","OctahedronGeometry","IcosahedronBufferGeometry","IcosahedronGeometry","DodecahedronBufferGeometry","DodecahedronGeometry","PolyhedronGeometry","TubeBufferGeometry","tubularSegments","radialSegments","closed","frames","computeFrenetFrames","tangents","binormals","generateSegment","P","getPointAt","N","B","generateIndices","generateBufferData","TubeGeometry","taper","bufferGeometry","TorusKnotBufferGeometry","tube","indexOffset","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","TorusBufferGeometry","arc","TorusGeometry","vecX","vecY","wantedRotation","level","addLevel","getObjectForDistance","pose","isBone","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","ShapeUtils","contour","triangulate","verts","vertIndices","nv","snip","triangulateShape","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg1Pt","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","forEach","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","shape","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","minShapeIndex","counter","h2","removeHoles","triangles","isClockWise","pts","b3","px","py","aX","aY","bX","bY","cX","cY","cCROSSap","bCROSScp","ExtrudeGeometry","shapes","addShapeList","TextGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","verticesRow","pz","v3","v4","SphereGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","RingGeometry","PlaneGeometry","LatheBufferGeometry","segments","inverseSegments","n1","n2","LatheGeometry","ShapeGeometry","EdgesGeometry","thresholdAngle","thresholdDot","vert1","vert2","face1","face2","CylinderBufferGeometry","radiusTop","radiusBottom","openEnded","nbCap","calculateVertexCount","calculateIndexCount","indexArray","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","i3","generateTorso","CylinderGeometry","ConeGeometry","ConeBufferGeometry","CircleBufferGeometry","ii","CircleGeometry","BoxGeometry","sl","addShape","extrudePts","splineTube","binormal","position2","ahole","bevelSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","getSpacedPoints","shapesOffset","shapePoints","extractPoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","f4","f3","generateTopUV","generateSideWallUV","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","indexD","Geometries","freeze","ShadowMaterial","RawShaderMaterial","MultiMaterial","STANDARD","PHYSICAL","isShadowMaterial","Materials","Cache","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","itemEnd","itemError","DefaultLoadingManager","XHRLoader","manager","CompressedTextureLoader","_parser","dataUriRegexResult","isBase64","decodeURIComponent","atob","ArrayBuffer","charCodeAt","parser","request","withCredentials","setPath","setResponseType","setWithCredentials","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","BinaryTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","texData","URL","revokeObjectURL","blob","createObjectURL","setCrossOrigin","crossOrigin","urls","isJPEG","search","KeyframeTrackPrototype","textureLoader","materialLoader","AnimationUtils","arraySlice","from","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","ObjectLoader","texturePath","Curve","LineCurve","CurvePath","curves","autoClose","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","message","ValueTypeName","getInterpolation","timeOffset","timeScale","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","trackType","_getTrackTypeForValueTypeName","track","typeName","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","TYPED_ARRAYS","Uint8ClampedArray","typedArray","drawcalls","offsets","extractUrlBase","initMaterials","createMaterial","fullPath","Handlers","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","regex","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","getGeometry","getMaterial","isInteger","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","t2","pt1","getTangentAt","mat","MAX_VALUE","tz","getPointFunc","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","SplineCurve","CubicBezierCurve","QuadraticBezierCurve","intPoint","weight","point0","point1","point2","point3","instance","eyeRight","eyeLeft","orientation","vector2","pointMap","PathPrototype","fromPoints","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","Path","ShapePath","subPaths","currentPath","Font","FontLoader","getAudioContext","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","cameraL","cameraR","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","createBufferSource","onended","onEnded","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","PropertyBinding","rootNode","parsedPath","parseTrackName","findNode","AnimationObjectGroup","var_args","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindings","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","PointLightHelper","sphereSize","HemisphereLightHelper","lightSphere","GridHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","hexFrustum","hexCone","hexCross","addLine","addPoint","setPoint","BoundingBoxHelper","BoxHelper","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","createPath","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","ha","paths","createPaths","decodeAudioData","audioBuffer","eyeSepOnProjection","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setOrientation","setNodeSource","audioNode","setBuffer","play","pause","getFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetArray","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","_getValue_unbound","_setValue_unbound","Composite","targetGroup","optionalParsedPath","_targetGroup","subscribe_","firstValidIndex","bindings","isAnimationObjectGroup","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","_scheduleFading","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","_nActiveBindings","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingByName","_bindingsByRootAndName","_removeInactiveBinding","uncacheAction","bindingsByRoot","bindingsByName","_addInactiveBinding","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","isInterleavedBuffer","setFromCamera","intersectObjects","performance","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","lastFrame","currentFrame","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","coneLength","coneWidth","boneList","matrixWorldInv","boneMatrix","setColors","lightPlane","targetLine","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","AxisHelper","setColor","CatmullRomCurve3","CubicPoly","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","t3","ClosedSplineCurve3","SplineCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","SceneUtils","createMultiMaterialObject","attach","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","DynamicBufferAttribute","Float64Attribute","Int32Attribute","Int16Attribute","Uint8ClampedAttribute","Uint8Attribute","Int8Attribute","Spline","w2","w3","pa","pb","pc","pd","initFromArray","getControlPointsArray","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FaceColors","VertexColors","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateSmooth","TriangleStripDrawMode","TriangleFanDrawMode","LogLuvEncoding","CubeGeometry","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","EdgesHelper","WireframeHelper","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SimplexNoise","grad3","grad4","perm","simplex","dot3","dot4","noise","xin","yin","j1","G2","jj","gi0","gi1","gi2","noise3d","zin","k1","j2","k2","y3","z3","kk","gi3","noise4d","l1","l2","j3","k3","l3","F4","G4","x4","y4","z4","w4","gi4","t4","ATUtil","randomRange","randomInt","min1","max1","min2","max2","norm","amt","shuffle","_gsScope","_gsQueue","_next","da","ca","ba","substr","_gsDefine","cycle","_cycle","_yoyo","vars","yoyo","_repeat","_repeatDelay","repeatDelay","_dirty","_internals","isSelector","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","ratio","immediateRender","_timeline","_time","_enabled","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","_totalTime","_init","totalDuration","_totalDuration","_rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","_easeType","_easePower","lazyTweens","_lazy","_paused","_startAt","_callback","_onUpdate","onRepeat","runBackwards","fromTo","staggerTo","allTo","onComplete","onCompleteScope","callbackScope","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","onCompleteParams","onReverseComplete","onReverseCompleteParams","useFrames","overwrite","isTweening","_first","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","totalTime","killChildTweensOf","tweenLookup","pauseAll","resumeAll","globalTimeScale","_timeScale","frame","totalProgress","_labels","smoothChildTiming","_sortChildren","_swapSelfInParams","align","stagger","lazyRender","globals","pauseCallback","_forcingPlayhead","_hasPause","TweenMax","_parseTimeOrLabel","exportRoot","_remove","addLabel","rawTime","_pauseTime","removeLabel","_last","insertMultiple","appendMultiple","addPause","getLabelTime","timeline","gotoAndPlay","gotoAndStop","_hasPausedChild","_prev","getChildren","_contains","recent","_recent","shiftChildren","_kill","usesFrames","addCallback","removeCallback","removePause","tweenTo","ease","tweenFromTo","_locked","A","C","getActive","isActive","getLabelAfter","getLabelsArray","getLabelBefore","currentLabel","plugin","priority","API","_target","_func","_round","_props","_timeRes","timeResolution","autoRotate","orientToBezier","_autoRotate","_overwriteProps","_beziers","curviness","correlate","_segCount","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","bezierThrough","cubicToQuadratic","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","setRatio","_transform","_enableTransforms","_gsTransform","_onInitTween","_tween","_roundProps","bezier","_super","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","perspective","L","K","R","currentStyle","$1","S","V","M","U","W","za","ya","Q","La","skewX","Ba","rotationX","rotationY","Z","oa","difs","firstMPT","aa","X","oxp","oyp","oxr","oyr","ox","oy","ea","fa","ga","I","ia","ka","la","ja","D","E","F","G","H","J","O","_specialProps","navigator","userAgent","Y","convertToPixels","clientWidth","clientHeight","_gsCache","cacheWidths","calculateOffset","parseColor","colorStringFilter","defaultStringFilter","ma","na","xs0","xs1","rxp","pr","ra","parseComplex","appendXtra","xfirst","sa","ta","formatter","collapsible","multi","clrs","keyword","dflt","va","ua","com","greensock","plugins","registerSpecialProp","useSVGTransformAttr","Ea","setAttributeNS","Ha","Ka","xOrigin","yOrigin","getBBox","Ja","xOffset","yOffset","Ia","Da","getCTM","Ma","xPercent","yPercent","ieOffsetX","ieOffsetY","wa","xa","Aa","Ca","Transform","force3D","defaultForce3D","SVGElement","Fa","Ga","chrome","svg","getTransform","zOrigin","Pa","Na","set3DTransformRatio","setTransformRatio","skewType","skewY","_lastParsedTransform","parseTransform","transform","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","transformOrigin","svgOrigin","smoothOrigin","_transformType","backgroundPositionX","backgroundPositionY","clipTop","clipRight","clipBottom","clipLeft","Oa","xn1","Qa","_gsClassPT","removeProperty","_classNamePT","Ra","_vars","autoRound","_addLazySet","WebkitBackfaceVisibility","_linkCSSP","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","Sa","autoAlpha","Ta","cascadeTo","reservedProps","_targets","activate","_onInitAllProps","roundProps","_propLookup","pg","_add","_addTween","finals","useRadians","easeOut","easeIn","easeInOut","gap","_p1","_p2","config","GreenSockGlobals","_class","_p","_p3","randomize","template","strength","SlowMo","TweenLite","sc","gsClass","GreenSockAMDPath","_type","_power","_params","Linear","Quad","_eventTarget","wake","cancelAnimationFrame","getTime","sleep","useRAF","visibilityState","Ticker","reversed","resume","restart","eventCallback","_overwrite","defaultOverwrite","_siblings","_overwrittenProps","defaultEase","autoSleep","fp","blobDif","_plugins","onUpdateParams","onUpdateScope","onStartParams","onStartScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","stringFilter","none","auto","concurrent","allOnStart","true","false","_updateRoot","_gsTweenID","_initProps","_priority","_onDisable","_onEnable","_tempKill","_propName","overwriteProps","initAll","OrbitControls","quat","quatInverse","lastPosition","lastQuaternion","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","dollyIn","dollyScale","dollyOut","handleMouseMoveRotate","handleKeyDown","touches","handleTouchMoveRotate","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","DeviceOrientationControls","deviceOrientation","screenOrientation","alphaOffsetAngle","onDeviceOrientationChangeEvent","onScreenOrientationChangeEvent","zee","q0","setObjectQuaternion","beta","gamma","orient","updateAlphaOffsetAngle","VRControls","vrDisplay","vrDisplays","standingMatrix","frameData","VRFrameData","getVRDisplays","displays","standing","userHeight","getVRDisplay","getStandingMatrix","getFrameData","getPose","stageParameters","sittingToStandingTransform","resetPose","resetSensor","zeroSensor","ViveController","gamepad","axes","thumbpadIsPressed","triggerIsPressed","gripsArePressed","menuIsPressed","getGamepad","getButtonState","gamepads","getGamepads","findGamepad","buttons","pressed","BG","groupHolder","cubeShader","onBeat","VizHandler","getScene","cubeMap","Assets","getCubeMap","skyBoxMaterial","setEnvMap","Mecha","dae","flotilla","bonesCount","bonesPositions","bonesPositionsTween","centerTween","mouseControl","onDocumentTouchStart","mouse","innerWidth","innerHeight","boom","onDocumentMouseDown","getCamera","cubeMesh","easeNone","sizing","segmentCount","skinIndex","createBones","prevBone","createMesh","skeletonHelper","skeletonHelpers","des","spd","meshes","oldCenter","reflectionCube","initBones","reload","groundBump","cubeMaterial","prerender","postrender","getRandomOne","Shards","full","geo","tpos","ran","scr0","scr1","scr2","geom","getRenderer","generate","cubeMaps","destroyMesh","textureToo","tex","textureCube","envMaps","glow","getSide","simplexNoise","Main","onResize","FXHandler","ControlsHandler","vizParams","showControls","mainParams","fullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","toggleControls","generate_one","Asteroid","generate_grid","fxParams","song","nuts","tilt","tv","kaleidoscope","kaleidoscopeJump","rgb","dots","person","ssao","ssaoOnly","heart","items","animSpeed","colorProgress","spreadProgress","waterProgress","bgProgress","percStart","percFinish","changedValue","changed","audioParams","useMic","useSample","showDebug","volSens","beatHoldTime","beatDecayRate","bpmMode","bpmRate","fullSize","fakeKinect","depthRenderTarget","vr","composer","onBeatEnd","pixelRatio","newWidth","newHeight","getControls","controls","mobile","directionalLight","WIDTH","HEIGHT","updateShadow","roz","activeViz","activeVizCount","getLight","getCubeCameras","cubeCameraRead","cubeCameraWrite","renderW","renderH","FIXED_SIZE_H","isFullscreen","isMobile"],"mappings":"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","file":"build.js","sourcesContent":["function Events(target){\n  var events = {}, empty = [];\n  target = target || this\n  /**\n   *  On: listen to events\n   */\n  target.on = function(type, func, ctx){\n    (events[type] = events[type] || []).push([func, ctx])\n    return target\n  }\n  /**\n   *  Off: stop listening to event / specific callback\n   */\n  target.off = function(type, func){\n    type || (events = {})\n    var list = events[type] || empty,\n        i = list.length = func ? list.length : 0;\n    while(i--) func == list[i][0] && list.splice(i,1)\n    return target\n  }\n  /** \n   * Emit: send event, callbacks will be triggered\n   */\n  target.emit = function(type){\n    var e = events[type] || empty, list = e.length > 0 ? e.slice(0, e.length) : e, i=0, j;\n    while(j=list[i++]) j[0].apply(j[1], empty.slice.call(arguments, 1))\n    return target\n  };\n};","/*!\r\n * jQuery JavaScript Library v2.2.4\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2016-05-20T17:23Z\r\n */\r\n\r\n(function( global, factory ) {\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Support: Firefox 18+\r\n// Can't be in strict mode, several libs including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n//\"use strict\";\r\nvar arr = [];\r\n\r\nvar document = window.document;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar support = {};\r\n\r\n\r\n\r\nvar\r\n\tversion = \"2.2.4\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n\t// Matches dashed string for camelizing\r\n\trmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([\\da-z])/gi,\r\n\r\n\t// Used by jQuery.camelCase as callback to replace()\r\n\tfcamelCase = function( all, letter ) {\r\n\t\treturn letter.toUpperCase();\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// Start with an empty selector\r\n\tselector: \"\",\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\t\treturn num != null ?\r\n\r\n\t\t\t// Return just the one element from the set\r\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\r\n\r\n\t\t\t// Return all the elements in a clean array\r\n\t\t\tslice.call( this );\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\t\tret.context = this.context;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\r\n\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisFunction: function( obj ) {\r\n\t\treturn jQuery.type( obj ) === \"function\";\r\n\t},\r\n\r\n\tisArray: Array.isArray,\r\n\r\n\tisWindow: function( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t},\r\n\r\n\tisNumeric: function( obj ) {\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\r\n\t\tvar realStringObj = obj && obj.toString();\r\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\r\n\t},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\t\tvar key;\r\n\r\n\t\t// Not plain objects:\r\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n\t\t// - DOM nodes\r\n\t\t// - window\r\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Not own constructor property must be Object\r\n\t\tif ( obj.constructor &&\r\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\r\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Own properties are enumerated firstly, so to speed up,\r\n\t\t// if last one is own, then all properties are own\r\n\t\tfor ( key in obj ) {}\r\n\r\n\t\treturn key === undefined || hasOwn.call( obj, key );\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\ttype: function( obj ) {\r\n\t\tif ( obj == null ) {\r\n\t\t\treturn obj + \"\";\r\n\t\t}\r\n\r\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\r\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\t\ttypeof obj;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tvar script,\r\n\t\t\tindirect = eval;\r\n\r\n\t\tcode = jQuery.trim( code );\r\n\r\n\t\tif ( code ) {\r\n\r\n\t\t\t// If the code includes a valid, prologue position\r\n\t\t\t// strict mode pragma, execute code by injecting a\r\n\t\t\t// script tag into the document.\r\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\r\n\t\t\t\tscript = document.createElement( \"script\" );\r\n\t\t\t\tscript.text = code;\r\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\r\n\t\t\t\t// and removal by using an indirect global eval\r\n\r\n\t\t\t\tindirect( code );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Convert dashed to camelCase; used by the css and data modules\r\n\t// Support: IE9-11+\r\n\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n\tcamelCase: function( string ) {\r\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n\t},\r\n\r\n\tnodeName: function( elem, name ) {\r\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// Bind a function to a context, optionally partially applying any\r\n\t// arguments.\r\n\tproxy: function( fn, context ) {\r\n\t\tvar tmp, args, proxy;\r\n\r\n\t\tif ( typeof context === \"string\" ) {\r\n\t\t\ttmp = fn[ context ];\r\n\t\t\tcontext = fn;\r\n\t\t\tfn = tmp;\r\n\t\t}\r\n\r\n\t\t// Quick check to determine if target is callable, in the spec\r\n\t\t// this throws a TypeError, but we will just return undefined.\r\n\t\tif ( !jQuery.isFunction( fn ) ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Simulated bind\r\n\t\targs = slice.call( arguments, 2 );\r\n\t\tproxy = function() {\r\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t\t};\r\n\r\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\t\treturn proxy;\r\n\t},\r\n\r\n\tnow: Date.now,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\n// JSHint would error on this code due to the Symbol not being defined in ES5.\r\n// Defining this global in .jshintrc would create a danger of using the global\r\n// unguarded in another place, it seems safer to just disable JSHint for these\r\n// three lines.\r\n/* jshint ignore: start */\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n/* jshint ignore: end */\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\nfunction( i, name ) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: iOS 8.2 (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = jQuery.type( obj );\r\n\r\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\nvar Sizzle =\r\n/*!\r\n * Sizzle CSS Selector Engine v2.2.1\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2015-10-17\r\n */\r\n(function( window ) {\r\n\r\nvar i,\r\n\tsupport,\r\n\tExpr,\r\n\tgetText,\r\n\tisXML,\r\n\ttokenize,\r\n\tcompile,\r\n\tselect,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\r\n\t// Local document vars\r\n\tsetDocument,\r\n\tdocument,\r\n\tdocElem,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\trbuggyMatches,\r\n\tmatches,\r\n\tcontains,\r\n\r\n\t// Instance-specific data\r\n\texpando = \"sizzle\" + 1 * new Date(),\r\n\tpreferredDoc = window.document,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t// General-purpose constants\r\n\tMAX_NEGATIVE = 1 << 31,\r\n\r\n\t// Instance methods\r\n\thasOwn = ({}).hasOwnProperty,\r\n\tarr = [],\r\n\tpop = arr.pop,\r\n\tpush_native = arr.push,\r\n\tpush = arr.push,\r\n\tslice = arr.slice,\r\n\t// Use a stripped-down indexOf as it's faster than native\r\n\t// http://jsperf.com/thor-indexof-vs-for/5\r\n\tindexOf = function( list, elem ) {\r\n\t\tvar i = 0,\r\n\t\t\tlen = list.length;\r\n\t\tfor ( ; i < len; i++ ) {\r\n\t\t\tif ( list[i] === elem ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\r\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\r\n\t\t\"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\r\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\trescape = /'|\\\\/g,\r\n\r\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n\tfunescape = function( _, escaped, escapedWhitespace ) {\r\n\t\tvar high = \"0x\" + escaped - 0x10000;\r\n\t\t// NaN means non-codepoint\r\n\t\t// Support: Firefox<24\r\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\r\n\t\treturn high !== high || escapedWhitespace ?\r\n\t\t\tescaped :\r\n\t\t\thigh < 0 ?\r\n\t\t\t\t// BMP codepoint\r\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\r\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// Used for iframes\r\n\t// See setDocument()\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t};\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t(arr = slice.call( preferredDoc.childNodes )),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\t// Support: Android<4.0\r\n\t// Detect silently failing push.apply\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = { apply: arr.length ?\r\n\r\n\t\t// Leverage slice if possible\r\n\t\tfunction( target, els ) {\r\n\t\t\tpush_native.apply( target, slice.call(els) );\r\n\t\t} :\r\n\r\n\t\t// Support: IE<9\r\n\t\t// Otherwise append directly\r\n\t\tfunction( target, els ) {\r\n\t\t\tvar j = target.length,\r\n\t\t\t\ti = 0;\r\n\t\t\t// Can't trust NodeList.length\r\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\r\n\t\t\ttarget.length = j - 1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\r\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n\t\t\tsetDocument( context );\r\n\t\t}\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( (m = match[1]) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\r\n\t\t\t\t\t\t\tcontains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[2] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\r\n\t\t\t\t\tcontext.getElementsByClassName ) {\r\n\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( support.qsa &&\r\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\r\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n\r\n\t\t\t\tif ( nodeType !== 1 ) {\r\n\t\t\t\t\tnewContext = context;\r\n\t\t\t\t\tnewSelector = selector;\r\n\r\n\t\t\t\t// qSA looks outside Element context, which is not what we want\r\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\r\n\t\t\t\t// Support: IE <=8\r\n\t\t\t\t// Exclude object elements\r\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\r\n\r\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\r\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( newSelector ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn (cache[ key + \" \" ] = value);\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by Sizzle\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created div and expects a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar div = document.createElement(\"div\");\r\n\r\n\ttry {\r\n\t\treturn !!fn( div );\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t} finally {\r\n\t\t// Remove from its parent by default\r\n\t\tif ( div.parentNode ) {\r\n\t\t\tdiv.parentNode.removeChild( div );\r\n\t\t}\r\n\t\t// release memory in IE\r\n\t\tdiv = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds the same handler for all of the specified attrs\r\n * @param {String} attrs Pipe-separated list of attributes\r\n * @param {Function} handler The method that will be applied\r\n */\r\nfunction addHandle( attrs, handler ) {\r\n\tvar arr = attrs.split(\"|\"),\r\n\t\ti = arr.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tExpr.attrHandle[ arr[i] ] = handler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks document order of two siblings\r\n * @param {Element} a\r\n * @param {Element} b\r\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n */\r\nfunction siblingCheck( a, b ) {\r\n\tvar cur = b && a,\r\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\r\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\r\n\r\n\t// Use IE sourceIndex if available on both nodes\r\n\tif ( diff ) {\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t// Check if b follows a\r\n\tif ( cur ) {\r\n\t\twhile ( (cur = cur.nextSibling) ) {\r\n\t\t\tif ( cur === b ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a ? 1 : -1;\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn name === \"input\" && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction(function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction(function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\r\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a Sizzle context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n// Expose support vars for convenience\r\nsupport = Sizzle.support = {};\r\n\r\n/**\r\n * Detects XML nodes\r\n * @param {Element|Object} elem An element or a document\r\n * @returns {Boolean} True iff elem is a non-HTML XML node\r\n */\r\nisXML = Sizzle.isXML = function( elem ) {\r\n\t// documentElement is verified for cases where it doesn't yet exist\r\n\t// (such as loading iframes in IE - #4833)\r\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [doc] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nsetDocument = Sizzle.setDocument = function( node ) {\r\n\tvar hasCompare, parent,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocElem = document.documentElement;\r\n\tdocumentIsHTML = !isXML( document );\r\n\r\n\t// Support: IE 9-11, Edge\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\r\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\r\n\t\t// Support: IE 11\r\n\t\tif ( parent.addEventListener ) {\r\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\r\n\r\n\t\t// Support: IE 9 - 10 only\r\n\t\t} else if ( parent.attachEvent ) {\r\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Attributes\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Support: IE<8\r\n\t// Verify that getAttribute really returns attributes and not properties\r\n\t// (excepting IE8 booleans)\r\n\tsupport.attributes = assert(function( div ) {\r\n\t\tdiv.className = \"i\";\r\n\t\treturn !div.getAttribute(\"className\");\r\n\t});\r\n\r\n\t/* getElement(s)By*\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Check if getElementsByTagName(\"*\") returns only elements\r\n\tsupport.getElementsByTagName = assert(function( div ) {\r\n\t\tdiv.appendChild( document.createComment(\"\") );\r\n\t\treturn !div.getElementsByTagName(\"*\").length;\r\n\t});\r\n\r\n\t// Support: IE<9\r\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\r\n\r\n\t// Support: IE<10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert(function( div ) {\r\n\t\tdocElem.appendChild( div ).id = expando;\r\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\r\n\t});\r\n\r\n\t// ID find and filter\r\n\tif ( support.getById ) {\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar m = context.getElementById( id );\r\n\t\t\t\treturn m ? [ m ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t\tExpr.filter[\"ID\"] = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t} else {\r\n\t\t// Support: IE6/7\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tdelete Expr.find[\"ID\"];\r\n\r\n\t\tExpr.filter[\"ID\"] =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode(\"id\");\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\r\n\t\tfunction( tag, context ) {\r\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t\t} else if ( support.qsa ) {\r\n\t\t\t\treturn context.querySelectorAll( tag );\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\tfunction( tag, context ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ttmp = [],\r\n\t\t\t\ti = 0,\r\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\r\n\t\t\t\tresults = context.getElementsByTagName( tag );\r\n\r\n\t\t\t// Filter out possible comments\r\n\t\t\tif ( tag === \"*\" ) {\r\n\t\t\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\ttmp.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t// Class\r\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n\trbuggyMatches = [];\r\n\r\n\t// qSa(:focus) reports false when true (Chrome 21)\r\n\t// We allow this because of a bug in IE8/9 that throws an error\r\n\t// whenever `document.activeElement` is accessed on an iframe\r\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n\t// See http://bugs.jquery.com/ticket/13378\r\n\trbuggyQSA = [];\r\n\r\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\r\n\t\t// Build QSA regex\r\n\t\t// Regex strategy adopted from Diego Perini\r\n\t\tassert(function( div ) {\r\n\t\t\t// Select is set to empty string on purpose\r\n\t\t\t// This is to test IE's treatment of not explicitly\r\n\t\t\t// setting a boolean content attribute,\r\n\t\t\t// since its presence should be enough\r\n\t\t\t// http://bugs.jquery.com/ticket/12359\r\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\r\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\r\n\t\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t\t// Support: IE8, Opera 11-12.16\r\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\r\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\r\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\r\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\r\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\r\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\"~=\");\r\n\t\t\t}\r\n\r\n\t\t\t// Webkit/Opera - :checked should return selected option elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\r\n\t\t\t\trbuggyQSA.push(\":checked\");\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Safari 8+, iOS 8+\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\r\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Support: Windows 8 Native Apps\r\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Enforce case-sensitivity of name attribute\r\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\r\n\t\t\t}\r\n\r\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\r\n\t\t\tdiv.querySelectorAll(\"*,:x\");\r\n\t\t\trbuggyQSA.push(\",.*:\");\r\n\t\t});\r\n\t}\r\n\r\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\r\n\t\tdocElem.webkitMatchesSelector ||\r\n\t\tdocElem.mozMatchesSelector ||\r\n\t\tdocElem.oMatchesSelector ||\r\n\t\tdocElem.msMatchesSelector) )) ) {\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Check to see if it's possible to do matchesSelector\r\n\t\t\t// on a disconnected node (IE 9)\r\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n\t\t\t// This should fail with an exception\r\n\t\t\t// Gecko does not error, returns false instead\r\n\t\t\tmatches.call( div, \"[s!='']:x\" );\r\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\r\n\t\t});\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n\t/* Contains\r\n\t---------------------------------------------------------------------- */\r\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\r\n\r\n\t// Element contains another\r\n\t// Purposefully self-exclusive\r\n\t// As in, an element does not contain itself\r\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\r\n\t\tfunction( a, b ) {\r\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\r\n\t\t\t\tbup = b && b.parentNode;\r\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\t\t\t\tadown.contains ?\r\n\t\t\t\t\tadown.contains( bup ) :\r\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t\t\t));\r\n\t\t} :\r\n\t\tfunction( a, b ) {\r\n\t\t\tif ( b ) {\r\n\t\t\t\twhile ( (b = b.parentNode) ) {\r\n\t\t\t\t\tif ( b === a ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = hasCompare ?\r\n\tfunction( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t} :\r\n\tfunction( a, b ) {\r\n\t\t// Exit early if the nodes are identical\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\taup = a.parentNode,\r\n\t\t\tbup = b.parentNode,\r\n\t\t\tap = [ a ],\r\n\t\t\tbp = [ b ];\r\n\r\n\t\t// Parentless nodes are either documents or disconnected\r\n\t\tif ( !aup || !bup ) {\r\n\t\t\treturn a === document ? -1 :\r\n\t\t\t\tb === document ? 1 :\r\n\t\t\t\taup ? -1 :\r\n\t\t\t\tbup ? 1 :\r\n\t\t\t\tsortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\r\n\t\t// If the nodes are siblings, we can do a quick check\r\n\t\t} else if ( aup === bup ) {\r\n\t\t\treturn siblingCheck( a, b );\r\n\t\t}\r\n\r\n\t\t// Otherwise we need full lists of their ancestors for comparison\r\n\t\tcur = a;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tap.unshift( cur );\r\n\t\t}\r\n\t\tcur = b;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tbp.unshift( cur );\r\n\t\t}\r\n\r\n\t\t// Walk down the tree looking for a discrepancy\r\n\t\twhile ( ap[i] === bp[i] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i ?\r\n\t\t\t// Do a sibling check if the nodes have a common ancestor\r\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\r\n\r\n\t\t\t// Otherwise nodes in our document sort first\r\n\t\t\tap[i] === preferredDoc ? -1 :\r\n\t\t\tbp[i] === preferredDoc ? 1 :\r\n\t\t\t0;\r\n\t};\r\n\r\n\treturn document;\r\n};\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n\treturn Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\t// Make sure that attribute selectors are quoted\r\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n\tif ( support.matchesSelector && documentIsHTML &&\r\n\t\t!compilerCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nSizzle.contains = function( context, elem ) {\r\n\t// Set document vars if needed\r\n\tif ( ( context.ownerDocument || context ) !== document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn contains( context, elem );\r\n};\r\n\r\nSizzle.attr = function( elem, name ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\treturn val !== undefined ?\r\n\t\tval :\r\n\t\tsupport.attributes || !documentIsHTML ?\r\n\t\t\telem.getAttribute( name ) :\r\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\r\n\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\nSizzle.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\thasDuplicate = !support.detectDuplicates;\r\n\tsortInput = !support.sortStable && results.slice( 0 );\r\n\tresults.sort( sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tresults.splice( duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n\tvar node,\r\n\t\tret = \"\",\r\n\t\ti = 0,\r\n\t\tnodeType = elem.nodeType;\r\n\r\n\tif ( !nodeType ) {\r\n\t\t// If no nodeType, this is expected to be an array\r\n\t\twhile ( (node = elem[i++]) ) {\r\n\t\t\t// Do not traverse comment nodes\r\n\t\t\tret += getText( node );\r\n\t\t}\r\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n\t\t// Use textContent for elements\r\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\r\n\t\tif ( typeof elem.textContent === \"string\" ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t} else {\r\n\t\t\t// Traverse its children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tret += getText( elem );\r\n\t\t\t}\r\n\t\t}\r\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n\t\treturn elem.nodeValue;\r\n\t}\r\n\t// Do not include comment or processing instruction nodes\r\n\r\n\treturn ret;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\t\"ATTR\": function( match ) {\r\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[2] === \"~=\" ) {\r\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( match ) {\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[1] = match[1].toLowerCase();\r\n\r\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[3] ) {\r\n\t\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[3] ) {\r\n\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[6] && match[2];\r\n\r\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[3] ) {\r\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\r\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\t\"TAG\": function( nodeNameSelector ) {\r\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() { return true; } :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CLASS\": function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t\"ATTR\": function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = Sizzle.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\treturn operator === \"=\" ? result === check :\r\n\t\t\t\t\toperator === \"!=\" ? result !== check :\r\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n\t\t\t\t\tfalse;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\r\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\tnode = parent;\r\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( pseudo, argument ) {\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as Sizzle does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\t\t// Potentially complex pseudos\r\n\t\t\"not\": markFunction(function( selector ) {\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}) :\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tinput[0] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\t\t\t\t\t// Don't keep the element (issue #299)\r\n\t\t\t\t\tinput[0] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"has\": markFunction(function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"contains\": markFunction(function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\t\"lang\": markFunction( function( lang ) {\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\r\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// Miscellaneous\r\n\t\t\"target\": function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\t\"root\": function( elem ) {\r\n\t\t\treturn elem === docElem;\r\n\t\t},\r\n\r\n\t\t\"focus\": function( elem ) {\r\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\t\"enabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === false;\r\n\t\t},\r\n\r\n\t\t\"disabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === true;\r\n\t\t},\r\n\r\n\t\t\"checked\": function( elem ) {\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\r\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n\t\t},\r\n\r\n\t\t\"selected\": function( elem ) {\r\n\t\t\t// Accessing this property makes selected-by-default\r\n\t\t\t// options in Safari work properly\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\t\"empty\": function( elem ) {\r\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t\"parent\": function( elem ) {\r\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\t\"header\": function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"input\": function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"button\": function( elem ) {\r\n\t\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n\t\t},\r\n\r\n\t\t\"text\": function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\r\n\t\t\t\telem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE<8\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\r\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\t\"first\": createPositionalPseudo(function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t}),\r\n\r\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t}),\r\n\r\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t}),\r\n\r\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t})\r\n\t}\r\n};\r\n\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( (tokens = []) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push({\r\n\t\t\t\tvalue: matched,\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\r\n\t\t\t});\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push({\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t});\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\treturn parseOnly ?\r\n\t\tsoFar.length :\r\n\t\tsoFar ?\r\n\t\t\tSizzle.error( selector ) :\r\n\t\t\t// Cache the tokens\r\n\t\t\ttokenCache( selector, groups ).slice( 0 );\r\n};\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[i].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tcheckNonElements = base && dir === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, uniqueCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\r\n\r\n\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[0];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tSizzle( selector, contexts[i], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction(function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems,\r\n\r\n\t\t\tmatcherOut = matcher ?\r\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t\t[] :\r\n\r\n\t\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\t\tresults :\r\n\t\t\t\tmatcherIn;\r\n\r\n\t\t// Find primary matches\r\n\t\tif ( matcher ) {\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( (elem = temp[i]) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\r\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n\t\t\t\t(checkContext = context).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\t\t\t// Avoid hanging onto element (issue #299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\toutermostContext = context === document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: IE<9, Safari\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\r\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tSizzle.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[i] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n};\r\n\r\n/**\r\n * A low-level selection function that works with Sizzle's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with Sizzle.compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nselect = Sizzle.select = function( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[0] = match[0].slice( 0 );\r\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\r\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[i];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( (find = Expr.find[ type ]) ) {\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( (seed = find(\r\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\r\n\t\t\t\t)) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n};\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome 14-35+\r\n// Always assume duplicates if they aren't passed to the comparison function\r\nsupport.detectDuplicates = !!hasDuplicate;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert(function( div1 ) {\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\r\n});\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\nif ( !assert(function( div ) {\r\n\tdiv.innerHTML = \"<a href='#'></a>\";\r\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\r\n}) ) {\r\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\nif ( !support.attributes || !assert(function( div ) {\r\n\tdiv.innerHTML = \"<input/>\";\r\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\r\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\r\n}) ) {\r\n\taddHandle( \"value\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n\t\t\treturn elem.defaultValue;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\nif ( !assert(function( div ) {\r\n\treturn div.getAttribute(\"disabled\") == null;\r\n}) ) {\r\n\taddHandle( booleans, function( elem, name, isXML ) {\r\n\t\tvar val;\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\r\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\r\n\t\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nreturn Sizzle;\r\n\r\n})( window );\r\n\r\n\r\n\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\n\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\r\n\r\n\r\n\r\nvar risSimple = /^.[^:#\\[\\.,]*$/;\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( jQuery.isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\t/* jshint -W018 */\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( typeof qualifier === \"string\" ) {\r\n\t\tif ( risSimple.test( qualifier ) ) {\r\n\t\t\treturn jQuery.filter( qualifier, elements, not );\r\n\t\t}\r\n\r\n\t\tqualifier = jQuery.filter( qualifier, elements );\r\n\t}\r\n\r\n\treturn jQuery.grep( elements, function( elem ) {\r\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t} );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\treturn elems.length === 1 && elem.nodeType === 1 ?\r\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\r\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\t\treturn elem.nodeType === 1;\r\n\t\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i,\r\n\t\t\tlen = this.length,\r\n\t\t\tret = [],\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\r\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\r\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\r\n\t\treturn ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\t// Support: Blackberry 4.6\r\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\r\n\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.context = document;\r\n\t\t\t\t\tthis.selector = selector;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis.context = this[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( jQuery.isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\tif ( selector.selector !== undefined ) {\r\n\t\t\tthis.selector = selector.selector;\r\n\t\t\tthis.context = selector.context;\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n\t\t\t\tjQuery( selectors, context || this.context ) :\r\n\t\t\t\t0;\r\n\r\n\t\tfor ( ; i < l; i++ ) {\r\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t// Always skip document fragments\r\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\r\n\t\t\t\t\tpos.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t// Don't pass non-elements to Sizzle\r\n\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnotwhite = ( /\\S+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, listener list, final state\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n\r\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Keep pipe for back-compat\r\n\t\tpromise.pipe = promise.then;\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 3 ];\r\n\r\n\t\t\t// promise[ done | fail | progress ] = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add( function() {\r\n\r\n\t\t\t\t\t// state = [ resolved | rejected ]\r\n\t\t\t\t\tstate = stateString;\r\n\r\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\r\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n\t\t\t}\r\n\r\n\t\t\t// deferred[ resolve | reject | notify ]\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\r\n\t\tvar i = 0,\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\t\t\tlength = resolveValues.length,\r\n\r\n\t\t\t// the count of uncompleted subordinates\r\n\t\t\tremaining = length !== 1 ||\r\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n\t\t\t// the master Deferred.\r\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\r\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n\t\t\t// Update function for both resolve and progress values\r\n\t\t\tupdateFunc = function( i, contexts, values ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tcontexts[ i ] = this;\r\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( values === progressValues ) {\r\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\r\n\t\t\t\t\t} else if ( !( --remaining ) ) {\r\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tprogressValues, progressContexts, resolveContexts;\r\n\r\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\r\n\t\tif ( length > 1 ) {\r\n\t\t\tprogressValues = new Array( length );\r\n\t\t\tprogressContexts = new Array( length );\r\n\t\t\tresolveContexts = new Array( length );\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n\t\t\t\t\tresolveValues[ i ].promise()\r\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\r\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\r\n\t\t\t\t\t\t.fail( deferred.reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t--remaining;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we're not waiting on anything, resolve the master\r\n\t\tif ( !remaining ) {\r\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\r\n\t\t}\r\n\r\n\t\treturn deferred.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called\r\n\t\t// after the browser event has already occurred.\r\n\t\t// Support: IE9-10 only\r\n\t\t// Older IE sometimes signals \"interactive\" too soon\r\n\t\tif ( document.readyState === \"complete\" ||\r\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\twindow.setTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\t/* jshint -W018 */\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tregister: function( owner, initial ) {\r\n\t\tvar value = initial || {};\r\n\r\n\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t// use plain assignment\r\n\t\tif ( owner.nodeType ) {\r\n\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\r\n\t\t// configurability must be true to allow the property to be\r\n\t\t// deleted with the delete operator\r\n\t\t} else {\r\n\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\tvalue: value,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn owner[ this.expando ];\r\n\t},\r\n\tcache: function( owner ) {\r\n\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return an empty object.\r\n\t\tif ( !acceptData( owner ) ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.register( owner );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = data === \"true\" ? true :\r\n\t\t\t\t\tdata === \"false\" ? false :\r\n\t\t\t\t\tdata === \"null\" ? null :\r\n\r\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\r\n\t\t\t\t\t+data + \"\" === data ? +data :\r\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n\t\t\t\t\tdata;\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE11+\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data, camelKey;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key as-is\r\n\t\t\t\tdata = dataUser.get( elem, key ) ||\r\n\r\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\r\n\t\t\t\t\t// This is for 2.2.x only\r\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\r\n\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamelKey = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key camelized\r\n\t\t\t\tdata = dataUser.get( elem, camelKey );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tcamelKey = jQuery.camelCase( key );\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// First, attempt to store a copy or reference of any\r\n\t\t\t\t// data that might've been store with a camelCased key.\r\n\t\t\t\tvar data = dataUser.get( this, camelKey );\r\n\r\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\r\n\t\t\t\t// store property names with dashes in a camelCase form.\r\n\t\t\t\t// This might not apply to all properties...*\r\n\t\t\t\tdataUser.set( this, camelKey, value );\r\n\r\n\t\t\t\t// *... In the case of properties that might _actually_\r\n\t\t\t\t// have dashes, we need to also store a copy of that\r\n\t\t\t\t// unchanged property.\r\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\r\n\t\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar isHidden = function( elem, el ) {\r\n\r\n\t\t// isHidden might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\r\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\r\n\t};\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted,\r\n\t\tscale = 1,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() { return tween.cur(); } :\r\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\r\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\r\n\t\t\tscale = scale || \".5\";\r\n\r\n\t\t\t// Adjust and apply\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\r\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\r\n\t\t} while (\r\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\r\n\t\t);\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([\\w:-]+)/ );\r\n\r\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n// We have to close these tags to support XHTML (#13200)\r\nvar wrapMap = {\r\n\r\n\t// Support: IE9\r\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\n// Support: IE9\r\nwrapMap.optgroup = wrapMap.option;\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE9-11+\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\r\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\r\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\r\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\r\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\r\n\t\t\t[];\r\n\r\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\r\n\t\tjQuery.merge( [ context ], ret ) :\r\n\t\tret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, contains, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( contains ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0-4.3, Safari<=5.1\r\n\t// Check state lost if the name is set (#11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Safari<=5.1, Android<4.2\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE<=11+\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n} )();\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\n// Support: IE9\r\n// See #13393 for more info\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( event ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tevent = jQuery.event.fix( event );\r\n\r\n\t\tvar i, j, ret, matched, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\targs = slice.call( arguments ),\r\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\r\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, matches, sel, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Support (at least): Chrome, IE9\r\n\t\t// Find delegate handlers\r\n\t\t// Black-hole SVG <use> instance trees (#13180)\r\n\t\t//\r\n\t\t// Support: Firefox<=42+\r\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\r\n\t\tif ( delegateCount && cur.nodeType &&\r\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (#13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matches[ sel ] ) {\r\n\t\t\t\t\t\t\tmatches.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matches.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\t// Includes some event props shared by KeyEvent and MouseEvent\r\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\r\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\r\n\r\n\tfixHooks: {},\r\n\r\n\tkeyHooks: {\r\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\r\n\t\t\t// Add which for key events\r\n\t\t\tif ( event.which == null ) {\r\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tmouseHooks: {\r\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\r\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\t\t\tvar eventDoc, doc, body,\r\n\t\t\t\tbutton = original.button;\r\n\r\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n\t\t\t\tdoc = eventDoc.documentElement;\r\n\t\t\t\tbody = eventDoc.body;\r\n\r\n\t\t\t\tevent.pageX = original.clientX +\r\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n\t\t\t\tevent.pageY = original.clientY +\r\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n\t\t\t}\r\n\r\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\t\t// Note: button is not normalized, so don't use it\r\n\t\t\tif ( !event.which && button !== undefined ) {\r\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tfix: function( event ) {\r\n\t\tif ( event[ jQuery.expando ] ) {\r\n\t\t\treturn event;\r\n\t\t}\r\n\r\n\t\t// Create a writable copy of the event object and normalize some properties\r\n\t\tvar i, prop, copy,\r\n\t\t\ttype = event.type,\r\n\t\t\toriginalEvent = event,\r\n\t\t\tfixHook = this.fixHooks[ type ];\r\n\r\n\t\tif ( !fixHook ) {\r\n\t\t\tthis.fixHooks[ type ] = fixHook =\r\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\r\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\r\n\t\t\t\t{};\r\n\t\t}\r\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n\t\tevent = new jQuery.Event( originalEvent );\r\n\r\n\t\ti = copy.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tprop = copy[ i ];\r\n\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n\t\t}\r\n\r\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\r\n\t\t// All events should have a target; Cordova deviceready doesn't\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = document;\r\n\t\t}\r\n\r\n\t\t// Support: Safari 6.0+, Chrome<28\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tif ( event.target.nodeType === 3 ) {\r\n\t\t\tevent.target = event.target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android<4.0\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\tisSimulated: false,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://code.google.com/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\r\n\r\n\t// Support: IE 10-11, Edge 10240+\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\trscriptTypeMasked = /^true\\/(.*)/,\r\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\r\n\r\n// Manipulating tables requires a tbody\r\nfunction manipulationTarget( elem, content ) {\r\n\treturn jQuery.nodeName( elem, \"table\" ) &&\r\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\r\n\r\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\r\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\r\n\t\telem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tvar match = rscriptTypeMasked.exec( elem.type );\r\n\r\n\tif ( match ) {\r\n\t\telem.type = match[ 1 ];\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.access( src );\r\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdelete pdataCur.handle;\r\n\t\t\tpdataCur.events = {};\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = concat.apply( [], args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( isFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (#8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Reenable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// Keep domManip exposed until 3.0 (gh-2225)\r\n\tdomManip: domManip,\r\n\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: QtWebKit\r\n\t\t\t// .get() because push.apply(_, arraylike) throws\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\n\r\n\r\nvar iframe,\r\n\telemdisplay = {\r\n\r\n\t\t// Support: Firefox\r\n\t\t// We have to pre-define these values for FF (#10227)\r\n\t\tHTML: \"block\",\r\n\t\tBODY: \"block\"\r\n\t};\r\n\r\n/**\r\n * Retrieve the actual display of a element\r\n * @param {String} name nodeName of the element\r\n * @param {Object} doc Document object\r\n */\r\n\r\n// Called only from within defaultDisplay\r\nfunction actualDisplay( name, doc ) {\r\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\r\n\r\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\r\n\r\n\t// We don't have any data stored on the element,\r\n\t// so use \"detach\" method as fast way to get rid of the element\r\n\telem.detach();\r\n\r\n\treturn display;\r\n}\r\n\r\n/**\r\n * Try to determine the default display value of an element\r\n * @param {String} nodeName\r\n */\r\nfunction defaultDisplay( nodeName ) {\r\n\tvar doc = document,\r\n\t\tdisplay = elemdisplay[ nodeName ];\r\n\r\n\tif ( !display ) {\r\n\t\tdisplay = actualDisplay( nodeName, doc );\r\n\r\n\t\t// If the simple way fails, read from inside an iframe\r\n\t\tif ( display === \"none\" || !display ) {\r\n\r\n\t\t\t// Use the already-created iframe if possible\r\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\r\n\t\t\t\t.appendTo( doc.documentElement );\r\n\r\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\r\n\t\t\tdoc = iframe[ 0 ].contentDocument;\r\n\r\n\t\t\t// Support: IE\r\n\t\t\tdoc.write();\r\n\t\t\tdoc.close();\r\n\r\n\t\t\tdisplay = actualDisplay( nodeName, doc );\r\n\t\t\tiframe.detach();\r\n\t\t}\r\n\r\n\t\t// Store the correct default display\r\n\t\telemdisplay[ nodeName ] = display;\r\n\t}\r\n\r\n\treturn display;\r\n}\r\nvar rmargin = ( /^margin/ );\r\n\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view || !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar swap = function( elem, options, callback, args ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.apply( elem, args || [] );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\n( function() {\r\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE9-11+\r\n\t// Style of cloned element affects source element cloned (#8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\r\n\t\t\"padding:0;margin-top:1px;position:absolute\";\r\n\tcontainer.appendChild( div );\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\t\tdiv.style.cssText =\r\n\r\n\t\t\t// Support: Firefox<29, Android 2.3\r\n\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\r\n\t\t\t\"position:relative;display:block;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"top:1%;width:50%\";\r\n\t\tdiv.innerHTML = \"\";\r\n\t\tdocumentElement.appendChild( container );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\r\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.marginRight = \"50%\";\r\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\t}\r\n\r\n\tjQuery.extend( support, {\r\n\t\tpixelPosition: function() {\r\n\r\n\t\t\t// This test is executed only once but we still do memoizing\r\n\t\t\t// since we can use the boxSizingReliable pre-computing.\r\n\t\t\t// No need to check if the test was already performed, though.\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 4.0-4.3\r\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\r\n\t\t\t// since that compresses better and they're computed together anyway.\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn pixelMarginRightVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\r\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\treliableMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 2.3\r\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\r\n\t\t\t// gets computed margin-right based on width of container. (#3333)\r\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n\t\t\t// This support function is only executed once so no memoizing is needed.\r\n\t\t\tvar ret,\r\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\r\n\r\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\r\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\r\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\r\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n\t\t\tdiv.style.width = \"1px\";\r\n\t\t\tdocumentElement.appendChild( container );\r\n\r\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\r\n\r\n\t\t\tdocumentElement.removeChild( container );\r\n\t\t\tdiv.removeChild( marginDiv );\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\r\n\r\n\t// Support: Opera 12.1x only\r\n\t// Fall back to style even without computed\r\n\t// computed is undefined for elems on document fragments\r\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\tret = jQuery.style( elem, name );\r\n\t}\r\n\r\n\t// Support: IE9\r\n\t// getPropertyValue is only needed for .css('filter') (#12537)\r\n\tif ( computed ) {\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\r\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE9-11+\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t},\r\n\r\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style;\r\n\r\n// Return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Shortcut for names that are not vendor prefixed\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\r\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n\r\n\t\t// If we already have the right measurement, avoid augmentation\r\n\t\t4 :\r\n\r\n\t\t// Otherwise initialize for horizontal or vertical properties\r\n\t\tname === \"width\" ? 1 : 0,\r\n\r\n\t\tval = 0;\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin, so add it if we want it\r\n\t\tif ( extra === \"margin\" ) {\r\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\tif ( isBorderBox ) {\r\n\r\n\t\t\t// border-box includes padding, so remove it if we want content\r\n\t\t\tif ( extra === \"content\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, extra isn't border nor margin, so remove border\r\n\t\t\tif ( extra !== \"margin\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// At this point, extra isn't content, so add padding\r\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// At this point, extra isn't content nor padding, so add border\r\n\t\t\tif ( extra !== \"padding\" ) {\r\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn val;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, name, extra ) {\r\n\r\n\t// Start with offset property, which is equivalent to the border-box value\r\n\tvar valueIsBorderBox = true,\r\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n\t\tstyles = getStyles( elem ),\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n\tif ( val <= 0 || val == null ) {\r\n\r\n\t\t// Fall back to computed then uncomputed css if necessary\r\n\t\tval = curCSS( elem, name, styles );\r\n\t\tif ( val < 0 || val == null ) {\r\n\t\t\tval = elem.style[ name ];\r\n\t\t}\r\n\r\n\t\t// Computed unit is not pixels. Stop here and return.\r\n\t\tif ( rnumnonpx.test( val ) ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\t// Check for style in case a browser which returns unreliable values\r\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\r\n\t\tvalueIsBorderBox = isBorderBox &&\r\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\r\n\r\n\t\t// Normalize \"\", auto, and prepare for extra\r\n\t\tval = parseFloat( val ) || 0;\r\n\t}\r\n\r\n\t// Use the active box-sizing model to add/subtract irrelevant styles\r\n\treturn ( val +\r\n\t\taugmentWidthOrHeight(\r\n\t\t\telem,\r\n\t\t\tname,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem, hidden,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Reset the inline display of this element to learn if it is\r\n\t\t\t// being hidden by cascaded rules or not\r\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\r\n\t\t\t\telem.style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set elements which have been overridden with display: none\r\n\t\t\t// in a stylesheet to whatever the default browser style is\r\n\t\t\t// for such an element\r\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.access(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thidden = isHidden( elem );\r\n\r\n\t\t\tif ( display !== \"none\" || !hidden ) {\r\n\t\t\t\tdataPriv.set(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of most of the elements in a second loop\r\n\t// to avoid the constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\t\"animationIterationCount\": true,\r\n\t\t\"columnCount\": true,\r\n\t\t\"fillOpacity\": true,\r\n\t\t\"flexGrow\": true,\r\n\t\t\"flexShrink\": true,\r\n\t\t\"fontWeight\": true,\r\n\t\t\"lineHeight\": true,\r\n\t\t\"opacity\": true,\r\n\t\t\"order\": true,\r\n\t\t\"orphans\": true,\r\n\t\t\"widows\": true,\r\n\t\t\"zIndex\": true,\r\n\t\t\"zoom\": true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {\r\n\t\t\"float\": \"cssFloat\"\r\n\t},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = jQuery.camelCase( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug #9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\tif ( type === \"number\" ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE9-11+\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tstyle[ name ] = value;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = jQuery.camelCase( name );\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\r\n\tjQuery.cssHooks[ name ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\t\t\t\t\telem.offsetWidth === 0 ?\r\n\t\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\r\n\t\t\t\t\t\t} ) :\r\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = extra && getStyles( elem ),\r\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\textra,\r\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\t\tstyles\r\n\t\t\t\t);\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ name ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, name );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Support: Android 2.3\r\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\r\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( !rmargin.test( prefix ) ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( jQuery.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t},\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHidden( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\r\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\r\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE9\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back Compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, timerId,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = jQuery.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\t/* jshint validthis: true */\r\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHidden( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Handle queue: false promises\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Height/width overflow pass\r\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n\r\n\t\t// Make sure that nothing sneaks out\r\n\t\t// Record all 3 overflow attributes because IE9-10 do not\r\n\t\t// change the overflow attribute when overflowX and\r\n\t\t// overflowY are set to the same value\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Set display property to inline-block for height/width\r\n\t\t// animations on inline elements that are having width/height animated\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\r\n\t\t// Test default display if display is currently \"none\"\r\n\t\tcheckDisplay = display === \"none\" ?\r\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\r\n\r\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\t\t\tstyle.display = \"inline-block\";\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// show/hide pass\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.exec( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\r\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\r\n\t\t// Any non-fx value stops us from restoring the original display value\r\n\t\t} else {\r\n\t\t\tdisplay = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !jQuery.isEmptyObject( orig ) ) {\r\n\t\tif ( dataShow ) {\r\n\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\r\n\t\t}\r\n\r\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n\t\tif ( toggle ) {\r\n\t\t\tdataShow.hidden = !hidden;\r\n\t\t}\r\n\t\tif ( hidden ) {\r\n\t\t\tjQuery( elem ).show();\r\n\t\t} else {\r\n\t\t\tanim.done( function() {\r\n\t\t\t\tjQuery( elem ).hide();\r\n\t\t\t} );\r\n\t\t}\r\n\t\tanim.done( function() {\r\n\t\t\tvar prop;\r\n\r\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\tfor ( prop in orig ) {\r\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tfor ( prop in orig ) {\r\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\r\n\t\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\t\tdataShow[ prop ] = tween.start;\r\n\t\t\t\tif ( hidden ) {\r\n\t\t\t\t\ttween.end = tween.start;\r\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\r\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\r\n\t\tstyle.display = display;\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = jQuery.camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length ; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tjQuery.proxy( result.stop, result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\t// attach callbacks from options\r\n\treturn animation.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( jQuery.isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnotwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tjQuery.isFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n\t};\r\n\r\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\r\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\r\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( jQuery.isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue && type !== false ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = jQuery.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Checks the timer has not already been removed\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tif ( timer() ) {\r\n\t\tjQuery.fx.start();\r\n\t} else {\r\n\t\tjQuery.timers.pop();\r\n\t}\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( !timerId ) {\r\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n\t}\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\twindow.clearInterval( timerId );\r\n\r\n\ttimerId = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: iOS<=5.1, Android<=4.2+\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE<=11+\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: Android<=2.3\r\n\t// Options inside disabled selects are incorrectly marked as disabled\r\n\tselect.disabled = true;\r\n\tsupport.optDisabled = !opt.disabled;\r\n\r\n\t// Support: IE<=11+\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// All attributes are lowercase\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\thooks = jQuery.attrHooks[ name ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name, propName,\r\n\t\t\ti = 0,\r\n\t\t\tattrNames = value && value.match( rnotwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n\r\n\t\t\t\t// Boolean attributes get special treatment (#10870)\r\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\r\n\r\n\t\t\t\t\t// Set corresponding property to false\r\n\t\t\t\t\telem[ propName ] = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle;\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ name ];\r\n\t\t\tattrHandle[ name ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tname.toLowerCase() :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ name ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\treturn tabindex ?\r\n\t\t\t\t\tparseInt( tabindex, 10 ) :\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\r\n\t\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\t\t-1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\n// Support: IE <=11 only\r\n// Accessing the selectedIndex property\r\n// forces the browser to respect setting selected\r\n// on the option\r\n// The getter ensures a default option is selected\r\n// when in an optgroup\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tset: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent ) {\r\n\t\t\t\tparent.selectedIndex;\r\n\r\n\t\t\t\tif ( parent.parentNode ) {\r\n\t\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\nvar rclass = /[\\t\\r\\n\\f]/g;\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value;\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( type === \"string\" ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\r\n\t\t\t\t\t.indexOf( className ) > -1\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g,\r\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, isFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\treturn typeof ret === \"string\" ?\r\n\r\n\t\t\t\t\t// Handle most common string cases\r\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\r\n\r\n\t\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\t\tret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( jQuery.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\r\n\t\t\t\treturn val != null ?\r\n\t\t\t\t\tval :\r\n\r\n\t\t\t\t\t// Support: IE10-11+\r\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\r\n\t\t\t\t\t// Strip and collapse whitespace\r\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\r\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length,\r\n\t\t\t\t\ti = index < 0 ?\r\n\t\t\t\t\t\tmax :\r\n\t\t\t\t\t\tone ? index : 0;\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t( support.optDisabled ?\r\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\t\t\t\t\telem[ type ]();\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\t// Used only for `focus(in | out)` events\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\r\n\tfunction( i, name ) {\r\n\r\n\t// Handle event binding\r\n\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\treturn arguments.length > 0 ?\r\n\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\tthis.trigger( name );\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nsupport.focusin = \"onfocusin\" in window;\r\n\r\n\r\n// Support: Firefox\r\n// Firefox doesn't have focus(in | out) events\r\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n//\r\n// Support: Chrome, Safari\r\n// focus(in | out) events fire after focus & blur events,\r\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\r\nif ( !support.focusin ) {\r\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\r\n\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdataPriv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n}\r\nvar location = window.location;\r\n\r\nvar nonce = jQuery.now();\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Support: Android 2.3\r\n// Workaround failure to string-cast null input\r\njQuery.parseJSON = function( data ) {\r\n\treturn JSON.parse( data + \"\" );\r\n};\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE9\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\trhash = /#.*$/,\r\n\trts = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\toriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\r\n\r\n\t\tif ( jQuery.isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": jQuery.parseJSON,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// The jqXHR state\r\n\t\t\tstate = 0,\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( state === 2 ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tvar lname = name.toLowerCase();\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\r\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\r\n\t\tjqXHR.success = jqXHR.done;\r\n\t\tjqXHR.error = jqXHR.fail;\r\n\r\n\t\t// Remove hash character (#7531: and string promotion)\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE8-11+\r\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE8-11+\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( state === 2 ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\tcacheURL = s.url;\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// If data is available, append data to url\r\n\t\t\tif ( s.data ) {\r\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add anti-cache in url if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\ts.url = rts.test( cacheURL ) ?\r\n\r\n\t\t\t\t\t// If there is already a '_' parameter, set its value\r\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\r\n\r\n\t\t\t\t\t// Otherwise add one to the end\r\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n\t\t\tjqXHR[ i ]( s[ i ] );\r\n\t\t}\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tstate = 1;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Propagate exception as error if not done\r\n\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\tdone( -1, e );\r\n\r\n\t\t\t\t// Simply rethrow otherwise\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Called once\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// State is \"done\" now\r\n\t\t\tstate = 2;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( jQuery.isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\t\t\"throws\": true\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar isFunction = jQuery.isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function() {\r\n\t\treturn this.parent().each( function() {\r\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\r\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t\t}\r\n\t\t} ).end();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.filters.hidden = function( elem ) {\r\n\treturn !jQuery.expr.filters.visible( elem );\r\n};\r\njQuery.expr.filters.visible = function( elem ) {\r\n\r\n\t// Support: Opera <= 12.12\r\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\r\n\t// Use OR instead of AND as the element is not visible if either is true\r\n\t// See tickets #10406 and #13132\r\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\r\n};\r\n\r\n\r\n\r\n\r\nvar r20 = /%20/g,\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( jQuery.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, value ) {\r\n\r\n\t\t\t// If value is a function, invoke it and return its value\r\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n\t\t};\r\n\r\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n\tif ( traditional === undefined ) {\r\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} )\r\n\t\t.filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} )\r\n\t\t.map( function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\treturn val == null ?\r\n\t\t\t\tnull :\r\n\t\t\t\tjQuery.isArray( val ) ?\r\n\t\t\t\t\tjQuery.map( val, function( val ) {\r\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE9\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t} ).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\tcontext = context || document;\r\n\r\n\tvar parsed = rsingleTag.exec( data ),\r\n\t\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n// Keep a copy of the old load method\r\nvar _load = jQuery.fn.load;\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tif ( typeof url !== \"string\" && _load ) {\r\n\t\treturn _load.apply( this, arguments );\r\n\t}\r\n\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = jQuery.trim( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( jQuery.isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.expr.filters.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Gets a window from an element\r\n */\r\nfunction getWindow( elem ) {\r\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\r\n}\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\toffset: function( options ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar docElem, win,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tbox = { top: 0, left: 0 },\r\n\t\t\tdoc = elem && elem.ownerDocument;\r\n\r\n\t\tif ( !doc ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdocElem = doc.documentElement;\r\n\r\n\t\t// Make sure it's not a disconnected DOM node\r\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t\tbox = elem.getBoundingClientRect();\r\n\t\twin = getWindow( doc );\r\n\t\treturn {\r\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\r\n\t\t};\r\n\t},\r\n\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\r\n\t\t// because it is its only offset parent\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Get *real* offsetParent\r\n\t\t\toffsetParent = this.offsetParent();\r\n\r\n\t\t\t// Get correct offsets\r\n\t\t\toffset = this.offset();\r\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\r\n\t\t\t\tparentOffset = offsetParent.offset();\r\n\t\t\t}\r\n\r\n\t\t\t// Add offsetParent borders\r\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\r\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\t\t\tvar win = getWindow( elem );\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari<7-8+, Chrome<37-44+\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\r\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\r\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t},\r\n\tsize: function() {\r\n\t\treturn this.length;\r\n\t}\r\n} );\r\n\r\njQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( typeof define === \"function\" && define.amd ) {\r\n\tdefine( \"jquery\", [], function() {\r\n\t\treturn jQuery;\r\n\t} );\r\n}\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (#13566)\r\nif ( !noGlobal ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\nreturn jQuery;\r\n}));\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nvar Detector = {\n\n\tcanvas: !! window.CanvasRenderingContext2D,\n\twebgl: ( function () { try { return !! window.WebGLRenderingContext && !! document.createElement( 'canvas' ).getContext( 'experimental-webgl' ); } catch( e ) { return false; } } )(),\n\tworkers: !! window.Worker,\n\tfileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n\tgetWebGLErrorMessage: function () {\n\n\t\tvar element = document.createElement( 'div' );\n\t\telement.id = 'webgl-error-message';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( ! this.webgl ) {\n\n\t\t\telement.innerHTML = window.WebGLRenderingContext ? [\n\t\t\t\t'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' ) : [\n\t\t\t\t'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' );\n\n\t\t}\n\n\t\treturn element;\n\n\t},\n\n\taddGetWebGLMessage: function ( parameters ) {\n\n\t\tvar parent, id, element;\n\n\t\tparameters = parameters || {};\n\n\t\tparent = parameters.parent !== undefined ? parameters.parent : document.body;\n\t\tid = parameters.id !== undefined ? parameters.id : 'oldie';\n\n\t\telement = Detector.getWebGLErrorMessage();\n\t\telement.id = id;\n\n\t\tparent.appendChild( element );\n\n\t}\n\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE9-11.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = [], i = 0;\n\t\t\t\tvar length = listenerArray.length;\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '82';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar BlendingMode = {\n\t\tNoBlending: NoBlending,\n\t\tNormalBlending: NormalBlending,\n\t\tAdditiveBlending: AdditiveBlending,\n\t\tSubtractiveBlending: SubtractiveBlending,\n\t\tMultiplyBlending: MultiplyBlending,\n\t\tCustomBlending: CustomBlending\n\t};\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar TextureMapping = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar TextureWrapping = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar TextureFilter = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RGB_S3TC_DXT1_Format = 2001;\n\tvar RGBA_S3TC_DXT1_Format = 2002;\n\tvar RGBA_S3TC_DXT3_Format = 2003;\n\tvar RGBA_S3TC_DXT5_Format = 2004;\n\tvar RGB_PVRTC_4BPPV1_Format = 2100;\n\tvar RGB_PVRTC_2BPPV1_Format = 2101;\n\tvar RGBA_PVRTC_4BPPV1_Format = 2102;\n\tvar RGBA_PVRTC_2BPPV1_Format = 2103;\n\tvar RGB_ETC1_Format = 2151;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tVector2.prototype = {\n\n\t\tconstructor: Vector2,\n\n\t\tisVector2: true,\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t},\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t},\n\n\t\t//\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector2();\n\t\t\t\t\tmax = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.sourceFile = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping )  return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( Texture.prototype, EventDispatcher.prototype );\n\n\tvar count = 0;\n\tfunction TextureIdCount() { return count++; }\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tVector4.prototype = {\n\n\t\tconstructor: Vector4,\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t\tthis.w = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\t\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tQuaternion.prototype = {\n\n\t\tconstructor: Quaternion,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget w () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset w ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\t\tvar order = euler.order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1, r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function(\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tVector3.prototype = {\n\n\t\tconstructor: Vector3,\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyProjection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 projection matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector3();\n\t\t\t\t\tmax = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1;\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\tif ( typeof m === 'number' ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\t\tvar temp = m;\n\t\t\t\tm = index;\n\t\t\t\tindex = temp;\n\n\t\t\t}\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix4.prototype = {\n\n\t\tconstructor: Matrix4,\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tthis.elements.set( m.elements );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( (euler && euler.isEuler) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x, y, z;\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tif ( x === undefined ) {\n\n\t\t\t\t\tx = new Vector3();\n\t\t\t\t\ty = new Vector3();\n\t\t\t\t\tz = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z += 0.0001;\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\ty.crossVectors( z, x );\n\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyToArray: function ( a, b, r ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tthis.multiplyMatrices( a, b );\n\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector, matrix;\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t\tmatrix = new Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) {\n\n\t\t\t\t\tsx = - sx;\n\n\t\t\t\t}\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\t\tvar ymax = near * Math.tan( _Math.DEG2RAD * fov * 0.5 );\n\t\t\tvar ymin = - ymax;\n\t\t\tvar xmin = ymin * aspect;\n\t\t\tvar xmax = ymax * aspect;\n\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n\tfunction setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tif ( v.x !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\telse if ( v.r !== undefined )\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\telse\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar unit = renderer.allocTextureUnit();\n\t\tgl.uniform1i( this.addr, unit );\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n\tfunction setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n\tfunction setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n\tfunction setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar n = v.length,\n\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\tfor (; ;) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined ||\n\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map,\n\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\tpath = info.name,\n\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\tvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n\tvar normal_vert = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n\tvar shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars: lights_pars,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_template: lights_template,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_flip: normal_flip,\n\t\tnormal_fragment: normal_fragment,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tColor.prototype = {\n\n\t\tconstructor: Color,\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( (value && value.isColor) ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t};\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n\t\t\tspecularMap: { value: null },\n\t\t\talphaMap: { value: null },\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular : { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\n\t\t\t\t{\n\t\t\t\t\temissive : { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0 },\n\t\t\t\t\tenvMapIntensity : { value: 1 }, // temporary\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\n\t\t\t\t{\n\t\t\t\t\tscale    : { value: 1 },\n\t\t\t\t\tdashSize : { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: {\n\n\t\t\t\topacity : { value: 1.0 }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t\ttFlip: { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: {\n\n\t\t\t\tlightPos: { value: new Vector3() }\n\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\n\t\t\tShaderLib.standard.uniforms,\n\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tBox2.prototype = {\n\n\t\tconstructor: Box2,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlarePlugin( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\t\tvar validArea = new Box2();\n\n\t\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.setDepthWrite( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.setDepthWrite( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpritePlugin( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new Vector3();\n\t\tvar spriteRotation = new Quaternion();\n\t\tvar spriteScale = new Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( (fog && fog.isFog) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( (fog && fog.isFogExp2) ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram() {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis._needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tget needsUpdate() {\n\n\t\t\treturn this._needsUpdate;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.update();\n\t\t\tthis._needsUpdate = value;\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( (currentValue && currentValue.isColor) ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\n\t\t\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\t\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( (this.normalMap && this.normalMap.isTexture) ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( (this.envMap && this.envMap.isTexture) ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tdata.skinning = this.skinning;\n\t\t\tdata.morphTargets = this.morphTargets;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t};\n\n\tObject.assign( Material.prototype, EventDispatcher.prototype );\n\n\tvar count$1 = 0;\n\tfunction MaterialIdCount() { return count$1++; }\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tBox3.prototype = {\n\n\t\tconstructor: Box3,\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tthis.makeEmpty();\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar array, offset, stride;\n\n\t\t\t\t\t\t\t\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.data.array;\n\t\t\t\t\t\t\t\t\toffset = attribute.offset;\n\t\t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.array;\n\t\t\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t\t\tstride = 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromArray( array, i );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint;\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new Vector3();\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\t\tthis.getCenter( result.center );\n\n\t\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tSphere.prototype = {\n\n\t\tconstructor: Sphere,\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tMatrix3.prototype = {\n\n\t\tconstructor: Matrix3,\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tbuffer.setXYZ( j, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( (matrix && matrix.isMatrix4) ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tPlane.prototype = {\n\n\t\tconstructor: Plane,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tFrustum.prototype = {\n\n\t\tconstructor: Frustum,\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new Vector3(),\n\t\t\t\tp2 = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_renderList = [],\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.setDepthTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount, isPointLight;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( (light && light.isPointLight) ) {\n\n\t\t\t\t\tfaceCount = 6;\n\t\t\t\t\tisPointLight = true;\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\t\t\t\t\tisPointLight = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( (shadow && shadow.isSpotLightShadow) ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\t_renderList.length = 0;\n\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t\t// render shadow map\n\t\t\t\t\t// render regular objects\n\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( (material && material.isMultiMaterial) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor(),\n\t\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\t\tside = FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tRay.prototype = {\n\n\t\tconstructor: Ray,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.sub( this.origin );\n\t\t\tthis.direction.normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tEuler.prototype = {\n\n\t\tconstructor: Euler,\n\n\t\tisEuler: true,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget order () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset order ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1;\n\n\t}\n\n\tLayers.prototype = {\n\n\t\tconstructor: Layers,\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t\tthis.onBeforeRender = function(){}; \n\t\tthis.onAfterRender = function(){};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\t\tisObject3D: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( (object && object.isObject3D) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = this.material.uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar count$2 = 0;\n\tfunction Object3DIdCount() { return count$2++; }\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tLine3.prototype = {\n\n\t\tconstructor: Line3,\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tTriangle.normal = function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}();\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tTriangle.barycoordFromPoint = function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}();\n\n\tTriangle.containsPoint = function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}();\n\n\tTriangle.prototype = {\n\n\t\tconstructor: Triangle,\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tif ( plane === undefined ) {\n\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tedgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\t\t\t\tprojectedPoint = new Vector3();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = (color && color.isColor) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tFace3.prototype = {\n\n\t\tconstructor: Face3,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tBufferAttribute.prototype = {\n\n\t\tconstructor: BufferAttribute,\n\n\t\tisBufferAttribute: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int16Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint16Array( array ), itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Int32Array( array ), itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Uint32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float32Array( array ), itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\treturn new BufferAttribute( new Float64Array( array ), itemSize );\n\n\t}\n\n\t// Deprecated\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( (geometry && geometry.isGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( (mesh && mesh.isMesh) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\tvar dupIndex = - 1;\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tdupIndex = n;\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [ [] ];\n\t\t\tthis.colors = [];\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar count$3 = 0;\n\tfunction GeometryIdCount() { return count$3++; }\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'DirectGeometry';\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\n\t\tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t}\n\n\tObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tthis.index = index;\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isPoints) || (object && object.isLine) ) {\n\n\t\t\t\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( (object && object.isMesh) ) {\n\n\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( (object && object.isMesh) ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar positions = this.attributes.position;\n\n\t\t\t\tif ( positions ) {\n\n\t\t\t\t\tvar array = positions.array;\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromArray( array );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvector.fromArray( array, i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC,\n\n\t\t\t\tpA = new Vector3(),\n\t\t\t\tpB = new Vector3(),\n\t\t\t\tpC = new Vector3(),\n\n\t\t\t\tcb = new Vector3(),\n\t\t\t\tab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( (geometry && geometry.isBufferGeometry) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\t\tx = normals[ i ];\n\t\t\t\ty = normals[ i + 1 ];\n\t\t\t\tz = normals[ i + 2 ];\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals[ i ] *= n;\n\t\t\t\tnormals[ i + 1 ] *= n;\n\t\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tBufferGeometry.MaxIndex = 65535;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar morphTargets = this.geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar uvs, intersection;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isFaceMaterial = (material && material.isMultiMaterial);\n\t\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\t\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\t\tvar numberOfVertices = 0;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount( w, h, d ) {\n\n\t\t\tvar vertices = 0;\n\n\t\t\t// calculate the amount of vertices for each side (plane)\n\t\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\t\treturn vertices;\n\n\t\t}\n\n\t\tfunction calculateIndexCount( w, h, d ) {\n\n\t\t\tvar index = 0;\n\n\t\t\t// calculate the amount of squares for each side\n\t\t\tindex += w * h * 2; // xy\n\t\t\tindex += w * d * 2; // xz\n\t\t\tindex += d * h * 2; // zy\n\n\t\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t\t}\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth\t= width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// uvs\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\t\tuvBufferOffset += 2;\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tindexBufferOffset += 6;\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\t\tvar offset = 0;\n\t\tvar offset2 = 0;\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices[ offset ] = x;\n\t\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\toffset += 3;\n\t\t\t\toffset2 += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices[ offset ] = a;\n\t\t\t\tindices[ offset + 1 ] = b;\n\t\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\t\tindices[ offset + 3 ] = b;\n\t\t\t\tindices[ offset + 4 ] = c;\n\t\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\t\toffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\t\tthis.projectionMatrix = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.create( Object3D.prototype );\n\tCamera.prototype.constructor = Camera;\n\n\tCamera.prototype.isCamera = true;\n\n\tCamera.prototype.getWorldDirection = function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.lookAt = function () {\n\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}();\n\n\tCamera.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\tCamera.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCamera.prototype.copy.call( this, source );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, size;\n\n\t\tfunction setIndex( index ) {\n\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t\tsize = 4;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\tsize = 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * size );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tsetMode: setMode,\n\t\t\tsetIndex: setIndex,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tvar count = 0;\n\n\t\t\tif ( (position && position.isInterleavedBufferAttribute) ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\tcount = position.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\tinfoRender.calls ++;\n\t\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetMode: setMode,\n\t\t\trender: render,\n\t\t\trenderInstances: renderInstances\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLLights() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, code, material, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines,\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t\t'#define UNION_CLIPPING_PLANES ' + (parameters.numClippingPlanes - parameters.numClipIntersection),\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( ! material.isShaderMaterial ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\t\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\n\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( (map && map.isTexture) ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( (map && map.isWebGLRenderTarget) ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = allocateBones( object );\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: (fog && fog.isFogExp2),\n\n\t\t\t\tflatShading: material.shading === FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, code, material, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, properties, info ) {\n\n\t\tvar geometries = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe ) {\n\n\t\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( geometry );\n\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( buffergeometry );\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction deleteAttribute( attribute ) {\n\n\t\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\t\tif ( buffer !== undefined ) {\n\n\t\t\t\tgl.deleteBuffer( buffer );\n\t\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction deleteAttributes( attributes ) {\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tproperties.delete( attribute.data );\n\n\t\t\t} else {\n\n\t\t\t\tproperties.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\t\t\treturn geometries[ geometry.id ];\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\t\tvar buffergeometry;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t\t}\n\n\t\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\t\tinfo.memory.geometries ++;\n\n\t\t\t\treturn buffergeometry;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, properties, info ) {\n\n\t\tvar geometries = new WebGLGeometries( gl, properties, info );\n\n\t\t//\n\n\t\tfunction update( object ) {\n\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\t\tvar geometry = geometries.get( object );\n\n\t\t\tif ( object.geometry.isGeometry ) {\n\n\t\t\t\tgeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\t\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\t\tvar attributeProperties = properties.get( data );\n\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tif ( data.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, data.array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( data.updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t\t}\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\t\treturn property.wireframe;\n\n\t\t\t}\n\n\t\t\tvar indices = [];\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar position = attributes.position;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar edges = {};\n\t\t\t\tvar array = index.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\tproperty.wireframe = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetAttributeBuffer: getAttributeBuffer,\n\t\t\tgetWireframeAttribute: getWireframeAttribute,\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n\t\tvar _infoMemory = info.memory;\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = _Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = _Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\t_infoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\t_infoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.delete( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.delete( renderTarget.texture );\n\t\t\tproperties.delete( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = (texture && texture.isCompressedTexture);\n\t\t\t\t\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( (texture && texture.isDepthTexture) ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( (texture && texture.isDataTexture) ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( (texture && texture.isCompressedTexture) ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error('Unknown depthTexture format')\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== LinearFilter ) {\n\n\t\t\t\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = {};\n\n\t\treturn {\n\n\t\t\tget: function ( object ) {\n\n\t\t\t\tvar uuid = object.uuid;\n\t\t\t\tvar map = properties[ uuid ];\n\n\t\t\t\tif ( map === undefined ) {\n\n\t\t\t\t\tmap = {};\n\t\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\n\t\t\t},\n\n\t\t\tdelete: function ( object ) {\n\n\t\t\t\tdelete properties[ object.uuid ];\n\n\t\t\t},\n\n\t\t\tclear: function () {\n\n\t\t\t\tproperties = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, paramThreeToGL ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4();\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a ) {\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail  = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tfunction init() {\n\n\t\t\tclearColor( 0, 0, 0, 1 );\n\t\t\tclearDepth( 1 );\n\t\t\tclearStencil( 0 );\n\n\t\t\tenable( gl.DEPTH_TEST );\n\t\t\tsetDepthFunc( LessEqualDepth );\n\n\t\t\tsetFlipSided( false );\n\t\t\tsetCullFace( CullFaceBack );\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tenable( gl.BLEND );\n\t\t\tsetBlending( NormalBlending );\n\n\t\t}\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== NoBlending ) {\n\n\t\t\t\tenable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.BLEND );\n\n\t\t\t}\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( blending === AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction setColorWrite( colorWrite ) {\n\n\t\t\tcolorBuffer.setMask( colorWrite );\n\n\t\t}\n\n\t\tfunction setDepthTest( depthTest ) {\n\n\t\t\tdepthBuffer.setTest( depthTest );\n\n\t\t}\n\n\t\tfunction setDepthWrite( depthWrite ) {\n\n\t\t\tdepthBuffer.setMask( depthWrite );\n\n\t\t}\n\n\t\tfunction setDepthFunc( depthFunc ) {\n\n\t\t\tdepthBuffer.setFunc( depthFunc );\n\n\t\t}\n\n\t\tfunction setStencilTest( stencilTest ) {\n\n\t\t\tstencilBuffer.setTest( stencilTest );\n\n\t\t}\n\n\t\tfunction setStencilWrite( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( stencilWrite );\n\n\t\t}\n\n\t\tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t}\n\n\t\tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tgl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getScissorTest() {\n\n\t\t\treturn currentScissorTest;\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Deprecate\n\n\t\tfunction clearColor( r, g, b, a ) {\n\n\t\t\tcolorBuffer.setClear( r, g, b, a );\n\n\t\t}\n\n\t\tfunction clearDepth( depth ) {\n\n\t\t\tdepthBuffer.setClear( depth );\n\n\t\t}\n\n\t\tfunction clearStencil( stencil ) {\n\n\t\t\tstencilBuffer.setClear( stencil );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinit: init,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tsetBlending: setBlending,\n\n\t\t\tsetColorWrite: setColorWrite,\n\t\t\tsetDepthTest: setDepthTest,\n\t\t\tsetDepthWrite: setDepthWrite,\n\t\t\tsetDepthFunc: setDepthFunc,\n\t\t\tsetStencilTest: setStencilTest,\n\t\t\tsetStencilWrite: setStencilWrite,\n\t\t\tsetStencilFunc: setStencilFunc,\n\t\t\tsetStencilOp: setStencilOp,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tgetScissorTest: getScissorTest,\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\n\t\t\tclearColor: clearColor,\n\t\t\tclearDepth: clearDepth,\n\t\t\tclearStencil: clearStencil,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\t\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar opaqueObjects = [];\n\t\tvar opaqueObjectsLastIndex = - 1;\n\t\tvar transparentObjects = [];\n\t\tvar transparentObjectsLastIndex = - 1;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\t\t_currentCamera = null,\n\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_clearColor = new Color( 0x000000 ),\n\t\t_clearAlpha = 0,\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t_sphere = new Sphere(),\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoRender = {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: {\n\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\n\t\t\t},\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar attributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tBufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n\t\tvar properties = new WebGLProperties();\n\t\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n\t\tvar objects = new WebGLObjects( _gl, properties, this.info );\n\t\tvar programCache = new WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new WebGLLights();\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tvar backgroundCamera2 = new PerspectiveCamera();\n\t\tvar backgroundPlaneMesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t);\n\t\tvar backgroundBoxShader = ShaderLib[ 'cube' ];\n\t\tvar backgroundBoxMesh = new Mesh(\n\t\t\tnew BoxBufferGeometry( 5, 5, 5 ),\n\t\t\tnew ShaderMaterial( {\n\t\t\t\tuniforms: backgroundBoxShader.uniforms,\n\t\t\t\tvertexShader: backgroundBoxShader.vertexShader,\n\t\t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tfog: false\n\t\t\t} )\n\t\t);\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction glClearColor( r, g, b, a ) {\n\n\t\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t}\n\n\t\t\tstate.clearColor( r, g, b, a );\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.state = state;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t\t_clearAlpha = alpha;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function() {\n\n\t\t\ttransparentObjects = [];\n\t\t\ttransparentObjectsLastIndex = -1;\n\t\t\topaqueObjects = [];\n\t\t\topaqueObjectsLastIndex = -1;\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.delete( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t     ! material.isMeshStandardMaterial &&\n\t\t\t\t       material.shading === FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tsetMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n\t\t\t\t\tmorphInfluences[ i ] = 0.0;\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar renderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( index );\n\n\t\t\t} else {\n\n\t\t\t\trenderer = bufferRenderer;\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = 0;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"Unsupported data buffer format: Float64Array\" );\n\n\t\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Sorting\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tfunction painterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n\t\t\t\treturn a.material.program.id - b.material.program.id;\n\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\t\treturn a.material.id - b.material.id;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn a.z - b.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reversePainterSortStable( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\n\t\t\topaqueObjectsLastIndex = - 1;\n\t\t\ttransparentObjectsLastIndex = - 1;\n\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tprojectObject( scene, camera );\n\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tglClearColor( background.r, background.g, background.b, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n\t\t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( backgroundBoxMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tbackgroundPlaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( backgroundPlaneMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\trenderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\trenderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tstate.setBlending( NoBlending );\n\t\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\trenderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.setDepthTest( true );\n\t\t\tstate.setDepthWrite( true );\n\t\t\tstate.setColorWrite( true );\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparentObjects;\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaqueObjects;\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem !== undefined ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.z = _vector3.z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tz: _vector3.z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\t\tif ( material.isMultiMaterial ) {\n\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tsetMaterial( material );\n\n\t\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t     ! material.isRawShaderMaterial ||\n\t\t\t       material.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? state.disable( _gl.CULL_FACE )\n\t\t\t\t: state.enable( _gl.CULL_FACE );\n\n\t\t\tstate.setFlipSided( material.side === BackSide );\n\n\t\t\tmaterial.transparent === true\n\t\t\t\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t\t: state.setBlending( NoBlending );\n\n\t\t\tstate.setDepthFunc( material.depthFunc );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\t\t\tstate.setColorWrite( material.colorWrite );\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes || \n\t \t\t\t\t  materialProperties.numIntersection  !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isShaderMaterial ||\n\t\t\t\t     material.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t     material.isMeshLambertMaterial ||\n\t\t\t\t     material.isMeshPhongMaterial ||\n\t\t\t\t     material.isMeshStandardMaterial ||\n\t\t\t\t     material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\tWebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights( lights, camera ) {\n\n\t\t\tvar l, ll, light,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getCurrentRenderTarget = function() {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return _gl.BYTE;\n\t\t\tif ( p === ShortType ) return _gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return _gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return _gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n\t\t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === OneFactor ) return _gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\t p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2 ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( meta ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene () {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.create( Object3D.prototype );\n\n\tScene.prototype.constructor = Scene;\n\n\tScene.prototype.copy = function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t};\n\n\tScene.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction LensFlare( texture, size, distance, blending, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t}\n\n\tLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LensFlare,\n\n\t\tisLensFlare: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\t\tpoint: this.position,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps  = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses, useVertexTexture ) {\n\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\t\tthis.identityMatrix = new Matrix4();\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\n\t\t// create a bone texture or an array of floats\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = _Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tthis.boneTextureWidth = size;\n\t\t\tthis.boneTextureHeight = size;\n\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\t\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t\t}\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone( skin ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t\tthis.skin = skin;\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.skin = source.skin;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material, useVertexTexture ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = \"attached\";\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\t// init bones\n\n\t\t// TODO: remove bone creation as there is no reason (other than\n\t\t// convenience) for THREE.SkinnedMesh to do this.\n\n\t\tvar bones = [];\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\tvar bone, gbone;\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tbone = new Bone( this );\n\t\t\t\tbones.push( bone );\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.normalizeSkinWeights();\n\n\t\tthis.updateMatrixWorld( true );\n\t\tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n\t}\n\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tbind: function( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tif ( (this.geometry && this.geometry.isGeometry) ) {\n\n\t\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function() {\n\n\t\t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new LineSegments( geometry, material );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t}\n\n\tVideoTexture.prototype = Object.create( Texture.prototype );\n\tVideoTexture.prototype.constructor = VideoTexture;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n\t\t}\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.type = type !== undefined ? type : UnsignedShortType;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tif ( (geometry && geometry.isGeometry) ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar numEdges = 0;\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// Indexed BufferGeometry\n\n\t\t\t\tvar indices = geometry.index.array;\n\t\t\t\tvar vertices = geometry.attributes.position;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar numEdges = 0;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\t// allocate maximal size\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\t\tvar numEdges = vertices.length / 3;\n\t\t\t\tvar numTris = numEdges / 3;\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// generate vertices and uvs\n\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\tvar i, j, p;\n\t\tvar u, v;\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tv = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tu = j / slices;\n\n\t\t\t\tp = func( u, v );\n\t\t\t\tvertices.push( p.x, p.y, p.z );\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tvar indices = [];\n\t\tvar a, b, c, d;\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\ta = i * sliceCount + j;\n\t\t\t\tb = i * sliceCount + j + 1;\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', Float32Attribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvBuffer, 2 ) );\n\t\tthis.normalizeNormals();\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0 ; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols ; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth  ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] =  uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction OctahedronBufferGeometry( radius,detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t \tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t */\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t *\n\t */\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( ( indices.length > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', Float32Attribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', Float32Attribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', Float32Attribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tvar P = path.getPointAt( i / tubularSegments );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin =   Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Creates a tube which extrudes along a 3d spline.\n\t */\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * see: http://www.blackpawn.com/texts/pqtorus/\n\t */\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar i, j, index = 0, indexOffset = 0;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t */\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\n\t\t// helper variables\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t\t// this vector is used to calculate the normal\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t\t// uv\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t\t// update offsets\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offset\n\t\t\t\tindexBufferOffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\t\tthis.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n\t */\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\t// Bezier Curves formulas obtained from\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t\t// Quad Bezier Functions\n\n\t\tb2: ( function () {\n\n\t\t\tfunction b2p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p1( t, p ) {\n\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p2( t, p ) {\n\n\t\t\t\treturn t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b2( t, p0, p1, p2 ) {\n\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\t// Cubic Bezier Functions\n\n\t\tb3: ( function () {\n\n\t\t\tfunction b3p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p1( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * k * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p2( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * t * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p3( t, p ) {\n\n\t\t\t\treturn t * t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <Object> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\t\tshapes = [];\n\t\t\treturn;\n\n\t\t}\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapesOffset = this.vertices.length;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn\tnew Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tscope.vertices.push( new Vector3( x, y, z ) );\n\n\t\t}\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\n\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\t\t\td += shapesOffset;\n\n\t\t\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\n\t\t\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\n\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t\t}\n\n\t};\n\n\tExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a.x, a.y ),\n\t\t\t\tnew Vector2( b.x, b.y ),\n\t\t\t\tnew Vector2( c.x, c.y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\t\t\tvar d = vertices[ indexD ];\n\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.x, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.x, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.x, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.x, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a.y, 1 - a.z ),\n\t\t\t\t\tnew Vector2( b.y, 1 - b.z ),\n\t\t\t\t\tnew Vector2( c.y, 1 - c.z ),\n\t\t\t\t\tnew Vector2( d.y, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( (font && font.isFont) === false ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n\tTextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry\n\t */\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\t\tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\tvar index = 0, vertices = [], normal = new Vector3();\n\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\t\tvar u = x / widthSegments;\n\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\tverticesRow.push( index );\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvertices.push( verticesRow );\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', positions );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// some helper variables\n\t\tvar index = 0, indexOffset = 0, segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\t// values are generate from the inside of the ring to the outside\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t */\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t // points - to create a closed torus, one must use a set of points\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\n\t // segments - the number of circumference segments to create\n\t // phiStart - the starting radian\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\n\t //    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\n\t\tvar indexCount = segments * points.length * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar index = 0, indexOffset = 0, base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t} // next row\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t */\n\n\t// points - to create a closed torus, one must use a set of points\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\n\t// segments - the number of circumference segments to create\n\t// phiStart - the starting radian\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\n\t//    2PI is a closed lathe, less than 2PI is a portion.\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tfunction ShapeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\t/**\n\t * Add an array of shapes to THREE.ShapeGeometry.\n\t */\n\tShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tthis.addShape( shapes[ i ], options );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n\t */\n\tShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tif ( options === undefined ) options = {};\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar material = options.material;\n\t\tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t\t//\n\n\t\tvar i, l, hole;\n\n\t\tvar shapesOffset = this.vertices.length;\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\t\thole = holes[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false;\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t// Vertices\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\t\t\tvertices = vertices.concat( hole );\n\n\t\t}\n\n\t\t//\n\n\t\tvar vert, vlen = vertices.length;\n\t\tvar face, flen = faces.length;\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = vertices[ i ];\n\n\t\t\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\n\n\t\t}\n\n\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + shapesOffset;\n\t\t\tvar b = face[ 1 ] + shapesOffset;\n\t\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\t\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tvar geometry2;\n\n\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar vertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = [];\n\n\t\tfor ( var key in hash ) {\n\n\t\t\tvar h = hash[ key ];\n\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// used to calculate buffer length\n\n\t\tvar nbCap = 0;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t\t}\n\n\t\tvar vertexCount = calculateVertexCount();\n\t\tvar indexCount = calculateIndexCount();\n\n\t\t// buffers\n\n\t\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\t\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\n\t\tvar index = 0,\n\t\t    indexOffset = 0,\n\t\t    indexArray = [],\n\t\t    halfHeight = height / 2;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount() {\n\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction calculateIndexCount() {\n\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\t\t\t\t\tindexRow.push( index );\n\n\t\t\t\t\t// increase index\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// update counters\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = 0.5;\n\t\t\t\tuv.y = 0.5;\n\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t/**\n\t * @author: abelnation / http://github.com/abelnation\n\t */\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tvar vertices = segments + 2;\n\n\t\tvar positions = new Float32Array( vertices * 3 );\n\t\tvar normals = new Float32Array( vertices * 3 );\n\t\tvar uvs = new Float32Array( vertices * 2 );\n\n\t\t// center data is already zero, but need to set a few extras\n\t\tnormals[ 2 ] = 1.0;\n\t\tuvs[ 0 ] = 0.5;\n\t\tuvs[ 1 ] = 0.5;\n\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n\t\tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\t/**\n\t * @author hughes\n\t */\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n\t */\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\n\n\tvar Geometries = Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry,\n\t\tBoxGeometry: BoxGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ShadowMaterial() {\n\n\t\tShaderMaterial.call( this, {\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib[ \"lights\" ],\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'MultiMaterial';\n\n\t\tthis.materials = materials instanceof Array ? materials : [];\n\n\t\tthis.visible = true;\n\n\t}\n\n\tMultiMaterial.prototype = {\n\n\t\tconstructor: MultiMaterial,\n\n\t\tisMultiMaterial: true,\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.2,\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\ttype: this.type,\n\t\t\t\tmaterials: []\n\t\t\t};\n\n\t\t\tvar materials = this.materials;\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\t\tdelete material.metadata;\n\n\t\t\t\toutput.materials.push( material );\n\n\t\t\t}\n\n\t\t\toutput.visible = this.visible;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar material = new this.constructor();\n\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tmaterial.visible = this.visible;\n\n\t\t\treturn material;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this, parameters );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( Material.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMultiMaterial: MultiMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction XHRLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( XHRLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[1];\n\t\t\t\tvar isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tvar data = dataUriRegexResult[3];\n\n\t\t\t\tdata = window.decodeURIComponent(data);\n\n\t\t\t\tif( isBase64 ) {\n\t\t\t\t\tdata = window.atob(data);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t \tresponse = new ArrayBuffer( data.length );\n\t\t\t\t\t\t\tvar view = new Uint8Array( response );\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ response ], { \"type\" : mimeType } );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick\n\t\t\t\t\twindow.setTimeout( function() {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = event.target.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\t\tonProgress( event );\n\n\t\t\t\t\t}, false );\n\n\t\t\t\t}\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tvar DataTextureLoader = BinaryTextureLoader;\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( BinaryTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\t\timage.onload = function () {\n\n\t\t\t\timage.onload = null;\n\n\t\t\t\tURL.revokeObjectURL( image.src );\n\n\t\t\t\tif ( onLoad ) onLoad( image );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\t\t\timage.onerror = onError;\n\n\t\t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\timage.src = url;\n\n\t\t\t} else {\n\n\t\t\t\tvar loader = new XHRLoader();\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'blob' );\n\t\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\t\tloader.load( url, function ( blob ) {\n\n\t\t\t\t\timage.src = URL.createObjectURL( blob );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || 500;\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( light ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true,\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tInterpolant.prototype = {\n\n\t\tconstructor: Interpolant,\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t//- See http://jsperf.com/comparison-to-undefined/3\n\t//- slower code:\n\t//-\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t//- slower code:\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t};\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_,\n\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tInterpolant.prototype.copySampleValue_\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t}\n\n\tCubicInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\tvar KeyframeTrackPrototype;\n\n\tKeyframeTrackPrototype = {\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\t\treturn new DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\t\treturn new CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function( timeOffset ) {\n\n\t\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function( timeScale ) {\n\n\t\t\tif( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function() {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( \"track is empty\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function() {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else keep = true;\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\tfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t}\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number',\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrackConstructor.apply( this, arguments );\n\n\t}\n\n\tKeyframeTrack.prototype = KeyframeTrackPrototype;\n\tKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n\t// Static methods:\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\tthis.optimize();\n\n\t}\n\n\tAnimationClip.prototype = {\n\n\t\tconstructor: AnimationClip,\n\n\t\tresetDuration: function() {\n\n\t\t\tvar tracks = this.tracks,\n\t\t\t\tduration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max(\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\n\t\ttoJSON: function( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, -1, tracks );\n\n\t\t},\n\n\t\tfindByName: function( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function(\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON(\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets in a way exactly compatible\n\t\t\t\t// with AnimationHandler.init( animation )\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\t// MultiMaterial\n\n\t\t\tif ( json.materials !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tvar TYPED_ARRAYS = {\n\t\t\t\t'Int8Array': Int8Array,\n\t\t\t\t'Uint8Array': Uint8Array,\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t\t'Int16Array': Int16Array,\n\t\t\t\t'Uint16Array': Uint16Array,\n\t\t\t\t'Int32Array': Int32Array,\n\t\t\t\t'Uint32Array': Uint32Array,\n\t\t\t\t'Float32Array': Float32Array,\n\t\t\t\t'Float64Array': Float64Array\n\t\t\t};\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t}\n\n\tLoader.prototype = {\n\n\t\tconstructor: Loader,\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar color, textureLoader, materialLoader;\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\tif ( color === undefined ) color = new Color();\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.shadow ) {\n\n\t\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTangentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {}\n\n\tCurve.prototype = {\n\n\t\tconstructor: Curve,\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\t\tif ( this.cacheArcLengths\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t//var time = Date.now();\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\tvar t = i / ( il - 1 );\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t}\n\n\t};\n\n\t// TODO: Transformation for Curves?\n\n\t/**************************************************************\n\t *\t3D Curves\n\t **************************************************************/\n\n\t// A Factory method for creating new curve subclasses\n\n\tCurve.create = function ( constructor, getPointFunc ) {\n\n\t\tconstructor.prototype = Object.create( Curve.prototype );\n\t\tconstructor.prototype.constructor = constructor;\n\t\tconstructor.prototype.getPoint = getPointFunc;\n\n\t\treturn constructor;\n\n\t};\n\n\t/**************************************************************\n\t *\tLine\n\t **************************************************************/\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n\t\t\t\t\t: (curve && curve.isLineCurve) ? 1\n\t\t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t/**************************************************************\n\t *\tEllipse curve\n\t **************************************************************/\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new Vector2( x, y );\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar CurveUtils = {\n\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t\t},\n\n\t\t// Puay Bing, thanks for helping with this derivative!\n\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t\t3 * t * t * p3;\n\n\t\t},\n\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\t// To check if my formulas are correct\n\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\t\treturn h00 + h10 + h01 + h11;\n\n\t\t},\n\n\t\t// Catmull-Rom\n\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t/**************************************************************\n\t *\tSpline curve\n\t **************************************************************/\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\treturn new Vector2(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t\t);\n\n\t};\n\n\t/**************************************************************\n\t *\tCubic Bezier curve\n\t **************************************************************/\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b3 = ShapeUtils.b3;\n\n\t\treturn new Vector2(\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t);\n\n\t};\n\n\tCubicBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentCubicBezier = CurveUtils.tangentCubicBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t).normalize();\n\n\t};\n\n\t/**************************************************************\n\t *\tQuadratic Bezier curve\n\t **************************************************************/\n\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b2 = ShapeUtils.b2;\n\n\t\treturn new Vector2(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t);\n\n\t};\n\n\n\tQuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentQuadraticBezier = CurveUtils.tangentQuadraticBezier;\n\n\t\treturn new Vector2(\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t).normalize();\n\n\t};\n\n\tvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape() {\n\n\t\tPath.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = PathPrototype;\n\tPathPrototype.constructor = Path;\n\n\n\t// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\tfunction ShapePath() {\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tShapePath.prototype = {\n\t\tmoveTo: function ( x, y ) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo( x, y );\n\t\t},\n\t\tlineTo: function ( x, y ) {\n\t\t\tthis.currentPath.lineTo( x, y );\n\t\t},\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\t},\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\t},\n\t\tsplineThru: function ( pts ) {\n\t\t\tthis.currentPath.splineThru( pts );\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Font( data ) {\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar offset = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\t\toffset += ret.offset;\n\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new ShapePath();\n\n\t\t\t\tvar pts = [], b2 = ShapeUtils.b2, b3 = ShapeUtils.b3;\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\tvar context;\n\n\tfunction getAudioContext() {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t}\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = getAudioContext();\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\tvar eyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = getAudioContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\t\tthis.source = this.context.createBufferSource();\n\t\tthis.source.onended = this.onEnded.bind( this );\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.source.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.source.buffer;\n\t\t\tsource.loop = this.source.loop;\n\t\t\tsource.onended = this.source.onended;\n\t\t\tsource.start( 0, this.startTime );\n\t\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.source.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.loop = value;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tPropertyMixer.prototype = {\n\n\t\tconstructor: PropertyMixer,\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function() {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function() {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode(\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tPropertyBinding.prototype = {\n\n\t\tconstructor: PropertyBinding,\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function() {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t \t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t};\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function() {},\n\t\t_setValue_unavailable: function() {},\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t]\n\n\t} );\n\n\tPropertyBinding.Composite =\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath ||\n\t\t\t\tPropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t};\n\n\tPropertyBinding.Composite.prototype = {\n\n\t\tconstructor: PropertyBinding.Composite,\n\n\t\tgetValue: function( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.create = function( root, path, parsedPath ) {\n\n\t\tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t};\n\n\tPropertyBinding.parseTrackName = function( trackName ) {\n\n\t\t// matches strings in the form of:\n\t\t//    nodeName.property\n\t\t//    nodeName.property[accessor]\n\t\t//    nodeName.material.property[accessor]\n\t\t//    uuid.property[accessor]\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t\t//    parentName/nodeName.property\n\t\t//    parentName/parentName/nodeName.property[index]\n\t\t//    .bone[Armature.DEF_cog].position\n\t\t//    scene:helium_balloon_model:helium_balloon_model.position\n\t\t// created and tested via https://regex101.com/#javascript\n\n\t\tvar re = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\n\t\tvar matches = re.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ], \t// allowed to be null, specified root node.\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ],\n\t\t\tpropertyIndex: matches[ 6 ]\t// allowed to be null, specifies that the whole property is set.\n\t\t};\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t};\n\n\tPropertyBinding.findNode = function( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup( var_args ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t}\n\n\tAnimationObjectGroup.prototype = {\n\n\t\tconstructor: AnimationObjectGroup,\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function( path, parsedPath ) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects,\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\t\tnew PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function( path ) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tAnimationAction.prototype = {\n\n\t\tconstructor: AnimationAction,\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the weight stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t\t// called by the mixer\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis.loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function() {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\tif ( action.enabled ) {\n\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function() {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// Implementation details:\n\n\tObject.assign( AnimationMixer.prototype, {\n\n\t\t_bindAction: function( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function() {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tInstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tInstancedBufferGeometry.prototype.addGroup = function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t};\n\n\tInstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\n\tInterleavedBufferAttribute.prototype = {\n\n\t\tconstructor: InterleavedBufferAttribute,\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t},\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tInterleavedBuffer.prototype = {\n\n\t\tconstructor: InterleavedBuffer,\n\n\t\tisInterleavedBuffer: true,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\n\tInstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tInstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\t\tBufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tInstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tRaycaster.prototype = {\n\n\t\tconstructor: Raycaster,\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( (camera && camera.isPerspectiveCamera) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( (camera && camera.isOrthographicCamera) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tClock.prototype = {\n\n\t\tconstructor: Clock,\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( performance || Date ).now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Spline( points ) {\n\n\t\tthis.points = points;\n\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tthis.initFromArray = function ( a ) {\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPoint = function ( k ) {\n\n\t\t\tpoint = ( this.points.length - 1 ) * k;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\t\tpa = this.points[ c[ 0 ] ];\n\t\t\tpb = this.points[ c[ 1 ] ];\n\t\t\tpc = this.points[ c[ 2 ] ];\n\t\t\tpd = this.points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tthis.getControlPointsArray = function () {\n\n\t\t\tvar i, p, l = this.points.length,\n\t\t\t\tcoords = [];\n\n\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\tp = this.points[ i ];\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t\t}\n\n\t\t\treturn coords;\n\n\t\t};\n\n\t\t// approximate length by summing linear segments\n\n\t\tthis.getLength = function ( nSubDivisions ) {\n\n\t\t\tvar i, index, nSamples, position,\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\t\toldPosition = new Vector3(),\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tchunkLengths = [],\n\t\t\t\ttotalLength = 0;\n\n\t\t\t// first point has 0 length\n\n\t\t\tchunkLengths[ 0 ] = 0;\n\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\t\tindex = i / nSamples;\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\ttmpVec.copy( position );\n\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\t\toldPosition.copy( position );\n\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\t\tintPoint = Math.floor( point );\n\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// last point ends with total length\n\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t\t};\n\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\t\tvar i, j,\n\t\t\t\tindex, indexCurrent, indexNext,\n\t\t\t\trealDistance,\n\t\t\t\tsampling, position,\n\t\t\t\tnewpoints = [],\n\t\t\t\ttmpVec = new Vector3(),\n\t\t\t\tsl = this.getLength();\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\t\tposition = this.getPoint( index );\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tthis.points = newpoints;\n\n\t\t};\n\n\t\t// Catmull-Rom\n\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t}\n\n\tSpherical.prototype = {\n\n\t\tconstructor: Spherical,\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction MorphBlendMesh( geometry, material ) {\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\t\tvar name = \"__default\";\r\n\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\r\n\t\tvar fps = numFrames / 1;\r\n\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\r\n\t}\r\n\r\n\tMorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\n\tMorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\n\tMorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\t\tvar animation = {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\r\n\t\t\tlength: end - start + 1,\r\n\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\r\n\t\t\tactive: false,\r\n\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\r\n\t\t};\r\n\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in frameRanges ) {\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t\t}\r\n\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.weight = weight;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = time;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\t\tvar time = 0;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\ttime = animation.time;\r\n\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\t\tvar duration = - 1;\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tduration = animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\treturn duration;\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\r\n\t\tif ( animation ) {\r\n\r\n\t\t\tanimation.active = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tMorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\t\tif ( ! animation.active ) continue;\r\n\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar keyframe = animation.start + _Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction SpotLightHelper( light ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tthis.bones = this.getBoneList( object );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\t\tgeometry.colors.push( new Color( 0, 0, 1 ) );\n\t\t\t\tgeometry.colors.push( new Color( 0, 1, 0 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.dynamic = true;\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.getBoneList = function( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( (object && object.isBone) ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\n\n\t\tvar boneMatrix = new Matrix4();\n\n\t\tvar j = 0;\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tgeometry.computeBoundingSphere();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction HemisphereLightHelper( light, sphereSize ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.colors = [ new Color(), new Color() ];\n\n\t\tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tgeometry.rotateX( - Math.PI / 2 );\n\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t\t}\n\n\t\tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\n\n\t\tthis.lightSphere = new Mesh( geometry, material );\n\t\tthis.add( this.lightSphere );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightSphere.geometry.dispose();\n\t\tthis.lightSphere.material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tdivisions = divisions || 1;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = ( size * 2 ) / divisions;\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - size, 0, k, size, 0, k );\n\t\t\tvertices.push( k, 0, - size, k, 0, size );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new Line( geometry, material ) );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new Line( geometry, material ));\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new Geometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar hexFrustum = 0xffaa00;\n\t\tvar hexCone = 0xff0000;\n\t\tvar hexUp = 0x00aaff;\n\t\tvar hexTarget = 0xffffff;\n\t\tvar hexCross = 0x333333;\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", hexCone );\n\t\taddLine( \"p\", \"n2\", hexCone );\n\t\taddLine( \"p\", \"n3\", hexCone );\n\t\taddLine( \"p\", \"n4\", hexCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", hexUp );\n\t\taddLine( \"u2\", \"u3\", hexUp );\n\t\taddLine( \"u3\", \"u1\", hexUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", hexTarget );\n\t\taddLine( \"p\", \"c\", hexCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\t\tfunction addLine( a, b, hex ) {\n\n\t\t\taddPoint( a, hex );\n\t\t\taddPoint( b, hex );\n\n\t\t}\n\n\t\tfunction addPoint( id, hex ) {\n\n\t\t\tgeometry.vertices.push( new Vector3() );\n\t\t\tgeometry.colors.push( new Color( hex ) );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t\t}\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\t// a helper to show the world-axis-aligned bounding box for an object\n\n\tfunction BoundingBoxHelper( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\t\tthis.object = object;\n\n\t\tthis.box = new Box3();\n\n\t\tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n\t}\n\n\tBoundingBoxHelper.prototype = Object.create( Mesh.prototype );\n\tBoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\n\n\tBoundingBoxHelper.prototype.update = function () {\n\n\t\tthis.box.setFromObject( this.object );\n\n\t\tthis.box.getSize( this.scale );\n\n\t\tthis.box.getCenter( this.position );\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tthis.update( object );\n\n\t\t}\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( (object && object.isBox3) ) {\n\n\t\t\t\tbox.copy( object );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromObject( object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry = new BufferGeometry();\n\tlineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\tvar coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxisHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t] );\n\n\t\tvar colors = new Float32Array( [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t] );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxisHelper.prototype = Object.create( LineSegments.prototype );\n\tAxisHelper.prototype.constructor = AxisHelper;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\tvar CatmullRomCurve3 = ( function() {\n\n\t\tvar\n\t\t\ttmp = new Vector3(),\n\t\t\tpx = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\n\t\tfunction CubicPoly() {}\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\t\tthis.c0 = x0;\n\t\t\tthis.c1 = t0;\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t};\n\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\t// initCubicPoly\n\t\t\tthis.init( x1, x2, t1, t2 );\n\n\t\t};\n\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t};\n\n\t\tCubicPoly.prototype.calc = function( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t\t};\n\n\t\t// Subclass Three.js curve\n\t\treturn Curve.create(\n\n\t\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\t\tthis.points = p || [];\n\t\t\t\tthis.closed = false;\n\n\t\t\t},\n\n\t\t\tfunction ( t ) {\n\n\t\t\t\tvar points = this.points,\n\t\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\t\tl = points.length;\n\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\t\tintPoint = Math.floor( point );\n\t\t\t\tweight = point - intPoint;\n\n\t\t\t\tif ( this.closed ) {\n\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\t\tintPoint = l - 2;\n\t\t\t\t\tweight = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate first point\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\t\tp0 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tp1 = points[ intPoint % l ];\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate last point\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\t\tp3 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t\t// safety check for repeated points\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t\t}\n\n\t\t\t\tvar v = new Vector3(\n\t\t\t\t\tpx.calc( weight ),\n\t\t\t\t\tpy.calc( weight ),\n\t\t\t\t\tpz.calc( weight )\n\t\t\t\t);\n\n\t\t\t\treturn v;\n\n\t\t\t}\n\n\t\t);\n\n\t} )();\n\n\t/**************************************************************\n\t *\tClosed Spline 3D curve\n\t **************************************************************/\n\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t/**************************************************************\n\t *\tSpline 3D curve\n\t **************************************************************/\n\n\n\tvar SplineCurve3 = Curve.create(\n\n\t\tfunction ( points /* array of Vector3 */ ) {\n\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\t\tthis.points = ( points === undefined ) ? [] : points;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tvar interpolate = CurveUtils.interpolate;\n\n\t\t\treturn new Vector3(\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tCubic Bezier 3D curve\n\t **************************************************************/\n\n\tvar CubicBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2, v3 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b3 = ShapeUtils.b3;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t **************************************************************/\n\n\tvar QuadraticBezierCurve3 = Curve.create(\n\n\t\tfunction ( v0, v1, v2 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b2 = ShapeUtils.b2;\n\n\t\t\treturn new Vector3(\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tLine3D\n\t **************************************************************/\n\n\tvar LineCurve3 = Curve.create(\n\n\t\tfunction ( v1, v2 ) {\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\treturn this.v2.clone();\n\n\t\t\t}\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\n\t\t\treturn vector;\n\n\t\t}\n\n\t);\n\n\t/**************************************************************\n\t *\tArc curve\n\t **************************************************************/\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tvar matrixWorldInverse = new Matrix4();\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4 ( a, b, c, d, normal, color, materialIndex ) {\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction PointCloud ( geometry, material ) {\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction ParticleSystem ( geometry, material ) {\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\t}\n\n\tfunction PointCloudMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleBasicMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction ParticleSystemMaterial ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\t}\n\n\tfunction Vertex ( x, y, z ) {\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\t}\n\n\t//\n\n\tfunction EdgesHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\tfunction WireframeHelper( object, hex ) {\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\t}\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t},\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Line3.prototype, {\n\t\tcenter: function ( optionalTarget ) {\n\t\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t}\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\t\textractPosition: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\t\treturn vector.applyProjection( this );\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t},\n\t\trotateAxis: function ( v ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\ttranslate: function ( v ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\t},\n\t\trotateX: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\t},\n\t\trotateY: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\t},\n\t\trotateZ: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\t},\n\t\trotateByAxis: function ( axis, angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.assign( Plane.prototype, {\n\t\tisIntersectionLine: function ( line ) {\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\t}\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\t}\n\t} );\n\n\tObject.assign( Ray.prototype, {\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\t\textrude: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\t\t}\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Object3D.prototype, {\n\t\tgetChildByName: function ( name ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\t\t},\n\t\trenderDepth: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\t\t}\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\t\taddIndex: function ( index ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\t\tif ( indexOffset !== undefined ) {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\t\t},\n\t\tclearDrawCalls: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeTangents: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\t},\n\t\tcomputeOffsets: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tEventDispatcher.prototype = Object.assign( Object.create( {\n\n\t\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\t\tconstructor: EventDispatcher,\n\n\t\tapply: function ( target ) {\n\n\t\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\t\tObject.assign( target, this );\n\n\t\t}\n\n\t} ), EventDispatcher.prototype );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\t\tdynamic: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\t\tsupportsFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\t\t},\n\t\tinitMaterial: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\t},\n\t\taddPrePlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\t},\n\t\taddPostPlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\t},\n\t\tupdateShadowMap: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.cullFace;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\t\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( Audio.prototype, {\n\t\tload: function ( file ) {\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\t\tscope.setBuffer( buffer );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\tObject.assign( AudioAnalyser.prototype, {\n\t\tgetData: function ( file ) {\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\t}\n\t} );\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tvar ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction Projector () {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer () {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.LensFlare = LensFlare;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.TextureIdCount = TextureIdCount;\n\texports.Texture = Texture;\n\texports.MaterialIdCount = MaterialIdCount;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.FontLoader = FontLoader;\n\texports.XHRLoader = XHRLoader;\n\texports.Loader = Loader;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.getAudioContext = getAudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.GeometryIdCount = GeometryIdCount;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3DIdCount = Object3DIdCount;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Spline = Spline;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.ColorKeywords = ColorKeywords;\n\texports.Color = Color;\n\texports.MorphBlendMesh = MorphBlendMesh;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.LineCurve3 = LineCurve3;\n\texports.ArcCurve = ArcCurve;\n\texports.EllipseCurve = EllipseCurve;\n\texports.SplineCurve = SplineCurve;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.LineCurve = LineCurve;\n\texports.Shape = Shape;\n\texports.ShapePath = ShapePath;\n\texports.Path = Path;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ShapeUtils = ShapeUtils;\n\texports.SceneUtils = SceneUtils;\n\texports.CurveUtils = CurveUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.BlendingMode = BlendingMode;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.TextureMapping = TextureMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.TextureWrapping = TextureWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.TextureFilter = TextureFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Sprite;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.GeometryUtils = GeometryUtils;\n\texports.ImageUtils = ImageUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n\tObject.defineProperty( exports, 'AudioContext', {\n\t\tget: function () {\n\t\t\treturn exports.getAudioContext();\n\t\t}\n\t});\n\n})));\n","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Read Stefan's excellent paper for details on how this code works.\n//\n// Sean McCullough banksean@gmail.com\n//\n// Added 4D noise\n// Joshua Koo zz85nus@gmail.com \n\n/**\n * You can pass in a random number generator object if you like.\n * It is assumed to have a random() method.\n */\nvar SimplexNoise = function(r) {\n\tif (r == undefined) r = Math;\n  this.grad3 = [[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0], \n                                 [1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1], \n                                 [0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]; \n\n  this.grad4 = [[0,1,1,1], [0,1,1,-1], [0,1,-1,1], [0,1,-1,-1],\n\t     [0,-1,1,1], [0,-1,1,-1], [0,-1,-1,1], [0,-1,-1,-1],\n\t     [1,0,1,1], [1,0,1,-1], [1,0,-1,1], [1,0,-1,-1],\n\t     [-1,0,1,1], [-1,0,1,-1], [-1,0,-1,1], [-1,0,-1,-1],\n\t     [1,1,0,1], [1,1,0,-1], [1,-1,0,1], [1,-1,0,-1],\n\t     [-1,1,0,1], [-1,1,0,-1], [-1,-1,0,1], [-1,-1,0,-1],\n\t     [1,1,1,0], [1,1,-1,0], [1,-1,1,0], [1,-1,-1,0],\n\t     [-1,1,1,0], [-1,1,-1,0], [-1,-1,1,0], [-1,-1,-1,0]];\n\n  this.p = [];\n  for (var i=0; i<256; i++) {\n\t  this.p[i] = Math.floor(r.random()*256);\n  }\n  // To remove the need for index wrapping, double the permutation table length \n  this.perm = []; \n  for(var i=0; i<512; i++) {\n\t\tthis.perm[i]=this.p[i & 255];\n\t} \n\n  // A lookup table to traverse the simplex around a given point in 4D. \n  // Details can be found where this table is used, in the 4D noise method. \n  this.simplex = [ \n    [0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0], \n    [0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0], \n    [1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0], \n    [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0], \n    [2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0], \n    [2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]; \n};\n\nSimplexNoise.prototype.dot = function(g, x, y) { \n\treturn g[0]*x + g[1]*y;\n};\n\nSimplexNoise.prototype.dot3 = function(g, x, y, z) {\n  return g[0]*x + g[1]*y + g[2]*z; \n}\n\nSimplexNoise.prototype.dot4 = function(g, x, y, z, w) {\n  return g[0]*x + g[1]*y + g[2]*z + g[3]*w;\n};\n\nSimplexNoise.prototype.noise = function(xin, yin) { \n  var n0, n1, n2; // Noise contributions from the three corners \n  // Skew the input space to determine which simplex cell we're in \n  var F2 = 0.5*(Math.sqrt(3.0)-1.0); \n  var s = (xin+yin)*F2; // Hairy factor for 2D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var G2 = (3.0-Math.sqrt(3.0))/6.0; \n  var t = (i+j)*G2; \n  var X0 = i-t; // Unskew the cell origin back to (x,y) space \n  var Y0 = j-t; \n  var x0 = xin-X0; // The x,y distances from the cell origin \n  var y0 = yin-Y0; \n  // For the 2D case, the simplex shape is an equilateral triangle. \n  // Determine which simplex we are in. \n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords \n  if(x0>y0) {i1=1; j1=0;} // lower triangle, XY order: (0,0)->(1,0)->(1,1) \n  else {i1=0; j1=1;}      // upper triangle, YX order: (0,0)->(0,1)->(1,1) \n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and \n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where \n  // c = (3-sqrt(3))/6 \n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords \n  var y1 = y0 - j1 + G2; \n  var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords \n  var y2 = y0 - 1.0 + 2.0 * G2; \n  // Work out the hashed gradient indices of the three simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var gi0 = this.perm[ii+this.perm[jj]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1]] % 12; \n  var gi2 = this.perm[ii+1+this.perm[jj+1]] % 12; \n  // Calculate the contribution from the three corners \n  var t0 = 0.5 - x0*x0-y0*y0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);  // (x,y) of grad3 used for 2D gradient \n  } \n  var t1 = 0.5 - x1*x1-y1*y1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1); \n  }\n  var t2 = 0.5 - x2*x2-y2*y2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to return values in the interval [-1,1]. \n  return 70.0 * (n0 + n1 + n2); \n};\n\n// 3D simplex noise \nSimplexNoise.prototype.noise3d = function(xin, yin, zin) { \n  var n0, n1, n2, n3; // Noise contributions from the four corners \n  // Skew the input space to determine which simplex cell we're in \n  var F3 = 1.0/3.0; \n  var s = (xin+yin+zin)*F3; // Very nice and simple skew factor for 3D \n  var i = Math.floor(xin+s); \n  var j = Math.floor(yin+s); \n  var k = Math.floor(zin+s); \n  var G3 = 1.0/6.0; // Very nice and simple unskew factor, too \n  var t = (i+j+k)*G3; \n  var X0 = i-t; // Unskew the cell origin back to (x,y,z) space \n  var Y0 = j-t; \n  var Z0 = k-t; \n  var x0 = xin-X0; // The x,y,z distances from the cell origin \n  var y0 = yin-Y0; \n  var z0 = zin-Z0; \n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron. \n  // Determine which simplex we are in. \n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords \n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords \n  if(x0>=y0) { \n    if(y0>=z0) \n      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } // X Y Z order \n      else if(x0>=z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } // X Z Y order \n      else { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; } // Z X Y order \n    } \n  else { // x0<y0 \n    if(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } // Z Y X order \n    else if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } // Y Z X order \n    else { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } // Y X Z order \n  } \n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z), \n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and \n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where \n  // c = 1/6.\n  var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords \n  var y1 = y0 - j1 + G3; \n  var z1 = z0 - k1 + G3; \n  var x2 = x0 - i2 + 2.0*G3; // Offsets for third corner in (x,y,z) coords \n  var y2 = y0 - j2 + 2.0*G3; \n  var z2 = z0 - k2 + 2.0*G3; \n  var x3 = x0 - 1.0 + 3.0*G3; // Offsets for last corner in (x,y,z) coords \n  var y3 = y0 - 1.0 + 3.0*G3; \n  var z3 = z0 - 1.0 + 3.0*G3; \n  // Work out the hashed gradient indices of the four simplex corners \n  var ii = i & 255; \n  var jj = j & 255; \n  var kk = k & 255; \n  var gi0 = this.perm[ii+this.perm[jj+this.perm[kk]]] % 12; \n  var gi1 = this.perm[ii+i1+this.perm[jj+j1+this.perm[kk+k1]]] % 12; \n  var gi2 = this.perm[ii+i2+this.perm[jj+j2+this.perm[kk+k2]]] % 12; \n  var gi3 = this.perm[ii+1+this.perm[jj+1+this.perm[kk+1]]] % 12; \n  // Calculate the contribution from the four corners \n  var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0; \n  if(t0<0) n0 = 0.0; \n  else { \n    t0 *= t0; \n    n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0); \n  }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1; \n  if(t1<0) n1 = 0.0; \n  else { \n    t1 *= t1; \n    n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1); \n  } \n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2; \n  if(t2<0) n2 = 0.0; \n  else { \n    t2 *= t2; \n    n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2); \n  } \n  var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3; \n  if(t3<0) n3 = 0.0; \n  else { \n    t3 *= t3; \n    n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3); \n  } \n  // Add contributions from each corner to get the final noise value. \n  // The result is scaled to stay just inside [-1,1] \n  return 32.0*(n0 + n1 + n2 + n3); \n};\n\n// 4D simplex noise\nSimplexNoise.prototype.noise4d = function( x, y, z, w ) {\n\t// For faster and easier lookups\n\tvar grad4 = this.grad4;\n\tvar simplex = this.simplex;\n\tvar perm = this.perm;\n\t\n   // The skewing and unskewing factors are hairy again for the 4D case\n   var F4 = (Math.sqrt(5.0)-1.0)/4.0;\n   var G4 = (5.0-Math.sqrt(5.0))/20.0;\n   var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n   // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n   var s = (x + y + z + w) * F4; // Factor for 4D skewing\n   var i = Math.floor(x + s);\n   var j = Math.floor(y + s);\n   var k = Math.floor(z + s);\n   var l = Math.floor(w + s);\n   var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n   var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n   var Y0 = j - t;\n   var Z0 = k - t;\n   var W0 = l - t;\n   var x0 = x - X0;  // The x,y,z,w distances from the cell origin\n   var y0 = y - Y0;\n   var z0 = z - Z0;\n   var w0 = w - W0;\n\n   // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n   // To find out which of the 24 possible simplices we're in, we need to\n   // determine the magnitude ordering of x0, y0, z0 and w0.\n   // The method below is a good way of finding the ordering of x,y,z,w and\n   // then find the correct traversal order for the simplex we’re in.\n   // First, six pair-wise comparisons are performed between each possible pair\n   // of the four coordinates, and the results are used to add up binary bits\n   // for an integer index.\n   var c1 = (x0 > y0) ? 32 : 0;\n   var c2 = (x0 > z0) ? 16 : 0;\n   var c3 = (y0 > z0) ? 8 : 0;\n   var c4 = (x0 > w0) ? 4 : 0;\n   var c5 = (y0 > w0) ? 2 : 0;\n   var c6 = (z0 > w0) ? 1 : 0;\n   var c = c1 + c2 + c3 + c4 + c5 + c6;\n   var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n   var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n   var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n   // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n   // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n   // impossible. Only the 24 indices which have non-zero entries make any sense.\n   // We use a thresholding to set the coordinates in turn from the largest magnitude.\n   // The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n   i1 = simplex[c][0]>=3 ? 1 : 0;\n   j1 = simplex[c][1]>=3 ? 1 : 0;\n   k1 = simplex[c][2]>=3 ? 1 : 0;\n   l1 = simplex[c][3]>=3 ? 1 : 0;\n   // The number 2 in the \"simplex\" array is at the second largest coordinate.\n   i2 = simplex[c][0]>=2 ? 1 : 0;\n   j2 = simplex[c][1]>=2 ? 1 : 0;    k2 = simplex[c][2]>=2 ? 1 : 0;\n   l2 = simplex[c][3]>=2 ? 1 : 0;\n   // The number 1 in the \"simplex\" array is at the second smallest coordinate.\n   i3 = simplex[c][0]>=1 ? 1 : 0;\n   j3 = simplex[c][1]>=1 ? 1 : 0;\n   k3 = simplex[c][2]>=1 ? 1 : 0;\n   l3 = simplex[c][3]>=1 ? 1 : 0;\n   // The fifth corner has all coordinate offsets = 1, so no need to look that up.\n   var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n   var y1 = y0 - j1 + G4;\n   var z1 = z0 - k1 + G4;\n   var w1 = w0 - l1 + G4;\n   var x2 = x0 - i2 + 2.0*G4; // Offsets for third corner in (x,y,z,w) coords\n   var y2 = y0 - j2 + 2.0*G4;\n   var z2 = z0 - k2 + 2.0*G4;\n   var w2 = w0 - l2 + 2.0*G4;\n   var x3 = x0 - i3 + 3.0*G4; // Offsets for fourth corner in (x,y,z,w) coords\n   var y3 = y0 - j3 + 3.0*G4;\n   var z3 = z0 - k3 + 3.0*G4;\n   var w3 = w0 - l3 + 3.0*G4;\n   var x4 = x0 - 1.0 + 4.0*G4; // Offsets for last corner in (x,y,z,w) coords\n   var y4 = y0 - 1.0 + 4.0*G4;\n   var z4 = z0 - 1.0 + 4.0*G4;\n   var w4 = w0 - 1.0 + 4.0*G4;\n   // Work out the hashed gradient indices of the five simplex corners\n   var ii = i & 255;\n   var jj = j & 255;\n   var kk = k & 255;\n   var ll = l & 255;\n   var gi0 = perm[ii+perm[jj+perm[kk+perm[ll]]]] % 32;\n   var gi1 = perm[ii+i1+perm[jj+j1+perm[kk+k1+perm[ll+l1]]]] % 32;\n   var gi2 = perm[ii+i2+perm[jj+j2+perm[kk+k2+perm[ll+l2]]]] % 32;\n   var gi3 = perm[ii+i3+perm[jj+j3+perm[kk+k3+perm[ll+l3]]]] % 32;\n   var gi4 = perm[ii+1+perm[jj+1+perm[kk+1+perm[ll+1]]]] % 32;\n   // Calculate the contribution from the five corners\n   var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n   if(t0<0) n0 = 0.0;\n   else {\n     t0 *= t0;\n     n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n   }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n   if(t1<0) n1 = 0.0;\n   else {\n     t1 *= t1;\n     n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n   }\n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n   if(t2<0) n2 = 0.0;\n   else {\n     t2 *= t2;\n     n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n   }   var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n   if(t3<0) n3 = 0.0;\n   else {\n     t3 *= t3;\n     n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n   }\n  var t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n   if(t4<0) n4 = 0.0;\n   else {\n     t4 *= t4;\n     n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n   }\n   // Sum up and scale the result to cover the range [-1,1]\n   return 27.0 * (n0 + n1 + n2 + n3 + n4);\n};\n","ATUtil = {\n\trandomRange : function(min, max) {\n\t\treturn min + Math.random() * (max - min);\n\t},\n\trandomInt : function(min,max){\n\t\treturn Math.floor(min + Math.random() * (max - min + 1));\n\t},\n\tmap : function(value, min1, max1, min2, max2) {\n\t\treturn ATUtil.lerp(min2, max2, ATUtil.norm(value, min1, max1));\n\t},\n\tlerp : function(amt, min, max){\n\t\treturn min + (max -min) * amt;\n\t},\n\tnorm : function(value , min, max){\n\t\treturn (value - min) / (max - min);\n\t},\n\tshuffle : function(o) {\n\t\tfor(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\t\treturn o;\n\t}\n};","/*!\n * VERSION: 1.18.2\n * DATE: 2015-12-22\n * UPDATES AND DOCS AT: http://greensock.com\n * \n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n *\n * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\nvar _gsScope=\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){\"use strict\";_gsScope._gsDefine(\"TweenMax\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},e=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},f=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=f.prototype.render},g=1e-10,h=c._internals,i=h.isSelector,j=h.isArray,k=f.prototype=c.to({},.1,{}),l=[];f.version=\"1.18.2\",k.constructor=f,k.kill()._gc=!1,f.killTweensOf=f.killDelayedCallsTo=c.killTweensOf,f.getTweensOf=c.getTweensOf,f.lagSmoothing=c.lagSmoothing,f.ticker=c.ticker,f.render=c.render,k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),c.prototype.invalidate.call(this)},k.updateTo=function(a,b){var d,e=this.ratio,f=this.vars.immediateRender||a.immediateRender;b&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted||f)if(b)this._initted=!1,f&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent(\"_onDisable\",this),this._time/this._duration>.998){var g=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(g,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||f)for(var h,i=1/(1-e),j=this._firstPT;j;)h=j.s+j.c,j.c*=i,j.s=h-j.c,j=j._next;return this},k.render=function(a,b,c){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var d,e,f,i,j,k,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._totalTime,q=this._cycle,r=this._duration,s=this._rawPrevTime;if(a>=n-1e-7?(this._totalTime=n,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=r,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===r&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>s||0>=a&&a>=-1e-7||s===g&&\"isPause\"!==this.data)&&s!==a&&(c=!0,s>g&&(e=\"onReverseComplete\")),this._rawPrevTime=m=!b||a||s===a?a:g)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==p||0===r&&s>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===r&&(this._initted||!this.vars.lazy||c)&&(s>=0&&(c=!0),this._rawPrevTime=m=!b||a||s===a?a:g)),this._initted||(c=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(i=r+this._repeatDelay,this._cycle=this._totalTime/i>>0,0!==this._cycle&&this._cycle===this._totalTime/i&&this._cycle--,this._time=this._totalTime-this._cycle*i,this._yoyo&&0!==(1&this._cycle)&&(this._time=r-this._time),this._time>r?this._time=r:this._time<0&&(this._time=0)),this._easeType?(j=this._time/r,k=this._easeType,l=this._easePower,(1===k||3===k&&j>=.5)&&(j=1-j),3===k&&(j*=2),1===l?j*=j:2===l?j*=j*j:3===l?j*=j*j*j:4===l&&(j*=j*j*j*j),1===k?this.ratio=1-j:2===k?this.ratio=j:this._time/r<.5?this.ratio=j/2:this.ratio=1-j/2):this.ratio=this._ease.getRatio(this._time/r)),o===this._time&&!c&&q===this._cycle)return void(p!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=o,this._totalTime=p,this._rawPrevTime=s,this._cycle=q,h.lazyTweens.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/r):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&a>=0&&(this._active=!0),0===p&&(2===this._initted&&a>0&&this._init(),this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._totalTime||0===r)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||(this._totalTime!==p||d)&&this._callback(\"onUpdate\")),this._cycle!==q&&(b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===r&&this._rawPrevTime===g&&m!==g&&(this._rawPrevTime=0))},f.to=function(a,b,c){return new f(a,b,c)},f.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new f(a,b,c)},f.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new f(a,b,d)},f.staggerTo=f.allTo=function(a,b,g,h,k,m,n){h=h||0;var o,p,q,r,s=0,t=[],u=function(){g.onComplete&&g.onComplete.apply(g.onCompleteScope||this,arguments),k.apply(n||g.callbackScope||this,m||l)},v=g.cycle,w=g.startAt&&g.startAt.cycle;for(j(a)||(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a))),a=a||[],0>h&&(a=d(a),a.reverse(),h*=-1),o=a.length-1,q=0;o>=q;q++){p={};for(r in g)p[r]=g[r];if(v&&e(p,a,q),w){w=p.startAt={};for(r in g.startAt)w[r]=g.startAt[r];e(p.startAt,a,q)}p.delay=s+(p.delay||0),q===o&&k&&(p.onComplete=u),t[q]=new f(a[q],b,p),s+=h}return t},f.staggerFrom=f.allFrom=function(a,b,c,d,e,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,f.staggerTo(a,b,c,d,e,g,h)},f.staggerFromTo=f.allFromTo=function(a,b,c,d,e,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,f.staggerTo(a,b,d,e,g,h,i)},f.delayedCall=function(a,b,c,d,e){return new f(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,useFrames:e,overwrite:0})},f.set=function(a,b){return new f(a,0,b)},f.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var m=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(m(f,b)),e=d.length),f=f._next;return d},n=f.getAllTweens=function(b){return m(a._rootTimeline,b).concat(m(a._rootFramesTimeline,b))};f.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=n(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g._reversed?0:g.totalDuration()):g._enabled(!1,!1))},f.killChildTweensOf=function(a,b){if(null!=a){var e,g,k,l,m,n=h.tweenLookup;if(\"string\"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a)),j(a))for(l=a.length;--l>-1;)f.killChildTweensOf(a[l],b);else{e=[];for(k in n)for(g=n[k].target.parentNode;g;)g===a&&(e=e.concat(n[k].tweens)),g=g.parentNode;for(m=e.length,l=0;m>l;l++)b&&e[l].totalTime(e[l].totalDuration()),e[l]._enabled(!1,!1)}}};var o=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=n(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return f.pauseAll=function(a,b,c){o(!0,a,b,c)},f.resumeAll=function(a,b,c){o(!1,a,b,c)},f.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||g,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},k.progress=function(a){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},k.totalProgress=function(a){return arguments.length?this.totalTime(this.totalDuration()*a,!1):this._totalTime/this.totalDuration()},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},k.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},f},!0),_gsScope._gsDefine(\"TimelineLite\",[\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],i(c)&&-1!==c.join(\"\").indexOf(\"{self}\")&&(e[d]=this._swapSelfInParams(c));i(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals,g=d._internals={},h=f.isSelector,i=f.isArray,j=f.lazyTweens,k=f.lazyRender,l=_gsScope._gsDefine.globals,m=function(a){var b,c={};for(b in a)c[b]=a[b];return c},n=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]=\"function\"==typeof e?e.call(b[c],c):e[c%e.length];delete a.cycle},o=g.pauseCallback=function(){},p=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},q=d.prototype=new b;return d.version=\"1.18.2\",q.constructor=d,q.kill()._gc=q._forcingPlayhead=q._hasPause=!1,q.to=function(a,b,d,e){var f=d.repeat&&l.TweenMax||c;return b?this.add(new f(a,b,d),e):this.set(a,d,e)},q.from=function(a,b,d,e){return this.add((d.repeat&&l.TweenMax||c).from(a,b,d),e)},q.fromTo=function(a,b,d,e,f){var g=e.repeat&&l.TweenMax||c;return b?this.add(g.fromTo(a,b,d,e),f):this.set(a,e,f)},q.staggerTo=function(a,b,e,f,g,i,j,k){var l,o,q=new d({onComplete:i,onCompleteParams:j,callbackScope:k,smoothChildTiming:this.smoothChildTiming}),r=e.cycle;for(\"string\"==typeof a&&(a=c.selector(a)||a),a=a||[],h(a)&&(a=p(a)),f=f||0,0>f&&(a=p(a),a.reverse(),f*=-1),o=0;o<a.length;o++)l=m(e),l.startAt&&(l.startAt=m(l.startAt),l.startAt.cycle&&n(l.startAt,a,o)),r&&n(l,a,o),q.to(a[o],b,l,o*f);return this.add(q,g)},q.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},q.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},q.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},q.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g=new d(a),h=g._timeline;for(null==b&&(b=!0),h._remove(g,!0),g._startTime=0,g._rawPrevTime=g._time=g._totalTime=h._time,e=h._first;e;)f=e._next,b&&e instanceof c&&e.target===e.vars.onComplete||g.add(e,e._startTime-e._delay),e=f;return h.add(g,0),g},q.add=function(e,f,g,h){var j,k,l,m,n,o;if(\"number\"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&i(e)){for(g=g||\"normal\",h=h||0,j=f,k=e.length,l=0;k>l;l++)i(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),\"string\"!=typeof m&&\"function\"!=typeof m&&(\"sequence\"===g?j=m._startTime+m.totalDuration()/m._timeScale:\"start\"===g&&(m._startTime-=m.delay())),j+=h;return this._uncache(!0)}if(\"string\"==typeof e)return this.addLabel(e,f);if(\"function\"!=typeof e)throw\"Cannot add \"+e+\" into the timeline; it is not a tween, timeline, function, or string.\";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._timeline;)o&&n._timeline.smoothChildTiming?n.totalTime(n._totalTime,!0):n._gc&&n._enabled(!0,!1),n=n._timeline;return this},q.remove=function(b){if(b instanceof a){this._remove(b,!1);var c=b._timeline=b.vars.useFrames?a._rootFramesTimeline:a._rootTimeline;return b._startTime=(b._paused?b._pauseTime:c._time)-(b._reversed?b.totalDuration()-b._totalTime:b._totalTime)/b._timeScale,this}if(b instanceof Array||b&&b.push&&i(b)){for(var d=b.length;--d>-1;)this.remove(b[d]);return this}return\"string\"==typeof b?this.removeLabel(b):this.kill(null,b)},q._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>d._startTime+d._totalDuration/d._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},q.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},q.insert=q.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},q.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},q.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},q.addPause=function(a,b,d,e){var f=c.delayedCall(0,o,d,e||this);return f.vars.onComplete=f.vars.onReverseComplete=b,f.data=\"isPause\",this._hasPause=!0,this.add(f,a)},q.removeLabel=function(a){return delete this._labels[a],this},q.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},q._parseTimeOrLabel=function(b,c,d,e){var f;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&i(e)))for(f=e.length;--f>-1;)e[f]instanceof a&&e[f].timeline===this&&this.remove(e[f]);if(\"string\"==typeof c)return this._parseTimeOrLabel(c,d&&\"number\"==typeof b&&null==this._labels[c]?b-this.duration():0,d);if(c=c||0,\"string\"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=this.duration());else{if(f=b.indexOf(\"=\"),-1===f)return null==this._labels[b]?d?this._labels[b]=this.duration()+c:c:this._labels[b]+c;c=parseInt(b.charAt(f-1)+\"1\",10)*Number(b.substr(f+1)),b=f>1?this._parseTimeOrLabel(b.substr(0,f-1),0,d):this.duration()}return Number(b)+c},q.seek=function(a,b){return this.totalTime(\"number\"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)},q.stop=function(){return this.paused(!0)},q.gotoAndPlay=function(a,b){return this.play(a,b)},q.gotoAndStop=function(a,b){return this.pause(a,b)},q.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,h,i,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._startTime,q=this._timeScale,r=this._paused;if(a>=n-1e-7)this._totalTime=this._time=n,this._reversed||this._hasPausedChild()||(f=!0,h=\"onComplete\",i=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(i=!0,this._rawPrevTime>e&&(h=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,a=n+1e-4;else if(1e-7>a)if(this._totalTime=this._time=0,(0!==o||0===this._duration&&this._rawPrevTime!==e&&(this._rawPrevTime>0||0>a&&this._rawPrevTime>=0))&&(h=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(i=f=!0,h=\"onReverseComplete\"):this._rawPrevTime>=0&&this._first&&(i=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(i=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!b){if(a>=o)for(d=this._first;d&&d._startTime<=a&&!l;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(l=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!l;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(l=d),d=d._prev;l&&(this._time=a=l._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=a}if(this._time!==o&&this._first||c||i||l){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==o&&a>0&&(this._active=!0),0===o&&this.vars.onStart&&0!==this._time&&(b||this._callback(\"onStart\")),m=this._time,m>=o)for(d=this._first;d&&(g=d._next,m===this._time&&(!this._paused||r));)(d._active||d._startTime<=m&&!d._paused&&!d._gc)&&(l===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,m===this._time&&(!this._paused||r));){if(d._active||d._startTime<=o&&!d._paused&&!d._gc){if(l===d){for(l=d._prev;l&&l.endTime()>this._time;)l.render(l._reversed?l.totalDuration()-(a-l._startTime)*l._timeScale:(a-l._startTime)*l._timeScale,b,c),l=l._prev;l=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=g}this._onUpdate&&(b||(j.length&&k(),this._callback(\"onUpdate\"))),h&&(this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||n>=this.totalDuration())&&(f&&(j.length&&k(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[h]&&this._callback(h)))}},q._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},q.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},q.getTweensOf=function(a,b){var d,e,f=this._gc,g=[],h=0;for(f&&this._enabled(!0,!0),d=c.getTweensOf(a),e=d.length;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(g[h++]=d[e]);return f&&this._enabled(!1,!0),g},q.recent=function(){return this._recent},q._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},q.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},q._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},q.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},q.invalidate=function(){for(var b=this._first;b;)b.invalidate(),b=b._next;return a.prototype.invalidate.call(this)},q._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},q.totalTime=function(b,c,d){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},q.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},q.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused?this.add(e,e._startTime-e._delay):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return a&&this.totalDuration()?this.timeScale(this._totalDuration/a):this},q.paused=function(b){if(!b)for(var c=this._first,d=this._time;c;)c._startTime===d&&\"isPause\"===c.data&&(c._rawPrevTime=0),c=c._next;return a.prototype.paused.apply(this,arguments)},q.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},q.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},d},!0),_gsScope._gsDefine(\"TimelineMax\",[\"TimelineLite\",\"TweenLite\",\"easing.Ease\"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=b._internals,g=f.lazyTweens,h=f.lazyRender,i=new c(null,null,1,0),j=d.prototype=new a;return j.constructor=d,j.kill()._gc=!1,d.version=\"1.18.2\",j.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},j.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},j.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},j.removePause=function(b){return this.removeCallback(a._internals.pauseCallback,b)},j.tweenTo=function(a,c){c=c||{};var d,e,f,g={ease:i,useFrames:this.usesFrames(),immediateRender:!1};for(e in c)g[e]=c[e];return g.time=this._parseTimeOrLabel(a),d=Math.abs(Number(g.time)-this._time)/this._timeScale||.001,f=new b(this,d,g),g.onStart=function(){f.target.paused(!0),f.vars.time!==f.target.time()&&d===f.duration()&&f.duration(Math.abs(f.vars.time-f.target.time())/f.target._timeScale),c.onStart&&f._callback(\"onStart\")},f},j.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],callbackScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},j.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,i,j,k,l,m,n,o=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,q=this._time,r=this._totalTime,s=this._startTime,t=this._timeScale,u=this._rawPrevTime,v=this._paused,w=this._cycle;if(a>=o-1e-7)this._locked||(this._totalTime=o,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(f=!0,j=\"onComplete\",k=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||0>u||u===e)&&u!==a&&this._first&&(k=!0,u>e&&(j=\"onReverseComplete\"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=p,a=p+1e-4);else if(1e-7>a)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==q||0===p&&u!==e&&(u>0||0>a&&u>=0)&&!this._locked)&&(j=\"onReverseComplete\",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(k=f=!0,j=\"onReverseComplete\"):u>=0&&this._first&&(k=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=p||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(k=!0)}else if(0===p&&0>u&&(k=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(l=p+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,a=p+1e-4):this._time<0?this._time=a=0:a=this._time)),this._hasPause&&!this._forcingPlayhead&&!b){if(a=this._time,a>=q)for(d=this._first;d&&d._startTime<=a&&!m;)d._duration||\"isPause\"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(m=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!m;)d._duration||\"isPause\"===d.data&&d._rawPrevTime>0&&(m=d),d=d._prev;m&&(this._time=a=m._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var x=this._yoyo&&0!==(1&w),y=x===(this._yoyo&&0!==(1&this._cycle)),z=this._totalTime,A=this._cycle,B=this._rawPrevTime,C=this._time;if(this._totalTime=w*p,this._cycle<w?x=!x:this._totalTime+=p,this._time=q,this._rawPrevTime=0===p?u-1e-4:u,this._cycle=w,this._locked=!0,q=x?0:p,this.render(q,b,0===p),b||this._gc||this.vars.onRepeat&&this._callback(\"onRepeat\"),q!==this._time)return;if(y&&(q=x?p+1e-4:-1e-4,this.render(q,!0,!1)),this._locked=!1,this._paused&&!v)return;this._time=C,this._totalTime=z,this._cycle=A,this._rawPrevTime=B}if(!(this._time!==q&&this._first||c||k||m))return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback(\"onUpdate\")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==r&&a>0&&(this._active=!0),0===r&&this.vars.onStart&&0!==this._totalTime&&(b||this._callback(\"onStart\")),n=this._time,n>=q)for(d=this._first;d&&(i=d._next,n===this._time&&(!this._paused||v));)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(m===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=i;else for(d=this._last;d&&(i=d._prev,n===this._time&&(!this._paused||v));){if(d._active||d._startTime<=q&&!d._paused&&!d._gc){if(m===d){for(m=d._prev;m&&m.endTime()>this._time;)m.render(m._reversed?m.totalDuration()-(a-m._startTime)*m._timeScale:(a-m._startTime)*m._timeScale,b,c),m=m._prev;m=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=i}this._onUpdate&&(b||(g.length&&h(),this._callback(\"onUpdate\"))),j&&(this._locked||this._gc||(s===this._startTime||t!==this._timeScale)&&(0===this._time||o>=this.totalDuration())&&(f&&(g.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[j]&&this._callback(j)))},j.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},j.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},j.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},j.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},j.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},j.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},j.totalDuration=function(b){return arguments.length?-1!==this._repeat&&b?this.timeScale(this.totalDuration()/b):this:(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},j.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},j.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},j.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},j.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},j.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=_gsScope._gsDefine.globals,g=function(a,b,c,d){this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},h=\",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",i=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},j=function(a,e,f,g,h){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,h?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,0!==j?n.b=y:n.b=y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=i(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=i(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},k=function(a,d,e,f){var h,i,j,k,l,m,n=[];if(f)for(a=[f].concat(a),i=a.length;--i>-1;)\"string\"==typeof(m=a[i][d])&&\"=\"===m.charAt(1)&&(a[i][d]=f[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new g(a[0][d],0,0,a[-1>h?0:1][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new g(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new g(a[i][d],0,0,a[i+1][d]),n},l=function(a,f,g,i,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l=\"string\"==typeof l?\",\"+l+\",\":h,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(\",\"+o+\",\"),v[o]=k(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),c[n]=Math.sqrt(c[n]);if(!i){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q],d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=g?4:1;--n>-1;)o=w[n],p=v[o],j(p,f,g,i,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},m=function(a,b,c){b=b||\"soft\";var d,e,f,h,i,j,k,l,m,n,o,p={},q=\"cubic\"===b?3:2,r=\"soft\"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw\"invalid Bezier data\";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:\"string\"==typeof(o=a[k][m])&&\"=\"===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],f=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new g(d,e,f,h):new g(d,(2*e+d)/3,(2*e+f)/3,f);i.length=n}return p},n=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},o=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],m=[];for(c in a)n(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,m[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=m,h[f]=j,i=0,m=[]);return{length:j,lengths:h,segments:l}},p=_gsScope._gsDefine.plugin({propName:\"bezier\",priority:-1,version:\"1.3.4\",API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._round={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);\nvar d,e,f,g,h,i=b.values||[],j={},k=i[0],n=b.autoRotate||c.vars.orientToBezier;this._autoRotate=n?n instanceof Array?n:[[\"x\",\"y\",\"rotation\",n===!0?0:Number(n)||0]]:null;for(d in k)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]=\"function\"==typeof a[d],j[d]=e?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers=\"cubic\"!==b.type&&\"quadratic\"!==b.type&&\"soft\"!==b.type?l(i,isNaN(b.curviness)?1:b.curviness,!1,\"thruBasic\"===b.type,b.correlate,h):m(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=o(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(n=this._autoRotate)for(this._initialRotations=[],n[0]instanceof Array||(this._autoRotate=n=[n]),f=n.length;--f>-1;){for(g=0;3>g;g++)d=n[f][g],this._func[d]=\"function\"==typeof a[d]?a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]:!1;d=n[f][2],this._initialRotations[f]=this._func[d]?this._func[d].call(this._target):this._target[d]}return this._startRatio=c.vars.runBackwards?1:0,!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target,p=b!==this._startRatio;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._round[f]&&(i=Math.round(i)),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var q,r,s,t,u,v,w,x=this._autoRotate;for(e=x.length;--e>-1;)f=x[e][2],v=x[e][3]||0,w=x[e][4]===!0?1:a,g=this._beziers[x[e][0]],q=this._beziers[x[e][1]],g&&q&&(g=g[c],q=q[c],r=g.a+(g.b-g.a)*h,t=g.b+(g.c-g.b)*h,r+=(t-r)*h,t+=(g.c+(g.d-g.c)*h-t)*h,s=q.a+(q.b-q.a)*h,u=q.b+(q.c-q.b)*h,s+=(u-s)*h,u+=(q.c+(q.d-q.c)*h-u)*h,i=p?Math.atan2(u-s,t-r)*w+v:this._initialRotations[e],n[f]?o[f](i):o[f]=i)}}}),q=p.prototype;p.bezierThrough=l,p.cubicToQuadratic=i,p._autoCSS=!0,p.quadraticToCubic=function(a,b,c){return new g(a,(2*b+a)/3,(2*b+c)/3,c)},p._cssRegister=function(){var a=f.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp(\"bezier\",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new p;var j,k,l,m=b.values,n=m.length-1,o=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),o[j]=l.end;for(k in b)q[k]=b[k];return q.values=o,h=new e(a,\"bezier\",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[[\"left\",\"top\",\"rotation\",j,!1]]:null!=l.end.x?[[\"x\",\"y\",\"rotation\",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform),i._onInitTween(l.proxy,q,g._tween),h}})}},q._roundProps=function(a,b){for(var c=this._overwriteProps,d=c.length;--d>-1;)(a[c[d]]||a.bezier||a.bezierThrough)&&(this._round[c[d]]=b)},q._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);return this._super._kill.call(this,a)}}(),_gsScope._gsDefine(\"plugins.CSSPlugin\",[\"plugins.TweenPlugin\",\"TweenLite\"],function(a,b){var c,d,e,f,g=function(){a.call(this,\"css\"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h=_gsScope._gsDefine.globals,i={},j=g.prototype=new a(\"css\");j.constructor=g,g.version=\"1.18.2\",g.API=2,g.defaultTransformPerspective=0,g.defaultSkewType=\"compensated\",g.defaultSmoothOrigin=!0,j=\"px\",g.suffixMap={top:j,right:j,bottom:j,left:j,width:j,height:j,fontSize:j,padding:j,margin:j,perspective:j,lineHeight:\"\"};var k,l,m,n,o,p,q=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d)+/g,r=/(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,s=/(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi,t=/(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g,u=/(?:\\d|\\-|\\+|=|#|\\.)*/g,v=/opacity *= *([^)]*)/i,w=/opacity:([^;]*)/i,x=/alpha\\(opacity *=.+?\\)/i,y=/^(rgb|hsl)/,z=/([A-Z])/g,A=/-([a-z])/gi,B=/(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi,C=function(a,b){return b.toUpperCase()},D=/(?:Left|Right|Width)/i,E=/(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,F=/progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,G=/,(?=[^\\)]*(?:\\(|$))/gi,H=Math.PI/180,I=180/Math.PI,J={},K=document,L=function(a){return K.createElementNS?K.createElementNS(\"http://www.w3.org/1999/xhtml\",a):K.createElement(a)},M=L(\"div\"),N=L(\"img\"),O=g._internals={_specialProps:i},P=navigator.userAgent,Q=function(){var a=P.indexOf(\"Android\"),b=L(\"a\");return m=-1!==P.indexOf(\"Safari\")&&-1===P.indexOf(\"Chrome\")&&(-1===a||Number(P.substr(a+8,1))>3),o=m&&Number(P.substr(P.indexOf(\"Version/\")+8,1))<6,n=-1!==P.indexOf(\"Firefox\"),(/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(P)||/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(P))&&(p=parseFloat(RegExp.$1)),b?(b.style.cssText=\"top:1px;opacity:.55;\",/^0.55/.test(b.style.opacity)):!1}(),R=function(a){return v.test(\"string\"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||\"\")?parseFloat(RegExp.$1)/100:1},S=function(a){window.console&&console.log(a)},T=\"\",U=\"\",V=function(a,b){b=b||M;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=[\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(U=3===d?\"ms\":c[d],T=\"-\"+U.toLowerCase()+\"-\",U+a):null},W=K.defaultView?K.defaultView.getComputedStyle:function(){},X=g.getStyle=function(a,b,c,d,e){var f;return Q||\"opacity\"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||W(a))?f=c[b]||c.getPropertyValue(b)||c.getPropertyValue(b.replace(z,\"-$1\").toLowerCase()):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&\"none\"!==f&&\"auto\"!==f&&\"auto auto\"!==f?f:e):R(a)},Y=O.convertToPixels=function(a,c,d,e,f){if(\"px\"===e||!e)return d;if(\"auto\"===e||!d)return 0;var h,i,j,k=D.test(c),l=a,m=M.style,n=0>d;if(n&&(d=-d),\"%\"===e&&-1!==c.indexOf(\"border\"))h=d/100*(k?a.clientWidth:a.clientHeight);else{if(m.cssText=\"border:0 solid red;position:\"+X(a,\"position\")+\";line-height:0;\",\"%\"!==e&&l.appendChild&&\"v\"!==e.charAt(0)&&\"rem\"!==e)m[k?\"borderLeftWidth\":\"borderTopWidth\"]=d+e;else{if(l=a.parentNode||K.body,i=l._gsCache,j=b.ticker.frame,i&&k&&i.time===j)return i.width*d/100;m[k?\"width\":\"height\"]=d+e}l.appendChild(M),h=parseFloat(M[k?\"offsetWidth\":\"offsetHeight\"]),l.removeChild(M),k&&\"%\"===e&&g.cacheWidths!==!1&&(i=l._gsCache=l._gsCache||{},i.time=j,i.width=h/d*100),0!==h||f||(h=Y(a,c,d,e,!0))}return n?-h:h},Z=O.calculateOffset=function(a,b,c){if(\"absolute\"!==X(a,\"position\",c))return 0;var d=\"left\"===b?\"Left\":\"Top\",e=X(a,\"margin\"+d,c);return a[\"offset\"+d]-(Y(a,b,parseFloat(e),e.replace(u,\"\"))||0)},$=function(a,b){var c,d,e,f={};if(b=b||W(a,null))if(c=b.length)for(;--c>-1;)e=b[c],(-1===e.indexOf(\"-transform\")||za===e)&&(f[e.replace(A,C)]=b.getPropertyValue(e));else for(c in b)(-1===c.indexOf(\"Transform\")||ya===c)&&(f[c]=b[c]);else if(b=a.currentStyle||a.style)for(c in b)\"string\"==typeof c&&void 0===f[c]&&(f[c.replace(A,C)]=b[c]);return Q||(f.opacity=R(a)),d=La(a,b,!1),f.rotation=d.rotation,f.skewX=d.skewX,f.scaleX=d.scaleX,f.scaleY=d.scaleY,f.x=d.x,f.y=d.y,Ba&&(f.z=d.z,f.rotationX=d.rotationX,f.rotationY=d.rotationY,f.scaleZ=d.scaleZ),f.filters&&delete f.filters,f},_=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)\"cssText\"!==g&&\"length\"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf(\"Origin\")&&(\"number\"==typeof f||\"string\"==typeof f)&&(i[g]=\"auto\"!==f||\"left\"!==g&&\"top\"!==g?\"\"!==f&&\"auto\"!==f&&\"none\"!==f||\"string\"!=typeof b[g]||\"\"===b[g].replace(t,\"\")?f:0:Z(a,g),void 0!==j[g]&&(h=new oa(j,g,j[g],h)));if(d)for(g in d)\"className\"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},aa={width:[\"Left\",\"Right\"],height:[\"Top\",\"Bottom\"]},ba=[\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],ca=function(a,b,c){var d=parseFloat(\"width\"===b?a.offsetWidth:a.offsetHeight),e=aa[b],f=e.length;for(c=c||W(a,null);--f>-1;)d-=parseFloat(X(a,\"padding\"+e[f],c,!0))||0,d-=parseFloat(X(a,\"border\"+e[f]+\"Width\",c,!0))||0;return d},da=function(a,b){if(\"contain\"===a||\"auto\"===a||\"auto auto\"===a)return a+\" \";(null==a||\"\"===a)&&(a=\"0 0\");var c=a.split(\" \"),d=-1!==a.indexOf(\"left\")?\"0%\":-1!==a.indexOf(\"right\")?\"100%\":c[0],e=-1!==a.indexOf(\"top\")?\"0%\":-1!==a.indexOf(\"bottom\")?\"100%\":c[1];return null==e?e=\"center\"===d?\"50%\":\"0\":\"center\"===e&&(e=\"50%\"),(\"center\"===d||isNaN(parseFloat(d))&&-1===(d+\"\").indexOf(\"=\"))&&(d=\"50%\"),a=d+\" \"+e+(c.length>2?\" \"+c[2]:\"\"),b&&(b.oxp=-1!==d.indexOf(\"%\"),b.oyp=-1!==e.indexOf(\"%\"),b.oxr=\"=\"===d.charAt(1),b.oyr=\"=\"===e.charAt(1),b.ox=parseFloat(d.replace(t,\"\")),b.oy=parseFloat(e.replace(t,\"\")),b.v=a),b||a},ea=function(a,b){return\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)},fa=function(a,b){return null==a?b:\"string\"==typeof a&&\"=\"===a.charAt(1)?parseInt(a.charAt(0)+\"1\",10)*parseFloat(a.substr(2))+b:parseFloat(a)},ga=function(a,b,c,d){var e,f,g,h,i,j=1e-6;return null==a?h=b:\"number\"==typeof a?h=a:(e=360,f=a.split(\"_\"),i=\"=\"===a.charAt(1),g=(i?parseInt(a.charAt(0)+\"1\",10)*parseFloat(f[0].substr(2)):parseFloat(f[0]))*(-1===a.indexOf(\"rad\")?1:I)-(i?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf(\"short\")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf(\"_cw\")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf(\"ccw\")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),j>h&&h>-j&&(h=0),h},ha={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ia=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},ja=g.parseColor=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a)if(\"number\"==typeof a)c=[a>>16,a>>8&255,255&a];else{if(\",\"===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),ha[a])c=ha[a];else if(\"#\"===a.charAt(0))4===a.length&&(d=a.charAt(1),e=a.charAt(2),f=a.charAt(3),a=\"#\"+d+d+e+e+f+f),a=parseInt(a.substr(1),16),c=[a>>16,a>>8&255,255&a];else if(\"hsl\"===a.substr(0,3))if(c=m=a.match(q),b){if(-1!==a.indexOf(\"=\"))return a.match(r)}else g=Number(c[0])%360/360,h=Number(c[1])/100,i=Number(c[2])/100,e=.5>=i?i*(h+1):i+h-i*h,d=2*i-e,c.length>3&&(c[3]=Number(a[3])),c[0]=ia(g+1/3,d,e),c[1]=ia(g,d,e),c[2]=ia(g-1/3,d,e);else c=a.match(q)||ha.transparent;c[0]=Number(c[0]),c[1]=Number(c[1]),c[2]=Number(c[2]),c.length>3&&(c[3]=Number(c[3]))}else c=ha.black;return b&&!m&&(d=c[0]/255,e=c[1]/255,f=c[2]/255,j=Math.max(d,e,f),k=Math.min(d,e,f),i=(j+k)/2,j===k?g=h=0:(l=j-k,h=i>.5?l/(2-j-k):l/(j+k),g=j===d?(e-f)/l+(f>e?6:0):j===e?(f-d)/l+2:(d-e)/l+4,g*=60),c[0]=g+.5|0,c[1]=100*h+.5|0,c[2]=100*i+.5|0),c},ka=function(a,b){var c,d,e,f=a.match(la)||[],g=0,h=f.length?\"\":a;for(c=0;c<f.length;c++)d=f[c],e=a.substr(g,a.indexOf(d,g)-g),g+=e.length+d.length,d=ja(d,b),3===d.length&&d.push(1),h+=e+(b?\"hsla(\"+d[0]+\",\"+d[1]+\"%,\"+d[2]+\"%,\"+d[3]:\"rgba(\"+d.join(\",\"))+\")\";return h},la=\"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";for(j in ha)la+=\"|\"+j+\"\\\\b\";la=new RegExp(la+\")\",\"gi\"),g.colorStringFilter=function(a){var b,c=a[0]+a[1];la.lastIndex=0,la.test(c)&&(b=-1!==c.indexOf(\"hsl(\")||-1!==c.indexOf(\"hsla(\"),a[0]=ka(a[0],b),a[1]=ka(a[1],b))},b.defaultStringFilter||(b.defaultStringFilter=g.colorStringFilter);var ma=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(la)||[\"\"])[0]:\"\",g=a.split(f).join(\"\").match(s)||[],h=a.substr(0,a.indexOf(g[0])),i=\")\"===a.charAt(a.length-1)?\")\":\"\",j=-1!==a.indexOf(\" \")?\" \":\",\",k=g.length,l=k>0?g[0].replace(q,\"\"):\"\";return k?e=b?function(a){var b,m,n,o;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(o=a.replace(G,\"|\").split(\"|\"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(\",\")}if(b=(a.match(la)||[f])[0],m=a.split(b).join(\"\").match(s)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf(\"inset\")?\" inset\":\"\")}:function(a){var b,f,m;if(\"number\"==typeof a)a+=l;else if(d&&G.test(a)){for(f=a.replace(G,\"|\").split(\"|\"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(\",\")}if(b=a.match(s)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},na=function(a){return a=a.split(\",\"),function(b,c,d,e,f,g,h){var i,j=(c+\"\").split(\" \");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},oa=(O._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f,g=this.data,h=g.proxy,i=g.firstMPT,j=1e-6;i;)b=h[i.v],i.r?b=Math.round(b):j>b&&b>-j&&(b=0),i.t[i.p]=b,i=i._next;if(g.autoRotate&&(g.autoRotate.rotation=h.rotation),1===a||0===a)for(i=g.firstMPT,f=1===a?\"e\":\"b\";i;){if(c=i.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c[\"xn\"+d]+c[\"xs\"+(d+1)];c[f]=e}}else c[f]=c.s+c.xs0;i=i._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),pa=(O._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=J;for(c._transform=null,J=b,d=k=c.parse(a,b,d,e),J=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new oa(d,\"s\",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i=\"xn\"+g,h=d.p+\"_\"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new oa(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},O.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof pa||f.push(this.n),this.r=j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),qa=function(a,b,c,d,e,f){var g=new pa(a,b,c,d-c,e,-1,f);return g.b=c,g.e=g.xs0=d,g},ra=g.parseComplex=function(a,b,c,d,e,f,g,h,i,j){c=c||f||\"\",g=new pa(a,b,0,0,g,j?2:1,null,!1,h,c,d),d+=\"\";var l,m,n,o,p,s,t,u,v,w,x,y,z,A=c.split(\", \").join(\",\").split(\" \"),B=d.split(\", \").join(\",\").split(\" \"),C=A.length,D=k!==!1;for((-1!==d.indexOf(\",\")||-1!==c.indexOf(\",\"))&&(A=A.join(\" \").replace(G,\", \").split(\" \"),B=B.join(\" \").replace(G,\", \").split(\" \"),C=A.length),C!==B.length&&(A=(f||\"\").split(\" \"),C=A.length),g.plugin=i,g.setRatio=j,la.lastIndex=0,l=0;C>l;l++)if(o=A[l],p=B[l],u=parseFloat(o),u||0===u)g.appendXtra(\"\",u,ea(p,u),p.replace(r,\"\"),D&&-1!==p.indexOf(\"px\"),!0);else if(e&&la.test(o))y=\",\"===p.charAt(p.length-1)?\"),\":\")\",z=-1!==p.indexOf(\"hsl\")&&Q,o=ja(o,z),p=ja(p,z),v=o.length+p.length>6,v&&!Q&&0===p[3]?(g[\"xs\"+g.l]+=g.l?\" transparent\":\"transparent\",g.e=g.e.split(B[l]).join(\"transparent\")):(Q||(v=!1),z?g.appendXtra(v?\"hsla(\":\"hsl(\",o[0],ea(p[0],o[0]),\",\",!1,!0).appendXtra(\"\",o[1],ea(p[1],o[1]),\"%,\",!1).appendXtra(\"\",o[2],ea(p[2],o[2]),v?\"%,\":\"%\"+y,!1):g.appendXtra(v?\"rgba(\":\"rgb(\",o[0],p[0]-o[0],\",\",!0,!0).appendXtra(\"\",o[1],p[1]-o[1],\",\",!0).appendXtra(\"\",o[2],p[2]-o[2],v?\",\":y,!0),v&&(o=o.length<4?1:o[3],g.appendXtra(\"\",o,(p.length<4?1:p[3])-o,y,!1))),la.lastIndex=0;else if(s=o.match(q)){if(t=p.match(r),!t||t.length!==s.length)return g;for(n=0,m=0;m<s.length;m++)x=s[m],w=o.indexOf(x,n),g.appendXtra(o.substr(n,w-n),Number(x),ea(t[m],x),\"\",D&&\"px\"===o.substr(w+x.length,2),0===m),n=w+x.length;g[\"xs\"+g.l]+=o.substr(n)}else g[\"xs\"+g.l]+=g.l?\" \"+p:p;if(-1!==d.indexOf(\"=\")&&g.data){for(y=g.xs0+g.data.s,l=1;l<g.l;l++)y+=g[\"xs\"+l]+g.data[\"xn\"+l];g.e=y+g[\"xs\"+l]}return g.l||(g.type=-1,g.xs0=g.e),g.xfirst||g},sa=9;for(j=pa.prototype,j.l=j.pr=0;--sa>0;)j[\"xn\"+sa]=0,j[\"xs\"+sa]=\"\";j.xs0=\"\",j._next=j._prev=j.xfirst=j.data=j.plugin=j.setRatio=j.rxp=null,j.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g[\"xs\"+h]+=f&&h?\" \"+a:a||\"\",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g[\"xs\"+g.l]=d||\"\",h>0?(g.data[\"xn\"+h]=b+c,g.rxp[\"xn\"+h]=e,g[\"xn\"+h]=b,g.plugin||(g.xfirst=new pa(g,\"xn\"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g[\"xs\"+h]+=b+(d||\"\"),g)};var ta=function(a,b){b=b||{},this.p=b.prefix?V(a)||a:a,i[a]=i[this.p]=this,this.format=b.formatter||ma(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},ua=O._registerComplexSpecialProp=function(a,b,c){\"object\"!=typeof b&&(b={parser:c});var d,e,f=a.split(\",\"),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new ta(f[d],b)},va=function(a){if(!i[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+\"Plugin\";ua(a,{parser:function(a,c,d,e,f,g,j){var k=h.com.greensock.plugins[b];return k?(k._cssRegister(),i[d].parse(a,c,d,e,f,g,j)):(S(\"Error: \"+b+\" js file not loaded.\"),f)}})}};j=ta.prototype,j.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(G.test(c)||G.test(b)?(h=b.replace(G,\"|\").split(\"|\"),i=c.replace(G,\"|\").split(\"|\")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(-1===l?h[g]=h[g].split(m).join(\"\"):-1===k&&(h[g]+=\" \"+m)));b=h.join(\", \"),c=i.join(\", \")}return ra(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},j.parse=function(a,b,c,d,f,g,h){return this.parseComplex(a.style,this.format(X(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){ua(a,{parser:function(a,d,e,f,g,h,i){var j=new pa(a,e,0,0,g,2,e,!1,c);return j.plugin=h,j.setRatio=b(a,d,f._tween,e),j},priority:c})},g.useSVGTransformAttr=m||n;var wa,xa=\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"),ya=V(\"transform\"),za=T+\"transform\",Aa=V(\"transformOrigin\"),Ba=null!==V(\"perspective\"),Ca=O.Transform=function(){this.perspective=parseFloat(g.defaultTransformPerspective)||0,this.force3D=g.defaultForce3D!==!1&&Ba?g.defaultForce3D||\"auto\":!1},Da=window.SVGElement,Ea=function(a,b,c){var d,e=K.createElementNS(\"http://www.w3.org/2000/svg\",a),f=/([a-z])([A-Z])/g;for(d in c)e.setAttributeNS(null,d.replace(f,\"$1-$2\").toLowerCase(),c[d]);return b.appendChild(e),e},Fa=K.documentElement,Ga=function(){var a,b,c,d=p||/Android/i.test(P)&&!window.chrome;return K.createElementNS&&!d&&(a=Ea(\"svg\",Fa),b=Ea(\"rect\",a,{width:100,height:50,x:100}),c=b.getBoundingClientRect().width,b.style[Aa]=\"50% 50%\",b.style[ya]=\"scaleX(0.5)\",d=c===b.getBoundingClientRect().width&&!(n&&Ba),Fa.removeChild(a)),d}(),Ha=function(a,b,c,d,e){var f,h,i,j,k,l,m,n,o,p,q,r,s,t,u=a._gsTransform,v=Ka(a,!0);u&&(s=u.xOrigin,t=u.yOrigin),(!d||(f=d.split(\" \")).length<2)&&(m=a.getBBox(),b=da(b).split(\" \"),f=[(-1!==b[0].indexOf(\"%\")?parseFloat(b[0])/100*m.width:parseFloat(b[0]))+m.x,(-1!==b[1].indexOf(\"%\")?parseFloat(b[1])/100*m.height:parseFloat(b[1]))+m.y]),c.xOrigin=j=parseFloat(f[0]),c.yOrigin=k=parseFloat(f[1]),d&&v!==Ja&&(l=v[0],m=v[1],n=v[2],o=v[3],p=v[4],q=v[5],r=l*o-m*n,h=j*(o/r)+k*(-n/r)+(n*q-o*p)/r,i=j*(-m/r)+k*(l/r)-(l*q-m*p)/r,j=c.xOrigin=f[0]=h,k=c.yOrigin=f[1]=i),u&&(e||e!==!1&&g.defaultSmoothOrigin!==!1?(h=j-s,i=k-t,u.xOffset+=h*v[0]+i*v[2]-h,u.yOffset+=h*v[1]+i*v[3]-i):u.xOffset=u.yOffset=0),a.setAttribute(\"data-svg-origin\",f.join(\" \"))},Ia=function(a){return!!(Da&&\"function\"==typeof a.getBBox&&a.getCTM&&(!a.parentNode||a.parentNode.getBBox&&a.parentNode.getCTM))},Ja=[1,0,0,1,0,0],Ka=function(a,b){var c,d,e,f,g,h=a._gsTransform||new Ca,i=1e5;if(ya?d=X(a,za,null,!0):a.currentStyle&&(d=a.currentStyle.filter.match(E),d=d&&4===d.length?[d[0].substr(4),Number(d[2].substr(4)),Number(d[1].substr(4)),d[3].substr(4),h.x||0,h.y||0].join(\",\"):\"\"),c=!d||\"none\"===d||\"matrix(1, 0, 0, 1, 0, 0)\"===d,(h.svg||a.getBBox&&Ia(a))&&(c&&-1!==(a.style[ya]+\"\").indexOf(\"matrix\")&&(d=a.style[ya],c=0),e=a.getAttribute(\"transform\"),c&&e&&(-1!==e.indexOf(\"matrix\")?(d=e,c=0):-1!==e.indexOf(\"translate\")&&(d=\"matrix(1,0,0,1,\"+e.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\")+\")\",c=0))),c)return Ja;for(e=(d||\"\").match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi)||[],sa=e.length;--sa>-1;)f=Number(e[sa]),e[sa]=(g=f-(f|=0))?(g*i+(0>g?-.5:.5)|0)/i+f:f;return b&&e.length>6?[e[0],e[1],e[4],e[5],e[12],e[13]]:e},La=O.getTransform=function(a,c,d,f){if(a._gsTransform&&d&&!f)return a._gsTransform;var h,i,j,k,l,m,n=d?a._gsTransform||new Ca:new Ca,o=n.scaleX<0,p=2e-5,q=1e5,r=Ba?parseFloat(X(a,Aa,c,!1,\"0 0 0\").split(\" \")[2])||n.zOrigin||0:0,s=parseFloat(g.defaultTransformPerspective)||0;if(n.svg=!(!a.getBBox||!Ia(a)),n.svg&&(Ha(a,X(a,Aa,e,!1,\"50% 50%\")+\"\",n,a.getAttribute(\"data-svg-origin\")),wa=g.useSVGTransformAttr||Ga),h=Ka(a),h!==Ja){if(16===h.length){var t,u,v,w,x,y=h[0],z=h[1],A=h[2],B=h[3],C=h[4],D=h[5],E=h[6],F=h[7],G=h[8],H=h[9],J=h[10],K=h[12],L=h[13],M=h[14],N=h[11],O=Math.atan2(E,J);n.zOrigin&&(M=-n.zOrigin,K=G*M-h[12],L=H*M-h[13],M=J*M+n.zOrigin-h[14]),n.rotationX=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=C*w+G*x,u=D*w+H*x,v=E*w+J*x,G=C*-x+G*w,H=D*-x+H*w,J=E*-x+J*w,N=F*-x+N*w,C=t,D=u,E=v),O=Math.atan2(-A,J),n.rotationY=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),t=y*w-G*x,u=z*w-H*x,v=A*w-J*x,H=z*x+H*w,J=A*x+J*w,N=B*x+N*w,y=t,z=u,A=v),O=Math.atan2(z,y),n.rotation=O*I,O&&(w=Math.cos(-O),x=Math.sin(-O),y=y*w+C*x,u=z*w+D*x,D=z*-x+D*w,E=A*-x+E*w,z=u),n.rotationX&&Math.abs(n.rotationX)+Math.abs(n.rotation)>359.9&&(n.rotationX=n.rotation=0,n.rotationY=180-n.rotationY),n.scaleX=(Math.sqrt(y*y+z*z)*q+.5|0)/q,n.scaleY=(Math.sqrt(D*D+H*H)*q+.5|0)/q,n.scaleZ=(Math.sqrt(E*E+J*J)*q+.5|0)/q,n.skewX=0,n.perspective=N?1/(0>N?-N:N):0,n.x=K,n.y=L,n.z=M,n.svg&&(n.x-=n.xOrigin-(n.xOrigin*y-n.yOrigin*C),n.y-=n.yOrigin-(n.yOrigin*z-n.xOrigin*D))}else if((!Ba||f||!h.length||n.x!==h[4]||n.y!==h[5]||!n.rotationX&&!n.rotationY)&&(void 0===n.x||\"none\"!==X(a,\"display\",c))){var P=h.length>=6,Q=P?h[0]:1,R=h[1]||0,S=h[2]||0,T=P?h[3]:1;n.x=h[4]||0,n.y=h[5]||0,j=Math.sqrt(Q*Q+R*R),k=Math.sqrt(T*T+S*S),l=Q||R?Math.atan2(R,Q)*I:n.rotation||0,m=S||T?Math.atan2(S,T)*I+l:n.skewX||0,Math.abs(m)>90&&Math.abs(m)<270&&(o?(j*=-1,m+=0>=l?180:-180,l+=0>=l?180:-180):(k*=-1,m+=0>=m?180:-180)),n.scaleX=j,n.scaleY=k,n.rotation=l,n.skewX=m,Ba&&(n.rotationX=n.rotationY=n.z=0,n.perspective=s,n.scaleZ=1),n.svg&&(n.x-=n.xOrigin-(n.xOrigin*Q+n.yOrigin*S),n.y-=n.yOrigin-(n.xOrigin*R+n.yOrigin*T))}n.zOrigin=r;for(i in n)n[i]<p&&n[i]>-p&&(n[i]=0)}return d&&(a._gsTransform=n,n.svg&&(wa&&a.style[ya]?b.delayedCall(.001,function(){Pa(a.style,ya)}):!wa&&a.getAttribute(\"transform\")&&b.delayedCall(.001,function(){a.removeAttribute(\"transform\")}))),n},Ma=function(a){var b,c,d=this.data,e=-d.rotation*H,f=e+d.skewX*H,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter=\"\";var n,o,q=this.t.offsetWidth,r=this.t.offsetHeight,s=\"absolute\"!==m.position,t=\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+h+\", M12=\"+i+\", M21=\"+j+\", M22=\"+k,w=d.x+q*d.xPercent/100,x=d.y+r*d.yPercent/100;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,o=(d.oyp?r*d.oy*.01:d.oy)-r/2,w+=n-(n*h+o*i),x+=o-(n*j+o*k)),s?(n=q/2,o=r/2,t+=\", Dx=\"+(n-(n*h+o*i)+w)+\", Dy=\"+(o-(n*j+o*k)+x)+\")\"):t+=\", sizingMethod='auto expand')\",-1!==b.indexOf(\"DXImageTransform.Microsoft.Matrix(\")?l.filter=b.replace(F,t):l.filter=t+\" \"+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===t.indexOf(\"Dx=0, Dy=0\")||v.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf(b.indexOf(\"Alpha\"))&&l.removeAttribute(\"filter\")),!s){var y,z,A,B=8>p?1:-1;for(n=d.ieOffsetX||0,o=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+w),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+x),sa=0;4>sa;sa++)z=ba[sa],y=m[z],c=-1!==y.indexOf(\"px\")?parseFloat(y):Y(this.t,z,parseFloat(y),y.replace(u,\"\"))||0,A=c!==d[z]?2>sa?-d.ieOffsetX:-d.ieOffsetY:2>sa?n-d.ieOffsetX:o-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===sa||2===sa?1:B)))+\"px\"}}},Na=O.set3DTransformRatio=O.setTransformRatio=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z=this.data,A=this.t.style,B=z.rotation,C=z.rotationX,D=z.rotationY,E=z.scaleX,F=z.scaleY,G=z.scaleZ,I=z.x,J=z.y,K=z.z,L=z.svg,M=z.perspective,N=z.force3D;if(((1===a||0===a)&&\"auto\"===N&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!N)&&!K&&!M&&!D&&!C&&1===G||wa&&L||!Ba)return void(B||z.skewX||L?(B*=H,x=z.skewX*H,y=1e5,b=Math.cos(B)*E,e=Math.sin(B)*E,c=Math.sin(B-x)*-F,f=Math.cos(B-x)*F,x&&\"simple\"===z.skewType&&(s=Math.tan(x),s=Math.sqrt(1+s*s),c*=s,f*=s,z.skewY&&(b*=s,e*=s)),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset,wa&&(z.xPercent||z.yPercent)&&(p=this.t.getBBox(),I+=.01*z.xPercent*p.width,J+=.01*z.yPercent*p.height),p=1e-6,p>I&&I>-p&&(I=0),p>J&&J>-p&&(J=0)),u=(b*y|0)/y+\",\"+(e*y|0)/y+\",\"+(c*y|0)/y+\",\"+(f*y|0)/y+\",\"+I+\",\"+J+\")\",L&&wa?this.t.setAttribute(\"transform\",\"matrix(\"+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+u):A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix(\":\"matrix(\")+E+\",0,0,\"+F+\",\"+I+\",\"+J+\")\");if(n&&(p=1e-4,p>E&&E>-p&&(E=G=2e-5),p>F&&F>-p&&(F=G=2e-5),!M||z.z||z.rotationX||z.rotationY||(M=0)),B||z.skewX)B*=H,q=b=Math.cos(B),r=e=Math.sin(B),z.skewX&&(B-=z.skewX*H,q=Math.cos(B),r=Math.sin(B),\"simple\"===z.skewType&&(s=Math.tan(z.skewX*H),s=Math.sqrt(1+s*s),q*=s,r*=s,z.skewY&&(b*=s,e*=s))),c=-r,f=q;else{if(!(D||C||1!==G||M||L))return void(A[ya]=(z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) translate3d(\":\"translate3d(\")+I+\"px,\"+J+\"px,\"+K+\"px)\"+(1!==E||1!==F?\" scale(\"+E+\",\"+F+\")\":\"\"));b=f=1,c=e=0}j=1,d=g=h=i=k=l=0,m=M?-1/M:0,o=z.zOrigin,p=1e-6,v=\",\",w=\"0\",B=D*H,B&&(q=Math.cos(B),r=Math.sin(B),h=-r,k=m*-r,d=b*r,g=e*r,j=q,m*=q,b*=q,e*=q),B=C*H,B&&(q=Math.cos(B),r=Math.sin(B),s=c*q+d*r,t=f*q+g*r,i=j*r,l=m*r,d=c*-r+d*q,g=f*-r+g*q,j*=q,m*=q,c=s,f=t),1!==G&&(d*=G,g*=G,j*=G,m*=G),1!==F&&(c*=F,f*=F,i*=F,l*=F),1!==E&&(b*=E,e*=E,h*=E,k*=E),(o||L)&&(o&&(I+=d*-o,J+=g*-o,K+=j*-o+o),L&&(I+=z.xOrigin-(z.xOrigin*b+z.yOrigin*c)+z.xOffset,J+=z.yOrigin-(z.xOrigin*e+z.yOrigin*f)+z.yOffset),p>I&&I>-p&&(I=w),p>J&&J>-p&&(J=w),p>K&&K>-p&&(K=0)),u=z.xPercent||z.yPercent?\"translate(\"+z.xPercent+\"%,\"+z.yPercent+\"%) matrix3d(\":\"matrix3d(\",u+=(p>b&&b>-p?w:b)+v+(p>e&&e>-p?w:e)+v+(p>h&&h>-p?w:h),u+=v+(p>k&&k>-p?w:k)+v+(p>c&&c>-p?w:c)+v+(p>f&&f>-p?w:f),C||D||1!==G?(u+=v+(p>i&&i>-p?w:i)+v+(p>l&&l>-p?w:l)+v+(p>d&&d>-p?w:d),u+=v+(p>g&&g>-p?w:g)+v+(p>j&&j>-p?w:j)+v+(p>m&&m>-p?w:m)+v):u+=\",0,0,0,0,1,0,\",u+=I+v+J+v+K+v+(M?1+-K/M:1)+\")\",A[ya]=u};j=Ca.prototype,j.x=j.y=j.z=j.skewX=j.skewY=j.rotation=j.rotationX=j.rotationY=j.zOrigin=j.xPercent=j.yPercent=j.xOffset=j.yOffset=0,j.scaleX=j.scaleY=j.scaleZ=1,ua(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\",{parser:function(a,b,c,d,f,h,i){if(d._lastParsedTransform===i)return f;d._lastParsedTransform=i;var j,k,l,m,n,o,p,q,r,s,t=a._gsTransform,u=a.style,v=1e-6,w=xa.length,x=i,y={},z=\"transformOrigin\";if(i.display?(m=X(a,\"display\"),u.display=\"block\",j=La(a,e,!0,i.parseTransform),u.display=m):j=La(a,e,!0,i.parseTransform),d._transform=j,\"string\"==typeof x.transform&&ya)m=M.style,m[ya]=x.transform,m.display=\"block\",m.position=\"absolute\",K.body.appendChild(M),k=La(M,null,!1),K.body.removeChild(M),k.perspective||(k.perspective=j.perspective),null!=x.xPercent&&(k.xPercent=fa(x.xPercent,j.xPercent)),null!=x.yPercent&&(k.yPercent=fa(x.yPercent,j.yPercent));else if(\"object\"==typeof x){if(k={scaleX:fa(null!=x.scaleX?x.scaleX:x.scale,j.scaleX),scaleY:fa(null!=x.scaleY?x.scaleY:x.scale,j.scaleY),scaleZ:fa(x.scaleZ,j.scaleZ),x:fa(x.x,j.x),y:fa(x.y,j.y),z:fa(x.z,j.z),xPercent:fa(x.xPercent,j.xPercent),yPercent:fa(x.yPercent,j.yPercent),perspective:fa(x.transformPerspective,j.perspective)},q=x.directionalRotation,null!=q)if(\"object\"==typeof q)for(m in q)x[m]=q[m];else x.rotation=q;\"string\"==typeof x.x&&-1!==x.x.indexOf(\"%\")&&(k.x=0,k.xPercent=fa(x.x,j.xPercent)),\"string\"==typeof x.y&&-1!==x.y.indexOf(\"%\")&&(k.y=0,k.yPercent=fa(x.y,j.yPercent)),k.rotation=ga(\"rotation\"in x?x.rotation:\"shortRotation\"in x?x.shortRotation+\"_short\":\"rotationZ\"in x?x.rotationZ:j.rotation,j.rotation,\"rotation\",y),Ba&&(k.rotationX=ga(\"rotationX\"in x?x.rotationX:\"shortRotationX\"in x?x.shortRotationX+\"_short\":j.rotationX||0,j.rotationX,\"rotationX\",y),k.rotationY=ga(\"rotationY\"in x?x.rotationY:\"shortRotationY\"in x?x.shortRotationY+\"_short\":j.rotationY||0,j.rotationY,\"rotationY\",y)),k.skewX=null==x.skewX?j.skewX:ga(x.skewX,j.skewX),k.skewY=null==x.skewY?j.skewY:ga(x.skewY,j.skewY),(l=k.skewY-j.skewY)&&(k.skewX+=l,k.rotation+=l)}for(Ba&&null!=x.force3D&&(j.force3D=x.force3D,p=!0),j.skewType=x.skewType||j.skewType||g.defaultSkewType,o=j.force3D||j.z||j.rotationX||j.rotationY||k.z||k.rotationX||k.rotationY||k.perspective,o||null==x.scale||(k.scaleZ=1);--w>-1;)c=xa[w],n=k[c]-j[c],(n>v||-v>n||null!=x[c]||null!=J[c])&&(p=!0,f=new pa(j,c,j[c],n,f),c in y&&(f.e=y[c]),f.xs0=0,f.plugin=h,d._overwriteProps.push(f.n));return n=x.transformOrigin,j.svg&&(n||x.svgOrigin)&&(r=j.xOffset,s=j.yOffset,Ha(a,da(n),k,x.svgOrigin,x.smoothOrigin),f=qa(j,\"xOrigin\",(t?j:k).xOrigin,k.xOrigin,f,z),f=qa(j,\"yOrigin\",(t?j:k).yOrigin,k.yOrigin,f,z),(r!==j.xOffset||s!==j.yOffset)&&(f=qa(j,\"xOffset\",t?r:j.xOffset,j.xOffset,f,z),f=qa(j,\"yOffset\",t?s:j.yOffset,j.yOffset,f,z)),n=wa?null:\"0px 0px\"),(n||Ba&&o&&j.zOrigin)&&(ya?(p=!0,c=Aa,n=(n||X(a,c,e,!1,\"50% 50%\"))+\"\",f=new pa(u,c,0,0,f,-1,z),f.b=u[c],f.plugin=h,Ba?(m=j.zOrigin,n=n.split(\" \"),j.zOrigin=(n.length>2&&(0===m||\"0px\"!==n[2])?parseFloat(n[2]):m)||0,f.xs0=f.e=n[0]+\" \"+(n[1]||\"50%\")+\" 0px\",f=new pa(j,\"zOrigin\",0,0,f,-1,f.n),f.b=m,f.xs0=f.e=j.zOrigin):f.xs0=f.e=n):da(n+\"\",j)),p&&(d._transformType=j.svg&&wa||!o&&3!==this._transformType?2:3),f},prefix:!0}),ua(\"boxShadow\",{defaultValue:\"0px 0px 0px 0px #999\",prefix:!0,color:!0,multi:!0,keyword:\"inset\"}),ua(\"borderRadius\",{defaultValue:\"0px\",parser:function(a,b,c,f,g,h){b=this.format(b);var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],z=a.style;for(q=parseFloat(a.offsetWidth),r=parseFloat(a.offsetHeight),i=b.split(\" \"),j=0;j<y.length;j++)this.p.indexOf(\"border\")&&(y[j]=V(y[j])),m=l=X(a,y[j],e,!1,\"0px\"),-1!==m.indexOf(\" \")&&(l=m.split(\" \"),m=l[0],l=l[1]),n=k=i[j],o=parseFloat(m),t=m.substr((o+\"\").length),u=\"=\"===n.charAt(1),u?(p=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),p*=parseFloat(n),s=n.substr((p+\"\").length-(0>p?1:0))||\"\"):(p=parseFloat(n),s=n.substr((p+\"\").length)),\"\"===s&&(s=d[c]||t),s!==t&&(v=Y(a,\"borderLeft\",o,t),w=Y(a,\"borderTop\",o,t),\"%\"===s?(m=v/q*100+\"%\",l=w/r*100+\"%\"):\"em\"===s?(x=Y(a,\"borderLeft\",1,\"em\"),m=v/x+\"em\",l=w/x+\"em\"):(m=v+\"px\",l=w+\"px\"),u&&(n=parseFloat(m)+p+s,k=parseFloat(l)+p+s)),g=ra(z,y[j],m+\" \"+l,n+\" \"+k,!1,\"0px\",g);return g},prefix:!0,formatter:ma(\"0px 0px 0px 0px\",!1,!0)}),ua(\"backgroundPosition\",{\ndefaultValue:\"0 0\",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n=\"background-position\",o=e||W(a,null),q=this.format((o?p?o.getPropertyValue(n+\"-x\")+\" \"+o.getPropertyValue(n+\"-y\"):o.getPropertyValue(n):a.currentStyle.backgroundPositionX+\" \"+a.currentStyle.backgroundPositionY)||\"0 0\"),r=this.format(b);if(-1!==q.indexOf(\"%\")!=(-1!==r.indexOf(\"%\"))&&(m=X(a,\"backgroundImage\").replace(B,\"\"),m&&\"none\"!==m)){for(h=q.split(\" \"),i=r.split(\" \"),N.setAttribute(\"src\",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf(\"%\"),k!==(-1!==i[j].indexOf(\"%\"))&&(l=0===j?a.offsetWidth-N.width:a.offsetHeight-N.height,h[j]=k?parseFloat(q)/100*l+\"px\":parseFloat(q)/l*100+\"%\");q=h.join(\" \")}return this.parseComplex(a.style,q,r,f,g)},formatter:da}),ua(\"backgroundSize\",{defaultValue:\"0 0\",formatter:da}),ua(\"perspective\",{defaultValue:\"0px\",prefix:!0}),ua(\"perspectiveOrigin\",{defaultValue:\"50% 50%\",prefix:!0}),ua(\"transformStyle\",{prefix:!0}),ua(\"backfaceVisibility\",{prefix:!0}),ua(\"userSelect\",{prefix:!0}),ua(\"margin\",{parser:na(\"marginTop,marginRight,marginBottom,marginLeft\")}),ua(\"padding\",{parser:na(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")}),ua(\"clip\",{defaultValue:\"rect(0px,0px,0px,0px)\",parser:function(a,b,c,d,f,g){var h,i,j;return 9>p?(i=a.currentStyle,j=8>p?\" \":\",\",h=\"rect(\"+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+\")\",b=this.format(b).split(\",\").join(j)):(h=this.format(X(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),ua(\"textShadow\",{defaultValue:\"0px 0px 0px #999\",color:!0,multi:!0}),ua(\"autoRound,strictUnits\",{parser:function(a,b,c,d,e){return e}}),ua(\"border\",{defaultValue:\"0px solid #000\",parser:function(a,b,c,d,f,g){return this.parseComplex(a.style,this.format(X(a,\"borderTopWidth\",e,!1,\"0px\")+\" \"+X(a,\"borderTopStyle\",e,!1,\"solid\")+\" \"+X(a,\"borderTopColor\",e,!1,\"#000\")),this.format(b),f,g)},color:!0,formatter:function(a){var b=a.split(\" \");return b[0]+\" \"+(b[1]||\"solid\")+\" \"+(a.match(la)||[\"#000\"])[0]}}),ua(\"borderWidth\",{parser:na(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}),ua(\"float,cssFloat,styleFloat\",{parser:function(a,b,c,d,e,f){var g=a.style,h=\"cssFloat\"in g?\"cssFloat\":\"styleFloat\";return new pa(g,h,0,0,e,-1,c,!1,0,g[h],b)}});var Oa=function(a){var b,c=this.t,d=c.filter||X(this.data,\"filter\")||\"\",e=this.s+this.c*a|0;100===e&&(-1===d.indexOf(\"atrix(\")&&-1===d.indexOf(\"radient(\")&&-1===d.indexOf(\"oader(\")?(c.removeAttribute(\"filter\"),b=!X(this.data,\"filter\")):(c.filter=d.replace(x,\"\"),b=!0)),b||(this.xn1&&(c.filter=d=d||\"alpha(opacity=\"+e+\")\"),-1===d.indexOf(\"pacity\")?0===e&&this.xn1||(c.filter=d+\" alpha(opacity=\"+e+\")\"):c.filter=d.replace(v,\"opacity=\"+e))};ua(\"opacity,alpha,autoAlpha\",{defaultValue:\"1\",parser:function(a,b,c,d,f,g){var h=parseFloat(X(a,\"opacity\",e,!1,\"1\")),i=a.style,j=\"autoAlpha\"===c;return\"string\"==typeof b&&\"=\"===b.charAt(1)&&(b=(\"-\"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&\"hidden\"===X(a,\"visibility\",e)&&0!==b&&(h=0),Q?f=new pa(i,\"opacity\",h,b-h,f):(f=new pa(i,\"opacity\",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b=\"alpha(opacity=\"+f.s+\")\",f.e=\"alpha(opacity=\"+(f.s+f.c)+\")\",f.data=a,f.plugin=g,f.setRatio=Oa),j&&(f=new pa(i,\"visibility\",0,0,f,-1,null,!1,0,0!==h?\"inherit\":\"hidden\",0===b?\"hidden\":\"inherit\"),f.xs0=\"inherit\",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Pa=function(a,b){b&&(a.removeProperty?((\"ms\"===b.substr(0,2)||\"webkit\"===b.substr(0,6))&&(b=\"-\"+b),a.removeProperty(b.replace(z,\"-$1\").toLowerCase())):a.removeAttribute(b))},Qa=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.setAttribute(\"class\",0===a?this.b:this.e);for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Pa(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute(\"class\")!==this.e&&this.t.setAttribute(\"class\",this.e)};ua(\"className\",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.getAttribute(\"class\")||\"\",p=a.style.cssText;if(g=f._classNamePT=new pa(a,d,0,0,g,2),g.setRatio=Qa,g.pr=-11,c=!0,g.b=o,k=$(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e=\"=\"!==b.charAt(1)?b:o.replace(new RegExp(\"\\\\s*\\\\b\"+b.substr(2)+\"\\\\b\"),\"\")+(\"+\"===b.charAt(0)?\" \"+b.substr(2):\"\"),a.setAttribute(\"class\",g.e),j=_(a,k,$(a),i,m),a.setAttribute(\"class\",o),g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)}});var Ra=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&\"isFromStart\"!==this.data.data){var b,c,d,e,f,g=this.t.style,h=i.transform.parse;if(\"all\"===this.e)g.cssText=\"\",e=!0;else for(b=this.e.split(\" \").join(\"\").split(\",\"),d=b.length;--d>-1;)c=b[d],i[c]&&(i[c].parse===h?e=!0:c=\"transformOrigin\"===c?Aa:i[c].p),Pa(g,c);e&&(Pa(g,ya),f=this.t._gsTransform,f&&(f.svg&&(this.t.removeAttribute(\"data-svg-origin\"),this.t.removeAttribute(\"transform\")),delete this.t._gsTransform))}};for(ua(\"clearProps\",{parser:function(a,b,d,e,f){return f=new pa(a,d,0,0,f,2),f.setRatio=Ra,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),j=\"bezier,throwProps,physicsProps,physics2D\".split(\",\"),sa=j.length;sa--;)va(j[sa]);j=g.prototype,j._firstPT=j._lastParsedTransform=j._transform=null,j._onInitTween=function(a,b,h){if(!a.nodeType)return!1;this._target=a,this._tween=h,this._vars=b,k=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=W(a,\"\"),f=this._overwriteProps;var j,n,p,q,r,s,t,u,v,x=a.style;if(l&&\"\"===x.zIndex&&(j=X(a,\"zIndex\",e),(\"auto\"===j||\"\"===j)&&this._addLazySet(x,\"zIndex\",0)),\"string\"==typeof b&&(q=x.cssText,j=$(a,e),x.cssText=q+\";\"+b,j=_(a,j,$(a)).difs,!Q&&w.test(b)&&(j.opacity=parseFloat(RegExp.$1)),b=j,x.cssText=q),b.className?this._firstPT=n=i.className.parse(a,b.className,\"className\",this,null,null,b):this._firstPT=n=this.parse(a,b,null),this._transformType){for(v=3===this._transformType,ya?m&&(l=!0,\"\"===x.zIndex&&(t=X(a,\"zIndex\",e),(\"auto\"===t||\"\"===t)&&this._addLazySet(x,\"zIndex\",0)),o&&this._addLazySet(x,\"WebkitBackfaceVisibility\",this._vars.WebkitBackfaceVisibility||(v?\"visible\":\"hidden\"))):x.zoom=1,p=n;p&&p._next;)p=p._next;u=new pa(a,\"transform\",0,0,null,2),this._linkCSSP(u,null,p),u.setRatio=ya?Na:Ma,u.data=this._transform||La(a,e,!0),u.tween=h,u.pr=-1,f.pop()}if(c){for(;n;){for(s=n._next,p=q;p&&p.pr>n.pr;)p=p._next;(n._prev=p?p._prev:r)?n._prev._next=n:q=n,(n._next=p)?p._prev=n:r=n,n=s}this._firstPT=q}return!0},j.parse=function(a,b,c,f){var g,h,j,l,m,n,o,p,q,r,s=a.style;for(g in b)n=b[g],h=i[g],h?c=h.parse(a,n,g,this,c,f,b):(m=X(a,g,e)+\"\",q=\"string\"==typeof n,\"color\"===g||\"fill\"===g||\"stroke\"===g||-1!==g.indexOf(\"Color\")||q&&y.test(n)?(q||(n=ja(n),n=(n.length>3?\"rgba(\":\"rgb(\")+n.join(\",\")+\")\"),c=ra(s,g,m,n,!0,\"transparent\",c,0,f)):!q||-1===n.indexOf(\" \")&&-1===n.indexOf(\",\")?(j=parseFloat(m),o=j||0===j?m.substr((j+\"\").length):\"\",(\"\"===m||\"auto\"===m)&&(\"width\"===g||\"height\"===g?(j=ca(a,g,e),o=\"px\"):\"left\"===g||\"top\"===g?(j=Z(a,g,e),o=\"px\"):(j=\"opacity\"!==g?0:1,o=\"\")),r=q&&\"=\"===n.charAt(1),r?(l=parseInt(n.charAt(0)+\"1\",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(u,\"\")):(l=parseFloat(n),p=q?n.replace(u,\"\"):\"\"),\"\"===p&&(p=g in d?d[g]:o),n=l||0===l?(r?l+j:l)+p:b[g],o!==p&&\"\"!==p&&(l||0===l)&&j&&(j=Y(a,g,j,o),\"%\"===p?(j/=Y(a,g,100,\"%\")/100,b.strictUnits!==!0&&(m=j+\"%\")):\"em\"===p||\"rem\"===p||\"vw\"===p||\"vh\"===p?j/=Y(a,g,1,p):\"px\"!==p&&(l=Y(a,g,l,p),p=\"px\"),r&&(l||0===l)&&(n=l+j+p)),r&&(l+=j),!j&&0!==j||!l&&0!==l?void 0!==s[g]&&(n||n+\"\"!=\"NaN\"&&null!=n)?(c=new pa(s,g,l||j||0,0,c,-1,g,!1,0,m,n),c.xs0=\"none\"!==n||\"display\"!==g&&-1===g.indexOf(\"Style\")?n:m):S(\"invalid \"+g+\" tween value: \"+b[g]):(c=new pa(s,g,j,l-j,c,0,g,k!==!1&&(\"px\"===p||\"zIndex\"===g),0,m,n),c.xs0=p)):c=ra(s,g,m,n,!0,null,c,0,f)),f&&c&&!c.plugin&&(c.plugin=f);return c},j.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=Math.round(b):f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;){if(2!==e.type)if(e.r&&-1!==e.type)if(b=Math.round(e.s+e.c),e.type){if(1===e.type){for(d=e.l,c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e[\"xn\"+d]+e[\"xs\"+(d+1)];e.t[e.p]=c}}else e.t[e.p]=b+e.xs0;else e.t[e.p]=e.e;else e.setRatio(a);e=e._next}},j._enableTransforms=function(a){this._transform=this._transform||La(this._target,e,!0),this._transformType=this._transform.svg&&wa||!a&&3!==this._transformType?2:3};var Sa=function(a){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};j._addLazySet=function(a,b,c){var d=this._firstPT=new pa(a,b,0,0,this._firstPT,2);d.e=c,d.setRatio=Sa,d.data=this},j._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},j._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}return b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),a.prototype._kill.call(this,f)};var Ta=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Ta(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push($(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Ta(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h,i=b.to(a,c,d),j=[i],k=[],l=[],m=[],n=b._internals.reservedProps;for(a=i._targets||i.target,Ta(a,k,m),i.render(c,!0,!0),Ta(a,l),i.render(0,!0,!0),i._enabled(!0),e=m.length;--e>-1;)if(f=_(m[e],k[e],l[e]),f.firstMPT){f=f.difs;for(g in d)n[g]&&(f[g]=d[g]);h={};for(g in f)h[g]=k[e][g];j.push(b.fromTo(m[e],c,h,f))}return j},a.activate([g]),g},!0),function(){var a=_gsScope._gsDefine.plugin({propName:\"roundProps\",version:\"1.5\",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=function(a){for(;a;)a.f||a.blob||(a.r=1),a=a._next},c=a.prototype;c._onInitAllProps=function(){for(var a,c,d,e=this._tween,f=e.vars.roundProps.join?e.vars.roundProps:e.vars.roundProps.split(\",\"),g=f.length,h={},i=e._propLookup.roundProps;--g>-1;)h[f[g]]=1;for(g=f.length;--g>-1;)for(a=f[g],c=e._firstPT;c;)d=c._next,c.pg?c.t._roundProps(h,!0):c.n===a&&(2===c.f&&c.t?b(c.t._firstPT):(this._add(c.t,a,c.s,c.c),d&&(d._prev=c._prev),c._prev?c._prev._next=d:e._firstPT===c&&(e._firstPT=d),c._next=c._prev=null,e._propLookup[a]=i)),c=d;return!1},c._add=function(a,b,c,d){this._addTween(a,b,c,c+d,b,!0),this._overwriteProps.push(b)}}(),function(){_gsScope._gsDefine.plugin({propName:\"attr\",API:2,version:\"0.5.0\",init:function(a,b,c){var d;if(\"function\"!=typeof a.setAttribute)return!1;for(d in b)this._addTween(a,\"setAttribute\",a.getAttribute(d)+\"\",b[d]+\"\",d,!1,d),this._overwriteProps.push(d);return!0}})}(),_gsScope._gsDefine.plugin({propName:\"directionalRotation\",version:\"0.2.1\",API:2,init:function(a,b,c){\"object\"!=typeof b&&(b={rotation:b}),this.finals={};var d,e,f,g,h,i,j=b.useRadians===!0?2*Math.PI:360,k=1e-6;for(d in b)\"useRadians\"!==d&&(i=(b[d]+\"\").split(\"_\"),e=i[0],f=parseFloat(\"function\"!=typeof a[d]?a[d]:a[d.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+d.substr(3)]?d:\"get\"+d.substr(3)]()),g=this.finals[d]=\"string\"==typeof e&&\"=\"===e.charAt(1)?f+parseInt(e.charAt(0)+\"1\",10)*Number(e.substr(2)):Number(e)||0,h=g-f,i.length&&(e=i.join(\"_\"),-1!==e.indexOf(\"short\")&&(h%=j,h!==h%(j/2)&&(h=0>h?h+j:h-j)),-1!==e.indexOf(\"_cw\")&&0>h?h=(h+9999999999*j)%j-(h/j|0)*j:-1!==e.indexOf(\"ccw\")&&h>0&&(h=(h-9999999999*j)%j-(h/j|0)*j)),(h>k||-k>h)&&(this._addTween(a,d,f,f+h,d),this._overwriteProps.push(d)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,_gsScope._gsDefine(\"easing.Back\",[\"easing.Ease\"],function(a){var b,c,d,e=_gsScope.GreenSockGlobals||_gsScope,f=e.com.greensock,g=2*Math.PI,h=Math.PI/2,i=f._class,j=function(b,c){var d=i(\"easing.\"+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},k=a.register||function(){},l=function(a,b,c,d,e){var f=i(\"easing.\"+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return k(f,a),f},m=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},n=function(b,c){var d=i(\"easing.\"+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},o=l(\"Back\",n(\"BackOut\",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),n(\"BackIn\",function(a){return a*a*((this._p1+1)*a-this._p1)}),n(\"BackInOut\",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),p=i(\"easing.SlowMo\",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),q=p.prototype=new a;return q.constructor=p,q.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},p.ease=new p(.7,.7),q.config=p.config=function(a,b,c){return new p(a,b,c)},b=i(\"easing.SteppedEase\",function(a){a=a||1,this._p1=1/a,this._p2=a+1},!0),q=b.prototype=new a,q.constructor=b,q.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),(this._p2*a>>0)*this._p1},q.config=b.config=function(a){return new b(a)},c=i(\"easing.RoughEase\",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||\"none\",j=[],k=0,l=0|(b.points||20),n=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r=\"number\"==typeof b.strength?.4*b.strength:.4;--n>-1;)c=o?Math.random():1/l*n,d=q?q.getRatio(c):c,\"none\"===i?e=r:\"out\"===i?(f=1-c,e=f*f*r):\"in\"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:n%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new m(1,1,null),n=l;--n>-1;)g=j[n],h=new m(g.x,g.y,h);this._prev=new m(0,0,0!==h.t?h:h.next)},!0),q=c.prototype=new a,q.constructor=c,q.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},q.config=function(a){return new c(a)},c.ease=new c,l(\"Bounce\",j(\"BounceOut\",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),j(\"BounceIn\",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),j(\"BounceInOut\",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),l(\"Circ\",j(\"CircOut\",function(a){return Math.sqrt(1-(a-=1)*a)}),j(\"CircIn\",function(a){return-(Math.sqrt(1-a*a)-1)}),j(\"CircInOut\",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),d=function(b,c,d){var e=i(\"easing.\"+b,function(a,b){this._p1=a>=1?a:1,this._p2=(b||d)/(1>a?a:1),this._p3=this._p2/g*(Math.asin(1/this._p1)||0),this._p2=g/this._p2},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},l(\"Elastic\",d(\"ElasticOut\",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*this._p2)+1},.3),d(\"ElasticIn\",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2))},.3),d(\"ElasticInOut\",function(a){return(a*=2)<1?-.5*(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*this._p2)*.5+1},.45)),l(\"Expo\",j(\"ExpoOut\",function(a){return 1-Math.pow(2,-10*a)}),j(\"ExpoIn\",function(a){return Math.pow(2,10*(a-1))-.001}),j(\"ExpoInOut\",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),l(\"Sine\",j(\"SineOut\",function(a){return Math.sin(a*h)}),j(\"SineIn\",function(a){return-Math.cos(a*h)+1}),j(\"SineInOut\",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),i(\"easing.EaseLookup\",{find:function(b){return a.map[b]}},!0),k(e.SlowMo,\"SlowMo\",\"ease,\"),k(c,\"RoughEase\",\"ease,\"),k(b,\"SteppedEase\",\"ease,\"),o},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a,b){\"use strict\";var c=a.GreenSockGlobals=a.GreenSockGlobals||a;if(!c.TweenLite){var d,e,f,g,h,i=function(a){var b,d=a.split(\".\"),e=c;for(b=0;b<d.length;b++)e[d[b]]=e=e[d[b]]||{};return e},j=i(\"com.greensock\"),k=1e-10,l=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},m=function(){},n=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return null!=c&&(c instanceof Array||\"object\"==typeof c&&!!c.push&&a.call(c)===b)}}(),o={},p=function(d,e,f,g){this.sc=o[d]?o[d].sc:[],o[d]=this,this.gsClass=null,this.func=f;var h=[];this.check=function(j){for(var k,l,m,n,q,r=e.length,s=r;--r>-1;)(k=o[e[r]]||new p(e[r],[])).gsClass?(h[r]=k.gsClass,s--):j&&k.sc.push(this);if(0===s&&f)for(l=(\"com.greensock.\"+d).split(\".\"),m=l.pop(),n=i(l.join(\".\"))[m]=this.gsClass=f.apply(f,h),g&&(c[m]=n,q=\"undefined\"!=typeof module&&module.exports,!q&&\"function\"==typeof define&&define.amd?define((a.GreenSockAMDPath?a.GreenSockAMDPath+\"/\":\"\")+d.split(\".\").pop(),[],function(){return n}):d===b&&q&&(module.exports=n)),r=0;r<this.sc.length;r++)this.sc[r].check()},this.check(!0)},q=a._gsDefine=function(a,b,c,d){return new p(a,b,c,d)},r=j._class=function(a,b,c){return b=b||function(){},q(a,[],function(){return b},c),b};q.globals=c;var s=[0,0,1,1],t=[],u=r(\"easing.Ease\",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?s.concat(b):s},!0),v=u.map={},w=u.register=function(a,b,c,d){for(var e,f,g,h,i=b.split(\",\"),k=i.length,l=(c||\"easeIn,easeOut,easeInOut\").split(\",\");--k>-1;)for(f=i[k],e=d?r(\"easing.\"+f,null,!0):j.easing[f]||{},g=l.length;--g>-1;)h=l[g],v[f+\".\"+h]=v[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(f=u.prototype,f._calcEnd=!1,f.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},d=[\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"],e=d.length;--e>-1;)f=d[e]+\",Power\"+e,w(new u(null,null,1,e),f,\"easeOut\",!0),w(new u(null,null,2,e),f,\"easeIn\"+(0===e?\",easeNone\":\"\")),w(new u(null,null,3,e),f,\"easeInOut\");v.linear=j.easing.Linear.easeIn,v.swing=j.easing.Quad.easeInOut;var x=r(\"events.EventDispatcher\",function(a){this._listeners={},this._eventTarget=a||this});f=x.prototype,f.addEventListener=function(a,b,c,d,e){e=e||0;var f,i,j=this._listeners[a],k=0;for(null==j&&(this._listeners[a]=j=[]),i=j.length;--i>-1;)f=j[i],f.c===b&&f.s===c?j.splice(i,1):0===k&&f.pr<e&&(k=i+1);j.splice(k,0,{c:b,s:c,up:d,pr:e}),this!==g||h||g.wake()},f.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return void d.splice(c,1)},f.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,c=this._eventTarget;--b>-1;)d=e[b],d&&(d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c))};var y=a.requestAnimationFrame,z=a.cancelAnimationFrame,A=Date.now||function(){return(new Date).getTime()},B=A();for(d=[\"ms\",\"moz\",\"webkit\",\"o\"],e=d.length;--e>-1&&!y;)y=a[d[e]+\"RequestAnimationFrame\"],z=a[d[e]+\"CancelAnimationFrame\"]||a[d[e]+\"CancelRequestAnimationFrame\"];r(\"Ticker\",function(a,b){var c,d,e,f,i,j=this,l=A(),n=b!==!1&&y?\"auto\":!1,o=500,p=33,q=\"tick\",r=function(a){var b,g,h=A()-B;h>o&&(l+=h-p),B+=h,j.time=(B-l)/1e3,b=j.time-i,(!c||b>0||a===!0)&&(j.frame++,i+=b+(b>=f?.004:f-b),g=!0),a!==!0&&(e=d(r)),g&&j.dispatchEvent(q)};x.call(j),j.time=j.frame=0,j.tick=function(){r(!0)},j.lagSmoothing=function(a,b){o=a||1/k,p=Math.min(b,o,0)},j.sleep=function(){null!=e&&(n&&z?z(e):clearTimeout(e),d=m,e=null,j===g&&(h=!1))},j.wake=function(a){null!==e?j.sleep():a?l+=-B+(B=A()):j.frame>10&&(B=A()-o+5),d=0===c?m:n&&y?y:function(a){return setTimeout(a,1e3*(i-j.time)+1|0)},j===g&&(h=!0),r(2)},j.fps=function(a){return arguments.length?(c=a,f=1/(c||60),i=this.time+f,void j.wake()):c},j.useRAF=function(a){return arguments.length?(j.sleep(),n=a,void j.fps(c)):n},j.fps(a),setTimeout(function(){\"auto\"===n&&j.frame<5&&\"hidden\"!==document.visibilityState&&j.useRAF(!1)},1500)}),f=j.Ticker.prototype=new j.events.EventDispatcher,f.constructor=j.Ticker;var C=r(\"core.Animation\",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,V){h||g.wake();var c=this.vars.useFrames?U:V;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});g=C.ticker=new j.Ticker,f=C.prototype,f._dirty=f._gc=f._initted=f._paused=!1,f._totalTime=f._time=0,f._rawPrevTime=-1,f._next=f._last=f._onUpdate=f._timeline=f.timeline=null,f._paused=!1;var D=function(){h&&A()-B>2e3&&g.wake(),setTimeout(D,2e3)};D(),f.play=function(a,b){return null!=a&&this.seek(a,b),this.reversed(!1).paused(!1)},f.pause=function(a,b){return null!=a&&this.seek(a,b),this.paused(!0)},f.resume=function(a,b){return null!=a&&this.seek(a,b),this.paused(!1)},f.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},f.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},f.reverse=function(a,b){return null!=a&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},f.render=function(a,b,c){},f.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},f.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime())>=c&&a<c+this.totalDuration()/this._timeScale},f._enabled=function(a,b){return h||g.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},f._kill=function(a,b){return this._enabled(!1,!1)},f.kill=function(a,b){return this._kill(a,b),this},f._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},f._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)\"{self}\"===a[b]&&(c[b]=this);return c},f._callback=function(a){var b=this.vars;b[a].apply(b[a+\"Scope\"]||b.callbackScope||this,b[a+\"Params\"]||t)},f.eventCallback=function(a,b,c,d){if(\"on\"===(a||\"\").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+\"Params\"]=n(c)&&-1!==c.join(\"\").indexOf(\"{self}\")?this._swapSelfInParams(c):c,e[a+\"Scope\"]=d),\"onUpdate\"===a&&(this._onUpdate=b)}return this},f.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},f.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},f.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},f.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},f.totalTime=function(a,b,c){if(h||g.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&(I.length&&X(),this.render(a,b,!1),I.length&&X())}return this},f.progress=f.totalProgress=function(a,b){var c=this.duration();return arguments.length?this.totalTime(c*a,b):c?this._time/c:this.ratio},f.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},f.endTime=function(a){return this._startTime+(0!=a?this.totalDuration():this.duration())/this._timeScale},f.timeScale=function(a){if(!arguments.length)return this._timeScale;if(a=a||k,this._timeline&&this._timeline.smoothChildTiming){var b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime();this._startTime=c-(c-this._startTime)*this._timeScale/a}return this._timeScale=a,this._uncache(!1)},f.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},f.paused=function(a){if(!arguments.length)return this._paused;var b,c,d=this._timeline;return a!=this._paused&&d&&(h||a||g.wake(),b=d.rawTime(),c=b-this._pauseTime,!a&&d.smoothChildTiming&&(this._startTime+=c,this._uncache(!1)),this._pauseTime=a?b:null,this._paused=a,this._active=this.isActive(),!a&&0!==c&&this._initted&&this.duration()&&(b=d.smoothChildTiming?this._totalTime:(b-this._startTime)/this._timeScale,this.render(b,b===this._totalTime,!0))),this._gc&&!a&&this._enabled(!0,!1),this};var E=r(\"core.SimpleTimeline\",function(a){C.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});f=E.prototype=new C,f.constructor=E,f.kill()._gc=!1,f._first=f._last=f._recent=null,f._sortChildren=!1,f.add=f.insert=function(a,b,c,d){var e,f;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=a._startTime+(this.rawTime()-a._startTime)/a._timeScale),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),e=this._last,this._sortChildren)for(f=a._startTime;e&&e._startTime>f;)e=e._prev;return e?(a._next=e._next,e._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=e,this._recent=a,this._timeline&&this._uncache(!0),this},f._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),a._next=a._prev=a.timeline=null,a===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},f.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},f.rawTime=function(){return h||g.wake(),this._totalTime};var F=r(\"TweenLite\",function(b,c,d){if(C.call(this,c,d),this.render=F.prototype.render,null==b)throw\"Cannot tween a null target.\";this.target=b=\"string\"!=typeof b?b:F.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?T[F.defaultOverwrite]:\"number\"==typeof i?i>>0:T[i],(h||b instanceof Array||b.push&&n(b))&&\"number\"!=typeof b[0])for(this._targets=g=l(b),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?\"string\"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(l(f))):(this._siblings[e]=Y(f,this,!1),1===i&&this._siblings[e].length>1&&$(f,this,null,1,this._siblings[e])):(f=g[e--]=F.selector(f),\"string\"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=Y(b,this,!1),1===i&&this._siblings.length>1&&$(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-k,this.render(-this._delay))},!0),G=function(b){return b&&b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},H=function(a,b){var c,d={};for(c in a)S[c]||c in b&&\"transform\"!==c&&\"x\"!==c&&\"y\"!==c&&\"width\"!==c&&\"height\"!==c&&\"className\"!==c&&\"border\"!==c||!(!P[c]||P[c]&&P[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};f=F.prototype=new C,f.constructor=F,f.kill()._gc=!1,f.ratio=0,f._firstPT=f._targets=f._overwrittenProps=f._startAt=null,f._notifyPluginsOfEnabled=f._lazy=!1,F.version=\"1.18.2\",F.defaultEase=f._ease=new u(null,null,1,1),F.defaultOverwrite=\"auto\",F.ticker=g,F.autoSleep=120,F.lagSmoothing=function(a,b){g.lagSmoothing(a,b)},F.selector=a.$||a.jQuery||function(b){var c=a.$||a.jQuery;return c?(F.selector=c,c(b)):\"undefined\"==typeof document?b:document.querySelectorAll?document.querySelectorAll(b):document.getElementById(\"#\"===b.charAt(0)?b.substr(1):b)};var I=[],J={},K=/(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi,L=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.blob?a?this.join(\"\"):this.start:c.c*a+c.s,c.r?b=Math.round(b):d>b&&b>-d&&(b=0),c.f?c.fp?c.t[c.p](c.fp,b):c.t[c.p](b):c.t[c.p]=b,c=c._next},M=function(a,b,c,d){var e,f,g,h,i,j,k,l=[a,b],m=0,n=\"\",o=0;for(l.start=a,c&&(c(l),a=l[0],b=l[1]),l.length=0,e=a.match(K)||[],f=b.match(K)||[],d&&(d._next=null,d.blob=1,l._firstPT=d),i=f.length,h=0;i>h;h++)k=f[h],j=b.substr(m,b.indexOf(k,m)-m),n+=j||!h?j:\",\",m+=j.length,o?o=(o+1)%5:\"rgba(\"===j.substr(-5)&&(o=1),k===e[h]||e.length<=h?n+=k:(n&&(l.push(n),n=\"\"),g=parseFloat(e[h]),l.push(g),l._firstPT={_next:l._firstPT,t:l,p:l.length-1,s:g,c:(\"=\"===k.charAt(1)?parseInt(k.charAt(0)+\"1\",10)*parseFloat(k.substr(2)):parseFloat(k)-g)||0,f:0,r:o&&4>o}),m+=k.length;return n+=b.substr(m),n&&l.push(n),l.setRatio=L,l},N=function(a,b,c,d,e,f,g,h){var i,j,k=\"get\"===c?a[b]:c,l=typeof a[b],m=\"string\"==typeof d&&\"=\"===d.charAt(1),n={t:a,p:b,s:k,f:\"function\"===l,pg:0,n:e||b,r:f,pr:0,c:m?parseInt(d.charAt(0)+\"1\",10)*parseFloat(d.substr(2)):parseFloat(d)-k||0};return\"number\"!==l&&(\"function\"===l&&\"get\"===c&&(j=b.indexOf(\"set\")||\"function\"!=typeof a[\"get\"+b.substr(3)]?b:\"get\"+b.substr(3),n.s=k=g?a[j](g):a[j]()),\"string\"==typeof k&&(g||isNaN(k))?(n.fp=g,i=M(k,d,h||F.defaultStringFilter,n),n={t:i,p:\"setRatio\",s:0,c:1,f:2,pg:0,n:e||b,pr:0}):m||(n.s=parseFloat(k),n.c=parseFloat(d)-n.s||0)),n.c?((n._next=this._firstPT)&&(n._next._prev=n),this._firstPT=n,n):void 0},O=F._internals={isArray:n,isSelector:G,lazyTweens:I,blobDif:M},P=F._plugins={},Q=O.tweenLookup={},R=0,S=O.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1},T={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,\"true\":1,\"false\":0},U=C._rootFramesTimeline=new E,V=C._rootTimeline=new E,W=30,X=O.lazyRender=function(){\nvar a,b=I.length;for(J={};--b>-1;)a=I[b],a&&a._lazy!==!1&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);I.length=0};V._startTime=g.time,U._startTime=g.frame,V._active=U._active=!0,setTimeout(X,1),C._updateRoot=F.render=function(){var a,b,c;if(I.length&&X(),V.render((g.time-V._startTime)*V._timeScale,!1,!1),U.render((g.frame-U._startTime)*U._timeScale,!1,!1),I.length&&X(),g.frame>=W){W=g.frame+(parseInt(F.autoSleep,10)||120);for(c in Q){for(b=Q[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete Q[c]}if(c=V._first,(!c||c._paused)&&F.autoSleep&&!U._first&&1===g._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||g.sleep()}}},g.addEventListener(\"tick\",C._updateRoot);var Y=function(a,b,c){var d,e,f=a._gsTweenID;if(Q[f||(a._gsTweenID=f=\"t\"+R++)]||(Q[f]={target:a,tweens:[]}),b&&(d=Q[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return Q[f].tweens},Z=function(a,b,c,d){var e,f,g=a.vars.onOverwrite;return g&&(e=g(a,b,c,d)),g=F.onOverwrite,g&&(f=g(a,b,c,d)),e!==!1&&f!==!1},$=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._kill(null,a,b)&&(g=!0);else if(5===d)break;return g}var j,l=b._startTime+k,m=[],n=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(j=j||_(b,0,o),0===_(h,j,o)&&(m[n++]=h)):h._startTime<=l&&h._startTime+h.totalDuration()/h._timeScale>l&&((o||!h._initted)&&l-h._startTime<=2e-10||(m[n++]=h)));for(f=n;--f>-1;)if(h=m[f],2===d&&h._kill(c,a,b)&&(g=!0),2!==d||!h._firstPT&&h._initted){if(2!==d&&!Z(h,b))continue;h._enabled(!1,!1)&&(g=!0)}return g},_=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*k>f-b?k:(f+=a.totalDuration()/a._timeScale/e)>b+k?0:f-b-k};f._init=function(){var a,b,c,d,e,f=this.vars,g=this._overwrittenProps,h=this._duration,i=!!f.immediateRender,j=f.ease;if(f.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),e={};for(d in f.startAt)e[d]=f.startAt[d];if(e.overwrite=!1,e.immediateRender=!0,e.lazy=i&&f.lazy!==!1,e.startAt=e.delay=null,this._startAt=F.to(this.target,0,e),i)if(this._time>0)this._startAt=null;else if(0!==h)return}else if(f.runBackwards&&0!==h)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(i=!1),c={};for(d in f)S[d]&&\"autoCSS\"!==d||(c[d]=f[d]);if(c.overwrite=0,c.data=\"isFromStart\",c.lazy=i&&f.lazy!==!1,c.immediateRender=i,this._startAt=F.to(this.target,0,c),i){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=j=j?j instanceof u?j:\"function\"==typeof j?new u(j,f.easeParams):v[j]||F.defaultEase:F.defaultEase,f.easeParams instanceof Array&&j.config&&(this._ease=j.config.apply(j,f.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length;--a>-1;)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],g?g[a]:null)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,g);if(b&&F._onPluginEvent(\"_onInitAllProps\",this),g&&(this._firstPT||\"function\"!=typeof this.target&&this._enabled(!1,!1)),f.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=f.onUpdate,this._initted=!0},f._initProps=function(b,c,d,e){var f,g,h,i,j,k;if(null==b)return!1;J[b._gsTweenID]&&X(),this.vars.css||b.style&&b!==a&&b.nodeType&&P.css&&this.vars.autoCSS!==!1&&H(this.vars,b);for(f in this.vars)if(k=this.vars[f],S[f])k&&(k instanceof Array||k.push&&n(k))&&-1!==k.join(\"\").indexOf(\"{self}\")&&(this.vars[f]=k=this._swapSelfInParams(k,this));else if(P[f]&&(i=new P[f])._onInitTween(b,this.vars[f],this)){for(this._firstPT=j={_next:this._firstPT,t:i,p:\"setRatio\",s:0,c:1,f:1,n:f,pg:1,pr:i._priority},g=i._overwriteProps.length;--g>-1;)c[i._overwriteProps[g]]=this._firstPT;(i._priority||i._onInitAllProps)&&(h=!0),(i._onDisable||i._onEnable)&&(this._notifyPluginsOfEnabled=!0),j._next&&(j._next._prev=j)}else c[f]=N.call(this,b,f,\"get\",k,f,0,null,this.vars.stringFilter);return e&&this._kill(e,b)?this._initProps(b,c,d,e):this._overwrite>1&&this._firstPT&&d.length>1&&$(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(J[b._gsTweenID]=!0),h)},f.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration,j=this._rawPrevTime;if(a>=i-1e-7)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e=\"onComplete\",c=c||this._timeline.autoRemoveChildren),0===i&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>j||0>=a&&a>=-1e-7||j===k&&\"isPause\"!==this.data)&&j!==a&&(c=!0,j>k&&(e=\"onReverseComplete\")),this._rawPrevTime=g=!b||a||j===a?a:k);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&j>0)&&(e=\"onReverseComplete\",d=this._reversed),0>a&&(this._active=!1,0===i&&(this._initted||!this.vars.lazy||c)&&(j>=0&&(j!==k||\"isPause\"!==this.data)&&(c=!0),this._rawPrevTime=g=!b||a||j===a?a:k)),this._initted||(c=!0);else if(this._totalTime=this._time=a,this._easeType){var l=a/i,m=this._easeType,n=this._easePower;(1===m||3===m&&l>=.5)&&(l=1-l),3===m&&(l*=2),1===n?l*=l:2===n?l*=l*l:3===n?l*=l*l*l:4===n&&(l*=l*l*l*l),1===m?this.ratio=1-l:2===m?this.ratio=l:.5>a/i?this.ratio=l/2:this.ratio=1-l/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=h,this._rawPrevTime=j,I.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e=\"_dummyGS\")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this._callback(\"onStart\"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&a!==-1e-4&&this._startAt.render(a,b,c),b||(this._time!==h||d)&&this._callback(\"onUpdate\")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&a!==-1e-4&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===i&&this._rawPrevTime===k&&g!==k&&(this._rawPrevTime=0))}},f._kill=function(a,b,c){if(\"all\"===a&&(a=null),null==a&&(null==b||b===this.target))return this._lazy=!1,this._enabled(!1,!1);b=\"string\"!=typeof b?b||this._targets||this.target:F.selector(b)||b;var d,e,f,g,h,i,j,k,l,m=c&&this._time&&c._startTime===this._startTime&&this._timeline===c._timeline;if((n(b)||G(b))&&\"number\"!=typeof b[0])for(d=b.length;--d>-1;)this._kill(a,b[d],c)&&(i=!0);else{if(this._targets){for(d=this._targets.length;--d>-1;)if(b===this._targets[d]){h=this._propLookup[d]||{},this._overwrittenProps=this._overwrittenProps||[],e=this._overwrittenProps[d]=a?this._overwrittenProps[d]||{}:\"all\";break}}else{if(b!==this.target)return!1;h=this._propLookup,e=this._overwrittenProps=a?this._overwrittenProps||{}:\"all\"}if(h){if(j=a||h,k=a!==e&&\"all\"!==e&&a!==h&&(\"object\"!=typeof a||!a._tempKill),c&&(F.onOverwrite||this.vars.onOverwrite)){for(f in j)h[f]&&(l||(l=[]),l.push(f));if((l||!a)&&!Z(this,c,b,l))return!1}for(f in j)(g=h[f])&&(m&&(g.f?g.t[g.p](g.s):g.t[g.p]=g.s,i=!0),g.pg&&g.t._kill(j)&&(i=!0),g.pg&&0!==g.t._overwriteProps.length||(g._prev?g._prev._next=g._next:g===this._firstPT&&(this._firstPT=g._next),g._next&&(g._next._prev=g._prev),g._next=g._prev=null),delete h[f]),k&&(e[f]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return i},f.invalidate=function(){return this._notifyPluginsOfEnabled&&F._onPluginEvent(\"_onDisable\",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],C.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-k,this.render(-this._delay)),this},f._enabled=function(a,b){if(h||g.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=Y(d[c],this,!0);else this._siblings=Y(this.target,this,!0)}return C.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?F._onPluginEvent(a?\"_onEnable\":\"_onDisable\",this):!1},F.to=function(a,b,c){return new F(a,b,c)},F.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new F(a,b,c)},F.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new F(a,b,d)},F.delayedCall=function(a,b,c,d,e){return new F(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,lazy:!1,useFrames:e,overwrite:0})},F.set=function(a,b){return new F(a,0,b)},F.getTweensOf=function(a,b){if(null==a)return[];a=\"string\"!=typeof a?a:F.selector(a)||a;var c,d,e,f;if((n(a)||G(a))&&\"number\"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(F.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else for(d=Y(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d},F.killTweensOf=F.killDelayedCallsTo=function(a,b,c){\"object\"==typeof b&&(c=b,b=!1);for(var d=F.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var aa=r(\"plugins.TweenPlugin\",function(a,b){this._overwriteProps=(a||\"\").split(\",\"),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=aa.prototype},!0);if(f=aa.prototype,aa.version=\"1.18.0\",aa.API=2,f._firstPT=null,f._addTween=N,f.setRatio=L,f._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},f._roundProps=function(a,b){for(var c=this._firstPT;c;)(a[this._propName]||null!=c.n&&a[c.n.split(this._propName+\"_\").join(\"\")])&&(c.r=b),c=c._next},F._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if(\"_onInitAllProps\"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&\"function\"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},aa.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===aa.API&&(P[(new a[b])._propName]=a[b]);return!0},q.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw\"illegal plugin definition.\";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:\"_onInitTween\",set:\"setRatio\",kill:\"_kill\",round:\"_roundProps\",initAll:\"_onInitAllProps\"},g=r(\"plugins.\"+c.charAt(0).toUpperCase()+c.substr(1)+\"Plugin\",function(){aa.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new aa(c);h.constructor=g,g.API=a.API;for(b in f)\"function\"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,aa.activate([g]),g},d=a._gsQueue){for(e=0;e<d.length;e++)d[e]();for(f in o)o[f].func||a.console.log(\"GSAP encountered missing dependency: com.greensock.\"+f)}h=!1}}(\"undefined\"!=typeof module&&module.exports&&\"undefined\"!=typeof global?global:this||window,\"TweenMax\");","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update () {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function() {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function() {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function() {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t//console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t//console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\t//console.log( 'handleTouchStartPan' );\n\n\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t// rotating across whole screen goes 360 degrees around\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\t//console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseDownRotate( event );\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseDownDolly( event );\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseDownPan( event );\n\n\t\t\tstate = STATE.PAN;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseMoveRotate( event );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseMoveDolly( event );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseMovePan( event );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor : {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alpha = 0;\n\tthis.alphaOffsetAngle = 0;\n\n\n\tvar onDeviceOrientationChangeEvent = function( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function() {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function() {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function() {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n\t\tvar beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n\t\tvar gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\t\tthis.alpha = alpha;\n\n\t};\n\n\tthis.updateAlphaOffsetAngle = function( angle ) {\n\n\t\tthis.alphaOffsetAngle = angle;\n\t\tthis.update();\n\n\t};\n\n\tthis.dispose = function() {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n","/**\n * @author dmarcos / https://github.com/dmarcos\n * @author mrdoob / http://mrdoob.com\n */\n\nTHREE.VRControls = function ( object, onError ) {\n\n\tvar scope = this;\n\n\tvar vrDisplay, vrDisplays;\n\n\tvar standingMatrix = new THREE.Matrix4();\n\n\tvar frameData = null;\n\tif ( 'VRFrameData' in window ) {\n\t\tframeData = new VRFrameData();\n\t}\n\n\tfunction gotVRDisplays( displays ) {\n\n\t\tvrDisplays = displays;\n\n\t\tif ( displays.length > 0 ) {\n\n\t\t\tvrDisplay = displays[ 0 ];\n\n\t\t} else {\n\n\t\t\tif ( onError ) onError( 'VR input not available.' );\n\n\t\t}\n\n\t}\n\n\tif ( navigator.getVRDisplays ) {\n\n\t\tnavigator.getVRDisplays().then( gotVRDisplays );\n\n\t}\n\n\t// the Rift SDK returns the position in meters\n\t// this scale factor allows the user to define how meters\n\t// are converted to scene units.\n\n\tthis.scale = 1;\n\n\t// If true will use \"standing space\" coordinate system where y=0 is the\n\t// floor and x=0, z=0 is the center of the room.\n\tthis.standing = false;\n\n\t// Distance from the users eyes to the floor in meters. Used when\n\t// standing=true but the VRDisplay doesn't provide stageParameters.\n\tthis.userHeight = 1.6;\n\n\tthis.getVRDisplay = function () {\n\n\t\treturn vrDisplay;\n\n\t};\n\n\tthis.getVRDisplays = function () {\n\n\t\treturn vrDisplays;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvar pose;\n\n\t\t\tif ( vrDisplay.getFrameData ) {\n\n\t\t\t\tvrDisplay.getFrameData( frameData );\n\t\t\t\tpose = frameData.pose;\n\n\t\t\t} else if ( vrDisplay.getPose ) {\n\n\t\t\t\tpose = vrDisplay.getPose();\n\n\t\t\t}\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\tobject.quaternion.fromArray( pose.orientation );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\tobject.position.fromArray( pose.position );\n\n\t\t\t} else {\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( this.standing ) {\n\n\t\t\t\tif ( vrDisplay.stageParameters ) {\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tstandingMatrix.fromArray( vrDisplay.stageParameters.sittingToStandingTransform );\n\t\t\t\t\tobject.applyMatrix( standingMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.position.setY( object.position.y + this.userHeight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.position.multiplyScalar( scope.scale );\n\n\t\t}\n\n\t};\n\n\tthis.resetPose = function () {\n\n\t\tif ( vrDisplay ) {\n\n\t\t\tvrDisplay.resetPose();\n\n\t\t}\n\n\t};\n\n\tthis.resetSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .resetSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.zeroSensor = function () {\n\n\t\tconsole.warn( 'THREE.VRControls: .zeroSensor() is now .resetPose().' );\n\t\tthis.resetPose();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tvrDisplay = null;\n\n\t};\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com\n * @author stewdio / http://stewd.io\n */\n\nTHREE.ViveController = function ( id ) {\n\n\tTHREE.Object3D.call( this );\n\n\tvar scope = this;\n\tvar gamepad;\n\n\tvar axes = [ 0, 0 ];\n\tvar thumbpadIsPressed = false;\n\tvar triggerIsPressed = false;\n\tvar gripsArePressed = false;\n\tvar menuIsPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\t// Iterate across gamepads as Vive Controllers may not be\n\t\t// in position 0 and 1.\n\n\t\tvar gamepads = navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0; i < 4; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && gamepad.id === 'OpenVR Gamepad' ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.matrixAutoUpdate = false;\n\tthis.standingMatrix = new THREE.Matrix4();\n\n\tthis.getGamepad = function () {\n\n\t\treturn gamepad;\n\n\t};\n\n\tthis.getButtonState = function ( button ) {\n\n\t\tif ( button === 'thumbpad' ) return thumbpadIsPressed;\n\t\tif ( button === 'trigger' ) return triggerIsPressed;\n\t\tif ( button === 'grips' ) return gripsArePressed;\n\t\tif ( button === 'menu' ) return menuIsPressed;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tgamepad = findGamepad( id );\n\n\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\tif ( gamepad.pose === null ) return; // No user action yet\n\n\t\t\t//  Position and orientation.\n\n\t\t\tvar pose = gamepad.pose;\n\n\t\t\tif ( pose.position !== null ) scope.position.fromArray( pose.position );\n\t\t\tif ( pose.orientation !== null ) scope.quaternion.fromArray( pose.orientation );\n\t\t\tscope.matrix.compose( scope.position, scope.quaternion, scope.scale );\n\t\t\tscope.matrix.multiplyMatrices( scope.standingMatrix, scope.matrix );\n\t\t\tscope.matrixWorldNeedsUpdate = true;\n\t\t\tscope.visible = true;\n\n\t\t\t//  Thumbpad and Buttons.\n\n\t\t\tif ( axes[ 0 ] !== gamepad.axes[ 0 ] || axes[ 1 ] !== gamepad.axes[ 1 ] ) {\n\n\t\t\t\taxes[ 0 ] = gamepad.axes[ 0 ]; //  X axis: -1 = Left, +1 = Right.\n\t\t\t\taxes[ 1 ] = gamepad.axes[ 1 ]; //  Y axis: -1 = Bottom, +1 = Top.\n\t\t\t\tscope.dispatchEvent( { type: 'axischanged', axes: axes } );\n\n\t\t\t}\n\n\t\t\tif ( thumbpadIsPressed !== gamepad.buttons[ 0 ].pressed ) {\n\n\t\t\t\tthumbpadIsPressed = gamepad.buttons[ 0 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: thumbpadIsPressed ? 'thumbpaddown' : 'thumbpadup' } );\n\n\t\t\t}\n\n\t\t\tif ( triggerIsPressed !== gamepad.buttons[ 1 ].pressed ) {\n\n\t\t\t\ttriggerIsPressed = gamepad.buttons[ 1 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: triggerIsPressed ? 'triggerdown' : 'triggerup' } );\n\n\t\t\t}\n\n\t\t\tif ( gripsArePressed !== gamepad.buttons[ 2 ].pressed ) {\n\n\t\t\t\tgripsArePressed = gamepad.buttons[ 2 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: gripsArePressed ? 'gripsdown' : 'gripsup' } );\n\n\t\t\t}\n\n\t\t\tif ( menuIsPressed !== gamepad.buttons[ 3 ].pressed ) {\n\n\t\t\t\tmenuIsPressed = gamepad.buttons[ 3 ].pressed;\n\t\t\t\tscope.dispatchEvent( { type: menuIsPressed ? 'menudown' : 'menuup' } );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tscope.visible = false;\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.ViveController.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ViveController.prototype.constructor = THREE.ViveController;\n","var BG = function () {\r\n\r\n    var groupHolder;\r\n    var material;\r\n    var planeMaterial;\r\n    var spd = 0;\r\n\r\n    var shapes = [];\r\n\r\n    var cubeMesh, cubeShader;\r\n\r\n    function init() {\r\n\r\n        //console.log(\"BG\")\r\n\r\n        //init event listeners\r\n        events.on(\"update\", update);\r\n        events.on(\"onBeat\", onBeat);\r\n\r\n\r\n        groupHolder = new THREE.Object3D();\r\n        VizHandler.getScene().add(groupHolder);\r\n\r\n        var cubeMapId = 23//4//28//23//20//16//7;//9\r\n        //4,,23,16,9,,28,20\r\n        cubeMap = Assets.getCubeMap(cubeMapId)\r\n\r\n        cubeShader = THREE.ShaderLib['cube'];\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n\r\n        var skyBoxMaterial = new THREE.ShaderMaterial({\r\n            fragmentShader: cubeShader.fragmentShader,\r\n            vertexShader: cubeShader.vertexShader,\r\n            uniforms: cubeShader.uniforms,\r\n            depthWrite: true,\r\n            side: THREE.BackSide\r\n        });\r\n\r\n        var skyBox = new THREE.Mesh(\r\n                new THREE.CubeGeometry(1500, 1500, 1500),\r\n                skyBoxMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        //groupHolder.add(skyBox);\r\n        /*\r\n        cubeMaterial = new THREE.MeshStandardMaterial({\r\n            //shading: THREE.FlatShading,\r\n            envMap: reflectionCube,\r\n            roughness: 0.5,\r\n            //side: THREE.DoubleSide,\r\n            //depthWrite:false,\r\n            //depthTest:false,\r\n            //blendEquation:THREE.MinEquation\r\n        })\r\n\r\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(10, 10), cubeMaterial);\r\n        cubeMesh.rotation.x = -Math.PI / 2\r\n        cubeMesh.position.y = -.25;\r\n        cubeMesh.castShadow = true;\r\n        cubeMesh.receiveShadow = false;\r\n        groupHolder.add(cubeMesh);\r\n\r\n        var test = new THREE.Mesh(\r\n                new THREE.CubeGeometry(.2, .2, .2),\r\n                cubeMaterial\r\n                //new THREE.MeshBasicMaterial({color:0xFFFFFF,side: THREE.BackSide})\r\n                );\r\n\r\n        test.castShadow = true;\r\n        test.receiveShadow = true;\r\n        //groupHolder.add(test);\r\n        */\r\n\r\n        /*\r\n        planeMaterial = new THREE.MeshPhongMaterial({\r\n         envMap: Assets.textureCube(),\r\n         reflectivity: 1,\r\n         //opacity:.3,//.75,\r\n         color: 0xffffff,\r\n         //transparent:true,\r\n         shading: THREE.FlatShading,\r\n         //blending: THREE.AdditiveBlending,\r\n         side: THREE.DoubleSide//BackSide\r\n         });\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         var vert = groundGeometry.vertices\r\n         for (var i = 0; i < vert.length; i++) {\r\n         vert[i].z += Math.random() * 1000\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground.position.x = -2000;\r\n         ground.position.y = -1500;\r\n         ground.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground );\r\n         \r\n         \r\n         var groundGeometry = new THREE.PlaneGeometry(4000, 8000, 10, 10);\r\n         for (var i = 0; i < vert.length; i++) {\r\n         groundGeometry.vertices[i].x = -vert[i].x\r\n         groundGeometry.vertices[i].y = vert[i].y\r\n         groundGeometry.vertices[i].z = vert[i].z\r\n         }\r\n         groundGeometry.verticesNeedUpdate = true;\r\n         groundGeometry.normalsNeedUpdate = true;\r\n         groundGeometry.computeFaceNormals();\r\n         groundGeometry.computeVertexNormals();\r\n         \r\n         var ground2 = new THREE.Mesh(groundGeometry, planeMaterial);\r\n         ground2.position.x = 2000;\r\n         ground2.position.y = -1500;\r\n         ground2.rotation.x = -Math.PI / 2\r\n         //groupHolder.add( ground2 );\r\n         */\r\n         \r\n\r\n\r\n    }\r\n\r\n    function update() {\r\n\r\n        //cubeMesh.rotation.x += spd * .001\r\n        //cubeMesh.scale.x = cubeMesh.scale.y = cubeMesh.scale.z = 16 - ControlsHandler.fxParams.bgProgress * 8\r\n        //groupHolder.rotation.z+=.001\r\n    }\r\n\r\n    function onBeat() {\r\n        /*if (Math.random() < .05)\r\n         spd = (Math.random() - .5)\r\n         \r\n         if (ControlsHandler.fxParams.wireframe) {\r\n         cubeMesh.material.wireframe = true;\r\n         planeMaterial.wireframe = true;\r\n         } else {\r\n         cubeMesh.material.wireframe = false;\r\n         planeMaterial.wireframe = false;\r\n         }\r\n         \r\n         \r\n         var basic = [ControlsHandler.fxParams.colorProgress * .75, ControlsHandler.fxParams.colorProgress * .75, (1 - ControlsHandler.fxParams.colorProgress) * .5]\r\n         cubeMesh.material.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         planeMaterial.color.setRGB(basic[0] + Math.random() / 2, basic[1] + Math.random() / 2, basic[2] + Math.random() / 2);\r\n         if (ControlsHandler.fxParams.black) {\r\n         cubeMesh.material.color.setRGB(.2, .2, .2);\r\n         planeMaterial.color.setRGB(.2, .2, .2);\r\n         }*/\r\n    }\r\n\r\n    function setEnvMap(cubeMap) {\r\n        cubeShader.uniforms['tCube'].value = cubeMap;\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        update: update,\r\n        onBeat: onBeat,\r\n        setEnvMap: setEnvMap\r\n    };\r\n\r\n}();","var Mecha = function () {\n    var groupHolder;\n    var multiMaterial\n    var scene\n    var dae;\n    var timeout\n    var flotilla = []\n    var material\n    var bonesCount = 10;\n    var bonesPositions = []\n    var bonesPositionsTween = []\n    var center = new THREE.Vector3()\n    var centerTween = new THREE.Vector3()\n    var mouseControl = false;\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n        groupHolder = new THREE.Object3D();\n        VizHandler.getScene().add(groupHolder);\n\n        reload()\n\n        var groundBump = new THREE.TextureLoader().load(\"assets/img/ground_bump.jpg\");\n        groundBump.wrapS = THREE.RepeatWrapping;\n        groundBump.wrapT = THREE.RepeatWrapping;\n        groundBump.repeat.set(100, 100);\n\n        cubeMaterial = new THREE.MeshPhongMaterial({\n            color: 0xc9c9c9,\n            specular: 0x000000,\n            shininess: 70,\n            transparent: true,\n            bumpMap: groundBump,\n            bumpScale: 1\n        })\n\n        cubeMesh = new THREE.Mesh(new THREE.PlaneGeometry(100, 100), cubeMaterial);\n        cubeMesh.rotation.x = -Math.PI / 2\n        cubeMesh.position.y = -.25;\n        //cubeMesh.castShadow = true;\n        cubeMesh.receiveShadow = true;\n        groupHolder.add(cubeMesh);\n\n        document.addEventListener(\"mousemove\", onDocumentMouseDown);\n        document.addEventListener(\"touchmove\", onDocumentTouchStart, false);\n    }\n    function onDocumentTouchStart(event) {\n        if (event.touches.length === 1) {\n            var mouse = new THREE.Vector2();\n            mouse.x = (event.touches[ 0 ].pageX / window.innerWidth) * 2 - 1;\n            mouse.y = -(event.touches[ 0 ].pageY / window.innerHeight) * 2 + 1;\n            boom(mouse)\n        }\n    }\n    function onDocumentMouseDown(event) {\n        var mouse = new THREE.Vector2();\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        boom(mouse)\n\n    }\n    function boom(mouse) {\n        var raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(mouse, VizHandler.getCamera());\n        var intersects = raycaster.intersectObject(cubeMesh, true);\n        //console.log(intersects, mouse)\n        if (intersects[ 0 ]) {\n            mouseControl = true\n            //console.log(intersects[ 0 ])\n            var p = intersects[ 0 ].point.multiplyScalar(1 / .05)\n            //center.copy()\n            TweenMax.to(center, center.distanceTo(p) * .1, {x: p.x * .6, z: p.z * .6, ease: Linear.easeNone, onComplete: function () {\n                    mouseControl = false\n                }});\n        }\n    }\n\n    function reload() {\n        if (dae) {\n            groupHolder.remove(dae);\n            dae.geometry.dispose();\n            dae = null;\n        }\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            skinning: true,\n            bumpScale: bumpScale,\n            color: 0xFFFFFF,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        initBones();\n    }\n\n    function initBones() {\n        meshes = []\n        skeletonHelpers = [];\n\n        var segmentHeight = 5;\n        var segmentCount = 2;\n        var height = segmentHeight * segmentCount;\n        var halfHeight = height * 0.5;\n\n        var sizing = {\n            segmentHeight: segmentHeight,\n            segmentCount: segmentCount,\n            height: height,\n            halfHeight: halfHeight\n        };\n\n        for (var i = 0; i < bonesCount; i++) {\n            var mesh\n            var geometry = createGeometry(sizing);\n            var bones = createBones(sizing);\n            mesh = createMesh(geometry, bones);\n            mesh.scale.set(.05, .05, .05)\n\n            groupHolder.add(mesh);\n            meshes.push(mesh)\n\n            var pos = new THREE.Vector3();\n            pos.oldCenter = new THREE.Vector3();\n            bonesPositions.push(pos)\n            bonesPositionsTween.push(pos.clone())\n        }\n\n    }\n\n    function createGeometry(sizing) {\n\n        var geometry = new THREE.CylinderGeometry(\n                0, // radiusTop\n                3, // radiusBottom\n                sizing.height, // height\n                7, // radiusSegments\n                sizing.segmentCount * 3, // heightSegments\n                true                     // openEnded\n                );\n\n        for (var i = 0; i < geometry.vertices.length; i++) {\n\n            var vertex = geometry.vertices[ i ];\n            var y = (vertex.y + sizing.halfHeight);\n\n            var skinIndex = Math.floor(y / sizing.segmentHeight);\n            var skinWeight = (y % sizing.segmentHeight) / sizing.segmentHeight;\n\n            vertex.x -= (.5 - Math.random()) * 2\n            vertex.z -= (.5 - Math.random()) * 2\n            if (vertex.y == -sizing.segmentHeight) {\n                vertex.x = vertex.z = 0;\n            }\n\n            geometry.skinIndices.push(new THREE.Vector4(skinIndex, skinIndex + 1, 0, 0));\n            geometry.skinWeights.push(new THREE.Vector4(1 - skinWeight, skinWeight, 0, 0));\n\n        }\n\n        return geometry;\n\n    }\n\n    function createBones(sizing) {\n\n        bones = [];\n\n        var prevBone = new THREE.Bone();\n        bones.push(prevBone);\n        prevBone.position.y = -sizing.halfHeight;\n\n        for (var i = 0; i < sizing.segmentCount; i++) {\n\n            var bone = new THREE.Bone();\n            bone.position.y = sizing.segmentHeight;\n            bones.push(bone);\n            prevBone.add(bone);\n            prevBone = bone;\n\n        }\n\n        return bones;\n\n    }\n\n    function createMesh(geometry, bones) {\n\n        var mesh = new THREE.SkinnedMesh(geometry, material);\n        var skeleton = new THREE.Skeleton(bones);\n        mesh.castShadow = true;\n        mesh.frustumCulled = false;\n        //mesh.receiveShadow = true;\n\n        mesh.add(bones[ 0 ]);\n        mesh.bind(skeleton);\n\n        var skeletonHelper = new THREE.SkeletonHelper(mesh);\n        skeletonHelper.material.linewidth = 2;\n        //groupHolder.add(skeletonHelper);\n        skeletonHelpers.push(skeletonHelper)\n\n        return mesh;\n\n    }\n\n    function update() {\n\n        var time = Date.now() * 0.00010;\n        //var bone = mesh;\n\n        //Wiggle the bones\n        /*if (state.animateBones) {\n         for (var i = 0; i < mesh.skeleton.bones.length; i++) {\n         mesh.skeleton.bones[ i ].position.x = 20*Math.sin(i+3*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.z = 20*Math.sin(i+2*time) * 2 / mesh.skeleton.bones.length;\n         mesh.skeleton.bones[ i ].position.y = 10*Math.sin(i+time) * 2 / mesh.skeleton.bones.length;\n         }\n         }*/\n        var i = 0\n\n        var spd = .2\n        if (!mouseControl) {\n            var des = new THREE.Vector3(window.innerWidth / window.innerHeight * 10 * Math.sin(i + 2 * time) * Math.sin(i + 3.5 * time) * 1, 0, 15 * Math.sin(i + 1 * time) * Math.sin(i + 4.5 * time) * 1)\n            TweenMax.to(center, center.distanceTo(des) * .2, {\n                x: des.x,\n                z: des.z,\n                ease: Linear.easeNone\n            })\n        }\n        TweenMax.to(center, 0, {\n            y: 2 * Math.sin(i + time * 10), ease: Linear.easeNone\n        });\n        //var centerSpd = centerTween.distanceTo(center) / 2.5\n        //console.log(centerSpd)\n        TweenMax.to(centerTween, spd * 5, {x: center.x, y: center.y, z: center.z, ease: Linear.easeNone});\n\n        for (var j = 0; j < bonesCount; j++) {\n            var mesh = meshes[j]\n\n            if (bonesPositions[j].x == 0 || Math.random() < .003 || bonesPositions[j].distanceTo(center) > 13 && !TweenMax.isTweening(bonesPositionsTween[j])) {\n                //var i = Math.floor(Math.random() * bonesCount)\n\n                var r = 2 * Math.PI * (j / bonesCount + Math.random() / 10)\n\n                bonesPositions[j].x = center.x + Math.sin(r) * 10\n                bonesPositions[j].y = 0\n                bonesPositions[j].z = center.z + Math.cos(r) * 10\n                bonesPositions[j].oldCenter.copy(center)\n\n                //if (!TweenMax.isTweening(bonesPositionsTween[j])) {\n                TweenMax.killTweensOf(bonesPositionsTween[j])\n                TweenMax.to(bonesPositionsTween[j], spd * 2, {x: bonesPositions[j].x, z: bonesPositions[j].z})\n                TweenMax.to(bonesPositionsTween[j], spd, {y: 5})\n                TweenMax.to(bonesPositionsTween[j], spd, {delay: spd, y: bonesPositions[j].y})\n                //}\n            }\n\n            mesh.skeleton.bones[ 0 ].position.copy(centerTween)\n            mesh.skeleton.bones[ 0 ].position.add(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 1 ].position.set(bonesPositionsTween[j].x / 2, 5 + bonesPositionsTween[j].y / 2, bonesPositionsTween[j].z / 2)\n            mesh.skeleton.bones[ 1 ].position.sub(centerTween.clone().multiplyScalar(.5))\n            mesh.skeleton.bones[ 2 ].position.set(bonesPositionsTween[j].x, -10 + bonesPositionsTween[j].y, bonesPositionsTween[j].z)\n            mesh.skeleton.bones[ 2 ].position.sub(centerTween.clone().multiplyScalar(1))\n\n            skeletonHelpers[j].update();\n        }\n\n        //console.log(bonesPositionsTween[0].x)\n\n        /*mesh.skeleton.bones[1].position.x=0;\n         mesh.skeleton.bones[1].position.y=0;\n         mesh.skeleton.bones[1].position.z=0;\n         mesh.skeleton.bones[2].position.x=10;\n         mesh.skeleton.bones[2].position.y=10;\n         mesh.skeleton.bones[2].position.z=10;*/\n    }\n\n    function onBeat() {\n        /*if (Math.random() < .2) {\n         goBack();\n         return;\n         }\n         var point = new THREE.Vector3()\n         var s = Math.random() * Math.PI\n         var t = Math.random() * Math.PI\n         var r = 4;\n         point.x = r * Math.cos(s) * Math.sin(t)\n         point.y = r * Math.sin(s) * Math.sin(t)\n         point.z = r * Math.cos(t)\n         animate(point)*/\n    }\n\n    function prerender() {\n        //plane.visible = false;\n    }\n\n    function postrender() {\n        //plane.visible = true;\n    }\n\n    function setEnvMap(cubeMap) {\n        material.envMap = cubeMap;\n    }\n    function getRandomOne() {\n        return flotilla[Math.floor(Math.random() * flotilla.length)]\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        //generate: generate,\n        //generateArmy: generateArmy,\n        prerender: prerender,\n        postrender: postrender,\n        setEnvMap: setEnvMap,\n        getRandomOne: getRandomOne,\n    }\n\n}\n();","var Shards = function () {\n    var groupHolder;\n    var multiMaterial\n\n    var drewNewShape = false;\n    var scl = 0;\n    var full;\n    var spd = 0;\n    var mod = 0;\n    var speed = .035;\n    var back = false;\n    var main;\n    var timeout\n    var flotilla = []\n    var isMobile = {any: false};\n    var plane;\n    var rings = []\n    var material\n    var time = 0\n    function init() {\n\n        //init event listeners\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = 0;\n        var metalness = 1;\n        //var diffuseColor = new THREE.Color(.1,.1,.1);\n        material = new THREE.MeshStandardMaterial({\n            bumpScale: bumpScale,\n            metalness: metalness,\n            fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            //side: THREE.DoubleSide,\n            //map: new THREE.TextureLoader().load(\"2708diffuse.jpg\"),\n            //alphaMap: new THREE.TextureLoader().load(\"textures/op.png\"),\n            //transparent:true,\n            //normalMap: new THREE.TextureLoader().load(\"2708normal.jpg\"),\n            //bumpMap: texture,\n            //emissive: 0x111111,\n            //metalnessMap:texture,\n            //lightMap:texture,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n        \n        reload()\n    }\n\n    function reload() {\n        if (full) {\n            VizHandler.getScene().remove(full);\n            full.geometry.dispose();\n            full = null;\n        }\n\n        var geo = new THREE.BoxGeometry(.1, .1, .1, 1, 1, 1)\n        var group = new THREE.Object3D();\n        \n        for (var j = 0; j < 400; j++) {\n            var r = 15\n            var tpos = new THREE.Vector3()\n            if (j != 0)\n                tpos.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n            var ran=Math.random()*5\n            for (var i = 0; i < ran; i++) {\n                var cube = new THREE.Mesh(geo, material)\n                var r = .2 + .4 * Math.random()\n                cube.position.set((Math.random() - .5) * r, (Math.random() - .5) * r, (Math.random() - .5) * r)\n                cube.position.add(tpos)\n                var scr0 = Math.random()\n                var scr1 = Math.random()\n                var scr2 = Math.random()\n                cube.scale.set(scr0, scr1, scr2)\n                group.add(cube)\n                cube.castShadow = true;\n                cube.receiveShadow = true;\n            }\n        }\n\n\n        var geom = new THREE.Geometry()\n        for (var i = 0; i < group.children.length; i++) {\n            group.children[i].updateMatrix();\n            geom.merge(group.children[i].geometry, group.children[i].matrix);\n        }\n\n        var mod = .1\n        for (var i = 0; i < geom.vertices.length; i++) {\n            var v = geom.vertices[i]\n            v.x += (Math.random() - .5) * mod\n            v.y += (Math.random() - .5) * mod\n            v.z += (Math.random() - .5) * mod\n        }\n\n        geom.computeFaceNormals();\n        geom.computeVertexNormals();\n\n        full = new THREE.Mesh(geom, material)\n        full.castShadow = true;\n        full.receiveShadow = true;\n        VizHandler.getScene().add(full)\n\n        VizHandler.getRenderer().shadowMap.needsUpdate = true;\n    }\n\n    function update() {\n    }\n\n    function onBeat() {\n    }\n\n    function generate() {\n    }\n\n    return {\n        init: init,\n        update: update,\n        onBeat: onBeat,\n        generate: generate,\n        reload: reload,\n    }\n\n}\n();","var Assets = function () {\n\n    var textureCube;\n    var cubeMaps=[]\n\n    function init() {\n\n    }\n\n    function destroy(object, textureToo) {\n        if (object.children.length > 0) {\n            var objects = [object.children[1], object.children[0]]\n\n            object.remove(objects[0]);\n            object.remove(objects[1]);\n\n            destroyMesh(objects[0], textureToo)\n            destroyMesh(objects[1], textureToo)\n        } else {\n            destroyMesh(object, textureToo)\n        }\n    }\n    \n    function getCubeMap(i) {\n        i=0\n        if(cubeMaps[i])\n            return cubeMaps[i]\n        \n        var cubeMap = new THREE.Texture([]);\n        cubeMap.format = THREE.RGBFormat;\n        cubeMap.flipY = false;\n\n        var envMaps = [\n            {file: \"/assets/img/skin.jpg\", size: 1024, glow: 0.2},\n        ];\n\n        var loader = new THREE.ImageLoader();\n        var file = envMaps[i].file;\n        var size = envMaps[i].size;\n        loader.load(file, function (image) {\n            var getSide = function (x, y) {\n\n                var canvas = document.createElement('canvas');\n                canvas.width = size;\n                canvas.height = size;\n\n                var context = canvas.getContext('2d');\n                context.drawImage(image, -x * size, -y * size);\n\n                return canvas;\n\n            };\n\n            cubeMap.image[ 0 ] = getSide(2, 1); // px\n            cubeMap.image[ 1 ] = getSide(0, 1); // nx\n            cubeMap.image[ 2 ] = getSide(1, 0); // py\n            cubeMap.image[ 3 ] = getSide(1, 2); // ny\n            cubeMap.image[ 4 ] = getSide(1, 1); // pz\n            cubeMap.image[ 5 ] = getSide(3, 1); // nz\n            cubeMap.needsUpdate = true;\n\n        });\n\n        cubeMaps[i]=cubeMap\n        return cubeMap;\n    }\n\n    function destroyMesh(mesh, textureToo) {\n        if (mesh.geometry)\n            mesh.geometry.dispose();\n        if (!mesh.material)\n            return;\n        var tex = mesh.material.map\n        if (!tex && mesh.material.materials)\n            tex = mesh.material.materials[1].map\n        //console.log(mesh.material.map)\n        if (tex && textureToo) {\n            tex.needsUpdate = false;\n            tex.dispose();\n            tex.image = null\n            tex = null;\n        }\n        if (mesh.material.materials) {\n            mesh.material.materials[1].dispose();\n            mesh.material.materials[0].dispose();\n            mesh.material.materials[1] = null;\n            mesh.material.materials[0] = null;\n        }\n        if (mesh.material.dispose)\n            mesh.material.dispose();\n\n        mesh.material = null;\n        mesh.geometry = null;\n        tex = null;\n    }\n\n    return {\n        init: init,\n        textureCube: function () {\n            return textureCube;\n        },\n        destroy: destroy,\n        getCubeMap: getCubeMap\n    };\n\n}();","var events = new Events();\nvar simplexNoise = new SimplexNoise();\n\nvar Main = function () {\n\n    function init() {\n\n        if (!Detector.webgl) {\n            Detector.addGetWebGLMessage();\n        }\n\n        //INIT DOCUMENT\n        window.addEventListener('resize', onResize, false);\n\n        //INIT HANDLERS\n        ControlsHandler.init();\n        VizHandler.init();\n        FXHandler.init();\n\n        onResize();\n\n        if (ControlsHandler.vizParams.showControls) {\n            $('#controls').show();\n        }\n\n        update();\n\n    }\n\n    function update() {\n        requestAnimationFrame(update);\n        events.emit(\"update\");\n    }\n\n    function onResize() {\n        VizHandler.onResize();\n        FXHandler.onResize();\n    }\n\n    return {\n        init: init\n    };\n\n}();\n\n$(window).on('load', function() {\n  $('#status').fadeOut();\n  $('#preloader').delay(300).fadeOut('slow');\n})\n\n$(document).ready(function () {\n    setTimeout(Main.init, 100);\n});\n","var ControlsHandler = function () {\n\n    var t = 0;\n\n    var mainParams = {\n        time: 0.0001,\n        auto: false,\n        fullscreen: function () {\n            document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n            Main.toggleControls()\n        },\n        generate_one: function () {\n            Asteroid.generate(0,0)\n        },\n        generate_grid: function () {\n            Asteroid.generate(8,8)\n        }\n    }\n\n    var audioParams = {\n        useMic: false,\n        useSample: false,\n        showDebug: true,\n        volSens: 1,//1,\n        beatHoldTime: 40,\n        beatDecayRate: 0.97,\n        bpmMode: false,\n        bpmRate: 0\n    };\n\n    var fxParams = {\n        song: 0,\n        nuts: false,\n        tilt: true,\n        tv: false,\n        kaleidoscope: -1,\n        kaleidoscopeJump: false,\n        rgb: true,\n        wireframe: false,\n        dots: false,\n        person: false,\n        ssao:true,\n        ssaoOnly:false,\n        heart: true,\n        items: true,\n        black: true,\n        animSpeed: 1.0,\n        colorProgress: 0.0,\n        spreadProgress: 0.0,\n        waterProgress: 0.3,\n        bgProgress: 0.0,\n        glow: 0.3\n    };\n\n    var vizParams = {\n        fullSize: true,\n        showControls: false,\n        fakeKinect: false,\n        // useBars: false,\n        // useGoldShapes: true,\n        // useNebula:true,\n        // useNeonShapes:true,\n        // useStripes:true,\n        // useTunnel:true,\n        // useWaveform:true,\n    };\n\n    function init() {\n        return events.on(\"update\", update);\n    }\n\n    function show(trigger, percStart, percFinish, value) {\n        var changedValue = true;\n        if (typeof value === 'number') {\n            changedValue = value\n        }\n        if (mainParams.time > percStart && mainParams.time <= percFinish) {\n            fxParams[trigger] = changedValue;\n        }\n    }\n\n    function autoChange() {\n        mainParams.auto = true;\n    }\n\n    function manualChange() {\n        mainParams.auto = false;\n        FXHandler.toggle();\n    }\n\n    function update() {\n\n\n        if (mainParams.auto) {\n            mainParams.time += 1 / 3/*hours*/ / 60/*minutes*/ / 60/*seconds*/ / 60/*fps*/;//*60*4;\n            if (mainParams.time > 1)\n                mainParams.time = 1;\n            if (mainParams.time < 0)\n                mainParams.time = 0;\n        }\n\n        var clone = {};\n        for (var attr in fxParams) {\n            if (fxParams.hasOwnProperty(attr)) {\n                clone[attr] = fxParams[attr];\n            }\n        }\n        if (mainParams.auto) {\n            for (var attr in fxParams) {\n                if (fxParams.hasOwnProperty(attr)) {\n                    if (fxParams[attr] === true)\n                        fxParams[attr] = false;\n                }\n            }\n\n            fxParams.waterProgress = Math.sin(3.5 + mainParams.time * 6) / 2 + .5\n            fxParams.colorProgress = mainParams.time\n            fxParams.spreadProgress = mainParams.time\n            //fxParams.bgProgress=mainParams.time\n\n            show('black', 0.07, 0.25)\n            show('bgProgress', 0.00, 0.50, 0)\n            show('bgProgress', 0.50, 1.00, 1)\n\n            show('kaleidoscope', 0.00, 0.09, -1)\n            show('kaleidoscope', 0.13, 0.16, 0)\n            show('kaleidoscope', 0.16, 0.19, 1)\n            show('kaleidoscope', 0.19, 0.24, 4)\n\n            show('heart', 0.00, 0.37)\n            show('heart', 0.43, 1)\n            show('black', 0.30, 0.40)\n            show('spreadProgress', 0.30, 1, 1)\n\n            show('kaleidoscope', 0.24, 0.30, -1)\n            show('kaleidoscope', 0.30, 0.33, 0)\n            show('kaleidoscope', 0.33, 0.36, 1)\n            show('kaleidoscope', 0.36, 0.43, 2)\n\n            show('items', 0.15, 1.00)\n\n            show('animSpeed', 0.17, 0.20, -3)\n            show('animSpeed', 0.20, 0.23, 4)\n            show('animSpeed', 0.23, 0.30, -10)\n            show('animSpeed', 0.53, 0.61, -3)\n            show('animSpeed', 0.61, 0.67, 4)\n            show('animSpeed', 0.67, 0.73, -6)\n            show('animSpeed', 0.73, 0.81, 7)\n            show('animSpeed', 0.81, 0.87, 0)\n            show('animSpeed', 0.91, 1, -10)\n\n            show('kaleidoscope', 0.40, 0.60, -1)\n            show('kaleidoscope', 0.60, 0.65, 0)\n            show('kaleidoscope', 0.65, 0.70, 1)\n            show('kaleidoscope', 0.70, 0.75, 2)\n\n            show('nuts', 0.43, 0.47)\n            show('wireframe', 0.47, 0.57)\n            show('nuts', 0.57, 1.00)\n\n            show('rgb', 0.30, 0.40)\n            show('rgb', 0.70, 1.00)\n\n            show('tv', .65, 1)\n\n            show('kaleidoscopeJump', .75, 1)\n\n        }\n\n        /*show('nuts',.5,1)\n         show('tv',.5,1)\n         show('wireframe',.16,.20)\n         show('wireframe',.33,.38)\n         show('dots',.9,1)\n         show('black',.3,.7)*/\n\n        var changed = false;\n\n        for (var attr in fxParams) {\n            if (clone[attr] != fxParams[attr] && (typeof fxParams[attr] === 'boolean') && attr !== \"heart\" && attr !== \"wireframe\" && attr !== \"items\" && attr !== \"black\" && attr !== \"waterProgress\" && attr !== \"spreadProgress\" && attr !== \"bgProgress\") {\n                changed = true;\n                console.log(attr, fxParams[attr])\n            }\n        }\n        //if(changed)console.log(fxParams.nuts, changed)\n        //if(changed)alert('hi')\n        if (changed)\n            FXHandler.toggle();\n\n    }\n\n    return {\n        init: init,\n        audioParams: audioParams,\n        fxParams: fxParams,\n        vizParams: vizParams\n    };\n}();","var FXHandler = function () {\n\n    var shaderTime = 0;\n    var screenW = 1920;\n    var screenH = 1080;\n    var blurriness = 3;\n    var nuts = false;\n    var bloomPass;\n    var hblurPass = null;\n    var vblurPass = null;\n    var copyPass = null;\n    var renderTarget2 = null;\n    var glowComposer = null;\n    var composer = null;\n    var blendPass = null;\n    var badTVPass = null;\n    var mirrorPass = null;\n    var dotScreenPass = null;\n    var rgbPass = null;\n    var smaaPass = null;\n    var depthMaterial, depthRenderTarget;\n    var msaaPass = null\n    var scene, renderer, camera, controls, vrControls\n    var vr, controller2, material, geom, bubbles = []\n    var material, geoms = []\n    var group = new THREE.Group()\n\n    function init() {\n        controls = VizHandler.getControls();\n        scene = VizHandler.getScene();\n        renderer = VizHandler.getRenderer();\n        camera = VizHandler.getCamera();\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n        events.on(\"onBeat\", onBeat);\n\n        setup()\n    }\n\n    function setup() {\n\n        vrControls = new THREE.VRControls(camera);\n        vrControls.standing = true;\n        //vrControls.scale = .5;\n    }\n\n    function switchControls() {\n\n        controls.autoRotate = false;\n        controls.enabled = false;\n\n        scene.add(group)\n        group.position.y = -1.5\n\n        vr = true\n        \n        Shards.init()\n\n        /*var roz = 4\n         var directionalLight=VizHandler.getLight()\n         directionalLight.shadow.camera.near = -roz\n         directionalLight.shadow.camera.far = roz * 5\n         directionalLight.shadow.camera.left = -roz\n         directionalLight.shadow.camera.right = roz\n         directionalLight.shadow.camera.top = roz\n         directionalLight.shadow.camera.bottom = -roz\n         directionalLight.shadow.mapSize.width = 2048;\n         directionalLight.shadow.mapSize.height = 2048;\n         directionalLight.shadow.bias = 0//.001\n         VizHandler.getRenderer().shadowMap.autoUpdate = true;*/\n\n        var reflectionCube = Assets.getCubeMap(12)\n        reflectionCube.format = THREE.RGBFormat;\n        geom = new THREE.BoxGeometry(.2, .2, .2, 1, 1, 1)\n\n        var shininess = 50, specular = 0xffffff, bumpScale = .055, shading = THREE.SmoothShading;\n        var reflectionCube = Assets.getCubeMap(31)\n        reflectionCube.format = THREE.RGBFormat;\n        var roughness = .4;\n        var metalness = .9;\n        var diffuseColor = new THREE.Color(1, 1, 1);\n        material = new THREE.MeshStandardMaterial({\n            //skinning: true,\n            bumpScale: bumpScale,\n            color: diffuseColor,\n            metalness: metalness,\n            //fog: false,\n            roughness: roughness,\n            shading: THREE.FlatShading,\n            envMap: reflectionCube,\n            side: THREE.DoubleSide,\n            //depthWrite:false,\n            //depthTest:false,\n            //blendEquation:THREE.MinEquation\n        })\n\n        onResize();\n        mobile = false;\n    }\n\n    function removeBubble(bubble) {\n        scene.remove(bubble)\n    }\n\n    function onBeat() {\n        setTimeout(onBeatEnd, 300);\n    }\n\n    function onBeatEnd() {\n    }\n\n    function toggle() {\n        setup()\n    }\n\n    function onResize() {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n\n        var pixelRatio = renderer.getPixelRatio();\n        var newWidth = Math.floor(width / pixelRatio) || 1;\n        var newHeight = Math.floor(height / pixelRatio) || 1;\n        if (composer)\n            composer.setSize(newWidth, newHeight);\n\n    }\n\n    function update(t) {\n\n        if (vr)\n            return;\n\n        renderer.render(scene, camera);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.needsUpdate = true;\n\n        scene.overrideMaterial = depthMaterial;\n        renderer.render(scene, camera, depthRenderTarget, true);\n        scene.overrideMaterial = null;\n\n        if (composer) {\n            //renderer.clear();\n            composer.render();\n        }\n\n        return;\n    }\n\n    return {\n        init: init,\n        update: update,\n        toggle: toggle,\n        onBeat: onBeat,\n        onResize: onResize\n    };\n\n}();","//VizHandler\n//Handle 3D world\nvar VizHandler = function () {\n\n    var rendertime = 0; //constantly incrementing value public\n    var camera, scene, renderer, controls, fullscreen = false;\n    var cubeCameraRead, cubeCameraWrite;\n    var debugCube;\n    var renderToggle = true;\n    var mobile\n\n    var BG_COLOR = 0xffffff;\n    var directionalLight;\n\n    var WIDTH = window.innerWidth;\n    var HEIGHT = window.innerHeight;\n\n    function init() {\n\n        var id = parseInt(window.location.hash.substr(1))\n        if (!id)\n            id = 1\n        ControlsHandler.fxParams.song = id;\n\n        //EVENT HANDLERS\n        events.on(\"update\", update);\n\n        // var container = document.getElementById('viz')\n        //document.body.appendChild(container);\n\n        container = document.createElement('div');\n        document.body.appendChild(container);\n\n        //RENDERER\n        renderer = new THREE.WebGLRenderer({\n            antialias: true\n        });\n        renderer.setSize(WIDTH, HEIGHT);\n        renderer.setClearColor(BG_COLOR);\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.autoUpdate = true;\n        //renderer.shadowMap.needsUpdate = true;\n        //renderer.autoClear = false;\n\n        //renderer.shadowMap.type = THREE.PCFShadowMap;\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true;\n        //renderer.sortObjects = false;\n        container.appendChild(renderer.domElement);\n\n        scene = new THREE.Scene();\n        //3D SCENE\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, .1, 1000);\n        camera.position.x = -2;\n        camera.position.y = 2.5;\n        camera.position.z = 2;\n        //scene.add(camera);\n\n        scene.fog = new THREE.Fog(BG_COLOR, 2, 10);\n\n        //controls = new THREE.TrackballControls(camera);\n        controls = new THREE.OrbitControls(camera);\n        controls.target.set(0, 0, 0);\n        controls.update();\n        controls.autoRotate = false;\n        controls.enablePan = false;\n        controls.enableZoom = true;\n        controls.enableRotate = true;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n        controls.rotateSpeed = .05;\n        //controls.autoRotateSpeed = (Math.random() * .5 - .25) / 7;\n        controls.minDistance = 2;\n        controls.maxDistance = 4;\n        controls.maxPolarAngle = Math.PI / 2.7;\n        controls.minPolarAngle = Math.PI / 5;\n\n        Assets.init();\n\n        directionalLight = new THREE.DirectionalLight(0xffffff, 0.4);\n        directionalLight.position.x = .1\n        directionalLight.position.z = -.9\n        directionalLight.position.y = .4\n        directionalLight.castShadow = true\n        var roz = 6\n        directionalLight.shadow.camera.near = -roz * 2\n        directionalLight.shadow.camera.far = roz * 2\n        directionalLight.shadow.camera.left = -roz\n        directionalLight.shadow.camera.right = roz\n        directionalLight.shadow.camera.top = roz\n        directionalLight.shadow.camera.bottom = -roz\n        directionalLight.shadow.mapSize.width = 1024\n        directionalLight.shadow.mapSize.height = 1024\n        directionalLight.shadow.bias = 0.0001\n\n        scene.add(directionalLight);\n        //scene.add(new THREE.CameraHelper(directionalLight.shadow.camera));\n        //scene.add(new THREE.CameraHelper(directionalLight2.shadow.camera));\n\n        scene.add(new THREE.AmbientLight(0xffffff, 0.9));\n\n        /*hemiLight = new THREE.HemisphereLight(0xffffff, 0x666666, 0.6);\n        hemiLight.color.setHSL(0.6, 1, 0.8);\n        hemiLight.groundColor.setHSL(0.095, 1, 0.9);\n        hemiLight.position.set(0, 10, 0);\n        scene.add(hemiLight);*/\n\n        //var helper = new THREE.CameraHelper(directionalLight.shadow.camera);\n        //scene.add(helper);\n\n        activeViz = [Mecha];\n\n        activeVizCount = activeViz.length;\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].init();\n        }\n\n        //window.addEventListener('deviceorientation', setOrientationControls, true);\n\n        TweenMax.delayedCall(.1, updateShadow)\n    }\n\n    function updateShadow() {\n        renderer.shadowMap.needsUpdate = true;\n    }\n\n    function remake() {\n        for (var j = 0; j < activeVizCount; j++) {\n            activeViz[j].reload();\n        }\n        controls.autoRotateSpeed = Math.random() * .5 - .25\n        TweenMax.delayedCall(5, remake)\n    }\n\n    function setOrientationControls(e) {\n        if (!e.alpha) {\n            return;\n        }\n\n        controls.enabled = false\n        controls = new THREE.DeviceOrientationControls(camera, true);\n        controls.connect();\n        controls.update();\n\n        window.removeEventListener('deviceorientation', setOrientationControls, true);\n\n        if (renderer.domElement) {\n            renderer.domElement.addEventListener('click', function () {\n\n                if (this.requestFullscreen) {\n                    this.requestFullscreen();\n                } else if (this.msRequestFullscreen) {\n                    this.msRequestFullscreen();\n                } else if (this.mozRequestFullScreen) {\n                    this.mozRequestFullScreen();\n                } else if (this.webkitRequestFullscreen) {\n                    this.webkitRequestFullscreen();\n                }\n                fullscreen = true;\n\n            });\n\n            mobile = true;\n\n        }\n    }\n\n    function update() {\n        controls.update();\n\n        if (mobile) {\n            camera.position.set(0, 0, 0)\n            camera.translateZ(1.8);\n        }\n    }\n\n\n    function onResize() {\n\n        var renderW = 1920;\n        var renderH = 1080;\n\n        if (ControlsHandler.vizParams.fullSize) {\n            var renderW = window.innerWidth;\n            var renderH = window.innerHeight;\n\n            if (ControlsHandler.vizParams.showControls) {\n                renderW -= 250;\n            }\n            $('#viz').css({position: 'relative', top: 0});\n\n        } else {\n            //vertically center viz output\n            $('#viz').css({position: 'relative', top: window.innerHeight / 2 - FIXED_SIZE_H / 2});\n        }\n\n        camera.aspect = renderW / renderH;\n        camera.updateProjectionMatrix();\n        renderer.setSize(renderW, renderH);\n\n    }\n\n    return {\n        init: init,\n        update: update,\n        getCamera: function () {\n            return camera;\n        },\n        getScene: function () {\n            return scene;\n        },\n        getLight: function () {\n            return directionalLight;\n        },\n        getRenderer: function () {\n            return renderer;\n        },\n        getCubeCameras: function () {\n            return [cubeCameraRead, cubeCameraWrite]\n        },\n        getControls: function () {\n            return controls;\n        },\n        onResize: onResize,\n        isFullscreen: function () {\n            return fullscreen;\n        },\n        isMobile: function () {\n            return mobile;\n        }\n    };\n\n}();"]}